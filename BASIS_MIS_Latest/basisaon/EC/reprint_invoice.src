rem ' reprint invoice processor
rem ' reprint_invoice.bbj

enter firm_id$, customer_nbr$, ar_inv_nbr$, email$, subject$, sign, archive


rem ' all firms are now using the Jasper Invoice
	
if firm_id$ = "01" then
	call "renderInvoice.src", firm_id$, customer_nbr$, ar_inv_nbr$, pdfile$
else
	call "renderInvoiceBSG.src", firm_id$, customer_nbr$, ar_inv_nbr$, pdfile$
fi

path$ = stbl("TEMP")
if path$(len(path$), 1) <> "/" then let path$ = path$ + "/"

rem ' else
rem ' 	rem ' use the older invoice form for BSG
rem ' 	
rem ' 	rem ' name the file for the invoice reprint
rem ' 		shortfile$ = "invoice_" + ar_inv_nbr$ + ".txt"
rem ' 		path$ = stbl("TEMP")
rem '  		if path$(len(path$), 1) <> "/" then let path$ = path$ + "/"
rem ' 		textfile$ = path$ + shortfile$
rem ' 		erase textfile$,err = *next
rem ' 
rem ' 	rem ' open the print to file
rem ' 		prtr_dev = unt
rem ' 		open (prtr_dev, mode = "FILE=" + textfile$)"PX"
rem '  
rem ' 	rem ' print it to a file
rem ' 		misc$ = textfile$
rem ' 		art03key$ = firm_id$ + "  " + customer_nbr$ + ar_inv_nbr$ + "000"
rem ' 		call "invhist_print.bbj", art03key$, prtr_dev, misc$
rem ' 		close(prtr_dev,err = *next)
rem ' 
rem ' 	rem ' convert to a pdf
rem ' 		pdf$ = "invoice_" + ar_inv_nbr$ + ".pdf"
rem ' 		pdfile$ = path$ + pdf$
rem ' 		erase pdfile$, err = *next
rem ' 		call "PDF.01", textfile$, pdfile$
rem ' 
rem ' fi

rem ' sign the invoice
	if sign then
		rem ' sign the invoice
		final_pdfile$ = ar_inv_nbr$+".pdf"
		erase path$ + final_pdfile$, err = *next
		pwd$=dir("")
		chdir("/mnt/data/basisaon")
		if firm_id$ = "01" then
			jv$=" SignBASISPDF"
		else
			jv$=" SignBASISPDFA4"
		fi
		com$="/usr/java/latest/bin/java -classpath "+chr(34)+"/basisaon:/basisaon/itext-1.3.jar"+chr(34)+jv$+" "+pdfile$+" "+path$+final_pdfile$
  		a=scall(com$)
  		chdir(pwd$)
  	else
  		rem ' rename the invoice_invoice#.pdf file to simply invoice#.pdf (unsigned)
  		final_pdfile$ = ar_inv_nbr$+".pdf"
  		erase path$ + final_pdfile$, err = *next
  		rename pdfile$, path$ + final_pdfile$
	fi  	

rem ' archive the invoice
	if archive then
		basedir$="/mnt/data/archives/"
		nxtdir$=basedir$+firm_id$
		nxtdir$=nxtdir$+"/invoices"
		nxtdir$=nxtdir$+"/"+ar_inv_nbr$(1,1)
		nxtdir$=nxtdir$+"/"+ar_inv_nbr$(2,2)
		nxtdir$=nxtdir$+"/"+ar_inv_nbr$(4,2) + "/"

		rem ' find the next sequence
		seq$ = "_R000"
		chan = unt
		p = pos("." = final_pdfile$)
		arch_invoice$ = final_pdfile$(1, p - 1)
		while 1
			found = 0
			open(chan, err = *next)nxtdir$ + arch_invoice$ + seq$ + ".pdf"; found = 1
			close(chan, err = *next)
			if !found then break
			seq$ = seq$(1,2) + str(num(seq$(3,3)) + 1 : "000")
		wend
		arch_invoice$ = arch_invoice$ + seq$ + ".pdf"
		cmd$ = "cp " + path$ + final_pdfile$ + " " + nxtdir$ + arch_invoice$
		a = scall(cmd$)
	fi	

rem ' email the invoice
rem ' which is located path$ + final_pdfflile$
	if cvs(email$,3) <> "" then
		while 1	
			p = pos("," = email$)
			if p then 
				email$(p,1) = ";"
			else
				break
			fi
		wend
		msgtxt$ = "Please find attached an invoice reprint for invoice # " + ar_inv_nbr$ + "."
		from$ = "customer-service@basis.cloud"
		cc$ = "customer-service@basis.cloud"
		bcc$ = "kurt.e.williams@comcast.net"
		call "sendEmail.src", from$, email$, cc$, bcc$, subject$, msgtxt$, path$ + final_pdfile$
	fi

rem ' clean up by erasing the files
	erase textfile$,err = *next
	erase pdfile$, err = *next
	erase path$ + final_pdfile$, err = *next

exit

