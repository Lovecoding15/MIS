   rem ' Program Name: ccLogView.src
   rem ' Resource File: ccLogView.arc
   rem ' Generated by GUIBuilder 4.0 (May 13, 2015 at 15:18:47)
   rem ' Portions Copyright (C) 1997-2015 BASIS International Ltd.  All rights reserved.

   seterr gb__no_arg
   enter gb__arg$; gb__args=-1,gb__args=pos($0a$=fattr(gb__arg$,$$),1,0)
gb__no_arg:
   seterr 0

   precision 99
   gb__show_forms=2; rem ' Create all forms at the beginning

   rem ' gb_ini.cod - GUIBuilder generated programs: Initialization
   rem ' Copyright (C) 1998-2009 BASIS International Ltd.  All rights reserved.
   rem
   rem ' ***** I N I T I A L I Z A T I O N *****
   rem ' The first part of the initialization section ensures that the
   rem ' environment will support the requirements of the generated
   rem ' program.  These requirements are:
   rem '     1.  The interpreter supports GUI
   rem '     2.  The interpreter is Visual PRO/5 2.0 or above
   rem '     3.  A SYSGUI device is defined in config.bbx
   rem

   rem ' 1. Make sure the interpreter in use supports GUI
   if info(6,0)="" then
:     print 'cs',;
:     print "This interpreter does not support GUI.";
:     print "Press any key to continue.",;
:     read record(0,siz=1);
:     stop
   rem

   rem ' 2. Make sure the interpreter in use is Visual PRO/5 2.0 or above
   if sys<"LEVEL 5" or (cvs(sys,3)="LEVEL 5" and cvs(rev,3)<"REV 2.0") then
:     input(0,err=gb__eoj)
:      	'ask'("",4,"Requires at least Visual PRO/5 Rev. 2.0.  "+
:      	"This program will now terminate.","&Terminate:Y"+$0a$),
:      	'ee',gb__temp$,'be',;
:     goto gb__eoj
   rem

   seterr gb__err; setesc gb__esc

   rem ' 3. Check config.bbx for SYSGUI and SYSPRINT devices
   gb__alias=0,gb__sysgui$="",gb__sysprint$=""
   dim gb__tsk$:"type:u(1),opens:u(1),name:c(1*=0),dname:c(1*=0),pname:c(1*=0),modes:c(1*=0)"

gb__check_tsk:
   gb__tsk$=tsk(gb__alias,err=gb__done_with_tsk)

   if gb__sysgui$="" and cvs(gb__tsk.pname$,7)="SYSGUI" then
:     gb__sysgui$=gb__tsk.name$

   if gb__sysprint$="" and cvs(gb__tsk.pname$,7)="SYSPRINT" then
:     gb__sysprint$=gb__tsk.name$

   if gb__sysgui$="" or gb__sysprint$="" then
:     gb__alias=gb__alias+1;
:     goto gb__check_tsk

gb__done_with_tsk:
   if gb__sysgui$="" then
:     gb__sysgui$="not defined in config.bbx";
:     goto gb__cannot_open_sysgui

   rem ' Open SYSGUI device
   gb__sysgui=unt; open (gb__sysgui,err=gb__cannot_open_sysgui)gb__sysgui$
   goto gb__opened_sysgui

gb__cannot_open_sysgui:
   gb__err$="Unable to open the SYSGUI device (alias "+gb__sysgui$+
:    ") in program "+pgm(-2)+".  Visual PRO/5 cannot maintain a graphical "+
:    "user interface without this device.  This program will now terminate."
   gb__temp=msgbox(gb__err$,16,"SYSGUI error")
   goto gb__eoj

gb__opened_sysgui:
   dim gb__sysgui_fin$:tmpl(gb__sysgui,ind=0)
   gb__sysgui_fin$=fin(gb__sysgui)

   rem ' splash screen, if any, can go here
   rem ' splash=gb__sysgui_fin.available_context
   rem ' print (gb__sysgui)'context'(splash),'window'(0,0,500,400,$$,$01000000$),'image'(0,0,500,400,"mysplash.gif")

   dim gb__event$:tmpl(gb__sysgui)
   gb__event=len(gb__event$)

   rem ' Open the resource file (try both .arc and .brc if necessary)
   gb__resource$="ccLogView.arc"
   if pos("ec.bbj"= pgm(-2)) then gosub prep_routine
   gb__handle=resopen(gb__resource$,err=gb__resource_fallback);
:  goto gb__opened_resource

gb__resource_fallback:
   gb__temp=pos(".brc"=cvs(gb__resource$,8),-1)
   if gb__temp=len(gb__resource$)-3 then
:     gb__resource$=gb__resource$(1,gb__temp)+"arc";
:     gb__handle=resopen(gb__resource$,err=gb__cannot_open_resource);
:     goto gb__opened_resource

   gb__temp=pos(".arc"=cvs(gb__resource$,8),-1)
   if gb__temp=len(gb__resource$)-3 then
:     gb__resource$=gb__resource$(1,gb__temp)+"brc";
:     gb__handle=resopen(gb__resource$,err=gb__cannot_open_resource);
:     goto gb__opened_resource

gb__cannot_open_resource:
   gb__err$="Unable to open resource file ccLogView.arc"+
:    " in program "+pgm(-2)+".  This program will now terminate."
   gb__temp=msgbox(gb__err$,16,"Resource file error")
   goto gb__eoj

   rem ' ------------------------------------------------------------------------
   rem ' Functions to manipulate screens and data
   rem ' ------------------------------------------------------------------------

   rem ' Get data from screen into template record
   def fngb__get_screen$(xx__win_id$,gb__rec$)
      gb__current_context=dec(ctrl(gb__sysgui))
      xx__context=fngb__context(xx__win_id$)
      if xx__context<>gb__current_context then
:        print (gb__sysgui)'context'(xx__context)
      dim xx__rec$:fngb__template$(xx__win_id$)
      if len(gb__rec$) then
:        xx__rec$=gb__rec$
      gb__control_list$=fattr(xx__rec$,"")
      gb__controls=pos($0a$=gb__control_list$,1,0)
      if gb__controls=0 then
:        return xx__rec$
      for gb__control=1 to gb__controls
         gb__temp=pos($0a$=gb__control_list$)
         gb__ctl_name$=gb__control_list$(1,gb__temp-1)
         gb__control_list$=gb__control_list$(gb__temp+1)
         gb__ctl_id=num(fattr(xx__rec$,gb__ctl_name$,"ID"))
         gb__ctl_type=num(fattr(xx__rec$,gb__ctl_name$,"TYPE"))
         switch gb__ctl_type
            case 12; rem ' Radio button
            case 13; rem ' Check box
            case 14; rem ' HScroll
            case 15; rem ' VScroll
            case 103; rem ' Tool button
               field xx__rec$,gb__ctl_name$=dec(ctrl(gb__sysgui,gb__ctl_id,2))
               break
            case 100; rem ' Menu item
            case 101; rem ' Checkable menu item
               if gb__ctl_id then
:                 field xx__rec$,gb__ctl_name$=dec(ctrl(gb__sysgui,-gb__ctl_id))
               break
            case 16; rem ' EDIT
            case 17; rem ' TEXT
            case 20; rem ' List Edit
            case 102; rem ' STATBAR
            case 104; rem ' INPUTE
            case 105; rem ' INPUTN
            case 114; rem ' INPUTD
               field xx__rec$,gb__ctl_name$=ctrl(gb__sysgui,gb__ctl_id,1)
               break
            case 18; rem ' List Box
            case 19; rem ' List Button
               gb__temp$=ctrl(gb__sysgui,gb__ctl_id,2),gb__sel$=""
               while len(gb__temp$)
                  gb__sel$=gb__sel$+$ff$+str(dec(gb__temp$(1,2))),gb__temp$=gb__temp$(3)
               wend
               field xx__rec$,gb__ctl_name$=ctrl(gb__sysgui,gb__ctl_id,7)+gb__sel$
               gb__temp$="",gb__sel$=""
               break
            case 22; rem ' Custom Edit
               field xx__rec$,gb__ctl_name$=ctrl(gb__sysgui,gb__ctl_id,7)
               break
            case 106; rem ' Tab Control -- get selected tab
               field xx__rec$,gb__ctl_name$=dec(sendmsg(gb__sysgui,gb__ctl_id,29,0,""))
               break
            case default; rem ' all others C(1)?
               rem ' field xx__rec$,gb__ctl_name$=""
               break
         swend
      next gb__control
      if xx__context<>gb__current_context then
:        print (gb__sysgui)'context'(gb__current_context)
      return xx__rec$
   fnend


   rem ' Put data from template record to screen
   def fngb__put_screen$(xx__win_id$,gb__rec$)
      gb__current_context=dec(ctrl(gb__sysgui))
      xx__context=fngb__context(xx__win_id$)
      if xx__context<>gb__current_context then
:        print (gb__sysgui)'context'(xx__context)
      dim xx__rec$:fngb__template$(xx__win_id$)
      if len(gb__rec$) then
:        xx__rec$=gb__rec$
      gb__control_list$=fattr(xx__rec$,"")
      gb__controls=pos($0a$=gb__control_list$,1,0)
      if gb__controls=0 then
:        return xx__rec$
      for gb__control=1 to gb__controls
         gb__temp=pos($0a$=gb__control_list$)
         gb__ctl_name$=gb__control_list$(1,gb__temp-1)
         gb__control_list$=gb__control_list$(gb__temp+1)
         gb__ctl_id=num(fattr(xx__rec$,gb__ctl_name$,"ID"))
         gb__ctl_type=num(fattr(xx__rec$,gb__ctl_name$,"TYPE"))
         switch gb__ctl_type
            case 12; rem ' Radio button
            case 13; rem ' Check box
            case 103; rem ' Tool button
               gb__temp=num(field(xx__rec$,gb__ctl_name$))
               if gb__temp then
:                 print (gb__sysgui)'check'(gb__ctl_id)
:              else
:                 print (gb__sysgui)'uncheck'(gb__ctl_id)
               break
            case 100; rem ' Menu item
            case 101; rem ' Checkable menu item
               if gb__ctl_id then
:                 gb__temp=num(field(xx__rec$,gb__ctl_name$));
:                 if gb__temp then
:                    print (gb__sysgui)'check'(-gb__ctl_id)
:                 else
:                    print (gb__sysgui)'uncheck'(-gb__ctl_id)
               break
            case 14; rem ' HScroll
            case 15; rem ' VScroll
               gb__temp=num(field(xx__rec$,gb__ctl_name$))
               print (gb__sysgui)'scrollpos'(gb__ctl_id,gb__temp)
               break
            case 16; rem ' EDIT
            case 17; rem ' TEXT
            case 20; rem ' List Edit
            case 102; rem ' STATBAR
            case 104; rem ' INPUTE
            case 105; rem ' INPUTN
            case 114; rem ' INPUTD
               gb__temp$=field(xx__rec$,gb__ctl_name$)
               print (gb__sysgui)'title'(gb__ctl_id,gb__temp$)
               break
            case 18; rem ' List Box
            case 19; rem ' List Button
               gb__temp$=field(xx__rec$,gb__ctl_name$),gb__temp=pos($ff$=gb__temp$),gb__sel$=""
               if gb__temp then
:                 gb__sel$=gb__temp$(gb__temp+1)+$ff$,gb__temp$=gb__temp$(1,gb__temp-1)
               print (gb__sysgui)'listsuspend'(gb__ctl_id),'listclr'(gb__ctl_id)
               if pos($0a$=gb__temp$,1,0) then
:                 print (gb__sysgui)'listadd'(gb__ctl_id,0,pos($0a$=gb__temp$,1,0)),gb__temp$;
:                 gb__temp=pos($ff$=gb__sel$);
:                 while gb__temp;
:                    gb__sel=num(gb__sel$(1,gb__temp-1)),gb__sel$=gb__sel$(gb__temp+1);
:                    print (gb__sysgui)'listmsel'(gb__ctl_id,gb__sel);
:                    gb__temp=pos($ff$=gb__sel$);
:                 wend
               print (gb__sysgui)'listresume'(gb__ctl_id)
               break
            case 22; rem ' Custom Edit
               gb__temp$=field(xx__rec$,gb__ctl_name$),gb__temp=pos($0a$=gb__temp$,1,0)
               print (gb__sysgui)'txclr'(gb__ctl_id)
               if gb__temp then
:                 print (gb__sysgui)'txadd'(gb__ctl_id,0,gb__temp),gb__temp$
               break
            case 106; rem ' Tab Control -- change selected tab
               gb__temp=num(field(xx__rec$,gb__ctl_name$))
               gb__temp$=sendmsg(gb__sysgui,gb__ctl_id,34,gb__temp,"")
               break
            case default; rem ' all others C(1)?
               rem ' gb__temp$=field(xx__rec$,gb__ctl_name$)
               break
         swend
      next gb__control
      if xx__context<>gb__current_context then
:        print (gb__sysgui)'context'(gb__current_context)
      return xx__rec$
   fnend


   rem ' Get fields from screen into template record
   def fngb__get_fields$(xx__win_id$,gb__rec$,xx__control_list$)
      gb__current_context=dec(ctrl(gb__sysgui))
      xx__context=fngb__context(xx__win_id$)
      if xx__context<>gb__current_context then
:        print (gb__sysgui)'context'(xx__context)
      dim xx__rec$:fngb__template$(xx__win_id$)
      if len(gb__rec$) then
:        xx__rec$=gb__rec$
      gb__control_list$=xx__control_list$+","
      gb__controls=pos(","=gb__control_list$,1,0)
      for gb__control=1 to gb__controls
         gb__temp=pos(","=gb__control_list$)
         gb__ctl_name$=cvs(gb__control_list$(1,gb__temp-1),7)
         if gb__ctl_name$="" then
:           continue
         gb__control_list$=gb__control_list$(gb__temp+1)
         gb__ctl_id=num(fattr(xx__rec$,gb__ctl_name$,"ID"))
         gb__ctl_type=num(fattr(xx__rec$,gb__ctl_name$,"TYPE"))
         switch gb__ctl_type
            case 12; rem ' Radio button
            case 13; rem ' Check box
            case 14; rem ' HScroll
            case 15; rem ' VScroll
            case 103; rem ' Tool button
               field xx__rec$,gb__ctl_name$=dec(ctrl(gb__sysgui,gb__ctl_id,2))
               break
            case 100; rem ' Menu item
            case 101; rem ' Checkable menu item
               if gb__ctl_id then
:                 field xx__rec$,gb__ctl_name$=dec(ctrl(gb__sysgui,-gb__ctl_id))
               break
            case 16; rem ' EDIT
            case 17; rem ' TEXT
            case 20; rem ' List Edit
            case 102; rem ' STATBAR
            case 104; rem ' INPUTE
            case 105; rem ' INPUTN
            case 114; rem ' INPUTD
               field xx__rec$,gb__ctl_name$=ctrl(gb__sysgui,gb__ctl_id,1)
               break
            case 18; rem ' List Box
            case 19; rem ' List Button
               gb__temp$=ctrl(gb__sysgui,gb__ctl_id,2),gb__sel$=""
               while len(gb__temp$)
                  gb__sel$=gb__sel$+$ff$+str(dec(gb__temp$(1,2))),gb__temp$=gb__temp$(3)
               wend
               field xx__rec$,gb__ctl_name$=ctrl(gb__sysgui,gb__ctl_id,7)+gb__sel$
               gb__temp$="",gb__sel$=""
               break
            case 22; rem ' Custom Edit
               field xx__rec$,gb__ctl_name$=ctrl(gb__sysgui,gb__ctl_id,7)
               break
            case 106; rem ' Tab Control -- get selected tab
               field xx__rec$,gb__ctl_name$=dec(sendmsg(gb__sysgui,gb__ctl_id,29,0,""))
               break
            case default; rem ' all others C(1)?
               rem ' field xx__rec$,gb__ctl_name$=""
               break
         swend
      next gb__control
      if xx__context<>gb__current_context then
:        print (gb__sysgui)'context'(gb__current_context)
      return xx__rec$
   fnend


   rem ' Put fields from template record to screen
   def fngb__put_fields$(xx__win_id$,gb__rec$,xx__control_list$)
      gb__current_context=dec(ctrl(gb__sysgui))
      xx__context=fngb__context(xx__win_id$)
      if xx__context<>gb__current_context then
:        print (gb__sysgui)'context'(xx__context)
      dim xx__rec$:fngb__template$(xx__win_id$)
      if len(gb__rec$) then
:        xx__rec$=gb__rec$
      gb__control_list$=xx__control_list$+","
      gb__controls=pos(","=gb__control_list$,1,0)
      for gb__control=1 to gb__controls
         gb__temp=pos(","=gb__control_list$)
         gb__ctl_name$=cvs(gb__control_list$(1,gb__temp-1),7)
         if gb__ctl_name$="" then
:           continue
         gb__control_list$=gb__control_list$(gb__temp+1)
         gb__ctl_id=num(fattr(xx__rec$,gb__ctl_name$,"ID"))
         gb__ctl_type=num(fattr(xx__rec$,gb__ctl_name$,"TYPE"))
         switch gb__ctl_type
            case 12; rem ' Radio button
            case 13; rem ' Check box
            case 103; rem ' Tool button
               gb__temp=num(field(xx__rec$,gb__ctl_name$))
               if gb__temp then
:                 print (gb__sysgui)'check'(gb__ctl_id)
:              else
:                 print (gb__sysgui)'uncheck'(gb__ctl_id)
               break
            case 100; rem ' Menu item
            case 101; rem ' Checkable menu item
               if gb__ctl_id then
:                 gb__temp=num(field(xx__rec$,gb__ctl_name$));
:                 if gb__temp then
:                    print (gb__sysgui)'check'(-gb__ctl_id)
:                 else
:                    print (gb__sysgui)'uncheck'(-gb__ctl_id)
               break
            case 14; rem ' HScroll
            case 15; rem ' VScroll
               gb__temp=num(field(xx__rec$,gb__ctl_name$))
               print (gb__sysgui)'scrollpos'(gb__ctl_id,gb__temp)
               break
            case 16; rem ' EDIT
            case 17; rem ' TEXT
            case 20; rem ' List Edit
            case 102; rem ' STATBAR
            case 104; rem ' INPUTE
            case 105; rem ' INPUTN
            case 114; rem ' INPUTD
               gb__temp$=field(xx__rec$,gb__ctl_name$)
               print (gb__sysgui)'title'(gb__ctl_id,gb__temp$)
               break
            case 18; rem ' List Box
            case 19; rem ' List Button
               gb__temp$=field(xx__rec$,gb__ctl_name$),gb__temp=pos($ff$=gb__temp$),gb__sel$=""
               if gb__temp then
:                 gb__sel$=gb__temp$(gb__temp+1)+$ff$,gb__temp$=gb__temp$(1,gb__temp-1)
               print (gb__sysgui)'listsuspend'(gb__ctl_id),'listclr'(gb__ctl_id)
               if pos($0a$=gb__temp$,1,0) then
:                 print (gb__sysgui)'listadd'(gb__ctl_id,0,pos($0a$=gb__temp$,1,0)),gb__temp$;
:                 gb__temp=pos($ff$=gb__sel$);
:                 while gb__temp;
:                    gb__sel=num(gb__sel$(1,gb__temp-1)),gb__sel$=gb__sel$(gb__temp+1);
:                    print (gb__sysgui)'listmsel'(gb__ctl_id,gb__sel);
:                    gb__temp=pos($ff$=gb__sel$);
:                 wend
               print (gb__sysgui)'listresume'(gb__ctl_id)
               break
            case 22; rem ' Custom Edit
               gb__temp$=field(xx__rec$,gb__ctl_name$),gb__temp=pos($0a$=gb__temp$,1,0)
               print (gb__sysgui)'txclr'(gb__ctl_id)
               if gb__temp then
:                 print (gb__sysgui)'txadd'(gb__ctl_id,0,gb__temp),gb__temp$
               break
            case 106; rem ' Tab Control -- change selected tab
               gb__temp=num(field(xx__rec$,gb__ctl_name$))
               gb__temp$=sendmsg(gb__sysgui,gb__ctl_id,34,gb__temp,"")
               break
            case default; rem ' all others C(1)?
               rem ' gb__temp$=field(xx__rec$,gb__ctl_name$)
               break
         swend
      next gb__control
      if xx__context<>gb__current_context then
:        print (gb__sysgui)'context'(gb__current_context)
      return xx__rec$
   fnend


   rem ' Set focus to specified Window ID
   def fngb__focus_win_id(xx__win_id$)
      xx__context=fngb__context(xx__win_id$)
      if xx__context>=0 then
:        print (gb__sysgui,err=gb__focus_win_id)'context'(xx__context),'focus'(0),'raise',
      return xx__context
   gb__focus_win_id:
      xx__form=fngb__form(xx__win_id$)
      print (gb__sysgui)'context'(xx__context),
:                       'resource'(len(gb__resource$[xx__form])),gb__resource$[xx__form],
      return xx__context
   fnend


   rem ' Get form number given Window ID
   def fngb__form(xx__win_id$)
       gb__form=-1,xx__form_id$=xx__win_id$
       xx__form=pos("."=xx__form_id$)
       if xx__form then
:         xx__form_id$=xx__form_id$(1,xx__form-1)
       for xx__form=1 to gb__forms
           if gb__form.id$[xx__form]=xx__form_id$ then
:             gb__form=xx__form;
:             break
       next xx__form
       return gb__form
   fnend


   rem ' Set focus to specified Window ID + Control ID
   def fngb__focus_ctl_id(xx__win_id$,xx__ctl_id)
      xx__context=fngb__context(xx__win_id$)
      if xx__context>=0 then
:        print (gb__sysgui)'context'(xx__context),'focus'(0),'raise',
:                          'focus'(xx__ctl_id),
      return xx__context
   fnend


   rem ' Set focus to specified Window ID + Control Name
   def fngb__focus_ctl_name(xx__win_id$,xx__ctl_name$)
      dim xx__rec$:fngb__template$(xx__win_id$)
      xx__ctl_id=num(fattr(xx__rec$,xx__ctl_name$,"ID"))
      xx__context=fngb__context(xx__win_id$)
      if xx__context>=0 then
:        print (gb__sysgui)'context'(xx__context),'focus'(0),'raise',
:                          'focus'(xx__ctl_id),
      return xx__context
   fnend


   rem ' Get Window ID given Context
   def fngb__win_id$(xx__context)
       xx__win_id$=""
       for xx__window=1 to gb__windows
           if gb__window.context[xx__window]=xx__context then
:             xx__win_id$=gb__window.win_id$[xx__window];
:             break
       next xx__window
       return xx__win_id$
   fnend


   rem ' Get Context given Window ID
   def fngb__context(xx__win_id$)
      gb__window=-1,gb__context=-1
      for xx__window=1 to gb__windows
          if gb__window.win_id$[xx__window]=xx__win_id$ then
:            gb__window=xx__window,gb__context=gb__window.context[gb__window];
:            break
      next xx__window
      if gb__context>=0 or gb__window<0 then
:        return gb__context
      return fngb__window(xx__win_id$)
   fnend


   rem ' Get Window Information given Window ID
   def fngb__win_info$(xx__win_id$)
      dim gb__win_info$(0)
      xx__context=fngb__context(xx__win_id$)
      if xx__context<0 then
:        return gb__win_info$
      dim gb__win_info$:"class:u(1),type:u(1),hidden:u(1),disabled:u(1),"
:                      +"context:u(2),eventmask:u(4),flags:u(4),focus:u(2),"
:                      +"x:i(2),y:i(2),w:u(2),h:u(2),title:c(16*=)"
      gb__win_info$=ctrl(gb__sysgui,0,4,xx__context)
:                  +ctrl(gb__sysgui,0,8,xx__context)
:                  +bin(xx__context,2)
:                  +sendmsg(gb__sysgui,0,21,0,"",xx__context)
:                  +sendmsg(gb__sysgui,0,22,0,"",xx__context)
:                  +ctrl(gb__sysgui,0,2,xx__context)
:                  +ctrl(gb__sysgui,0,0,xx__context)
:                  +ctrl(gb__sysgui,0,1,xx__context)
      return gb__win_info$
   fnend

gb__opened_resource:

   rem ==================== End of gb_ini.cod ====================

rem ' Instantiate form(s)

gb__forms = 1
dim gb__form_context[gb__forms],gb__resource$[gb__forms],gb__form$:"id[1]:c(4*=10)"

gb__windows=1; rem ' includes child windows, if any
gb__win_id$ = "101"

dim gb__win$:"CCLOGVIEWER:I(2)"

gb__win.CCLOGVIEWER=-1

dim gb__window$:"win_id[1]:c(8*=10),win_name[1]:c(16*=10),context[1]:n(4*=10)"
gb__window.win_id$[1]="101",gb__window.win_name$[1]="CCLOGVIEWER",gb__window.context[1]=-1,gb__form.id$[1]="101"

gb__context = fngb__window("101"); rem ' ccLogViewer

rem ' Instantiate the form corresponding to a given window

   def fngb__window(xx__win_id$)
      gb__window = 0
      for xx__window=1 to gb__windows
         if gb__window.win_id$[xx__window]=xx__win_id$ then
:           gb__window = xx__window;
:           break
      next xx__window
      if gb__window = 0 then
:        return -1
      if gb__window.context[gb__window] >= 0 then
:        return gb__window.context[gb__window]

      switch fngb__form(xx__win_id$)

         case 1; rem ' Load Form ID 101 (CCLOGVIEWER)
         gb__sysgui_fin$=fin(gb__sysgui)
         gb__form_context[1]=gb__sysgui_fin.available_context
         gb__resource$[1]=resget(gb__handle,1,101)
         print (gb__sysgui)'context'(gb__form_context[1]),'resource'(len(gb__resource$[1])),gb__resource$[1]
         gb__win.CCLOGVIEWER=gb__form_context[1]
         gb__window.context[1]=gb__win.CCLOGVIEWER
         break
      swend

      return gb__window.context[gb__window]
   fnend

rem ' Get template for controls on a given window

   def fngb__template$(xx__win_id$)
      if xx__win_id$="101" then return "MONTH:C(1*=0):ID=100 TYPE=125 X=110 Y=10 W=50 H=20:,STATIC_TEXT:C(64*=0):ID=101 TYPE=17 X=60 Y=10 W=40 H=25:,YEAR:C(1*=0):ID=102 TYPE=125 X=220 Y=10 W=60 H=20:,STATIC_TEXT_103:C(64*=0):ID=103 TYPE=17 X=170 Y=10 W=40 H=25:,AVAILABLELOGS:C(255*=0):ID=104 TYPE=19 X=110 Y=40 W=170 H=65:,STATIC_TEXT_105:C(64*=0):ID=105 TYPE=17 X=10 Y=40 W=90 H=25:,VISAAPPROVED:C(64*=0):ID=106 TYPE=16 X=110 Y=140 W=80 H=20:,STATIC_TEXT_107:C(64*=0):ID=107 TYPE=17 X=10 Y=140 W=90 H=20:,VISATOTAL:C(64*=0):ID=108 TYPE=16 X=110 Y=180 W=80 H=20:,STATIC_TEXT_109:C(64*=0):ID=109 TYPE=17 X=10 Y=180 W=90 H=20:,VISADECLINED:C(64*=0):ID=110 TYPE=16 X=110 Y=160 W=80 H=20:,STATIC_TEXT_111:C(64*=0):ID=111 TYPE=17 X=10 Y=160 W=90 H=20:,MASTERCARDAPPROVED:C(64*=0):ID=112 TYPE=16 X=350 Y=140 W=80 H=20:,MASTERCARDDECLINED:C(64*=0):ID=113 TYPE=16 X=350 Y=160 W=80 H=20:,MASTERCARDTOTAL:C(64*=0):ID=114 TYPE=16 X=350 Y=180 W=80 H=20:,STATIC_TEXT_115:C(64*=0):ID=115 TYPE=17 X=230 Y=140 W=110 H=20:,STATIC_TEXT_116:C(64*=0):ID=116 TYPE=17 X=230 Y=160 W=110 H=20:,STATIC_TEXT_117:C(64*=0):ID=117 TYPE=17 X=250 Y=180 W=90 H=20:,AMEXAPPROVED:C(64*=0):ID=118 TYPE=16 X=560 Y=140 W=80 H=20:,AMEXDECLINED:C(64*=0):ID=119 TYPE=16 X=560 Y=160 W=80 H=20:,AMEXTOTAL:C(64*=0):ID=120 TYPE=16 X=560 Y=180 W=80 H=20:,STATIC_TEXT_121:C(64*=0):ID=121 TYPE=17 X=460 Y=140 W=90 H=20:,STATIC_TEXT_122:C(64*=0):ID=122 TYPE=17 X=460 Y=160 W=90 H=20:,STATIC_TEXT_123:C(64*=0):ID=123 TYPE=17 X=460 Y=180 W=90 H=20:,OVERALLAPPROVED:C(64*=0):ID=124 TYPE=16 X=110 Y=70 W=80 H=20:,OVERALLDECLINED:C(64*=0):ID=125 TYPE=16 X=110 Y=90 W=80 H=20:,OVERALLTOTAL:C(64*=0):ID=126 TYPE=16 X=110 Y=110 W=80 H=20:,STATIC_TEXT_127:C(64*=0):ID=127 TYPE=17 X=50 Y=70 W=50 H=20:,STATIC_TEXT_128:C(64*=0):ID=128 TYPE=17 X=50 Y=90 W=50 H=20:,STATIC_TEXT_129:C(64*=0):ID=129 TYPE=17 X=60 Y=110 W=40 H=20:,BROWSERNAVIGATOR:C(1*=0):ID=131 TYPE=113 X=10 Y=260 W=130 H=20:,STATIC_TEXT_132:C(64*=0):ID=132 TYPE=17 X=10 Y=220 W=110 H=20:,ENTRYBROWSER:C(64*=0):ID=130 TYPE=22 X=10 Y=290 W=630 H=300:,STATUS:C(64*=0):ID=133 TYPE=16 X=210 Y=260 W=90 H=20:,AMOUNT:C(64*=0):ID=134 TYPE=16 X=370 Y=260 W=80 H=20:,CUSTOMER:C(64*=0):ID=135 TYPE=16 X=210 Y=220 W=430 H=20:,STATIC_TEXT_136:C(64*=0):ID=136 TYPE=17 X=140 Y=220 W=60 H=20:,STATIC_TEXT_137:C(64*=0):ID=137 TYPE=17 X=160 Y=260 W=40 H=20:,STATIC_TEXT_138:C(64*=0):ID=138 TYPE=17 X=310 Y=260 W=50 H=20:,INVORORDER:C(64*=0):ID=139 TYPE=16 X=210 Y=240 W=430 H=20:,STATIC_TEXT_140:C(64*=0):ID=140 TYPE=17 X=150 Y=240 W=50 H=20:,BUTTON:C(1*=0):ID=141 TYPE=11 X=300 Y=100 W=120 H=25:,STATIC_TEXT_143:C(64*=0):ID=143 TYPE=17 X=300 Y=70 W=60 H=25:,STATIC_TEXT_146:C(64*=0):ID=146 TYPE=17 X=440 Y=70 W=70 H=20:,REPORTPARAMETERS:C(64*=0):ID=147 TYPE=17 X=300 Y=40 W=330 H=20:,GROUP_CONTROL:C(1*=0):ID=148 TYPE=21 X=290 Y=10 W=350 H=120:,BUTTON_149:C(1*=0):ID=149 TYPE=11 X=200 Y=100 W=80 H=25:,HOUR:C(255*=0):ID=144 TYPE=19 X=520 Y=70 W=40 H=130:,MINUTE:C(255*=0):ID=145 TYPE=19 X=580 Y=70 W=40 H=130:,STARTHOUR:C(255*=0):ID=150 TYPE=19 X=520 Y=100 W=40 H=130:,STARTMINUTE:C(255*=0):ID=151 TYPE=19 X=580 Y=100 W=40 H=130:,STATIC_TEXT_152:C(64*=0):ID=152 TYPE=17 X=440 Y=100 W=70 H=25:,NUMOFDAYS:C(255*=0):ID=142 TYPE=19 X=370 Y=70 W=40 H=130:"
      return ""
   fnend

ourAPI!=BBjAPI()
ourSysGui!=ourAPI!.getSysGui()
ourSystemMetrics!=ourSysGui!.getSystemMetrics()
scrDimension!=ourSystemMetrics!.getScreenSize()
ourContext=ourSysGui!.getContext()
ourWindow!=ourSysGui!.getWindow(ourContext)
topLevelWindow!=cast(BBjTopLevelWindow, ourSysGui!.getWindow(ourContext))

ourWindow!.setCursor(3)

localHost! = InetAddress.getLocalHost()
if localHost!.getHostName() = "Hendrix" then
    directory1$="C:/eclipse/workspace/paypro"
    directory2$=""
    pdfdirectory$="C:/temp/basis/"
else
    directory1$="/mnt/data/ec/ccLogs"
    directory2$="/mnt/data/ec/ccLogsOpus"
    pdfdirectory$="/mnt/data/ec/ccPDFs/"
fi
amexRate$="0.0209"
vmcRate$="0.0209"
vmcPerItem$="0.43"
amexPerItem$="0.43"

gosub center_window
gosub get_objects
gosub openCustMast
gosub loadSpinners
gosub loadAvailableDays
gosub summarizeDay
gosub convertReportParamToText

sqlProps! = new SQLProperties()
sqlConnect$ = sqlProps!.getDBConnect()
rem ' open sql channel
sqlchan = sqlunt
sqlopen(sqlchan)sqlConnect$

ourWindow!.setCursor(0)
rem ' ---------------------------------------------------------------
rem ' Event Loop
rem ' ---------------------------------------------------------------

dim gb__closed[gb__windows]; rem ' track window status
dim gb__generic$:noticetpl(0,0); rem ' generic notice template
gb__eoj=0
goto gb__event

rem ' Load gb__notice$ string only if we're handling the event

gb__notice:
   gb__generic$=notice(gb__sysgui,gb__event.x%)
   dim gb__notice$:noticetpl(gb__generic.objtype%,gb__event.flags%)
   gb__notice$=gb__generic$
return

gb__event: repeat
   read record (gb__sysgui,siz=gb__event,err=gb__event_loop_end)gb__event$

   rem ' Get Window ID or Popup ID
   gb__win_id$=$$,gb__popup_id=gb__event.x*(gb__event.code$="P")
   if gb__popup_id=0 then gb__win_id$=fngb__win_id$(gb__event.context)

   rem ' Track whether event was handled
   gb__event_handled=0

   rem ' Handle events for Window ID 101 (ccLogViewer)
   while gb__win_id$="101"
      if gb__event.code$="X" then
:        gosub W101_C0_WIN_CLOSE;
:        gb__closed[1]=1;
:        gb__event_handled=1;
:        break
      if gb__event.id=100 and gb__event.code$="e" then
:        gosub W101_C100_EDIT_CHANGE;
:        gb__event_handled=1;
:        break
      if gb__event.id=102 and gb__event.code$="e" then
:        gosub W101_C102_EDIT_CHANGE;
:        gb__event_handled=1;
:        break
      if gb__event.id=104 and gb__event.code$="N" and gb__event.flags=2 then
:        gosub gb__notice;
:        gosub W101_C104_LIST_SELECT;
:        gb__event_handled=1;
:        break
      if gb__event.id=131 and gb__event.code$="N" and gb__event.flags=1 then
:        gosub gb__notice;
:        gosub W101_C131_NAV_FIRST;
:        gb__event_handled=1;
:        break
      if gb__event.id=131 and gb__event.code$="N" and gb__event.flags=2 then
:        gosub gb__notice;
:        gosub W101_C131_NAV_PREVIOUS;
:        gb__event_handled=1;
:        break
      if gb__event.id=131 and gb__event.code$="N" and gb__event.flags=3 then
:        gosub gb__notice;
:        gosub W101_C131_NAV_NEXT;
:        gb__event_handled=1;
:        break
      if gb__event.id=131 and gb__event.code$="N" and gb__event.flags=4 then
:        gosub gb__notice;
:        gosub W101_C131_NAV_LAST;
:        gb__event_handled=1;
:        break
      if gb__event.id=141 and gb__event.code$="B" then
:        gosub W101_C141_PUSH_BUTTON;
:        gb__event_handled=1;
:        break
      if gb__event.id=142 and gb__event.code$="N" and gb__event.flags=2 then
:        gosub gb__notice;
:        gosub W101_C142_LIST_SELECT;
:        gb__event_handled=1;
:        break
      if gb__event.id=144 and gb__event.code$="N" and gb__event.flags=2 then
:        gosub gb__notice;
:        gosub W101_C144_LIST_SELECT;
:        gb__event_handled=1;
:        break
      if gb__event.id=145 and gb__event.code$="N" and gb__event.flags=2 then
:        gosub gb__notice;
:        gosub W101_C145_LIST_SELECT;
:        gb__event_handled=1;
:        break
      if gb__event.id=149 and gb__event.code$="B" then
:        gosub W101_C149_PUSH_BUTTON;
:        gb__event_handled=1;
:        break
      if gb__event.id=150 and gb__event.code$="N" and gb__event.flags=2 then
:        gosub gb__notice;
:        gosub W101_C150_LIST_SELECT;
:        gb__event_handled=1;
:        break
      if gb__event.id=151 and gb__event.code$="N" and gb__event.flags=2 then
:        gosub gb__notice;
:        gosub W101_C151_LIST_SELECT;
:        gb__event_handled=1;
:        break
      break; rem ' Catch unhandled events
   wend; rem ' End of Window ID 101

   rem ' We're done when all windows have been closed.
   rem ' Developer can terminate event loop by setting
   rem ' gb__eoj=1 in any event handler.

   if !(gb__eoj) then
:     gb__eoj=1;
:     for gb__window=1 to gb__windows;
:        gb__eoj=(gb__eoj and gb__closed[gb__window]);
:     next gb__window

until gb__eoj

gb__event_loop_end: rem ' -------------------------------------

rem gb_eoj.cod - GUIBuilder generated programs: End of Job
rem Copyright (C) 1998-2009 BASIS International Ltd.  All rights reserved.
rem
rem ***** P R O G R A M   E X I T **************************************
rem
gb__eoj:
   if gb__forms and gb__sysgui then
:     for gb__temp=1 to gb__forms;
:        print (gb__sysgui)'context'(gb__form_context[gb__temp]),'destroy'(0);
:     next gb__temp

   if gb__sysgui then
:     close (gb__sysgui)

   resclose (gb__handle,err=gb__eoj_final)

gb__eoj_final:

   if tcb(13) then
:     exit
:  else
:     release

rem gb_err.cod - GUIBuilder generated programs: Error handler
rem Copyright (C) 1998-2009 BASIS International Ltd.  All rights reserved.
rem
rem ***** E R R O R   H A N D L E R ************************************
rem
gb__err:

   rem ' terminate on Network Lost Errors
   if err = 71 or err = 72 then goto gb__eoj

   gb__temp=msgbox(errmes(-1)+" ("+str(err)+")"+
:      " occurred at line "+str(tcb(5))+
:      " in program "+pgm(-2),5+48,"Error handler")

   if gb__temp=4 then
:     retry
:  else
:     goto gb__eoj

rem gb_esc.cod - GUIBuilder generated programs: Escape handler
rem Copyright (C) 1998-2009 BASIS International Ltd.  All rights reserved.
rem
rem ***** E S C A P E   H A N D L E R ***********************************
rem
gb__esc:

   rem ' terminate program when ESCAPE detected.
   goto gb__eoj

   gb__temp=msgbox("An ESCAPE has been detected.  Do you want to end this "+
:     "program?",4+32+256,"ESCAPE handler")
   if gb__temp=7 then
:     return
:  else
:     goto gb__eoj

rem ' -----------------------------------------------------------------
rem ' acummulateValues
rem ' -----------------------------------------------------------------

acummulateValues:

switch pos(cardType$="MVA")
    case 1
        if result$="Approved" then
            mcApproved = mcApproved + 1
            mcTotal = mcTotal + amount
        else
            mcDeclined = mcDeclined + 1
        fi
        break
    case 2
        if result$="Approved" then
            visaApproved = visaApproved + 1
            visaTotal = visaTotal + amount
        else
            visaDeclined = visaDeclined + 1
        fi
        break
    case 3
        if result$="Approved" then
            amexApproved = amexApproved + 1
            amexTotal = amexTotal + amount
        else
            amexDeclined = amexDeclined + 1
        fi
        break
swend

return
rem ' -----------------------------------------------------------------
rem ' buildReportEntries
rem ' -----------------------------------------------------------------

buildReportEntries:

rem ' build list of days to report
days! = OurAPI!.makeVector()
criteria!= OurAPI!.makeVector()

wrkJul = begJul
while wrkJul <= endJul
    days!.add(date(wrkJul:"%Y%Mz%Dz"))
    if wrkJul = begJul and begJul = endJul then
        criteriaStr! = "OD" + begHour$ + begMinute$ + endHour$ + endMinute$
    else
        if wrkJul = begJul then
            rem ' first day
            criteriaStr! = "FD" + begHour$ + begMinute$
        else
            if wrkJul = endJul then
                rem ' last day
                criteriaStr! = "LD" + endHour$ + endMinute$
            else
                rem ' middle day
                criteriaStr! = "MD"
            fi
        fi
    fi
    criteria!.add(criteriaStr!)
    wrkJul = wrkJul + 1
wend

reportEntries! = OurAPI!.makeVector()

for x = 0 to days!.size() - 1

    savedEntry$ = ""
    selDay$ = days!.get(x)
    wrk$ = criteria!.get(x)
    test$ = wrk$(1,2)
    if test$ = "FD" or test$ = "LD" or test$ = "OD" then
        value$ = wrk$(3)
    else
        value$ = ""
    fi
    filename$="ccTransLog." + selDay$

    rem ' open one or two log files
    log1 = unt, log1Opened = 0
    open(log1, err=*next)directory1$+"/"+filename$; log1Opened = 1
    if !log1Opened then log1=0
    log2 = unt, log2Opened = 0
    open(log2, err=*next)directory2$+"/"+filename$; log2Opened = 1
    if !log2Opened then log2 =0

    if log1Opened or log2Opened then

        workingRef! = ""

        while 1

            log = 0

            if log1Opened then
                log = log1
            else
                if log2Opened then
                    log = log2
                fi
            fi

            if log = 0 then break

            while 1
                read(log,end=*break)entry$

                rem ' do we include this entry

                if test$ = "FD" or test$ = "LD" or test$ = "OD" then
                    ppos = pos("~"=entry$)
                    wrk$ = entry$(1,ppos-1)
                    ppos = pos(":"=wrk$)
                    wrk$ = wrk$(ppos+1)
                    time$ = wrk$(9,4)

                    if test$ = "FD" then
                        rem ' first day
                        if time$ < value$ then
                            continue
                        fi
                    else
                        if test$ = "LD" then
                            rem ' last day
                            if time$ > value$ then
                                continue
                            fi
                        else
                            if test$ = "OD" then
                                rem ' only day
                                low$ = value$(1,4)
                                high$ = value$(5,4)
                                if time$ < low$ or time$ > high$ then
                                    continue
                                fi
                            fi
                        fi
                    fi
                fi

                currentEntry! = new StringTokenizer(entry$,"~")

                while currentEntry!.hasMoreTokens()

                    token! = currentEntry!.nextToken()

                    rem ' uniqueID is always the first token in a row

                    if pos("uniqueID:"=token!) then
                        if workingRef! = "" then
                            workingRef! = token!
                            savedEntry$ = entry$
                            continue
                        else
                            if workingRef! <> token! then
                                rem ' change of working ref
                                reportEntries!.addItem(savedEntry$)
                                workingRef! = token!
                                result$=""
                                amount=0
                                cardType$=""
                                savedEntry$=entry$
                                continue
                            else
                                rem ' this is the second line for a given entry
                                savedEntry$ =   savedEntry$ +   "~" +   entry$
                                continue
                            fi
                        fi
                    fi
                wend

            wend

            if log = log1 then
                close(log1)
                log1Opened = 0
            else
                if log = log2 then
                    close(log2)
                    log2Opened = 0
                fi
            fi

        wend
        reportEntries!.addItem(savedEntry$)
    fi

next x
holdEntries! = entries!
entries! = reportEntries!
gosub printReport
entries! = holdEntries!

return
rem ' -----------------------------------------------------------------
rem ' center_window
rem ' -----------------------------------------------------------------

center_window:

rem running as an applet
if info(3,6)="2" then
    topLevelWindow!.setTitleBarVisible(0)
    applet!=ourAPI!.getAppletProxy()
    applet!.setBounds(0,0,100,500)
else
    width = scrDimension!.width
    height = scrDimension!.height
    winWidth = ourWindow!.getWidth()
    winHeight = ourWindow!.getHeight()

    x = int((width-winWidth)/2)
    y = int((height-winHeight)/2)

    ourWindow!.setLocation(x,y)
fi


return
rem ' -----------------------------------------------------------------
rem ' convertOrderNbrToInvoiceNbr
rem ' -----------------------------------------------------------------

convertOrderNbrToInvoiceNbr:

rem ' if the comment contains an order number covert it to an invoice number
ordinvnbr$ = cvs(comment$(ppos + 1), 3)

while len(ordinvnbr$) < 7
    ordinvnbr$ = "0" + ordinvnbr$
wend

if len(ordinvnbr$) = 7 and ordinvnbr$(1,3) = "000" then
    rem ' we have an order number - find the invoice number
    if len(customerNbr$) = 8 then
        sql$ = "SELECT AR_INV_NBR FROM ART03 WHERE FIRM_ID = '" + customerNbr$(1,2) + "' "
        sql$ = sql$ + "AND CUSTOMER_NBR = '" + customerNbr$(3) + "' AND ORDER_NUMBER = '" + ordinvnbr$ + "'"
        sqlprep(sqlchan)sql$
        sqlexec(sqlchan)
        dim invRec$:sqltmpl(sqlchan)
        while 1
            invRec$ = sqlfetch(sqlchan, err = *break)
            if cvs(invRec.AR_INV_NBR$, 3) <> "" then
                comment$ = comment$(1,ppos) + invRec.AR_INV_NBR$
            fi
        wend
    fi
fi

return
rem ' -----------------------------------------------------------------
rem ' convertReportParamToText
rem ' -----------------------------------------------------------------

convertReportParamToText:

if availLogs!.getItemCount() = 0 then
    reportParameters!.setText("")
else

    numDays = numOfDays!.getSelectedIndex()

    endHourSelected = hour!.getSelectedIndex()
    endHour$ = hourSpinList!.get(endHourSelected)

    endMinuteSelected = minute!.getSelectedIndex()
    endMinute$ = minuteSpinList!.get(endMinuteSelected)

    begHourSelected = startHour!.getSelectedIndex()
    begHour$ = hourSpinList!.get(begHourSelected)

    begMinuteSelected = startMinute!.getSelectedIndex()
    begMinute$ = minuteSpinList!.get(begMinuteSelected)

    if numDays = 0 and (begHour$ + begMinute$) >= (endHour$ + endMinute$) then
        msg$ = "You have selected a less than one day report period and in that case"
        msg$ = msg$ + " the start time must be less than the cutoff time."
        title$ = "Time Range Problem"
        resp = msgbox(msg$, 16, title$)
    else

        dateStr$ = availLogs!.getText()

        selection = availLogs!.getSelectedIndex()
        selections$ = logSelections$
        while selection
            ppos = pos($0A$ = selections$)
            selections$ = selections$(ppos+1)
            selection = selection - 1
        wend
        ppos = pos($0A$=selections$)
        selDay$ = selections$(1,ppos-1)

        endYear = num(selDay$(7))
        endMonth = num(selDay$(1,2))
        endDay = num(selDay$(4,2))
        endJul = jul(endYear, endMonth, endDay)

        if numDays > 0 then
            begJul = endJul - numDays
            if endHour$ = "23" and endMinute$ = "59" then begJul = begJul + 1
        else
            begJul = endJul
        fi

        text$ = date(begJul:"%Mz/%Dz/%Y") + " "
        text$ = text$ + begHour$ + ":"+begMinute$ + " through "
        text$ = text$ + date(endJul:"%Mz/%Dz/%Y") + " "
        text$ = text$ + endHour$ + ":" + endMinute$ + "."

        reportParameters!.setText(text$)

    fi
fi

return
rem ' -----------------------------------------------------------------
rem ' dayChange
rem ' -----------------------------------------------------------------

dayChange:

if curDay$ <> "" then

    curDay! = str(curDay$)
    totalDates!.addItem(curDay!)

    vmc! = num(str(vmc))
    totalvmc!.addItem(vmc!)

    vmcPosted! = num(str(vmcPosted))
    totalvmcPosted!.addItem(vmcPosted!)

    vmcItems! = num(str(vmcItems))
    totalvmcItems!.addItem(vmcItems!)

    amex! = num(str(amex))
    totalamex!.addItem(amex!)

    amexItems! = num(str(amexItems))
    totalamexItems!.addItem(amexItems!)

    amexPosted! = num(str(amexPosted))
    totalamexPosted!.addItem(amexPosted!)

fi

vmc = 0
vmcPosted = 0
vmcItems = 0
amex = 0
amexItems = 0
amexPosted = 0
curDay$ = tranID$(1,8)

return
rem ' -----------------------------------------------------------------
rem ' declarations
rem ' -----------------------------------------------------------------

declarations:

USE java.awt.Dimension
USE java.util.StringTokenizer
USE java.net.InetAddress

USE javax.print.attribute.standard.OrientationRequested
USE javax.print.attribute.HashPrintRequestAttributeSet
USE java.text.AttributedString

USE ::ClientServerFileMover.src::ClientServerFileMover
USE ::SQLProperties.bbj::SQLProperties

DECLARE BBjAPI ourAPI!
DECLARE BBjSysGui ourSysGui!
DECLARE BBjSystemMetrics ourSystemMetrics!
DECLARE Dimension scrDimension!
DECLARE BBjWindow ourWindow!
DECLARE BBjTopLevelWindow topLevelWindow!
DECLARE InetAddress localHost!

DECLARE BBjVector ourControlVector!
DECLARE BBjInputNSpinner month!
DECLARE BBjInputNSpinner year!
DECLARE BBjListButton availLogs!
DECLARE BBjEditBox visaApproved!
DECLARE BBjEditBox visaDeclined!
DECLARE BBjEditBox visaTotal!
DECLARE BBjEditBox masterCardApproved!
DECLARE BBjEditBox masterCardDeclined!
DECLARE BBjEditBox masterCardTotal!
DECLARE BBjEditBox amexApproved!
DECLARE BBjEditBox amexDeclined!
DECLARE BBjEditBox amexTotal!
DECLARE BBjEditBox overallApproved!
DECLARE BBjEditBox overallDeclined!
DECLARE BBjEditBox overallTotal!
DECLARE BBjNavigator browserNavigator!
DECLARE BBjCEdit entryBrowser!
DECLARE BBjEditBox status!
DECLARE BBjEditBox amount!
DECLARE BBjEditBox customer!
DECLARE BBjEditBox invOrOrder!
DECLARE BBjListButton numOfDays!
DECLARE BBjVector numOfDaysSpinList!
DECLARE BBjListButton hour!
DECLARE BBjVector hourSpinList!
DECLARE BBjListButton minute!
DECLARE BBjListButton startHour!
DECLARE BBjListButton startMinute!
DECLARE BBjVector minuteSpinList!
DECLARE BBjString selection!
DECLARE BBjStaticText reportParameters!

DECLARE BBjVector entries!
DECLARE BBjString entry!
DECLARE StringTokenizer currentEntry!
DECLARE BBjString token!
DECLARE BBjString workingRef!

DECLARE HashPrintRequestAttributeSet attrs!
DECLARE BBjForm pdf!
DECLARE BBjFormPage page!
DECLARE BBjFormParagraph para!
DECLARE BBjFormLine line!
DECLARE BBjString responseStr!
DECLARE StringTokenizer response!
DECLARE BBjString responsePart!
DECLARE ClientServerFileMover clientServerFileMover!

DECLARE BBjVector days!
DECLARE BBjVector criteria!
DECLARE BBjString criteriaStr!
DECLARE BBjVector reportEntries!
DECLARE BBjVector holdEntries!

DECLARE BBjVector totalDates!
DECLARE BBjVector totalvmc!
DECLARE BBjVector totalvmcPosted!
DECLARE BBjVector totalamex!
DECLARE BBjVector totalamexPosted!

DECLARE BBjString curDay!
DECLARE BBjNumber vmc!
DECLARE BBjNumber vmcPosted!
DECLARE BBjNumber amex!
DECLARE BBjNumber amexPosted!

DECLARE SQLProperties sqlProps!

return
rem ' -----------------------------------------------------------------
rem ' getDisplayDate
rem ' -----------------------------------------------------------------

getDisplayDate:

rem ' date must be in selDay$ in the form of MM-DD-YYYY"
theDay = num(selDay$(4,2))
theMonth = num(selDay$(1,2))
theYear = num(selDay$(7,4))
julian = jul(theYear, theMonth, theDay)

displayDate$ = date(julian,"%Dl, %Ml %D, %Y")

return
rem ' -----------------------------------------------------------------
rem ' get_objects
rem ' -----------------------------------------------------------------

get_objects:

ourControlVector! = ourWindow!.getAllControls()

for i=0 to ourControlVector!.size() - 1
    control!= cast(BBjControl, ourControlVector!.getItem(i))

    if control!.getName().equals("month") then month!=cast(BBjInputNSpinner, control!)
    if control!.getName().equals("year") then year!=cast(BBjInputNSpinner, control!)
    if control!.getName().equals("availableLogs") then availLogs!=cast(BBjListButton, control!)

    if control!.getName().equals("visaApproved") then visaApproved!=cast(BBjEditBox, control!)
    if control!.getName().equals("visaDeclined") then visaDeclined!=cast(BBjEditBox, control!)
    if control!.getName().equals("visaTotal") then visaTotal!=cast(BBjEditBox, control!)

    if control!.getName().equals("masterCardApproved") then masterCardApproved!=cast(BBjEditBox, control!)
    if control!.getName().equals("masterCardDeclined") then masterCardDeclined!=cast(BBjEditBox, control!)
    if control!.getName().equals("masterCardTotal") then masterCardTotal!=cast(BBjEditBox, control!)

    if control!.getName().equals("amexApproved") then amexApproved!=cast(BBjEditBox, control!)
    if control!.getName().equals("amexDeclined") then amexDeclined!=cast(BBjEditBox, control!)
    if control!.getName().equals("amexTotal") then amexTotal!=cast(BBjEditBox, control!)

    if control!.getName().equals("overallApproved") then overallApproved!=cast(BBjEditBox, control!)
    if control!.getName().equals("overallDeclined") then overallDeclined!=cast(BBjEditBox, control!)
    if control!.getName().equals("overallTotal") then overallTotal!=cast(BBjEditBox, control!)

    if control!.getName().equals("browserNavigator") then browserNavigator!=cast(BBjNavigator, control!)
    if control!.getName().equals("entryBrowser") then entryBrowser!=cast(BBjCEdit, control!)

    if control!.getName().equals("customer") then customer!=cast(BBjEditBox, control!)
    if control!.getName().equals("invOrOrder") then invOrOrder!=cast(BBjEditBox, control!)
    if control!.getName().equals("status") then status!=cast(BBjEditBox, control!)
    if control!.getName().equals("amount") then amount!=cast(BBjEditBox, control!)

    if control!.getName().equals("numOfDays") then numOfDays!=cast(BBjListButton, control!)
    if control!.getName().equals("hour") then hour!=cast(BBjListButton, control!)
    if control!.getName().equals("minute") then minute!=cast(BBjListButton, control!)
    if control!.getName().equals("startHour") then startHour!=cast(BBjListButton, control!)
    if control!.getName().equals("startMinute") then startMinute!=cast(BBjListButton, control!)
    if control!.getName().equals("reportParameters") then reportParameters!=cast(BBjStaticText, control!)


next i

return
rem ' -----------------------------------------------------------------
rem ' loadAvailableDays
rem ' -----------------------------------------------------------------

loadAvailableDays:

theMonth = month!.getValue()
theYear = year!.getValue()

dateTarget$ = str(theYear) + str(theMonth:"00")

files = unt
open(files)directory1$

logSelections$=""
logSelectionCount = 0
doneWithOne = 0

while 1
    while 1
        read record(files,end=*break)filename$

        if pos("ccTransLog" = filename$)=0 then continue

        if pos(dateTarget$ = filename$)=0 then continue

        delim = pos("." = filename$)
        datestr$ = filename$(delim+1)
        datestr$ = datestr$(5,2) + "/" + dateStr$(7,2) + "/" + dateStr$(1,4)

        rem ' place the datestr in the proper location in the selection string
        newDay$=dateStr$(4,2)
        if len(logSelections$)=0 then
            logSelections$ = logSelections$ + dateStr$ + $0A$
            logSelectionCount = logSelectionCount + 1
        else
            wrk$=logSelections$
            logSelections$=""
            while len(wrk$)
                ppos = pos($0A$=wrk$)
                target$=wrk$(1,ppos-1), wrk$=wrk$(ppos+1)
                targetDay$=target$(4,2)
                if targetDay$ > newDay$ then
                    logSelections$ = logSelections$ + dateStr$ + $0A$ + target$ + $0A$ + wrk$
                    logSelectionCount = logSelectionCount + 1
                    wrk$=""
                else
                    if targetDay$=newDay$ then
                        logSelections$ = logSelections$ + target$ + $0A$ + wrk$
                        wrk$=""
                    else
                        rem targetDay less than newDay
                        logSelections$=logSelections$ + target$ + $0A$
                        if wrk$="" then
                            logSelections$ = logSelections$ + dateStr$ + $0A$
                            logSelectionCount = logSelectionCount + 1
                        fi
                    fi
                fi
            wend
        fi
    wend

    if !(doneWithOne) AND directory2$<>"" then
        doneWithOne = 1
        close(files)
        open(files,err=*break)directory2$
    else
        break
    fi

wend

availLogs!.removeAllItems()

if logSelectionCount > 0 then
    availLogs!.insertItems(0, logSelections$)
    availLogs!.selectIndex(logSelectionCount - 1)
fi

close(files)

return
rem ' -----------------------------------------------------------------
rem ' loadEntryBrowser
rem ' -----------------------------------------------------------------

loadEntryBrowser:

rem ' set Navigator
browserNavigator!.setText(str(entryNumber))

rem ' find entry
text$=""
status!.setText("")
amount!.setText("")
customer!.setText("")
invOrOrder!.setText("")


entry! = cast(BBjString, entries!.getItem(entryNumber - 1))

currentEntry! = new StringTokenizer(entry!,"~")

secondEntry = 0
while currentEntry!.hasMoreTokens()

    token! = currentEntry!.nextToken()

    if len(text$)<>0 and pos("uniqueID:"=token!) then
        text$=text$ + $0A$
        secondEntry = 1
    fi

    if pos("uniqueID:"=token!) then
        ppos = pos(":"=token!)
        wrk$ = token!.substring(ppos)
        if wrk$(len(wrk$),1) = "B" then
            wrk$="Cust: " + wrk$(len(wrk$)-6,6)
        else
            wrk$="Order: " + wrk$(len(wrk$)-5 ,6)
        fi
        customer!.setText(wrk$)
    fi

    if pos("comment:"=token!) then
        ppos = pos(":"=token!)
        wrk$=token!.substring(ppos)
        ppos = pos("/"=wrk$)
        if ppos > 0 then
            customerNbr$=wrk$(1,ppos-1)
            invOrOrder!.setText(wrk$(ppos+1))
            found = 0
            read record(ARM01,key=customerNbr$,dom=*next)ARM01$; found = 1
            if found then
                customer!.setText(customerNbr$ + " " + ARM01.cust_name$)
            else
                customer!.setText(customerNbr$)
            fi
        else
            customer!.setText(wrk$)
        fi
    fi

    if pos("result:"=token!) then
        ppos = pos(":"=token!)
        status!.setText(token!.substring(ppos))
    fi

    if secondEntry and pos("amount:"=token!) then
        ppos = pos(":"=token!)
        amount!.setText(str(num(token!.substring(ppos)):"$###,##0.00"))
    fi

    text$ = text$ + token! + $0A$

wend

entryBrowser!.setText(text$)

return
rem ' -----------------------------------------------------------------
rem ' loadSpinners
rem ' -----------------------------------------------------------------

loadSpinners:

month!.setMinimum(1)
month!.setMaximum(12)
month!.setStepSize(1)
month!.setValue(num(date(0,"%M")))

year!.setMinimum(2008)
year!.setMaximum(2025)
year!.setStepSize(1)
year!.setValue(num(date(0:"%Y")))

numOfDaysSpinList! = OurAPI!.makeVector()
for x = 0 to 31
    selection! = str(x:"#0")
    numOfDaysSpinList!.add(selection!)
next x
numOfDays!.removeAllItems()
numOfDays!.insertItems(0, numOfDaysSpinList!)
numOfDays!.selectIndex(1)

hourSpinList! = OurAPI!.makeVector()
for x = 0 to 23
    selection!=str(x:"00")
    hourSpinList!.add(selection!)
next x
hour!.removeAllItems()
hour!.insertItems(0, hourSpinList!)
hour!.selectIndex(23)

minuteSpinList! = OurAPI!.makeVector()
for x = 0 to 59
    selection!=str(x:"00")
    minuteSpinList!.add(selection!)
next x
minute!.removeAllItems()
minute!.insertItems(0, minuteSpinList!)
minute!.selectIndex(59)

startHour!.removeAllItems()
startHour!.insertItems(0, hourSpinList!)
startHour!.selectIndex(0)

startMinute!.removeAllItems()
startMinute!.insertItems(0, minuteSpinList!)
startMinute!.selectIndex(0)

return
rem ' -----------------------------------------------------------------
rem ' loadSummaryBoxes
rem ' -----------------------------------------------------------------

loadSummaryBoxes:

rem ' visa
if visaApproved <> 0 then
    visaApproved!.setText(str(visaApproved))
else
    visaApproved!.setText("")
fi

if visaDeclined <> 0 then
    visaDeclined!.setText(str(visaDeclined))
else
    visaDeclined!.setText("")
fi

if visaTotal <> 0 then
    visaTotal!.setText(str(visaTotal:"$###,##0.00"))
else
    visaTotal!.setText("")
fi

rem ' masterCard
if mcApproved <> 0 then
    masterCardApproved!.setText(str(mcApproved))
else
    masterCardApproved!.setText("")
fi

if mcDeclined <> 0 then
    masterCardDeclined!.setText(str(mcDeclined))
else
    masterCardDeclined!.setText("")
fi

if mcTotal <> 0 then
    masterCardTotal!.setText(str(mcTotal:"$###,##0.00"))
else
    masterCardTotal!.setText("")
fi

rem ' amex
if amexApproved <> 0 then
    amexApproved!.setText(str(amexApproved))
else
    amexApproved!.setText("")
fi

if amexDeclined <> 0 then
    amexDeclined!.setText(str(amexDeclined))
else
    amexDeclined!.setText("")
fi

if amexTotal <> 0 then
    amexTotal!.setText(str(amexTotal:"$###,##0.00"))
else
    amexTotal!.setText("")
fi

overallApproved = visaApproved + mcApproved + amexApproved
overallDeclined = visaDeclined + mcDeclined + amexDeclined
overallTotal = visaTotal + mcTotal + amexTotal

rem ' overall
if overallApproved <> 0 then
    overallApproved!.setText(str(overallApproved))
else
    overallApproved!.setText("")
fi

if overallDeclined <> 0 then
    overallDeclined!.setText(str(overallDeclined))
else
    overallDeclined!.setText("")
fi

if overallTotal <> 0 then
    overallTotal!.setText(str(overallTotal:"$###,##0.00"))
else
    overallTotal!.setText("")
fi

return
rem ' -----------------------------------------------------------------
rem ' openCustMast
rem ' -----------------------------------------------------------------

openCustMast:

call "templates.pgm::ARM01"
ARM01 = unt
OPEN(ARM01)"ARM-01"

return
rem ' -----------------------------------------------------------------
rem ' printReport
rem ' -----------------------------------------------------------------

printReport:

selection = availLogs!.getSelectedIndex()
rem ' is there a day
if availLogs!.getItemCount() = 0 or selection < 0 then
    response = msgbox("A day has not been selected.", 0+64, "No Day Selected")
else
    selections$ = logSelections$
    while selection
        ppos = pos($0A$ = selections$)
        selections$ = selections$(ppos+1)
        selection = selection - 1
    wend
    ppos = pos($0A$=selections$)
    selDay$ = selections$(1,ppos-1)

    pdfFilename$ = "ccDailyReport_" + selDay$(7,4) + selDay$(1,2) + selDay$(4,2) + ".pdf"
    erase pdfdirectory$ + pdfFilename$, err=*next

    attrs! = new HashPrintRequestAttributeSet()
    attrs!.add(OrientationRequested.LANDSCAPE)

    formWidth = 720
    lineHeight = 12

    pdf! = ourAPI!.getBBjPDFForm(pdfdirectory$ + pdfFilename$, attrs!)

    page = 0
    vmc = 0
    vmcPosted = 0
    amex = 0
    amexPosted = 0
    curDay$ = ""

    totalDates! = OurAPI!.makeVector()
    totalvmc! = OurAPI!.makeVector()
    totalvmcPosted! = OurAPI!.makeVector()
    totalvmcItems! = OurAPI!.makeVector()
    totalamex! = OurAPI!.makeVector()
    totalamexItems! = OurAPI!.makeVector()
    totalamexPosted! = OurAPI!.makeVector()

    gosub newPage

    count = entries!.size()
    for entryNum = 1 to count

        entry! = cast(BBjString, entries!.getItem(entryNum - 1))
        currentEntry! = new StringTokenizer(entry!,"~")

        tranID$ = "", tranType$ = "", result$ = "", name$ = "", amount$ = ""
        cardType$ = "", comment$ = "", customerName$="", refID$="", authCode$=""
        while currentEntry!.hasMoreTokens()

            token! = currentEntry!.nextToken()

            if pos("uniqueID:"=token!) then
                ppos = pos(":"=token!)
                tranID$ = token!.substring(ppos)
                if tranID$(1,8) <> curDay$ gosub dayChange
                continue
            fi

            if pos("tranType:"=token!) then
                ppos = pos(":"=token!)
                tranType$ = token!.substring(ppos)
                continue
            fi

            if pos("result:"=token!) then
                ppos = pos(":"=token!)
                result$ = token!.substring(ppos)
                continue
            fi

            if pos("name:"=token!) then
                ppos = pos(":"=token!)
                name$ = token!.substring(ppos)
                continue
            fi

            if pos("amount:"=token!) then
                ppos = pos(":"=token!)
                amount$ = token!.substring(ppos)
                continue
            fi

            if pos("cardType:"=token!) then
                ppos = pos(":"=token!)
                cardType$ = token!.substring(ppos)
                if cardType$ = "V" then
                    cardType$ = "Visa"
                else
                    if cardType$ = "M" then
                        cardType$ = "Master"
                    else
                        if cardType$ = "A" then
                            cardType$ = "Amex"
                        fi
                    fi
                fi
                continue
            fi

            if pos("comment:"=token!) then
                ppos = pos(":"=token!)
                comment$ = token!.substring(ppos)
                ppos = pos("/"=comment$)
                if ppos then
                    customerNbr$=comment$(1,ppos-1)
                    found=0
                    read record(ARM01,key=customerNbr$,dom=*next)ARM01$; found = 1
                    if found then
                        customerName$=ARM01.cust_name$
                    else
                        customerName$=""
                    fi
                    gosub convertOrderNbrToInvoiceNbr
                fi
                continue
            fi

            if pos("response:"=token!) then
                ppos = pos(":"=token!)
                responseStr!=token!.substring(ppos)
                response! = new StringTokenizer(responseStr!,"&")
                while response!.hasMoreTokens()
                    responsePart! = response!.nextToken()

                    if pos("PNREF="=responsePart!) then
                        ppos = pos("="=responsePart!)
                        refID$ = responsePart!.substring(ppos)
                        continue
                    fi

                    if pos("AUTHCODE="=responsePart!) then
                        ppos = pos("="=responsePart!)
                        authCode$ = responsePart!.substring(ppos)
                        continue
                    fi
                wend
                continue
            fi
        wend

        if result$ = "Approved" then

            rem ' do we have room on the page
            if len(comment$) = 0 then
                thisLineHeight = lineHeight
            else
                wrap = len(comment$)/48
                if mod(wrap, 1) <> 0 then
                    wrap = wrap + 1
                fi
                wrap = int(wrap)
                thisLineHeight = lineHeight * wrap
            fi

            if (linePos + thisLineHeight + lineHeight + (lineHeight / 2) > 540) then gosub newPage

            para! = page!.newParagraph(0, linePos, 144, lineHeight)
            para!.setText(tranID$)
            page!.add(para!)

            para! = page!.newParagraph(160, linePos, 144, lineHeight)
            para!.setText(name$)
            page!.add(para!)

            para! = page!.newParagraph(300, linePos, 72, lineHeight)
            para!.setText(cardType$)
            page!.add(para!)

            para! = page!.newParagraph(390, linePos, 72, lineHeight)
            para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
            para!.setText(STR(NUM(amount$):"($###,##0.00)"))
            page!.add(para!)

            para! = page!.newParagraph(480, linePos, 280, thisLineHeight)
            para!.setText(comment$)
            page!.add(para!)

            linePos = linePos + thisLineHeight

            rem ' second line
            para! = page!.newParagraph(0.0, linePos, 144, lineHeight)
            para!.setText(refID$)
            page!.add(para!)

            para! = page!.newParagraph(160, linePos, 144, lineHeight)
            para!.setText(authCode$)
            page!.add(para!)

            para! = page!.newParagraph(480, linePos, 280, lineHeight)
            para!.setText(customerName$)
            page!.add(para!)

            linePos = linePos + lineHeight

            linePos = linePos + int(lineHeight / 2)

            rem ' sum totals
            if cardType$="Visa" or cardType$="Master" then
                vmcItems = vmcItems + 1
                if tranID$(len(tranID$)) = "B" then
                    vmcPosted = vmcPosted + num(amount$)
                else
                    vmc = vmc + num(amount$)
                fi
            else
                if cardType$="Amex" then
                  amexItems = amexItems + 1
                    if tranID$(len(tranID$)) = "B" then
                        amexPosted = amexPosted + num(amount$)
                    else
                        amex = amex + num(amount$)
                    fi
                fi
            fi
        fi

    next entryNum

    tranID$ = "All Done"
    gosub dayChange

    rem ' output report totals

    Tvmc = 0
    TvmcPosted = 0
    TvmcItems = 0
    Tamex = 0
    TamexItems=0
    TamexPosted = 0

    if totalDates!.size() > 0 then
        for x = 0 to totalDates!.size() - 1

            curDay$ = totalDates!.getItem(x)
            rem ' for single days don't print Grand total, print the date
            rem ' if totalDates!.size() = 1 then
                rem ' curDay$ = "Grand"
            rem ' else
                curDay$ = curDay$(5,2) + "/" + curDay$(7,2) + "/" + curDay$(1,4)
            rem ' fi

            vmc = totalvmc!.getItem(x)
            vmcPosted = totalvmcPosted!.getItem(x)
            vmcItems = totalvmcItems!.getItem(x)
            amex = totalamex!.getItem(x)
            amexItems = totalamexItems!.getItem(x)
            amexPosted = totalamexPosted!.getItem(x)

            gosub printTotallines

            Tvmc = Tvmc + vmc
            TvmcPosted = TvmcPosted + vmcPosted
            TvmcItems = TvmcItems + vmcItems
            Tamex = Tamex + amex
            TamexItems= TamexItems + amexItems
            TamexPosted = TamexPosted + amexPosted

        next x
    fi

    if totalDates!.size() = 0
        curDay$ = "Grand"
        vmc = 0
        vmcPosted = 0
        vmcItems = 0
        amex = 0
        amexItems = 0
        amexPosted = 0
        gosub printTotallines
    fi

    if totalDates!.size() > 1
        curDay$ = "Grand"
        vmc = Tvmc
        vmcPosted = TvmcPosted
        vmcItems = TvmcItems
        amex = Tamex
        amexItems = TamexItems
        amexPosted = TamexPosted
        gosub printTotallines
    fi

    pdf!.print()

    rem ' download to the client
    clientServerFileMover! = new ClientServerFileMover()
    success$ = clientServerFileMover!.downloadToClient("Save Report File", "", pdfFilename$, "", "", pdfdirectory$)
    if success$="::GOOD::" then
        msg$="The PDF report file download is complete."
        title$="Download Complete"
        resp=msgbox(msg$, 64, title$)
    else
        if success$="::BAD::" then
            msg$="The PDF report file download failed."
            title$="Download Failed"
            resp=msgbox(msg$, 16, title$)
        fi
    fi
    erase pdfdirectory$ + pdfFilename$, err=*next
fi

return

newPage:

    page! = pdf!.createPage()
    linePos = 0
    page = page + 1

    rem ' create header
    para! = page!.newParagraph(0.0, 0.0, 500, lineHeight)
    para!.setText("BASIS International, Ltd.")
    page!.add(para!)

    para! = page!.newParagraph(612, 0.0, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText("Page: " + str(page))
    page!.add(para!)

    linePos = linePos + lineHeight

    gosub getDisplayDate
    para! = page!.newParagraph(0.0, linePos, formWidth, lineHeight)
    para!.setText(reportParameters!.getText())
    page!.add(para!)
    linePos = linePos + lineHeight

    linePos = linePos + int(lineHeight / 4)
    line! = page!.newLine(0.0, linePos, formWidth, linePos)
    page!.add(line!)
    linePos = linePos + int(lineHeight / 4)

    rem ' create column headers
    para! = page!.newParagraph(0.0, linePos, 144, lineHeight)
    para!.setText("Transaction ID")
    page!.add(para!)

    para! = page!.newParagraph(160, linePos, 144, lineHeight)
    para!.setText("Name on Card")
    page!.add(para!)

    para! = page!.newParagraph(300, linePos, 72, lineHeight)
    para!.setText("Card Type")
    page!.add(para!)

    para! = page!.newParagraph(390, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText("Amount")
    page!.add(para!)

    para! = page!.newParagraph(480, linePos, 280, lineHeight)
    para!.setText("Customer Number/Order or Invoice Nbr")
    page!.add(para!)

    linePos = linePos + lineHeight

    rem ' second line
    para! = page!.newParagraph(0.0, linePos, 144, lineHeight)
    para!.setText("Paypal Reference ID")
    page!.add(para!)

    para! = page!.newParagraph(160, linePos, 144, lineHeight)
    para!.setText("Authorization Code")
    page!.add(para!)

    para! = page!.newParagraph(480, linePos, 280, lineHeight)
    para!.setText("Customer Name")
    page!.add(para!)

    linePos = linePos + lineHeight

    linePos = linePos + int(lineHeight / 4)
    line! = page!.newLine(0.0, linePos, formWidth, linePos)
    page!.add(line!)
    linePos = linePos + int(lineHeight / 4)

return
rem ' -----------------------------------------------------------------
rem ' printTotalLines
rem ' -----------------------------------------------------------------

printTotalLines:

    rem ' do we have enough room for the totals
    if (linePos + (lineHeight * 7)) > 540 then gosub newPage

    linePos = linePos + lineHeight

    para! = page!.newParagraph(0, linePos, 144, lineHeight)
    para!.setText(curDay$ + " Totals")
    page!.add(para!)

    linePos = linePos + lineHeight

    rem ' col 1
    para! = page!.newParagraph(0, linePos, 72, lineHeight)
    para!.setText("VMC Posted:")
    page!.add(para!)

    para! = page!.newParagraph(90, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmcPosted:"($###,##0.00)"))
    page!.add(para!)

    rem ' col 2
    para! = page!.newParagraph(180, linePos, 72, lineHeight)
    para!.setText("Amex Posted:")
    page!.add(para!)

    para! = page!.newParagraph(270, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(amexPosted:"$(###,##0.00)"))
    page!.add(para!)

    rem ' col 3
    postedTotal = vmcPosted + amexPosted

    para! = page!.newParagraph(360, linePos, 72, lineHeight)
    para!.setText("Total Posted:")
    page!.add(para!)

    para! = page!.newParagraph(450, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(postedTotal:"($###,##0.00)"))
    page!.add(para!)

    linePos = linePos + lineHeight

    rem ' col 1
    para! = page!.newParagraph(0, linePos, 72, lineHeight)
    para!.setText("VMC Manual:")
    page!.add(para!)

    para! = page!.newParagraph(90, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmc:"($###,##0.00)"))
    page!.add(para!)

    rem ' col 2
    para! = page!.newParagraph(180, linePos, 80, lineHeight)
    para!.setText("Amex Manual:")
    page!.add(para!)

    para! = page!.newParagraph(270, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(amex:"$(###,##0.00)"))
    page!.add(para!)

    rem ' col 3
    manualTotal = vmc + amex

    para! = page!.newParagraph(360, linePos, 72, lineHeight)
    para!.setText("Total Manual:")
    page!.add(para!)

    para! = page!.newParagraph(450, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(manualTotal:"($###,##0.00)"))
    page!.add(para!)

    linePos = linePos + lineHeight

    rem ' col 1
    para! = page!.newParagraph(0, linePos, 72, lineHeight)
    para!.setText("VMC Total:")
    page!.add(para!)

    para! = page!.newParagraph(90, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmc + vmcPosted:"($###,##0.00)"))
    page!.add(para!)

    rem ' col 2
    para! = page!.newParagraph(180, linePos, 72, lineHeight)
    para!.setText("Amex Total:")
    page!.add(para!)

    para! = page!.newParagraph(270, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(amex + amexPosted:"($###,##0.00)"))
    page!.add(para!)

    rem ' col 3
    para! = page!.newParagraph(360, linePos, 72, lineHeight)
    para!.setText("Total:")
    page!.add(para!)

    para! = page!.newParagraph(450, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmc + vmcPosted + amex + amexPosted:"($###,##0.00)"))
    page!.add(para!)

    linePos = linePos + lineHeight

    rem ' col 1
    rem ' calculate the vmc fees
    precision 4
    vmcFee = (vmc + vmcPosted) * num(vmcRate$)
    vmcFee = vmcFee + (vmcItems * num(vmcPerItem$))
    precision 2

    para! = page!.newParagraph(0, linePos, 72, lineHeight)
    para!.setText("VMC Fee:")
    page!.add(para!)

    para! = page!.newParagraph(90, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR((vmcFee * (-1)):"($###,##0.00)"))
    page!.add(para!)

    rem ' col 2
    rem ' calculate the amex fees
    precision 4
    amexFee = (amex + amexPosted) * num(amexRate$)
    amexFee = amexFee + (amexItems * num(amexPerItem$))
    amexFee = round(amexFee, 2)
    precision 2

    para! = page!.newParagraph(180, linePos, 72, lineHeight)
    para!.setText("Amex Fee:")
    page!.add(para!)

    para! = page!.newParagraph(270, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR((amexFee * (-1)):"($###,##0.00)"))
    page!.add(para!)

    rem ' col 3
    para! = page!.newParagraph(360, linePos, 72, lineHeight)
    para!.setText("Total Fees:")
    page!.add(para!)

    para! = page!.newParagraph(450, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(((amexFee + vmcFee) * (-1)):"($###,##0.00)"))
    page!.add(para!)

    linePos = linePos + lineHeight

    rem ' col 1
    para! = page!.newParagraph(0, linePos, 72, lineHeight)
    para!.setText("VMC Net:")
    page!.add(para!)

    para! = page!.newParagraph(90, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmc + vmcPosted - vmcFee:"($###,##0.00)"))
    page!.add(para!)


    rem ' col 2
    para! = page!.newParagraph(180, linePos, 72, lineHeight)
    para!.setText("Amex Net:")
    page!.add(para!)

    para! = page!.newParagraph(270, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(amex + amexPosted - amexFee:"($###,##0.00)"))
    page!.add(para!)

    rem ' col 3
    para! = page!.newParagraph(360, linePos, 72, lineHeight)
    para!.setText("Net Total:")
    page!.add(para!)

    para! = page!.newParagraph(450, linePos, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmc + vmcPosted - vmcFee + amex + amexPosted - amexFee:"($###,##0.00)"))
    page!.add(para!)

    linePos = linePos + lineHeight

return
rem ' -----------------------------------------------------------------
rem ' resetSummaryBoxes
rem ' -----------------------------------------------------------------

resetSummaryBoxes:

rem ' visa

    visaApproved!.setText("")
    visaDeclined!.setText("")
    visaTotal!.setText("")
    masterCardApproved!.setText("")
    masterCardDeclined!.setText("")
    masterCardTotal!.setText("")
    amexApproved!.setText("")
    amexDeclined!.setText("")
    amexTotal!.setText("")
    overallApproved!.setText("")
    overallDeclined!.setText("")
    overallTotal!.setText("")

return
rem ' -----------------------------------------------------------------
rem ' summarizeDay
rem ' -----------------------------------------------------------------

summarizeDay:

entryBrowser!.setText("")
browserNavigator!.setText("")
customer!.setText("")
status!.setText("")
amount!.setText("")
invOrOrder!.setText("")
entryNumber = 0
totalEntries = 0

if availLogs!.getItemCount() = 0
    gosub resetSummaryBoxes
else
    selection = availLogs!.getSelectedIndex()
    if selection < 0 then
        gosub resetSummaryBoxes
    else
        selections$ = logSelections$
        while selection
            ppos = pos($0A$ = selections$)
            selections$ = selections$(ppos+1)
            selection = selection - 1
        wend
        ppos = pos($0A$=selections$)
        selDay$ = selections$(1,ppos-1)

        filename$="ccTransLog." + selDay$(7,4) + selDay$(1,2) + selDay$(4,2)

        rem ' open one or two log files
        log1 = unt, log1Opened = 0
        open(log1, err=*next)directory1$+"/"+filename$; log1Opened = 1
        if !log1Opened then log1=0
        log2 = unt, log2Opened = 0
        open(log2, err=*next)directory2$+"/"+filename$; log2Opened = 1

        if log1Opened or log2Opened then

            entries! = ourAPI!.makeVector()

            workingRef! = ""
            visaApproved = 0
            visaDeclined = 0
            visaTotal = 0
            mcApproved = 0
            mcDeclined = 0
            mcTotal = 0
            amexApproved = 0
            amexDeclined = 0
            amexTotal = 0

            while 1

                log = 0

                if log1Opened then
                    log = log1
                else
                    if log2Opened then
                        log = log2
                    fi
                fi

                if log = 0 then break

                while 1
                    read(log,end=*break)entry$

                    currentEntry! = new StringTokenizer(entry$,"~")

                    while currentEntry!.hasMoreTokens()

                        token! = currentEntry!.nextToken()

                        rem ' uniqueID is always the first token in a row
                        if pos("uniqueID:"=token!) then
                            if workingRef! = "" then
                                workingRef! = token!
                                savedEntry$ = entry$
                            else
                                if workingRef! <> token! then
                                    rem ' change of working ref
                                    gosub acummulateValues
                                    entries!.addItem(savedEntry$)
                                    totalEntries = totalEntries + 1
                                    workingRef! = token!
                                    result$=""
                                    amount=0
                                    cardType$=""
                                    savedEntry$=entry$
                                else
                                    rem ' this is the second line for a given entry
                                    savedEntry$ =   savedEntry$ +   "~" +   entry$
                                fi
                            fi
                        else
                            if pos("result:"=token!) then
                                ppos = pos(":"=token!)
                                result$=token!.substring(ppos)
                            fi
                            if pos("amount:"=token!) then
                                ppos = pos(":"=token!)
                                amount = num(token!.substring(ppos))
                            fi
                            if pos("cardType:"=token!) then
                                ppos = pos(":"=token!)
                                cardType$ = token!.substring(ppos)
                            fi
                        fi
                    wend

                wend

                if log = log1 then
                    close(log1)
                    log1Opened = 0
                else
                    if log = log2 then
                        close(log2)
                        log2Opened = 0
                    fi
                fi

            wend
            gosub acummulateValues
            entries!.addItem(savedEntry$)
            totalEntries = totalEntries + 1
            gosub loadSummaryBoxes
            entryNumber = 1
            gosub loadEntryBrowser
        else
            gosub resetSummaryBoxes
        fi
    fi
fi

return
rem ' -----------------------------------------------------------------
rem ' updateStartTime
rem ' -----------------------------------------------------------------

updateStartTime:

if numOfDays!.getSelectedIndex() > 0 then
    endHourSelected = hour!.getSelectedIndex()
    endHour$ = hourSpinList!.get(endHourSelected)

    endMinuteSelected = minute!.getSelectedIndex()
    endMinute$ = minuteSpinList!.get(endMinuteSelected)

    begHour$=endHour$
    begMinute$=endMinute$

    begMinute$=str(num(begMinute$)+1:"00")
    if begMinute$="60" then
        begHour$=str(num(begHour$)+1:"00")
        begMinute$="00"
        if begHour$="24" then
            begHour$ = "00"
        fi
    fi
    begHour = num(begHour$)
    begMinute = num(begMinute$)
    startHour!.selectIndex(begHour)
    startMinute!.selectIndex(begMinute)
fi

return

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer (Window) WIN_CLOSE (X)
rem ' ---------------------------------------------------------------

W101_C0_WIN_CLOSE:
rem ' Window Closed
rem ' gb__event! = cast(BBjCloseEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__window! = gb__event!.getControl()

goto gb__eoj
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=100 month () EDIT_CHANGE (e)
rem ' ---------------------------------------------------------------

W101_C100_EDIT_CHANGE:
rem ' Text control was modified
rem ' gb__event! = cast(BBjEditModifyEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

ourWindow!.setCursor(3)
gosub loadAvailableDays
gosub summarizeDay
gosub convertReportParamToText
ourWindow!.setCursor(0)
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=102 year () EDIT_CHANGE (e)
rem ' ---------------------------------------------------------------

W101_C102_EDIT_CHANGE:
rem ' Text control was modified
rem ' gb__event! = cast(BBjEditModifyEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

ourWindow!.setCursor(3)
gosub loadAvailableDays
gosub summarizeDay
gosub convertReportParamToText
ourWindow!.setCursor(0)
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=104 availableLogs (List Button) LIST_SELECT (N2:19)
rem ' ---------------------------------------------------------------

W101_C104_LIST_SELECT:
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

ourWindow!.setCursor(3)
gosub summarizeDay
gosub convertReportParamToText
ourWindow!.setCursor(0)
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=131 browserNavigator (Navigator) NAV_FIRST (N1:113)
rem ' ---------------------------------------------------------------

W101_C131_NAV_FIRST:
rem ' Notify Event - Navigator - First Record [|<]
rem '
rem ' Retrieve the recordset associated with this navigator:
rem '
rem ' gb__navigator!=bbjapi().getSysGui().getLastEvent().getControl()
rem ' gb__recordset!=gb__navigator!.getTargetRecordSet(err=*return)
rem '
rem ' Retrieve the current record:
rem ' gb__recorddata!=gb__recordset!.getCurrentRecordData()
rem '
rem ' Update the current record:
rem ' gb__recordset!.update(gb__recorddata!)
rem '
rem ' Move the record pointer to the first record:
rem  ' gb__recordset!.first(err=*next)

entryNumber = 1
gosub loadEntryBrowser
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=131 browserNavigator (Navigator) NAV_PREVIOUS (N2:113)
rem ' ---------------------------------------------------------------

W101_C131_NAV_PREVIOUS:
rem ' Notify Event - Navigator - Previous Record [<]
rem '
rem ' gb__navigator!=bbjapi().getSysGui().getLastEvent().getControl()
rem ' gb__recordset!=gb__navigator!.getTargetRecordSet(err=*return)
rem '
rem ' Retrieve the current record:
rem ' gb__recorddata!=gb__recordset!.getCurrentRecordData()
rem '
rem ' Update the current record:
rem ' gb__recordset!.update(gb__recorddata!)
rem '
rem ' Move the record pointer to the first record:
rem ' gb__recordset!.previous(err=*next)

entryNumber = entryNumber - 1
if entryNumber < 1 then entryNumber = 1
gosub loadEntryBrowser
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=131 browserNavigator (Navigator) NAV_NEXT (N3:113)
rem ' ---------------------------------------------------------------

W101_C131_NAV_NEXT:
rem ' Notify Event - Navigator - Next Record [>]
rem '
rem ' gb__navigator!=bbjapi().getSysGui().getLastEvent().getControl()
rem ' gb__recordset!=gb__navigator!.getTargetRecordSet(err=*return)
rem '
rem ' Retrieve the current record:
rem ' gb__recorddata!=gb__recordset!.getCurrentRecordData()
rem '
rem ' Update the current record:
rem ' gb__recordset!.update(gb__recorddata!)
rem '
rem ' Move the record pointer to the next record:
rem ' gb__recordset!.next(err=*next)

entryNumber = entryNumber + 1
if entryNumber > totalEntries then entryNumber = totalEntries
gosub loadEntryBrowser
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=131 browserNavigator (Navigator) NAV_LAST (N4:113)
rem ' ---------------------------------------------------------------

W101_C131_NAV_LAST:
rem ' Notify Event - Navigator - Last Record [>|]
rem '
rem ' gb__navigator!=bbjapi().getSysGui().getLastEvent().getControl()
rem ' gb__recordset!=gb__navigator!.getTargetRecordSet(err=*return)
rem '
rem ' Retrieve the current record:
rem ' gb__recorddata!=gb__recordset!.getCurrentRecordData()
rem '
rem ' Update the current record:
rem ' gb__recordset!.update(gb__recorddata!)
rem '
rem ' Move the record pointer to the last record:
rem ' gb__recordset!.last(err=*next)

entryNumber = totalEntries
gosub loadEntryBrowser
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=141 Button (Push Button) PUSH_BUTTON (B)
rem ' ---------------------------------------------------------------

W101_C141_PUSH_BUTTON:
rem ' Button was pushed
rem ' gb__event! = cast(BBjButtonPushEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub convertReportParamToText
if availLogs!.getItemCount() > 0 then
    if numOfDays!.getSelectedIndex() = 1 and hour!.getSelectedIndex() = 23 and minute!.getSelectedIndex() = 59 and startHour!.getSelectedIndex() = 0 and startMinute!.getSelectedIndex() = 0 then
        gosub printReport
    else
        rem ' either a multi day report of an odd cutoff time
        gosub buildReportEntries
    fi
else
    msg$="You must select a log date before running the report"
    title$="Select Log"
    resp = msgbox(msg$,16,title$)
fi
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=142 numOfDays (List Button) LIST_SELECT (N2:19)
rem ' ---------------------------------------------------------------

W101_C142_LIST_SELECT:
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub convertReportParamToText
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=144 hour (List Button) LIST_SELECT (N2:19)
rem ' ---------------------------------------------------------------

W101_C144_LIST_SELECT:
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub updateStartTime
gosub convertReportParamToText
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=145 minute (List Button) LIST_SELECT (N2:19)
rem ' ---------------------------------------------------------------

W101_C145_LIST_SELECT:
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub updateStartTime
gosub convertReportParamToText
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=149 Button (Push Button) PUSH_BUTTON (B)
rem ' ---------------------------------------------------------------

W101_C149_PUSH_BUTTON:
rem ' Button was pushed
rem ' gb__event! = cast(BBjButtonPushEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub loadAvailableDays
gosub summarizeDay
gosub convertReportParamToText
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=150 startHour (List Button) LIST_SELECT (N2:19)
rem ' ---------------------------------------------------------------

W101_C150_LIST_SELECT:
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub convertReportParamToText
RETURN

rem ' ---------------------------------------------------------------
rem ' Win=101 ccLogViewer Ctl=151 startMinute (List Button) LIST_SELECT (N2:19)
rem ' ---------------------------------------------------------------

W101_C151_LIST_SELECT:
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub convertReportParamToText
RETURN


rem gb_std.cod - Put your standard subroutines/functions/etc. here.

END
