0010 REM "SYC - Format address block"
0020 REM "Program SYC.AX
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0045 REM "ADDRESS$ = Address string, W characters * LINES lines with zip"
0050 REM "           appended (in). WIDTH characters * LINES+1 lines (out)"
0055 REM "W        = Width of address line (input)"
0060 REM "LINES    = Number of desired lines in address block (input)"
0065 REM "ZIP      = Length of zip/postal code string (input)"
0070 REM "WIDTH    = Width of address line desired in output"
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER ADDRESS$,W,LINES,ZIP,WIDTH
0500 REM " --- Initializations"
0510 LET SIZE=WIDTH*(LINES+1),N=0,P=W*LINES,STATE$=""
0515 LET P=147; REM "TMS Address state position
0520 DIM BUFFER$(SIZE)
0600 LET POSTCODEPOS$="A",INTERNATIONAL=0,COUNTRY$=""
0610 LET COUNTRYKEY$=cvs(ADDRESS$((LINES-1)*W+1,15),3),X$=""
0620 LET COUNTRY_DEV=UNT; OPEN (COUNTRY_DEV,ERR=0700)"country.dat"
0630 READ (COUNTRY_DEV,KEY=COUNTRYKEY$,KNUM=0,ERR=*next)X$
0635 IF X$="" then 
0640   READ (COUNTRY_DEV,KEY=COUNTRYKEY$,KNUM=1,ERR=*next)
0645   READ (COUNTRY_DEV,err=*next)X$
0650   if pos(countrykey$=x$)<>3 then x$=""
0655 FI
0660 IF pos("US"=X$)<>1 and len(x$)>32 THEN
0670 LET INTERNATIONAL=1,POSTCODEPOS$=X$(33,1),COUNTRY$=cvs(X$(3,30),3)
0680 FI
0690 CLOSE (COUNTRY_DEV)
0700 LET ZIP$=ADDRESS$(W*LINES+1,ZIP),ZIP$=FNP$(ZIP$),Z=LEN(ZIP$)
0710 IF Z=9 AND INTERNATIONAL=0 THEN LET ZIP$=ZIP$(1,5)+"-"+ZIP$(6)
0900 REM " --- Push state/province back into address"
0910 LET STATE$=ADDRESS$(P,2),ADDRESS$(P,2)="  "
0920 IF STATE$="  " THEN GOTO 1000
0940 LET X=POS(" "<>ADDRESS$(1,P-1),-1)
0950 IF X>P-2 THEN LET X=P-2
0960 LET ADDRESS$(X+2,2)=STATE$
1000 REM 
1010 FOR X=1 TO LINES-1
1015 IF FNP$(ADDRESS$(W*X-W+1,W))="" THEN GOTO 1030
1020 LET N=N+1,BUFFER$(WIDTH*N-WIDTH+1,WIDTH)=ADDRESS$(W*X-W+1,W)
1030 NEXT X
1040 IF N=0 OR Z=0 THEN GOTO 1100
1050 LET X$=CVS(BUFFER$((N-1)*WIDTH+1,WIDTH),3)
1060 IF POSTCODEPOS$="A" THEN LET X$=X$+" "+ZIP$ ELSE LET X$=ZIP$+" "+X$
1070 IF LEN(X$)<=WIDTH THEN LET X$=X$+FILL(WIDTH),BUFFER$((N-1)*WIDTH+1,WIDTH)=X$(1,WIDTH)
1100 REM 
1110 LET X=N*WIDTH
1120 IF X+LEN(COUNTRY$)<=SIZE THEN LET BUFFER$(X+1,LEN(COUNTRY$))=COUNTRY$
4000 REM " --- All done"
4010 LET ADDRESS$=BUFFER$
4090 GOTO 9900
8000 REM " --- Functions"
8085 DEF FNZ$(Q$)=FILL(10,CVS(Q$(1,3)+FILL(POS("9"<Q$(1,5))>0)+Q$(4,2)+FILL(ABS(POS("A">=Q$(1,6))>0)-POS("0">Q$(6,4))>0,"-")+Q$(6,4)+FILL(10),16))
8090 DEF FNP$(Q$)=CVS(Q$,2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to calling program"
9950 EXIT 
9999 END
