0010 REM "OPU - Sales Register Update (Inventory And General Ledger)"
0020 REM "Program OPU.CB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.4 - 15Dec97 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "10Jul96 JAL: Must update IVT-01/02/03 FOR dropships (2410,2520)"
0032 REM "25Sep96 JAL: Inventory quantities may be improperly updated for lot/serial non-inventoried items when NO lot/serial numbers are entered (2420-2430,2480,2510-2540,2605-2613,6000-6090)"
0033 REM "19Sep96 WGH: Save correct Total Cost Amount in ART-05 (345,3917-3918)"
0034 REM "25Sep96 JJD: Inventory quantities improperly updated when item is not L/S (2430)"
0035 REM "09Jan97 JJD: Pass invoice line # to IVC.UA for IVT-01/04 (2090,6020)"
0036 REM "28Apr97 WGH: Uncommit quantity not shipped or backordered (2905,6200-6290)"
0037 REM "23Jun97 JWK: Skips ARE-13 when G/L turned off (1610)
0038 REM "MAS * DCF * WA# 205
0040 REM 
0060 REM **BASIS mods @10420,10422**
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists"
0205 APM12A: IOLIST X0$,X1$(1),X0
0215 ARE04A: IOLIST ARE04_0$
0230 ARE20A: IOLIST H0$,H1$,H[ALL]
0240 ARE23A: IOLIST C0$,C1$,C2$,C[ALL]
0250 ARM01A: IOLIST B0$(1),B1$(1)
0260 ARM02A: IOLIST X0$,X1$,X[ALL]
0270 ARM06A: IOLIST D0$,D1$(1),D[ALL]
0280 ARM10A: IOLIST U0$(1),U[ALL]
0285 ARM10B: IOLIST X0$(1),X0,X1
0290 ARM10C: IOLIST *,X$(1)
0295 ARM10D: IOLIST *,X$(1)
0300 ARM10E: IOLIST Y0$(1),Y1$(1)
0310 ARS10C: IOLIST S0$,S[ALL]
0315 ARS10S: IOLIST X0$,X[ALL]
0320 ART01A: IOLIST X0$(1),X[ALL]
0330 ART02A: IOLIST XK$,X2,X3,X4,X5
0345 ART05A: IOLIST ART05_0$,comm_percent,comm_amt,total_sales,total_cost
0350 ART11A: IOLIST X0$,X1$(1),X[ALL]
0360 ART23A: IOLIST C0$,C1$,C2$,C[ALL]
0370 IVM01A: IOLIST X0$,X1$,X2$,X3$,X4$,X5$,X6$(1)
0380 IVM02A: IOLIST X0$,X1$
0385 call "templates.pgm::CSM10"
0390 call "templates.pgm::SMC01"
0395 call "templates.pgm::SMC02"
0410 REM " --- Initializations"
0420 DIM C[2],T[15],X1$(20)
0430 TODAY=JUL(0,0,0)
0440 GOSUB 10000; REM WA# 205
0450 REM "Make hash table for totaling GL disbursements
0470 glTable!=new java.util.Hashtable()
0490 dist_list$="",TODAY_DT$=FNDATE$(TODAY)
0500 READ (SMC02_DEV,KEY="",knum=0,DOM=*NEXT)
0510 GOSUB UPD_SAM_DISB
0600 REM " call program to send e-mails for expired Developer Kits
0700 REM " --- Background"
0710 PRINT @(40,5),"2 - Inventory And General Ledger",'CL',
1000 REM " --- Position file"
1090 READ (ARE04_DEV,KEY=N0$+"I",DOM=1100)
1100 REM " --- Read next invoice header"
1110 LET K2$="",K3$="",K4$=""
1120 LET K0$=KEY(ARE04_DEV,END=4000)
1130 READ (ARE04_DEV)
1135 IF K0$(1,3)<>N0$+"I" THEN GOTO 4000
1140 EXTRACT record(ARE03_DEV,KEY=K0$(1,2)+K0$(4)+"000",DOM=1100)ARE03$
1145 IF Are03.ord_prt_flag$<>"Y" or pos(Are03$.ord_lock$="12")=0 THEN GOTO 1100
1150 IF are03.cash_sale$<>"Y" THEN GOTO 1170
1155 DIM H0$(56),H1$(30),H[1]
1160 FIND (ARE20_DEV,KEY=are03$(1,17),DOM=1170)IOL=ARE20A
1170 IF FNP$(are03.invoice_date$)="" THEN LET are03.invoice_date$=F0$(7,3)
1175 LET are03.ord_lock$="2",SAM_RENEW$=CVS(are03.ar_po_number$,7),are03$=field(are03$)
1180 WRITE record(ARE03_DEV,KEY=Are03$(1,20))ARE03$
1185 LET T9B=0,T9F=0,T0=0,T1=0,T2=0,T8=0,T8C=0,NEWSHPDT$="",commission$=""
1190 IF are03.invoice_type$="V" THEN GOTO 3900
1195 IF are03.ord_inv_flag$<>"I" THEN GOTO 3900
1200 REM " --- Display record"
1210 PRINT @(COLUMN,11),FNF$(are03.customer_nbr$,M0$)," ",are03.order_number$,
1220 if pos("SAM RENEW"=sam_renew$) or pos("CREDIT SAM"=sam_renew$) then sam_renew$="Y" else sam_renew$="N"
1300 REM " --- Retrieve Distribution Code"
1310 DIM Z0$(10*G[4])
1320 LET D$=are03.dist_code$
1330 GOSUB 6100
1340 LET Z0$(1)=X$,Z9$=Z0$
1400 REM " --- Retrieve Cash Receipts Code"
1410 IF are03.cash_sale$<>"Y" THEN GOTO 1500
1420 DIM X$(10),Z6$(10*G[4],"0")
1430 FIND (ARM10_DEV,KEY=N0$+"C"+H0$(21,3),DOM=1500)IOL=ARM10C
1440 LET Z0$(G[4]+1,G[4])=X$(1,10),Z6$(1)=Z0$,X$=Z9$
1500 REM " --- Retrieve Customer"
1510 DIM B0$(8),B1$(30)
1520 LET B0$(1)=N0$+are03.customer_nbr$,B1$(1)="Unknown Customer"
1530 FIND (ARM01_DEV,KEY=B0$,DOM=1540)IOL=ARM01A
1540 IF are03.cash_sale$="Y" THEN IF FNP$(H1$)<>"" THEN LET B1$(1)=H1$
1600 REM " --- Initialize G/L Posting Fields"
1610 IF GL$<>"Y" THEN GOTO 1900
1620 LET REF1$=FNF$(are03.customer_nbr$,M0$),REF2$=are03.ar_inv_nbr$,MEMO$=B1$,WHEN$=are03.invoice_date$
1900 REM " --- Position Invoice Detail File"
1920 READ (ARE13_DEV,KEY=K0$(1,2)+K0$(4,15),DOM=2000)
2000 REM " --- Read next line item"
2010 LET K1$=KEY(ARE13_DEV,END=3000)
2020 IF K1$(1,17)<>K0$(1,2)+K0$(4,15) THEN GOTO 3000
2030 READ record(ARE13_DEV,key=k1$)ARE13$
2040 sales_2=0,unearned_2=0
2070 LET Z0$(1)=Z9$,ACCT$="",SAM_FACTOR=1,remaining=1,ic_renew$=are13.sam_renew$
2080 IF are03.cash_sale$="Y" THEN LET Z0$(1)=Z6$
2085 ITEM$=are13.item_number$
2090 LET LINE_NBR$=are13.line_number$,ref3$=line_nbr$
2100 REM " --- Retrieve Order Line Code"
2110 IF are13.line_code$=K2$ THEN GOTO 2190
2115 LET K2$=are13.line_code$
2120 DIM Y0$(32),Y1$(G[4]+2)
2130 LET Y1$(1,G[4])=FILL(G[4],"0")
2140 FIND (ARM10_DEV,KEY=N0$+"E"+are13.line_code$,DOM=2150)IOL=ARM10E
2150 commission$=y0$(27,1)
2190 IF are13.commit_flag$="N" THEN GOTO 2900
2200 REM " --- Retrieve Inventory Item"
2210 PRECISION I[2]
2220 IF POS(Y0$(25,1)="SPN")=0 THEN GOTO 2700
2225 dist$=cvs(are13.dist_code$,3);GOSUB GET_CONFIG;D$=DIST$
2230 DIM X6$(5*G[4]),x5$(2)
2240 ivm01_itm$=item$;gosub ivm01_itm;if ivmok=0 then goto 2250
2245 LET IV_DESC$=X1$,commission$=x5$(2,1)
2250 IF Y0$(25,1)="N" THEN GOTO 2300
2300 REM " --- Sales Account"
2310 IF R9$="N" AND Y0$(25,1)<>"P" AND Y0$(27,1)<>"Y" THEN LET D$=are03.dist_code$; GOTO 2320
2315 IF POS(Y0$(25,1)="PN")>0 OR Y0$(27,1)="Y" THEN LET D$=Y1$(11,2)
2320 GOSUB 6100
2325 IF STATUS<>0 THEN GOTO 2340
2330 LET Z0$(2*G[4]+1,G[4])=X$(2*G[4]+1,G[4])
2335 GOTO 2350
2340 GOSUB 6150
2350 REM " --- Inventory & COGS Accounts"
2360 IF R9$="N" AND Y0$(25,1)="N" AND Y0$(27,1)<>"Y" THEN GOSUB 6100; IF STATUS<>0 THEN GOSUB 6150; REM "Order Line Item
2365 Z0$(5*G[4]+1,G[4])=X$(5*G[4]+1,G[4])
2370 LET Z0$(6*G[4]+1,2*G[4])=X$(6*G[4]+1,2*G[4]); REM "Invoice Ribbon, or Inventory Warehouse Record, or Order Line Item
2380 IF R9$="N" AND Y0$(25,1)="S" AND Y0$(27,1)<>"Y" THEN LET Z0$(6*G[4]+1,2*G[4])=X6$(1,2*G[4]); REM "Inventory Item Master File
2390 LET ACCOUNT$=Z0$(6*G[4]+1,G[4])
2400 REM " --- Serialized/Lotted Items"
2410 IF Y0$(25,1)="N" THEN GOTO 2600; REM "Non-Stock?
2420 LET LS_NBR$="",LS_QNTY=0,COST=are13.unit_cost,QNTY=are13.qty_shipped
2425 GOSUB Update_Serial_Numbers
2430 IF LS$<>"Y" OR X2$(19,1)<>"Y" THEN GOTO 2600
2440 READ (ARE23_DEV,KEY=are13$(1,20),DOM=2450)
2450 LET ARE23_K$=KEY(ARE23_DEV,END=2600)
2460 IF POS(are13$(1,20)=ARE23_K$)<>1 THEN GOTO 2600
2470 READ (ARE23_DEV)IOL=ARE23A
2480 LET LS_NBR$=C1$,COST=C[2],QNTY=C[1],LS_QNTY=LS_QNTY+QNTY
2500 REM " --- Inventory Item Update"
2510 GOSUB 6000
2550 REM " --- Lot/Serial Invoice History"
2555 IF LS$<>"Y" OR X2$(19,1)<>"Y" THEN GOTO 2600
2560 LET C0$=ARE23_K$(1,10)+are03.ar_inv_nbr$+ARE23_K$(18,6)
2570 IF IH$="Y" THEN WRITE (ART23_DEV,KEY=C0$)IOL=ART23A
2580 REMOVE (ARE23_DEV,KEY=ARE23_K$)
2590 GOTO 2450
2600 REM " --- Post G/L Cost"
2605 IF LS_QNTY=are13.qty_shipped THEN GOTO 2615
2610 LET QNTY=are13.qty_shipped-LS_QNTY,COST=are13.unit_cost,LS_NBR$=""
2613 GOSUB 6000
2615 PRECISION 2
2620 LET AMOUNT=(-are13.unit_cost)*are13.qty_shipped,UNITS=-are13.qty_shipped
2630 IF are03.cash_sale$="Y" THEN LET REF3$=line_nbr$+" "+"(Cash)"
2640 GOSUB GLPOST
2650 LET ACCOUNT$=Z0$(7*G[4]+1,G[4]),AMOUNT=-AMOUNT,UNITS=-UNITS
2660 GOSUB GLPOST
2700 REM " --- G/L Sales Distribution"
2705 SALES=are13.ext_price*SAM_FACTOR,sales=sales/remaining,UNEARNED_AMT=are13.ext_price-SALES
2710 if sales_2+unearned_2 then SALES=sales_2*-1,UNEARNED_AMT=unearned_2*-1
2720 IF POS(Y0$(25,1)="M")<>0 THEN GOTO 2900
2730 IF Y1$(1,G[4])<>FILL(G[4],"0") AND Y0$(25,1)="O" THEN LET Z0$(2*G[4]+1,G[4])=Y1$(1,G[4])
2740 IF POS(" "<>are13.gl_acct$)>0 THEN LET Z0$(2*G[4]+1,G[4])=are13.gl_acct$
2750 LET ACCOUNT$=Z0$(1,G[4]),AMOUNT=SALES+UNEARNED_AMT,UNITS=0
2760 IF are03.cash_sale$="Y" THEN LET ACCOUNT$=Z0$(G[4]+1,G[4])
2770 GOSUB GLPOST
2775 IF SALES=0 THEN GOTO 2792
2780 LET ACCOUNT$=Z0$(2*G[4]+1,G[4]),AMOUNT=-SALES,UNITS=-are13.qty_shipped
2790 GOSUB GLPOST
2792 IF UNEARNED_AMT=0 THEN GOTO 2800
2794 LET ACCOUNT$=Z0$(5*G[4]+1,G[4]),AMOUNT=-UNEARNED_AMT,UNITS=-are13.qty_shipped
2796 GOSUB GLPOST
2798 GOSUB WRITE_SMC02
2800 LET T0=T0+are13.ext_price,T1=T1+are13.unit_cost*are13.qty_shipped
2810 if commission$="Y" then t2=t2+sales
2830 IF are03.invoice_date$>G9$ THEN GOTO 2870
2840 IF are13.ext_price>0 THEN LET T[0]=T[0]+are13.ext_price
2850 IF are13.ext_price<0 THEN LET T[1]=T[1]+are13.ext_price
2860 if commission$="Y" then LET T[4]=T[4]+sales
2865 GOTO 2900
2870 IF are13.ext_price>0 THEN LET T[8]=T[8]+are13.ext_price
2880 IF are13.ext_price<0 THEN LET T[9]=T[9]+are13.ext_price
2890 if commission$="Y" then LET T[12]=T[12]+sales
2900 REM " --- Remove/Update line item"
2905 GOSUB 6200
2910 IF are13.qty_backord<>0 THEN LET T9B=T9B+1
2912 IF are13.commit_flag$="N" THEN LET T9F=T9F+1; GOTO 2930
2914 IF P3$(15,1)="Y" AND are03.customer_nbr$=P3$(16,6) THEN GOTO 2960
2915 IF are13.qty_backord=0 THEN GOTO 2960; REM "No B/O
2918 LET are13.qty_ordered=are13.qty_backord,are13.qty_backord=0
2920 IF Y0$(25,1)="O" AND are13.ext_price=0 AND are13.unit_price<>0 THEN LET are13.ext_price=are13.unit_price,are13.unit_price=0; GOTO 2930
2925 LET are13.qty_shipped=are13.qty_ordered,are13.ext_price=are13.qty_ordered*are13.unit_price
2930 LET are13.pick_flag$="N"
2932 LET T8=T8+are13.ext_price,T8C=T8C+are13.qty_ordered*are13.unit_cost
2934 IF are13.est_shp_date$<NEWSHPDT$ OR NEWSHPDT$="" THEN LET NEWSHPDT$=are13.est_shp_date$
2936 PRECISION I[2]
2940 are13$=field(are13$);WRITE record(ARE13_DEV,KEY=K1$)ARE13$
2945 PRECISION 2
2950 GOTO 2000
2960 REMOVE (ARE13_DEV,KEY=K1$,DOM=2961); REM WA# 205
2961 REMOVE (ARE73_DEV,KEY=K1$,DOM=2962); REM WA# 205
2965 REMOVE (ARE07_DEV,KEY=N0$+are13.warehouse_id$+item$+are13.ar_type$+are13$(11,10)+are13.customer_nbr$,DOM=2970)
2970 READ (ARE13_DEV,KEY=K1$,DOM=2980)
2990 GOTO 2000
3000 REM " --- Generate AR Open Invoice Records"
3010 IF T0<>are03.total_sales THEN LET are03.total_sales=T0
3020 IF are03.cash_sale$="Y" THEN GOTO 3400
3030 DIM X0$(50),X[1]
3040 LET X0$(1)=Are03$(1,10)+are03.ar_inv_nbr$+"00"
3050 FIND (ART01_DEV,KEY=X0$(1,19),DOM=3100)IOL=ART01A
3060 GOTO 3200
3100 REM " --- AR Open Invoice Header"
3110 LET X0$(20)=are03.dist_code$+are03.terms_code$+are03.invoice_date$,X0$(33,1)=are03.invoice_type$,X0$(41,10)=are03.ar_job_nbr$
3115 DIM U0$(30),U[2]
3120 FIND (ARM10_DEV,KEY=N0$+"A"+are03.terms_code$,DOM=3125)IOL=ARM10A
3125 LET V=U[1]
3130 CALL "SYC.CD",U0$(26,1),X0$(24,3),V,V$,STATUS
3140 LET X0$(27,3)=V$,V=U[2]
3150 CALL "SYC.CD",U0$(26,1),X0$(24,3),V,V$,STATUS
3160 LET X0$(30,3)=V$
3170 LET X[0]=T0+are03.tax_amount+are03.freight_amt-are03.discount_amt,X[1]=(T0-are03.discount_amt)*U[0]/100
3180 WRITE (ART01_DEV,KEY=X0$(1,19))IOL=ART01A
3190 GOTO 3500
3200 REM " --- AR Open Invoice Detail Summary Record"
3210 DIM X1$(11),X[1]
3220 LET X0$=X0$(1,17)+"99"
3230 READ (ART11_DEV,KEY=X0$,DOM=3300)
3240 EXTRACT (ART11_DEV,KEY=X0$)IOL=ART11A
3250 IF X1$(1,1)="C" THEN LET X1$(1,1)="A"
3260 LET X1$(2)=are03.invoice_date$+are03.ar_inv_nbr$
3270 LET X[0]=X[0]+T0+are03.tax_amount+are03.freight_amt-are03.discount_amt
3280 WRITE (ART11_DEV,KEY=X0$)IOL=ART11A
3290 GOTO 3500
3300 REM " --- AR Open Invoice Detail"
3310 LET X0$=X0$(1,17)+"01"
3320 LET K$=KEYP(ART11_DEV,END=3360)
3330 IF K$(1,17)<>X0$(1,17) THEN GOTO 3360
3340 LET X0$(18,2)=STR(NUM(K$(18,2))+1:"00")
3360 LET X1$(1)="I"+are03.invoice_date$+are03.ar_inv_nbr$
3370 LET X[0]=T0+are03.tax_amount+are03.freight_amt-are03.discount_amt
3380 WRITE (ART11_DEV,KEY=X0$)IOL=ART11A
3390 GOTO 3500
3400 REM " --- Bank Reconciliation"
3410 IF BR$<>"Y" THEN GOTO 3500
3440 DIM X1$(40)
3450 LET X0$=N0$+Z6$(G[4]+1,G[4])+FNYY_YY21$(FNM$(FNC$(are03.invoice_date$)))+"S"
3455 LET X1$(1)="DO"+FNYY_YY21$(FNM$(FNC$(are03.invoice_date$)))+"Sales Register Update",X0=0
3460 FIND (APM12_DEV,KEY=X0$,DOM=3470)IOL=APM12A
3470 LET X0=X0+T0+are03.tax_amount+are03.freight_amt-are03.discount_amt
3475 WRITE (APM12_DEV,KEY=X0$)IOL=APM12A
3500 REM " --- Update ARM-02 Customer Summary"
3510 DIM X[10]
3520 EXTRACT (ARM02_DEV,KEY=N0$+are03.customer_nbr$+are03.ar_type$,DOM=3600)IOL=ARM02A
3530 LET X1$(14,3)=are03.invoice_date$
3540 IF are03.cash_sale$<>"Y" THEN LET X[1]=X[1]+T0+are03.tax_amount+are03.freight_amt-are03.discount_amt
3542 LET Q9=X[0]+X[1]+X[2]+X[3]+X[4]+X[5]; REM "Current Credit
3545 WRITE (ARM02_DEV,KEY=X0$)IOL=ARM02A
3549 GOTO 3600
3550 REM " --- Update MTD Cash Totals"
3555 IF are03.cash_sale$<>"Y" THEN GOTO 3600
3560 DIM S[6]
3565 LET S0$=N0$+"C"
3570 EXTRACT (ARS10_DEV,KEY=S0$,DOM=3580)IOL=ARS10C
3580 IF are03.invoice_date$<=G9$ THEN LET S[0]=S[0]+H[0]
3585 IF are03.invoice_date$>G9$ THEN LET S[3]=S[3]+H[0]
3590 WRITE (ARS10_DEV,KEY=S0$)IOL=ARS10C
3600 REM " --- Accoumulate MTD Sales"
3610 IF are03.invoice_date$<=G9$ THEN LET T[2]=T[2]+are03.tax_amount,T[3]=T[3]+are03.freight_amt,T[5]=T[5]+are03.discount_amt
3620 IF are03.invoice_date$>G9$ THEN LET T[10]=T[10]+are03.tax_amount,T[11]=T[11]+are03.freight_amt,T[13]=T[13]+are03.discount_amt
3630 LET X1$=""
3640 DIM X0$(46+G[4]),X[10]
3700 REM " --- Post Tax, Freight And Discount to G/L"
3703 IF GL$<>"Y" THEN GOTO 3770
3705 LET WHEN$=are03.invoice_date$,REF3$="",UNITS=0
3710 IF are03.cash_sale$="Y" THEN GOTO 3730
3720 LET ACCOUNT$=Z0$(1,G[4]),AMOUNT=are03.tax_amount+are03.freight_amt-are03.discount_amt
3725 GOSUB GLPOST
3727 GOTO 3740
3730 LET ACCOUNT$=Z0$(G[4]+1,G[4]),AMOUNT=are03.tax_amount+are03.freight_amt-are03.discount_amt,REF3$="Cash Sale"
3735 GOSUB GLPOST
3740 LET ACCOUNT$=Z0$(3*G[4]+1,G[4]),AMOUNT=are03.discount_amt
3750 GOSUB GLPOST
3760 LET ACCOUNT$=Z0$(4*G[4]+1,G[4]),AMOUNT=-are03.freight_amt
3765 GOSUB GLPOST
3770 REM " --- Write Taxes, Sales Tax GL Account Update"
3775 GOSUB 6700
3800 REM " --- Update ARM-06 Payment Summary"
3810 DIM D0$(8),D1$(16),D[21]
3820 LET D0$=N0$+are03.customer_nbr$
3830 FIND (ARM06_DEV,KEY=D0$,DOM=3835)IOL=ARM06A
3835 LET D0$=N0$+are03.customer_nbr$,D1$(1,3)=are03.invoice_date$
3840 IF are03.invoice_date$>G9$ THEN GOTO 3870
3845 LET D[0]=D[0]+T0,D[3]=D[3]+T2,D[1]=D[1]+T0,D[4]=D[4]+T2
3850 IF D[18]<Q9 THEN LET D[18]=Q9; REM "MTD High Credit
3855 IF D[19]<Q9 THEN LET D[19]=Q9; REM "YTD High Credit
3860 GOTO 3890
3870 LET D[8]=D[8]+T0,D[9]=D[9]+T2
3880 IF D[21]<Q9 THEN LET D[21]=Q9
3890 WRITE (ARM06_DEV,KEY=D0$)IOL=ARM06A
3900 REM " --- Remove/Rewrite Header"
3905 REMOVE (ARE04_DEV,KEY=K0$,DOM=3910)
3910 LET art03$=field(are03$),art03.order_number$=are03.order_number$,art03.ar_inv_nbr$=are03.ar_inv_nbr$,art03.total_sales=T0,art03.total_cost=T1
3915 art03$=field(art03$);WRITE record(ART03_DEV,KEY=art03$(1,20))ART03$
3917 LET ART05_0$=art03$(1,4)+art03.slspsn_code$+art03.ar_inv_nbr$+art03.customer_nbr$+art03.invoice_type$+art03.invoice_date$,comm_percent=art03.comm_percent,comm_amt=art03.comm_amt,total_sales=art03.total_sales,total_cost=art03.total_cost
3918 WRITE (ART05_DEV,KEY=ART05_0$(1,14))IOL=ART05A
3920 IF are03.invoice_type$="V" THEN LET T9B=0,T9F=0
3925 IF (T9B=0 AND T9F=0) OR are03.customer_nbr$=P3$(16,6) THEN GOTO 3970
3930 LET are03.ord_inv_flag$="O",are03.invoice_date$="",are03.ar_inv_nbr$="",are03.freight_amt=0,Are03.ord_prt_flag$="N",are03.ord_lock$="N",are03.tax_amount=0,are03.freight_amt=0,are03.discount_amt=0,are03.comm_percent=0,are03.taxable_amt=0,are03.comm_amt=0,are03.total_sales=T8,are03.total_cost=T8C
3935 IF T9B>0 THEN LET Are03.backord_flag$="B" ELSE LET Are03.backord_flag$=""; REM "Are there B/O items?
3940 IF NEWSHPDT$<>"" THEN LET are03.ar_ship_date$=NEWSHPDT$
3945 are03$=field(are03$);WRITE record(ARE03_DEV,KEY=Are03$(1,20))ARE03$
3950 LET ARE04_0$=are03.firm_id$+"O"+Are03$(3,15)
3955 WRITE (ARE04_DEV,KEY=ARE04_0$)IOL=ARE04A
3960 READ (ARE04_DEV,KEY=K0$,DOM=3965)
3965 GOTO 3985
3970 REMOVE (ARE03_DEV,KEY=K0$(1,2)+K0$(4,15)+"000",DOM=3975)
3975 REMOVE (ARE33_DEV,KEY=K0$(1,2)+K0$(6,13),DOM=3980)
3980 REMOVE (ARE43_DEV,KEY=K0$(1,2)+K0$(4,2)+K0$(12,7)+K0$(6,6),DOM=3985)
3985 IF are03.cash_sale$="Y" THEN REMOVE (ARE20_DEV,KEY=Are03$(1,17),DOM=3990)
3990 GOTO 1100
4000 REM " --- End"
4010 DIM X[15]
4015 LET X0$=N0$+"S"
4020 EXTRACT (ARS10_DEV,KEY=X0$,DOM=4030)IOL=ARS10S
4030 FOR X=0 TO 15
4040 LET X[X]=X[X]+T[X]
4050 NEXT X
4060 WRITE (ARS10_DEV,KEY=X0$)IOL=ARS10S
4080 IF GL$="Y" THEN CALL "GLC.CA",STATUS
4090 GOTO 9900
6000 REM " --- Inventory Item Update"
6010 LET IV_INFO$[1]=are13.warehouse_id$,IV_INFO$[2]=ivm01_itm$,IV_INFO$[3]=LS_NBR$
6020 LET IV_REFS$[0]=are03.invoice_date$,IV_REFS$[1]=are03.customer_nbr$,IV_REFS$[2]=are03.order_number$,IV_REFS$[3]=are03.ar_inv_nbr$,IV_REFS$[5]=LINE_NBR$,IV_REFS$[6]=are13.line_code$,IV_REFS$[7]=ACCOUNT$,IV_REFS$[12]=Y0$(27,1)
6030 LET IV_REFS[0]=-QNTY,IV_REFS[1]=COST,IV_REFS[2]=are13.unit_price
6040 CALL "IVC.UA","OP",IV_FILES[ALL],IV_INFO[ALL],IV_PARAMS$[ALL],IV_INFO$[ALL],IV_REFS$[ALL],IV_REFS[ALL],IV_STATUS
6090 RETURN
6100 REM " --- Retrieve Distribution Code"
6110 IF D$=K3$ THEN GOTO 6135
6115 LET K3$=D$,STATUS=1
6120 DIM X$(10*G[4])
6130 FIND (ARM10_DEV,KEY=N0$+"D"+K3$,DOM=6140)IOL=ARM10D
6135 LET STATUS=0
6140 RETURN
6150 REM " --- Missing Distribution Code"
6155 DIM MESSAGE$[1]
6160 LET MESSAGE$[0]="Missing Distribution Code "+D$+" For Customer "+FNF$(are03.customer_nbr$,M0$)
6170 LET MESSAGE$[1]="Order "+are03.order_number$+" - Line "+line_nbr$+" (<Enter>=Continue)"
6180 CALL "SYC.XA",2,MESSAGE$[ALL],1,22,-1,V$,V3
6190 RETURN
6200 REM " --- Uncommit Quantity Not Shipped Or Backordered"
6210 IF POS(Y0$(25,1)="SP")=0 THEN GOTO 6290; REM "Line type can't be committed
6220 IF are13.commit_flag$="N" THEN GOTO 6290; REM "Isn't committed now
6230 IF are13.qty_ordered-are13.qty_backord-are13.qty_shipped<=0 THEN GOTO 6290; REM "Nothing left to uncommit
6250 REM "ARE-23 lot/serial entries are always shipped
6260 LET IV_INFO$[1]=are13.warehouse_id$,IV_INFO$[2]=item$,IV_INFO$[3]=""
6270 LET IV_REFS[0]=are13.qty_ordered-are13.qty_backord-are13.qty_shipped
6280 CALL "IVC.UA","UC",IV_FILES[ALL],IV_INFO[ALL],IV_PARAMS$[ALL],IV_INFO$[ALL],IV_REFS$[ALL],IV_REFS[ALL],IV_STATUS
6290 RETURN
6600 REM " --- Update Sales Tax History"
6605 LET X2=0,X3=0,X4=0,X5=0
6610 FIND (ART02_DEV,KEY=X$,DOM=6620)IOL=ART02A
6620 LET XK$=X$,X2=X2+are03.taxable_amt,X3=X3+X,X4=X4+T0+are03.freight_amt-are03.discount_amt
6630 IF are03.taxable_amt<0 THEN LET X5=X5+are03.taxable_amt
6640 WRITE (ART02_DEV,KEY=X$)IOL=ART02A
6690 RETURN
6700 REM " --- Calculate and store taxes"
6705 PRECISION 4
6710 DIM X0$(60),TAX$(60)
6720 LET X$=N0$+are03.tax_code$+FNYY_YY21$(FNA$(are03$(24,1),are03.invoice_date$))+FNA$(are03$(25,1),are03.invoice_date$)
6725 LET X0=0,X1=0,X=are03.tax_amount,Y=0
6730 FIND (ARM10_DEV,KEY=N0$+"B"+are03.tax_code$,DOM=6855)IOL=ARM10B
6735 LET TAX$(1)=X0$,X=X0*are03.taxable_amt/100
6740 PRECISION 2
6745 LET X=X*1
6750 IF X1<>0 AND ABS(X)>X1 THEN LET X=X1*SGN(X)
6752 LET Y=X
6754 GOSUB 6600
6760 LET ACCOUNT$=TAX$(46,G[4]),AMOUNT=-X,UNITS=0
6765 GOSUB GLPOST
6770 FOR X9=1 TO 10
6775 PRECISION 4
6780 LET X1$=TAX$(26+2*(X9-1),2)
6785 IF FNP$(X1$)="" THEN GOTO 6850
6790 DIM X0$(60)
6795 LET X$(3,2)=X1$,X0=0,X1=0,X=0
6800 FIND (ARM10_DEV,KEY=N0$+"B"+X1$,DOM=6850)IOL=ARM10B
6805 LET X=X0*are03.taxable_amt/100
6810 PRECISION 2
6820 LET X=X*1
6822 IF X1<>0 AND ABS(X)>X1 THEN LET X=X1*SGN(X)
6824 LET Y=Y+X
6830 GOSUB 6600
6840 LET ACCOUNT$=X0$(46,G[4]),AMOUNT=-X,UNITS=0
6845 GOSUB GLPOST
6850 NEXT X9
6855 PRECISION 2
6860 IF are03.tax_amount=Y THEN GOTO 6890
6865 LET X=are03.tax_amount-Y,Y0=T0,Y1=are03.freight_amt,Y2=are03.discount_amt,Y4=are03.taxable_amt,T0=0,are03.freight_amt=0,are03.discount_amt=0,are03.taxable_amt=0
6870 GOSUB 6600
6875 LET T0=Y0,are03.freight_amt=Y1,are03.discount_amt=Y2,are03.taxable_amt=Y4,Y0=0,Y1=0,Y2=0,Y4=0
6880 LET ACCOUNT$=TAX$(46,G[4]),AMOUNT=-X,UNITS=0
6885 GOSUB GLPOST
6890 PRECISION I[2]
6895 RETURN
6900 REM " --- Standard G/L Posting Routine"
6910 GLPOST: 
6920 IF GL$<>"Y" or amount=0 THEN GOTO 6990
6950 CALL "GLC.AA",GLM01_DEV,GLT04_DEV,GLT05_DEV,ACCOUNT$,WHEN$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8060 DEF FNM$(Q$)=Q$(5,2)+Q$(1,4)
8085 DEF FNP$(Q$)=CVS(Q$,2)
8090 def fndate$(julian)=chr(asc(date(julian:"%Yp"))+32)+chr(asc(date(julian:"%Mp"))+32)+chr(asc(date(julian:"%Dp"))+32)
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9900 rem 'RUN "SYS.AA"
9910 run "credit_memo_apply.pgm"
9999 END
10000 REM " --- Iolists - WA# 205
10010 call "templates.pgm::SNM01"
10015 call "templates.pgm::SNT01"
10020 SNT02A: IOLIST ZZ0$,ZZ1$
10025 SNT03A: IOLIST ZW0$,ZW1$,ZW2$,ZW[ALL]
10045 ARE93: IOLIST ARE93_0$,ARE93_1$,ARE93[ALL]
10060 DIM ZW[1],ARE93[1]
10080 call "templates.pgm::SNM02"
10090 RETURN
10200 Update_Serial_Numbers:
10230 READ (ARE83_DEV,KEY=are13$(1,20),DOM=next_are83)
10235 next_are83: 
10240 LET ARE83_K$=KEY(ARE83_DEV,END=are83_done)
10250 IF POS(are13$(1,20)=ARE83_K$)<>1 THEN GOTO are83_done
10260 READ record(ARE83_DEV,KEY=ARE83_K$)ARE83$
10270 if are83.snhist_flag$<>"Y" then
10275 rem 'This should only get called once, if at all here- it processes the entire order, not just one are83 record
10280 call "BSN.20",are03.firm_id$,are03.customer_nbr$,are03.order_number$,snm01_dev,snm02_dev,snt01_dev,snt03_dev,are03_dev,are13_dev,are73_dev,are83_dev,ivm01_dev,csm03_dev,smc01_dev
10290 READ record(ARE83_DEV,KEY=ARE83_K$)ARE83$
10300 if are83.snhist_flag$<>"Y" then print @(COLUMN,18),"Serial Number ",are83.serial_nbr$," update failed";escape
10400 fi
10600 LET CONTRACT$=CVS(are83.contract$,3)
10610 IF CONTRACT$<>"" THEN GOSUB UPD_CONTRACT_INFO
10800 READ (ARE93_DEV,KEY=ARE83_K$(1,20),DOM=*next)
10810 while 1
10820   READ (ARE93_DEV,END=*break)IOL=ARE93
10830   IF POS(ARE83_K$(1,20)=ARE93_0$)<>1 THEN break
10840   REMOVE (ARE93_DEV,KEY=ARE93_0$)
10850 wend
10935 REM " --- Done"
10940 REMOVE (ARE83_DEV,KEY=ARE83_K$)
10950 REMOVE (SNM02_DEV,KEY="b"+are83.serial_nbr$(1,19),dom=*next)
10960 GOTO next_are83
10990 are83_done:
10995 RETURN
11010 UPD_CONTRACT_INFO: 
11020 LET JUL_DT=JUL(0,0,0),CURR_YEAR=NUM(DATE(0:"%Yl"))
11030 EXTRACT RECORD (SMC01_DEV,KEY=CONTRACT$,dom=contr_return)smc01$
11040 LET smc01$=FIELD(smc01$),smc01.NEW_FLAG$=" "
11180 WRITE_CONTRACT: WRITE RECORD (SMC01_DEV)smc01$
11185 contr_return:
11190 RETURN
13000 GET_CONFIG:
13005 dim are73$:fattr(are73$)
13010 FIND RECORD(ARE73_DEV,KEY=K1$,DOM=*next)ARE73$
13020 call "distribution_code.pgm",n0$,item$,are73.type_of_sale$,are73.lic_property1$,csm10_dev,ivm02_dev,arm10_dev,dist$
13060 IF CVS(ARE73.CONTRACT$,1+2)<>"" AND ARE73.TYPE_OF_SALE$(1,1)="S" THEN GOSUB GET_SAM
13070 CONFIG_RETURN:
13080 RETURN
13200 GET_SAM:
13210 FIND RECORD(SMC01_DEV,KEY=ARE73.CONTRACT$,DOM=SAM_RETURN)SMC01$
13220 IF SMC01.SAM_ACTIVE$="N" and are13.ext_price>0 THEN GOTO SAM_RETURN
13230 CONTRACT$=SMC01.CONTRACT$
13240 ANNUAL_JUL=JUL(NUM(SMC01.ANNUAL_DT$(1,4)),NUM(SMC01.ANNUAL_DT$(5,2)),NUM(SMC01.ANNUAL_DT$(7,2)))
13250 REMAINING=max(ANNUAL_JUL-TODAY,1),sam_factor=1
13260 IF SAM_RENEW$="Y" or ic_renew$="Y" THEN REMAINING=365;SAM_FACTOR=0;GOTO SAM_RETURN
13270 IF num(SMC01.DISB_METHOD$)>0 THEN REMAINING=NUM(SMC01.DISB_METHOD$)
13290 SAM_RETURN:
13300 while are13.ext_price<0
13310   smc2k$=cvs(are13.order_memo$,3)
13320   readrecord(smc02_dev,key=smc2k$,dom=*break)SMC02$
13330   orig_amt=num(smc02.orig_amount$)
13340   if orig_amt+are13.ext_price then break;rem 'Check credit amt=original amt
13350   unearned_2=num(smc02.unearned_bal$)
13360   sales_2=orig_amt-unearned_2
13370   break
13380 wend
13900 RETURN
15000 WRITE_SMC02:
15010 if sales_2+unearned_2 then 
15020   remove(smc02_dev,key=smc2k$,dom=*next)
15030   return
15040 fi
15050 mtd_earned=0,nmtd_earned=0,ytd_earned=0,td$=date(0:"%Yl%Mz%Dz")
15060 SMC02.AR_INV_NBR$=are03.ar_inv_nbr$,SMC02.LINE_NUMBER$=line_nbr$,SMC02.FIRM_ID$=are13.firm_id$
15070 if today_dt$>g9$ then nmtd_earned=sales else mtd_earned=sales,ytd_earned=sales
15080 SMC02.CUSTOMER_NBR$=are13.customer_nbr$,SMC02.ITEM_NUMBER$=ITEM$,SMC02.DIST_CODE$=D$,SMC02.LAST_TRANS_DT$=td$,SMC02.UNEARNED_BAL$=STR(UNEARNED_AMT:"-000000.00")
15090 smc02.orig_amount$=str(are13.ext_price:"-000000.00"),smc02.annual_dt$=DATE(ANNUAL_JUL:"%Yl%Mz%Dz")
15100 SMC02.DAYS_REMAINING$=STR(REMAINING-sam_factor:"0000.00"),SMC02.SLSPSN_CODE$=Are03.slspsn_code$
15110 smc02.mtd_earned$=str(mtd_earned:"-000000.00"),smc02.nmtd_earned$=str(nmtd_earned:"-000000.00"),smc02.ytd_earned$=str(ytd_earned:"-000000.00")
15120 IF SAM_RENEW$="Y" or ic_renew$="Y" THEN 
15130   ld$=DATE(ANNUAL_JUL:"%Yl%Mz%Dz"),lm=num(ld$(5,2)),ly=num(ld$(1,4)),tm=num(td$(5,2)),ty=num(td$(1,4))
15140   if ly-ty>1 then ly=ty+1
15150   if ly>ty and (lm>2 or tm<11) then ly=ty
15160   SMC02.LAST_TRANS_DT$=str(ly:"0000")+ld$(5,4)
15170   if are13.ext_price>0 then smc02.annual_dt$(1,4)=str(ly+1:"0000")
15180 fi
15190 SMC02$=FIELD(SMC02$)
15200 WRITE RECORD(SMC02_DEV)SMC02$
15300 RETURN
16000 UPD_SAM_DISB:
16010 READ RECORD(SMC02_DEV,END=post_gl)SMC02$
16020 IF SMC02.FIRM_ID$<>N0$ THEN GOTO UPD_SAM_DISB
16030 SMC02$=FIELD(SMC02$)
16040 LAST_TRNS_DT=JUL(NUM(SMC02.LAST_TRANS_DT$(1,4)),NUM(SMC02.LAST_TRANS_DT$(5,2)),NUM(SMC02.LAST_TRANS_DT$(7,2)))
16050 REMAINING=NUM(SMC02.DAYS_REMAINING$)
16060 DAYS_PAST=TODAY-LAST_TRNS_DT,TOT_UNEARNED=NUM(SMC02.UNEARNED_BAL$)
16070 IF DAYS_PAST<=0 OR REMAINING<=0 THEN GOTO UPD_SAM_DISB
16080 IF DAYS_PAST>REMAINING THEN DAYS_PAST=REMAINING
16090 PRECISION 4
16100 SAM_FACTOR=DAYS_PAST
16110 PRECISION 2
16120 SALES=SAM_FACTOR*TOT_UNEARNED,sales=sales/remaining
16130 REM " --- Update ARM-06 Payment Summary"
16140 DIM D0$(8),D1$(16),D[21]
16150 LET D0$=N0$+smc02.customer_nbr$
16160 FIND (ARM06_DEV,KEY=D0$,DOM=*next)IOL=ARM06A
16170 LET D0$=N0$+smc02.customer_nbr$;rem D1$(1,3)=TODAY_DT$
16180 IF TODAY_DT$>G9$ THEN d[9]=d[9]+sales else d[3]=d[3]+sales, d[4]=d[4]+sales
16200 WRITE (ARM06_DEV,KEY=D0$)IOL=ARM06A
16220 DIST_KEY$=SMC02.DIST_CODE$,GL_AMOUNT$="0"
16230 IF POS(DIST_KEY$=DIST_LIST$,2) THEN GL_AMOUNT$=glTable!.get(DIST_KEY$)
16240 GL_AMOUNT$=STR(NUM(GL_AMOUNT$)+SALES)
16250 glTable!.put(DIST_KEY$,GL_AMOUNT$)
16260 IF POS(DIST_KEY$=DIST_LIST$,2)=0 THEN DIST_LIST$=DIST_LIST$+DIST_KEY$
16275 mtd_earned=num(smc02.mtd_earned$),nmtd_earned=num(smc02.nmtd_earned$),ytd_earned=num(smc02.ytd_earned$)
16280 REMAINING=REMAINING-DAYS_PAST,TOT_UNEARNED=TOT_UNEARNED-SALES
16285 if today_dt$>g9$ then nmtd_earned=nmtd_earned+sales else mtd_earned=mtd_earned+sales,ytd_earned=ytd_earned+sales
16290 SMC02.LAST_TRANS_DT$=DATE(0:"%Yl%Mz%Dz"),SMC02.UNEARNED_BAL$=STR(TOT_UNEARNED:"-000000.00")
16295 smc02.mtd_earned$=str(mtd_earned:"-000000.00"),smc02.nmtd_earned$=str(nmtd_earned:"-000000.00"),smc02.ytd_earned$=str(ytd_earned:"-000000.00")
16300 SMC02.DAYS_REMAINING$=STR(REMAINING:"0000.00")
16310 WRITE RECORD(SMC02_DEV)SMC02$
16320 GOTO UPD_SAM_DISB
16330 post_gl:
16340 REM " --- Setup Invoice GL Variables"
16350 LET when$=TODAY_DT$,MEMO$="Summarized SAM Disbursements"
16360 LET REF1$="",REF2$="",ref3$=""
16370 dist_loop:
16380 if dist_list$="" then goto upd_done
16390 d$=dist_list$(1,2),dist_list$=dist_list$(3)
16400 gosub 6100
16420 SALES$=glTable!.get(D$),SALES=NUM(SALES$)
16440 LET ACCOUNT$=X$(2*G[4]+1,G[4]),AMOUNT=-SALES,UNITS=1
16450 GOSUB GLPOST
16460 LET ACCOUNT$=X$(5*G[4]+1,G[4]),AMOUNT=SALES,UNITS=1
16470 GOSUB GLPOST
16480 goto dist_loop
16490 UPD_DONE:
16500 RETURN
17000 ivm01_itm:
17010 ivmok=0
17020 FIND (ivm01_dev,KEY=n0$+ivm01_itm$,ERR=*next)iol=ivm01a;ivmok=1
17030 if ivmok or len(cvs(ivm01_itm$,3))<15 then return
17040 ivm01_itm$(10,3)="CUR"
17050 if ivm01_itm$(13,3)<>"STD" and ivm01_itm$(1,3)="BAS" then ivm01_itm$(13,3)="EXP"
17060 FIND (ivm01_dev,KEY=n0$+ivm01_itm$,ERR=*next)iol=ivm01a;ivmok=1
17090 return
