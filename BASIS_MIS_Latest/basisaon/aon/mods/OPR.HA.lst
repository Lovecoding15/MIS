0010 REM "OPR - Sales Register (Lead Overlay)"
0020 REM "Program OPR.HA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.5 - 01Dec98 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "04Dec96 WGH: Prevent infinite loop when ARE-20 record not found for Cash Sale (1173,1175"
0032 REM "04Feb98 WGH: Print Customer Name for voids (1410,1540-1560)"
0033 REM "10Feb99 KJS: Error after year 2000 (446)
0038 REM "MAS*JCM*9/30/99 Replace returns with other column
0039 REM "MAS*JCM*Switch Customer/Invoice columns
0040 REM 
0050 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open Files"
0105 LET FILES=26
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="ARE-03",FILES$[2]="ARE-04",FILES$[3]="ARE-13"
0130 LET FILES$[4]="ARE-20",FILES$[5]="ARM-01",FILES$[6]="ARM-10"
0140 LET FILES$[7]="ARS-10",FILES$[8]="IVM-01",FILES$[9]="IVM-02"
0145 LET FILES$[10]="SYS-01",FILES$[11]="SMC-01",FILES$[12]="CSM-10",FILES$[13]="ARE-73"
0147 LET FILES$[14]="SMC-02"
0150 CALL "SYC.DA",1,1,14,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0155 IF STATUS>0 THEN GOTO 9900
0160 LET ARE03_DEV=CHANNELS[1],ARE04_DEV=CHANNELS[2],ARE13_DEV=CHANNELS[3]
0170 LET ARE20_DEV=CHANNELS[4],ARM01_DEV=CHANNELS[5],ARM10_DEV=CHANNELS[6]
0180 LET ARS10_DEV=CHANNELS[7],IVM01_DEV=CHANNELS[8],IVM02_DEV=CHANNELS[9]
0190 LET SYS01_DEV=CHANNELS[10],SMC01_DEV=CHANNELS[11],CSM10_DEV=CHANNELS[12],ARE73_DEV=CHANNELS[13]
0195 LET SMC02_DEV=CHANNELS[14]
0200 REM " --- IOLists"
0205 ARE03A: IOLIST A0$(1),A[ALL]
0210 ARE13A: IOLIST W0$,W1$(1),W[ALL]
0215 ARE20A: IOLIST Z7$,Z8$
0220 ARE23A: IOLIST H0$,H9$,H5$,H[ALL]
0225 ARM01A: IOLIST B0$,B1$
0230 ARM10B: IOLIST Y5$(1),TAX0,TAX1
0235 ARM10C: IOLIST *,Y3$
0240 ARM10D: IOLIST *,Y4$
0245 ARM10E: IOLIST Y0$,Y1$
0250 ARS10S: IOLIST V$,V[ALL]
0255 ARW01A: IOLIST X0$,X0
0260 ARW04A: IOLIST ARW04_K$
0265 ARW11A: IOLIST X0$,X0
0270 ARW21A: IOLIST X0$,X0
0275 IVM01A: IOLIST *,*,D2$,*,*,D5$,D6$
0280 IVM02A: IOLIST D0$,D1$(1),*,D[ALL]
0285 IVW05A: IOLIST W9$,ICOST
0290 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0300 ARS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0310 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0315 IVS01A: IOLIST X$,X$,I2$,I3$,I4$
0320 SAS01A: IOLIST SA0$,SA1$(1),SA2$(1)
0325 ARW50A: IOLIST X0$,X[ALL]; REM "WA:217
0330 call "templates.pgm::ARE73"
0335 call "templates.pgm::CSM10"
0340 call "templates.pgm::SMC01"
0345 call "templates.pgm::SMC02"
0400 REM " --- Parameters"
0405 DIM G[4],I[6],P[3],V[15],INFO$[20],SA1$(11),SA2$(11)
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0415 LET N0$=F0$(16,2),N1$=F4$,N2$="AR",N3$=F5$,R9$="N",IH$="N",LS$="N",LF$="N",BR$="N",GL$="N",JN$="N",SA$="N"
0420 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=ARS01A
0422 IF P3$(11,1)="Y" THEN LET R9$="Y"
0424 IF P3$(12,1)="Y" THEN LET JN$="Y"
0426 IF P3$(14,1)="Y" THEN LET BR$="Y"
0428 IF P3$(77,1)="Y" THEN LET IH$="Y"
0430 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0432 FOR X=0 TO 4
0434 LET G[X]=NUM(G2$(X*2+1,2),ERR=0436)
0436 NEXT X
0438 LET G[2]=FNYY_YEAR(G2$(5,2))
0440 FIND (SYS01_DEV,KEY=N0$+"IV00",DOM=9800)IOL=IVS01A
0442 IF POS(I3$(17,1)="LS")>0 THEN LET LS$="Y"
0444 IF POS(I3$(3,1)="LF")>0 THEN LET LF$="Y"
0446 LET I[0]=NUM(I2$(1,2)),I[2]=NUM(I2$(5,1)),I[3]=NUM(I4$(1,2)),I[4]=FNYY_YEAR(I4$(3,2)),I[5]=NUM(I2$(7,2))
0448 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P2$(3,2)),P[2]=NUM(P4$(1,2)),P[3]=FNYY_YEAR(P4$(3,2))
0450 CALL "SYC.PA",SYS01_DEV,P[2],P[3],X$,G9$,STATUS
0460 CALL "SYC.PA",SYS01_DEV,I[3],I[4],X$,P9$,STATUS
0470 CALL "GLC.BA",ERR=0475,PGM(-2),N2$,GLW11$,GL$,STATUS
0475 IF STATUS THEN GOTO 9900
0480 CALL "SYC.VA","SA",INFO$[ALL]
0482 LET SA$=INFO$[20]
0484 IF INFO$[20]<>"Y" THEN GOTO 0490
0486 FIND (SYS01_DEV,KEY=N0$+"SA00",DOM=9800)IOL=SAS01A
0490 FIND (ARS10_DEV,KEY=N0$+"S",DOM=0500)IOL=ARS10S
0500 REM " --- Initialize Data"
0510 LET L9=58,L=L9+1,HEADINGS=3,WIDTH=132,PAGE=0,today=jul(0,0,0)
0512 year=num(date(0:"%Yl"))
0515 year_end=jul(year,12,31),remaining_year=year_end-today,total_current=0,total_future=0
0520 DIM HEADINGS$[HEADINGS]
0530 LET HEADINGS$[0]=N1$,HEADINGS$[1]=N3$,CLOCK$="",WHEN$=F0$(7,3)
0540 DIM A0$(117),A[10],W1$(64),W[14],T[6],U[6]
0545 DIM X[5]
0550 LET SEQ$="I"
0580 CALL "SYC.RM",M1$,M1,11,11
0590 LET M0=LEN(M0$),ERRORS=0,GLSTATUS=0
0600 REM " --- Additional File Opens"
0615 IF GL$="Y" THEN LET FILES$[15]="GLM-01"
0620 IF LF$="Y" THEN LET FILES$[16]="IVM-04"
0625 IF LS$="Y" THEN LET FILES$[17]="ARE-23"
0650 CALL "SYC.DA",1,15,17,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0655 IF STATUS>0 THEN GOTO 9900
0660 LET GLM01_DEV=CHANNELS[15],IVM04_DEV=CHANNELS[16],ARE23_DEV=CHANNELS[17]
0700 REM " --- Background"
0710 FOR X=4 TO 6 STEP 2
0720 CALL "SYC.WC",1,0,80,0,0,X,0
0730 NEXT X
0750 PRINT 'SB',@(30,3),"Sequence:",@(33,5),"Phase:",'SF',

0780 resp = msgbox("Reminder: Have the invoices been emailed?", 1, "Invoices Emailed and Archived")
0790 if resp <> 1 then RUN "SYS.AA" 

0800 REM " --- Register Sequence"
0810 LET V0$="S",V1$="C^",V2$=SEQ$,V3$="CI",V4$="C=Customer Number   I=Invoice Number",V0=1,V1=40,V2=3
0820 GOSUB 7000
0830 ON V3 GOTO 0835,0800,0800,0800,0850
0835 IF POS(V$="CI")=0 THEN GOTO 0800
0840 LET SEQ$=V$
0845 IF SEQ$="I" THEN LET HEADINGS$[2]="By Invoice Number" ELSE LET HEADINGS$[2]="By Customer Number"
0850 REM " --- Correct?"
0860 LET V0$="Y",V1$="C^",V2$="Y",V3$="",V4$="Is The Above Information Correct (Y/N)?",V0=1,V1=FNV(V4$),V2=22
0870 GOSUB 7000
0875 IF V3=4 THEN GOTO 9900
0880 ON POS(V$="YN") GOTO 0850,0890,0800
0890 PRINT @(40,5),"Invoice Register"
0900 REM " --- Clear & Lock Files"
0905 LET FILES$[18]="ARW-01",OPTIONS$[18]="CL"
0910 LET FILES$[19]="ARW-04",OPTIONS$[19]="CL"
0915 LET FILES$[20]="ARW-11",OPTIONS$[20]="CL"
0920 LET FILES$[21]="ARW-20",OPTIONS$[21]="CL"
0925 LET FILES$[22]="ARW-21",OPTIONS$[22]="CL"
0926 LET FILES$[26]="ARW-50",OPTIONS$[26]="CL"; REM "WA:217
0930 IF GL$="Y" THEN LET FILES$[23]=GLW11$,OPTIONS$[23]="CL"
0935 IF LF$="Y" THEN LET FILES$[24]="IVW-04",OPTIONS$[24]="CL"
0940 IF LF$="Y" THEN LET FILES$[25]="IVW-05",OPTIONS$[25]="CL"
0950 CALL "SYC.DA",1,18,FILES,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0955 IF STATUS>0 THEN GOTO 9900
0960 LET ARW01_DEV=CHANNELS[18],ARW04_DEV=CHANNELS[19],ARW11_DEV=CHANNELS[20],ARW20_DEV=CHANNELS[21]
0965 LET ARW21_DEV=CHANNELS[22],GLW11_DEV=CHANNELS[23],IVW04_DEV=CHANNELS[24],IVW05_DEV=CHANNELS[25]
0966 LET ARW50_DEV=CHANNELS[26]; REM "WA:217
0970 IF LF$="Y" THEN DIM LF_CHANNELS[10]; LET LF_CHANNELS[0]=IVM04_DEV,LF_CHANNELS[1]=IVW04_DEV,LF_CHANNELS[2]=IVM02_DEV

0975 rem ' CALL "BPS.01",3,PRTR$,STATUS; IF STATUS THEN GOTO 9900
0980 rem ' CALL "SYC.GA",7,1,"",PRTR$,STATUS
0985 rem ' IF STATUS THEN GOTO 9900
0986 rem ' converted to docout 04/2014 kew, use the DocoutWrapper
0987 use ::DocoutWrapper.bbj::DocoutWrapper
0988 declare DocoutWrapper report!
0989 xUserName$ = stbl("SYSTEMUID"), xPassword$ = stbl("SYSTEMPWD")

0990 docname$ = "_SalesRegister"
0991 if n0$ = "01" then docname$ = "BAS" + docname$ else docname$ = "BSE" + docname$

0992 report! = new DocoutWrapper(n0$, "InvoiceRegister", docname$, xUserName$, xPassword$)
0993 gosub addColumns; gosub addHeadings; gosub setOutputAction


0995 GOSUB 6100
1000 REM " --- Initial Read"
1005 prod_total=0,sam_total=0,current_total=0,future_total=0
1010 IF SEQ$="C" THEN GOTO 1040
1020 READ (ARW04_DEV,KEY=N0$,DOM=1100)
1030 IF SEQ$="I" THEN LET PREVNUM=0; GOTO 1100
1040 READ (ARE04_DEV,KEY=N0$+"I",DOM=1100)
1100 REM " --- Main Read"
1110 LET LINES$=""
1115 IF SEQ$="C" THEN GOTO 1150
1120 LET K1$=KEY(ARW04_DEV,END=4000); LET INVNUM=NUM(K1$(3,7),ERR=1125); GOSUB 12000
1125 READ (ARW04_DEV)
1130 IF K1$(1,2)<>N0$ THEN GOTO 4000
1135 EXTRACT (ARE03_DEV,KEY=K1$(1,2)+"  "+K1$(10)+"000",DOM=1100)IOL=ARE03A
1140 IF SEQ$="I" THEN GOTO 1170
1150 LET K1$=KEY(ARE04_DEV,END=4000)
1155 READ (ARE04_DEV)
1160 IF K1$(1,3)<>N0$+"I" THEN GOTO 4000
1165 EXTRACT (ARE03_DEV,KEY=K1$(1,2)+K1$(4)+"000",DOM=1100)IOL=ARE03A
1170 IF A0$(68,1)<>"Y" OR POS(A0$(69,1)="12")<>0 THEN GOTO 1100
1173 LET Z7$="",Z8$="",SAM_RENEW$=CVS(A0$(49,10),7),prod_sales=0,sam_sales=0,current_factor=1,current_unearned=0,future_unearned=0
1175 IF A0$(99,1)="Y" THEN FIND (ARE20_DEV,KEY=A0$(1,17),DOM=1180)IOL=ARE20A
1180 LET A0$(69,1)="S"
1190 WRITE (ARE03_DEV,KEY=A0$(1,20))IOL=ARE03A
1200 REM " --- Breaks"
1210 IF SEQ$="C" THEN PRINT @(COLUMN,11),FNF$(A0$(5,P[0]),M0$)," ",A0$(42,7),
1220 IF SEQ$="I" THEN PRINT @(COLUMN,11),A0$(42,7)," ",FNF$(A0$(5,P[0]),M0$),
1290 IF A0$(22,1)<>"I" THEN GOTO 1100
1400 REM " --- Heading"
1420 DIM T[6]
1440 LET T[2]=A[0],T[3]=A[1],T0=0
1460 GOSUB 6000
1480 IF A0$(21,1)<>"V" THEN GOTO 1600
1500 REM " --- Void"
1520 rem ' IF L>L9 THEN GOSUB 5000

1540 rem ' IF SEQ$="C" THEN PRINT (7)'LF',FNF$(A0$(5,P[0]),M0$),@(11),A0$(11,7),@(19),A0$(42,7),@(28),FNB4$(A0$(24,3)),"      * Void *"
1541 IF SEQ$="C" THEN report!.addBlankRow(); dim row$:rowTemplate$; row.column01$=FNF$(A0$(5,P[0]),M0$); row.column02$=A0$(11,7); row.column03$=A0$(42,7), row.column04$=FNB4$(A0$(24,3)); row.column05$="* Void *"; report!.addRow(row$)

1545 rem ' IF SEQ$="I" THEN PRINT (7)'LF',A0$(42,7),@(8),A0$(11,7),@(17),FNF$(A0$(5,P[0]),M0$),@(28),FNB4$(A0$(24,3)),"      * Void *"
1546 IF SEQ$="I" THEN report!.addBlankRow(); dim row$:rowTemplate$; row.column01$=A0$(42,7); row.column02$=A0$(11,7); row.column03$=FNF$(A0$(5,P[0]),M0$); row.column04$=FNB4$(A0$(24,3)); row.column05$="* Void *"; report!.addRow(row$)

1550 rem ' PRINT (7)@(7),B1$(1,30)
1551 dim row$:rowTemplate$; row.column02$=B1$(1,30); report!.addRow(row$)

1560 LET L=L+3
1590 GOTO 1100
1600 REM " --- Determine GL Accounts"
1610 DIM Y2$(80,"0"),Y4$(80,"0"),Y9$(80,"0")
1620 FIND (ARM10_DEV,KEY=N0$+"D"+A0$(66,2),DOM=1625)IOL=ARM10D
1622 LET Y2$(1)=Y4$
1625 LET Y9$(1,10)=Y2$(1,10),Y9$(31,20)=Y2$(31,20)
1630 IF A0$(99,1)<>"Y" OR LEN(Z7$)<24 THEN GOTO 1700
1650 DIM Y3$(20,"0")
1660 FIND (ARM10_DEV,KEY=N0$+"C"+Z7$(21,3),DOM=1670)IOL=ARM10C
1670 LET Y9$(1,10)=Y3$(1,10)
1700 REM " --- Setup Invoice GL Variables"
1710 LET GLDATE$=A0$(24,3),MEMO$=B1$(1,30)
1720 LET REF1$=FNF$(A0$(5,P[0]),M0$),REF2$=A0$(42,7)
1900 REM " --- Position Invoice Detail File"
1920 READ (ARE13_DEV,KEY=A0$(1,17),DOM=2000)
2000 REM " --- Detail"
2010 SAM_FACTOR=1,SALES=0,commission$="",remaining=1,new_remaining=1,sales_2=0,unearned_2=0
2020 LET K$=KEY(ARE13_DEV,END=3000)
2030 IF K$(1,17)<>A0$(1,17) THEN GOTO 3000
2040 READ (ARE13_DEV)IOL=ARE13A
2050 ITEM$=W0$(33,20),DIST$=cvs(w0$(27,2),3),ic_renew$=w0$(29,1)
2060 FIND (ARM10_DEV,KEY=N0$+"E"+W0$(21,1),DOM=*next)IOL=ARM10E
2070 GOSUB GET_CONFIG
2080 commission$=cvs(y0$(27,1),2)
2090 IF POS(Y0$(25,1)="PS")>0 AND W[4]<>0 THEN GOSUB 6500; REM "Go get current cost
2100 REM IF W[6]<0 THEN LET T[1]=T[1]+W[6];REM "WA:217
2105 REM IF W[6]>0 THEN LET T[0]=T[0]+W[6];REM "WA:217
2110 SALES=W[6]*SAM_FACTOR,sales=sales/remaining,UNEARNED_AMT=W[6]-SALES
2120 if sales_2+unearned_2 then sales=sales_2*-1,unearned_amt=unearned_2*-1
2125 curr_unearned=current_factor*unearned_amt;if new_remaining<>0 then curr_unearned=curr_unearned/new_remaining
2130 current_unearned=current_unearned+curr_unearned,future_unearned=future_unearned+unearned_amt-curr_unearned
2140 IF Y0$(25,1)<>"O" THEN LET T[0]=T[0]+SALES; if unearned_amt then sam_sales=sam_sales+sales else prod_sales=prod_sales+sales fi
2150 IF Y0$(25,1)="O" THEN LET T[1]=T[1]+SALES; REM "WA:217
2160 LET T0=T0+SALES,T[5]=T[5]+UNEARNED_AMT
2170 if commission$="Y" then LET T[4]=T[4]+sales
2200 REM " --- Write Misc"
2240 LET X0$=N0$+"B"+A0$(3,2)+W0$(21,1),X0=0
2260 FIND (ARW11_DEV,KEY=X0$,DOM=2270)IOL=ARW11A
2270 LET X0=X0+SALES
2280 WRITE (ARW11_DEV,KEY=X0$)IOL=ARW11A
2290 LET T[6]=T[6]+SALES+UNEARNED_AMT
2400 REM " --- Determine GL Postings Here"
2405 IF GL$<>"Y" THEN GOTO 2900
2410 IF Y0$(25,1)<>"S" THEN GOTO 2500
2420 IF P3$(11,1)="N" THEN LET Y9$(21,10)=Y2$(21,10),Y9$(61,20)=D6$; GOTO 2700; REM "Distribute by Customer
2450 DIM Y4$(80,"0")
2460 FIND (ARM10_DEV,KEY=N0$+"D"+DIST$,DOM=2470)IOL=ARM10D
2470 LET Y9$(21,10)=Y4$(21,10),Y9$(61,20)=Y4$(61,20),Y9$(51,10)=Y4$(51,10)
2490 GOTO 2700
2500 REM " --- Non-Stock & 'P' Types Here"
2510 IF POS(Y0$(25,1)="NP")=0 THEN GOTO 2600
2520 DIM Y4$(80,"0")
2525 IF P3$(11,1)="N" AND Y0$(25,1)="N" THEN LET Y9$(21,10)=Y2$(21,10),Y9$(61,20)=Y2$(61,20); GOTO 2700
2530 FIND (ARM10_DEV,KEY=N0$+"D"+Y1$(11,2),DOM=2540)IOL=ARM10D
2540 LET Y9$(21,10)=Y4$(21,10),Y9$(61,20)=Y4$(61,20),y9$(51,10)=y4$(51,10)
2590 GOTO 2700
2600 REM " --- Other Charges Here"
2610 IF Y0$(25,1)<>"O" THEN GOTO 2900
2620 LET Y9$(21,10)=Y1$(1,10)
2630 IF POS(" "<>W1$(46,10))>0 THEN LET Y9$(21,10)=W1$(46,10); REM "WA:218
2700 REM " --- Now Post Debit/Credit"
2705 PRECISION 2
2710 LET REF3$=W0$(18,3)
2712 IF SALES=0 THEN GOTO 2735
2715 LET ACCOUNT$=Y9$(21,10),AMOUNT=-SALES
2720 IF A0$(99,1)="Y" THEN LET REF3$=W0$(18,3)+" (Cash)"
2730 GOSUB GLRECAP
2735 LET ACCOUNT$=Y9$(1,10),AMOUNT=SALES+UNEARNED_AMT
2740 GOSUB GLRECAP
2750 IF Y0$(25,1)="O" OR W[0]*W[4]=0 THEN GOTO 2800
2760 LET ACCOUNT$=Y9$(61,10),AMOUNT=(-W[0])*W[4]
2770 GOSUB GLRECAP
2785 LET ACCOUNT$=Y9$(71,10),AMOUNT=W[0]*W[4]
2790 GOSUB GLRECAP
2800 IF UNEARNED_AMT=0 THEN GOTO 2900
2810 LET ACCOUNT$=Y9$(51,10),AMOUNT=-UNEARNED_AMT
2820 GOSUB GLRECAP
2900 REM 
2990 GOTO 2000
3000 REM " --- Print"
3010 rem ' IF L+2>L9 THEN GOSUB 5000
3012 REM LET T=0,T1=T[0]+T[1]+T[5]; REM "WA:217
3013 LET T=0,T1=T[0]; REM "WA:217
3015 IF T1<>0 THEN LET T=T1*100/T1
3017 IF ABS(T)>999 THEN LET T=SGN(T)*999.99

3020 rem ' IF SEQ$="C" THEN PRINT (7)'LF',@(0),FNF$(A0$(5,P[0]),M0$),@(11),A0$(11,7),@(19),A0$(42,7),@(28),FNB4$(A0$(24,3)),@(38+12-M1),prod_sales:M1$,@(50+12-M1),T[1]:M1$,@(62+12-M1),current_unearned:M1$,@(74+12-M1),T[2]:M1$,@(86+12-M1),T[3]:M1$,@(98+12-M1),T[0]+T[2]+T[1]+T[5]+T[3]:M1$,@(111+12-M1),T[4]:M1$,@(124),T:"-##0.00%"
3021 IF SEQ$="C" then report!.addBlankRow(); dim row$:rowTemplate$; row.column01$=FNF$(A0$(5,P[0]),M0$); row.column02$=A0$(11,7); row.column03$=A0$(42,7), row.column04$=FNB4$(A0$(24,3)); row.column05$=str(prod_sales:M1$) + $00$+"R"; row.column06$=str(T[1]:M1$) + $00$+"R"; row.column07$=str(current_unearned:M1$) + $00$+"R"; row.column08$=str(T[2]:M1$) + $00$+"R"; row.column09$=str(T[3]:M1$) + $00$+"R"; row.column10$=str(T[0]+T[2]+T[1]+T[5]+T[3]:M1$) + $00$+"R"; row.column11$=str(T[4]:M1$) + $00$+"R"; row.column12$=str(T:"-##0.00%") + $00$+"R"; report!.addRow(row$)

3025 rem ' IF SEQ$="I" THEN PRINT (7)'LF',@(0),A0$(42,7),@(8),A0$(11,7),@(17),FNF$(A0$(5,P[0]),M0$),@(28),FNB4$(A0$(24,3)),@(38+12-M1),prod_sales:M1$,@(50+12-M1),T[1]:M1$,@(62+12-M1),current_unearned:M1$,@(74+12-M1),T[2]:M1$,@(86+12-M1),T[3]:M1$,@(98+12-M1),T[0]+T[2]+T[1]+T[5]+T[3]:M1$,@(111+12-M1),T[4]:M1$,@(124),T:"-##0.00%"
3026 IF SEQ$="I" THEN report!.addBlankRow(); dim row$:rowTemplate$; row.column01$=A0$(42,7); row.column02$=A0$(11,7); row.column03$=FNF$(A0$(5,P[0]),M0$); row.column04$=FNB4$(A0$(24,3)); row.column05$=str(prod_sales:M1$) + $00$+"R"; row.column06$=str(T[1]:M1$) + $00$+"R"; row.column07$=str(current_unearned:M1$) + $00$+"R"; row.column08$=str(T[2]:M1$) + $00$+"R"; row.column09$=str(T[3]:M1$) + $00$+"R"; row.column10$=str(T[0]+T[2]+T[1]+T[5]+T[3]:M1$) + $00$+"R"; row.column11$=str(T[4]:M1$) + $00$+"R"; row.column12$=str(T:"-##0.00%") + $00$+"R"; report!.addRow(row$)


3030 rem ' PRINT (7)@(7),B1$(1,30),@(38+12-M1),sam_sales:M1$,@(62+12-M1),future_unearned:M1$
3031 dim row$:rowTemplate$; row.column02$=B1$(1,30); row.column05$=str(sam_sales:M1$) + $00$+"R"; row.column07$=str(future_unearned:M1$) + $00$+"R"; report!.addRow(row$)

3035 LET L=L+3
3036 IF GL$="Y" THEN CALL "GLC.EA",A0$(24,3),"N",PERIOD$,YEAR$,GLSTATUS
3037 IF GLSTATUS>0 THEN CALL "GLC.GA",7,A0$(24,3),GLSTATUS,L,ERRORS,STATUS
3040 IF LINES$="" THEN GOTO 3050
3042 IF L+LEN(LINES$)/3>L9 THEN GOSUB 5000
3044 FOR X=1 TO LEN(LINES$) STEP 3

3046 rem ' PRINT (7)"   **** Warning!! Missing Serial Numbers in Line: ",LINES$(X,3)
3047 dim row$:rowTemplate$; row.column01$="   **** Warning!! Missing Serial Numbers in Line: " + LINES$(X,3); report!.addRow(row$)

3048 LET L=L+1
3049 NEXT X
3050 IF G9$>=A0$(24,3) THEN LET J=0 ELSE LET J=8
3060 FOR X=0 TO 5
3065 REM "T(0)=GROSS SALES,T(1)=RETURNS,T(2)=TAX,T(3)=FREIGHT,T(4)=Commissionable Sales,T(5)=UNEARNED,T(6)=EXTENTION,T=GROSS PROFIT
3070 LET U[X]=U[X]+T[X],V[X+J]=V[X+J]+T[X]
3080 NEXT X
3085 prod_total=prod_total+prod_sales,sam_total=sam_total+sam_sales,current_total=current_total+current_unearned,future_total=future_total+future_unearned
3100 REM " --- Territory Codes"
3120 LET X0$=N0$+"A"+A0$(3,2)+A0$(72,3),X0=0
3140 FIND (ARW01_DEV,KEY=X0$,DOM=3150)IOL=ARW01A
3150 LET X0=X0+T0
3160 WRITE (ARW01_DEV,KEY=X0$)IOL=ARW01A
3200 REM " --- Salesperson Codes"
3220 LET X0$=N0$+"C"+A0$(3,2)+A0$(59,3),X0=0
3240 FIND (ARW21_DEV,KEY=X0$,DOM=3250)IOL=ARW21A
3260 LET X0=X0+T[4]
3280 WRITE (ARW21_DEV,KEY=X0$)IOL=ARW21A
3400 REM " --- GL Detail For Freight"
3405 LET REF3$=""
3410 IF A0$(99,1)="Y" THEN LET REF3$="Cash Sale"
3415 IF A[1]=0 THEN GOTO 3450
3420 LET ACCOUNT$=Y9$(41,10),AMOUNT=-A[1],REF3$=""
3430 GOSUB GLRECAP
3450 IF A[2]=0 THEN GOTO 3500
3460 LET ACCOUNT$=Y9$(31,10),AMOUNT=A[2]
3470 GOSUB GLRECAP
3500 REM " --- GL Detail for Taxes"
3505 IF A[0]=0 THEN GOTO 3600
3510 PRECISION 4
3515 DIM TAX$(60),Y5$(60)
3517 LET TAX0=0,TAX1=0,TAX=A[0],TAXTTL=0
3520 FIND (ARM10_DEV,KEY=N0$+"B"+A0$(80,2),DOM=3582)IOL=ARM10B
3525 LET TAX$(1)=Y5$,TAX=TAX0*A[4]/100
3530 PRECISION 2
3532 LET TAX=TAX*1
3534 IF TAX1<>0 AND ABS(TAX)>TAX1 THEN LET TAX=TAX1*SGN(TAX)
3540 LET TAXTTL=TAX,ACCOUNT$=TAX$(46,10),AMOUNT=-TAX
3545 GOSUB GLRECAP
3550 FOR X9=1 TO 10
3552 PRECISION 4
3554 LET X1$=TAX$(26+2*(X9-1),2)
3555 IF X1$="  " THEN GOTO 3580
3556 DIM Y5$(60); LET TAX0=0,TAX1=0,TAX=0
3560 FIND (ARM10_DEV,KEY=N0$+"B"+X1$,DOM=3580)IOL=ARM10B
3565 LET TAX=TAX0*A[4]/100
3567 PRECISION 2
3570 LET TAX=TAX*1
3572 IF TAX1<>0 AND ABS(TAX)>TAX1 THEN LET TAX=TAX1*SGN(TAX)
3575 LET TAXTTL=TAXTTL+TAX,ACCOUNT$=Y5$(46,10),AMOUNT=-TAX
3577 GOSUB GLRECAP
3580 NEXT X9
3582 PRECISION 2
3585 IF A[0]=TAXTTL THEN GOTO 3595
3587 LET TAX=A[0]-TAXTTL
3590 LET ACCOUNT$=TAX$(46,10),AMOUNT=-TAX
3593 GOSUB GLRECAP
3595 REM " --- End of Tax routine"
3600 REM " --- Go create customer summary;REM "WA:217
3610 GOSUB 10000; REM "WA:217
3800 REM " --- Net AR/Cash Here"
3810 IF A[0]+A[1]-A[2]=0 THEN GOTO 3900
3825 LET ACCOUNT$=Y9$(1,10),AMOUNT=A[0]+A[1]-A[2]
3830 GOSUB GLRECAP
3900 GOTO 1100
4000 REM " --- Totals"
4005 IF L>L9 THEN GOSUB 5000
4010 REM LET U=0,U1=U[0]+U[1];REM "WA:217
4011 LET U=0,U1=U[0]+U[5]; REM "WA:217
4015 IF U1<>0 THEN LET U=U1*100/U1
4020 IF ABS(U)>999 THEN LET U=SGN(U)*999.99
4025 IF L+7>L9 THEN GOSUB 5000

4030 rem ' PRINT (7)@(39),FILL(93,"-"),'LF',@(10),"Register Totals:",@(38+12-M1),prod_total:M1$,@(50+12-M1),U[1]:M1$,@(62+12-M1),current_total:M1$,@(74+12-M1),U[2]:M1$,@(86+12-M1),U[3]:M1$,@(98+12-M1),U[0]+U[1]+U[2]+U[3]+U[5]:M1$,@(111+12-M1),U[4]:M1$,@(124),U:"-##0.00%"
4031 dim row$:rowTemplate$; row.column04$=FILL(184,"-"); report!.addRow(row$)
4032 dim row$:rowTemplate$; row.column02$="Register Totals:"; row.column05$=str(prod_total:M1$) + $00$+"R"; row.column06$=str(U[1]:M1$) + $00$+"R"; row.column07$=str(current_total:M1$) + $00$+"R"; row.column08$=str(U[2]:M1$) + $00$+"R"; row.column09$=str(U[3]:M1$) + $00$+"R"; row.column10$=str(U[0]+U[1]+U[2]+U[3]+U[5]:M1$) + $00$+"R"; row.column11$=str(U[4]:M1$) + $00$+"R"; row.column12$=str(U:"-##0.00%") + $00$+"R"; report!.addRow(row$)  

4033 rem ' print (7)@(39),@(38+12-M1),sam_total:M1$,@(62+12-M1),future_total:M1$
4034 dim row$:rowTemplate$; row.column05$=str(sam_total:M1$) + $00$+"R"; row.column07$=str(future_total:M1$) + $00$+"R"; report!.addRow(row$)  

4035 LET V=0,V1=V[0]+V[1]+V[5]
4040 IF V1<>0 THEN LET V=V1*100/V1
4045 IF ABS(V)>999 THEN LET V=SGN(V)*999.99

4050 rem ' PRINT (7)@(39),FILL(93,"-"),'LF',@(10),"M-T-D Totals:",@(38+12-M1),V[0]:M1$,@(50+12-M1),V[1]:M1$,@(62+12-M1),V[1]:M1$,@(74+12-M1),V[2]:M1$,@(86+12-M1),V[3]:M1$,@(98+12-M1),V[0]+V[1]+V[2]+V[3]-V[5]:M1$,@(111+12-M1),V[4]:M1$,@(124),V:"-##0.00%"
4051 dim row$:rowTemplate$; row.column04$=FILL(184,"-"); report!.addRow(row$)
4052 dim row$:rowTemplate$; row.column02$="M-T-D Totals:"; row.column05$=str(V[0]:M1$) + $00$+"R"; row.column06$=str(V[1]:M1$) + $00$+"R"; row.column07$=str(V[1]:M1$) + $00$+"R"; row.column08$=str(V[2]:M1$) + $00$+"R"; row.column09$=str(V[3]:M1$) + $00$+"R"; row.column10$=str(V[0]+V[1]+V[2]+V[3]-V[5]:M1$) + $00$+"R"; row.column11$=str(V[4]:M1$) + $00$+"R"; row.column12$=str(V:"-##0.00%") + $00$+"R"; report!.addRow(row$)  

4055 IF V[8]=0 AND V[9]=0 AND V[10]=0 AND V[11]=0 AND V[12]=0 AND V[13]=0 THEN GOTO 4070
4060 LET Y=0,Y1=V[8]+V[9]+V[13]
4065 IF Y1<>0 THEN LET Y=Y1*100/Y1
4070 IF ABS(Y)>999 THEN LET Y=SGN(Y)*999.99

4075 rem ' PRINT (7)@(39),FILL(93,"-"),'LF',@(5),"Next M-T-D Totals:",@(38+12-M1),V[8]:M1$,@(50+12-M1),V[9]:M1$,@(62+12-M1),V[13]:M1$,@(74+12-M1),V[10]:M1$,@(86+12-M1),V[11]:M1$,@(98+12-M1),V[8]+V[9]+V[10]+V[11]+V[13]:M1$,@(111+12-M1),V[12]:M1$,@(124),Y:"-##0.00%"
4076 dim row$:rowTemplate$; row.column04$=FILL(184,"-"); report!.addRow(row$)
4077 dim row$:rowTemplate$; row.column02$="Next M-T-D Totals:"; row.column05$=str(V[8]:M1$) + $00$+"R"; row.column06$=str(V[9]:M1$) + $00$+"R"; row.column07$=str(V[13]:M1$) + $00$+"R"; row.column08$=str(V[10]:M1$) + $00$+"R"; row.column09$=str(V[11]:M1$) + $00$+"R"; row.column10$=str(V[8]+V[9]+V[10]+V[11]+V[13]:M1$) + $00$+"R"; row.column11$=str(V[12]:M1$) + $00$+"R"; row.column12$=str(Y:"-##0.00%") + $00$+"R"; report!.addRow(row$)  

4080 report!.renderReport()
4090 RUN "OPR.HF"

5000 REM " --- Heading"
5005 rem ' replaced by docout
5010 rem ' CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5015 rem ' IF STATUS>0 THEN EXITTO 9900
5020 rem ' LET L=HEADINGS+1
5040 rem ' PRINT (7)""
5050 rem ' IF SEQ$="C" THEN PRINT (7)"Customer",@(12),"Order",@(21),"Invoice",@(38),"Product/SAM",@(59),"Current/Future",@(104),"Net",@(109),"Commissionable",@(126),"Gross"; REM "WA:200
5055 rem ' IF SEQ$="I" THEN PRINT (7)"Invoice",@(8),"Order",@(20),"Customer",@(38),"Product/SAM",@(59),"Current/Future",@(104),"Net",@(109),"Commissionable",@(126),"Gross"
5060 rem ' IF SEQ$="C" THEN PRINT (7)"No. & Name",@(12),"Number   Number     Date",@(44),"Sales",@(56),"Other",@(65),"Unearned",@(81),"Tax",@(90),"Freight",@(103),"Sales",@(117),"Sales",@(126),"Profit",'LF'
5065 rem ' IF SEQ$="I" THEN PRINT (7)"Number",@(8),"Number   No. & Name     Date",@(44),"Sales",@(56),"Other",@(65),"Unearned",@(81),"Tax",@(90),"Freight",@(103),"Sales",@(117),"Sales",@(126),"Profit",'LF'
5080 rem ' LET L=L+4
5090 RETURN

6000 REM " --- Find Customer"
6010 DIM B1$(30)
6020 IF A0$(99,1)<>"Y" THEN GOTO 6070
6030 IF FNP$(Z8$)="" THEN GOTO 6070
6040 LET B1$(1)=Z8$
6050 GOTO 6090
6070 LET B1$(1)="Not On File"
6080 FIND (ARM01_DEV,KEY=N0$+A0$(5,6),DOM=6090)IOL=ARM01A
6090 RETURN 
6100 REM " --- Sort By Invoice Number"
6105 IF SEQ$="C" THEN GOTO 6180
6110 CALL "SYC.NB"," Sorting",M0+8,COLUMN
6120 READ (ARE04_DEV,KEY=N0$+"I",DOM=6130)
6130 LET K1$=KEY(ARE04_DEV,END=6180)
6140 READ (ARE04_DEV)
6145 IF K1$(1,3)<>N0$+"I" THEN GOTO 6180
6150 READ (ARE03_DEV,KEY=K1$(1,2)+K1$(4)+"000",DOM=6170)IOL=ARE03A
6155 PRINT @(COLUMN,11),FNF$(A0$(5,P[0]),M0$)," ",A0$(42,7),
6160 LET ARW04_K$=A0$(1,2)+A0$(42,7)+A0$(5,6)+A0$(11,7)
6165 WRITE (ARW04_DEV,KEY=ARW04_K$)IOL=ARW04A
6170 GOTO 6130
6180 CALL "SYC.NB","Printing",M0+8,COLUMN
6190 RETURN 
6200 REM " --- LIFO/FIFO"
6210 LET COST=W[0],RET_COST=0
6220 LET LF_ACTION$=I3$(3,1)+"I",LF_DATE$=A0$(24,3)
6230 DIM LF_ITEM$[10]
6240 LET LF_ITEM$[0]=N0$,LF_ITEM$[1]=W0$(31,2),LF_ITEM$[2]=W0$(33,20)
6250 REM " --- Inquiry On Tier Cost For Returned Items"
6260 IF W[4]>=0 THEN GOTO 6300
6265 LET LF_ACTION$(2,1)="R"
6270 CALL "IVC.LF",LF_ACTION$,"I",LF_DATE$,LF_CHANNELS[ALL],LF_ITEM$[ALL],I[2],ABS(W[4]),COST,RET_COST,STATUS
6280 IF RET_COST<>0 THEN LET COST=RET_COST
6300 REM " --- Report On Tier Cost For Sold Items"
6310 CALL "IVC.LF",LF_ACTION$,"R",LF_DATE$,LF_CHANNELS[ALL],LF_ITEM$[ALL],I[2],ABS(W[4]),COST,RET_COST,STATUS
6320 IF RET_COST<>0 THEN LET ICOST=RET_COST
6330 LET W9$=W0$(1,17)+W0$(33,20)+W0$(18,3)
6340 WRITE (IVW05_DEV,KEY=W9$)IOL=IVW05A
6390 RETURN 
6500 REM " --- Calculate Current Item Cost
6510 DIM D1$(64),D2$(62),D[20],H[2]
6520 LET Q$="",Q0=0,Q1=0,ICOST=W[0]
6530 ivm01_itm$=W0$(33,20);gosub ivm01_itm;if ivmok=0 then goto 6700
6535 commission$=d5$(2,1)
6540 FIND (IVM02_DEV,KEY=N0$+W0$(31,2)+ivm01_itm$,DOM=6550)IOL=IVM02A
6550 IF D[11]<>0 THEN LET ICOST=D[11]
6560 IF LF$="Y" THEN GOSUB 6200
6570 IF LS$<>"Y" OR D2$(19,1)<>"Y" THEN LET W[0]=ICOST; GOTO 6850
6590 READ (ARE23_DEV,KEY=W0$(1,20),DOM=6600)
6600 REM 
6610 LET K9$=KEY(ARE23_DEV,END=6700)
6620 IF K9$(1,20)<>W0$(1,20) THEN GOTO 6700
6630 READ (ARE23_DEV)IOL=ARE23A
6640 IF D2$(20,1)<>"Y" THEN LET H[2]=ICOST; WRITE (ARE23_DEV,KEY=K9$)IOL=ARE23A; REM "Reset cost if not inventoried
6650 LET Q0=Q0+H[1],Q1=Q1+H[1]*H[2]
6690 GOTO 6600
6700 REM 
6710 IF Q0=W[4] THEN GOTO 6800
6720 LET LINES$=LINES$+W0$(18,3)
6730 IF D2$(20,1)<>"Y" THEN LET NONINV=1 ELSE LET INV=1
6800 REM 
6810 IF Q0<>0 THEN LET W[0]=Q1/Q0
6850 WRITE (ARE13_DEV,KEY=W0$(1,20))IOL=ARE13A
6890 RETURN 
6900 REM " --- Standard G/L Recap Routine"
6910 GLRECAP: 
6920 IF GL$<>"Y" THEN GOTO 6990
6950 CALL "GLC.AA",GLM01_DEV,GLW11_DEV,0,ACCOUNT$,GLDATE$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8070 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
10000 REM " --- Write customer sales work
10010 LET X0$=N0$+B1$(1,30)+A0$(5,6)+A0$(24,3); DIM X[5]
10020 DIM X[5]
10030 FIND (ARW50_DEV,KEY=X0$,DOM=10031)IOL=ARW50A
10040 FOR X=0 TO 5
10050 LET X[X]=X[X]+T[X]
10060 NEXT X
10070 WRITE (ARW50_DEV,KEY=X0$)IOL=ARW50A
10090 RETURN 
12000 REM " --- Print * Deleted * for gaps in invoice number sequence
12010 IF PREVNUM=0 OR PREVNUM+1=INVNUM THEN GOTO 12090
12020 IF L>L9 THEN GOSUB 5000

12040 rem ' PRINT (7)'LF',STR(PREVNUM+1:"0000000"),@(38),"      * Deleted *"
12041 report!.addBlankRow(); dim row$:rowTemplate$; row.column01$=STR(PREVNUM+1:"0000000"); row.column04$="* Deleted *"; report!.addRow(row$)

12050 LET L=L+2,PREVNUM=PREVNUM+1; GOTO 12000
12090 LET PREVNUM=INVNUM
12095 RETURN
13000 GET_CONFIG:
13005 dim are73$:fattr(are73$)
13010 FIND RECORD(ARE73_DEV,KEY=K$,DOM=*next)ARE73$
13020 call "distribution_code.pgm",n0$,item$,ARE73.TYPE_OF_SALE$,are73.lic_property1$,csm10_dev,ivm02_dev,arm10_dev,dist$
13060 IF CVS(ARE73.CONTRACT$,1+2)<>"" AND ARE73.TYPE_OF_SALE$(1,1)="S" THEN GOSUB GET_SAM
13070 CONFIG_RETURN:
13080 RETURN
13200 GET_SAM:
13210 FIND RECORD(SMC01_DEV,KEY=ARE73.CONTRACT$,DOM=SAM_RETURN)SMC01$
13220 IF SMC01.SAM_ACTIVE$="N" and w[6]>0 THEN GOTO SAM_RETURN
13230 contract$=smc01.contract$
13240 ANNUAL_JUL=JUL(NUM(SMC01.ANNUAL_DT$(1,4)),NUM(SMC01.ANNUAL_DT$(5,2)),NUM(SMC01.ANNUAL_DT$(7,2)))
13250 REMAINING=max(ANNUAL_JUL-TODAY,1),sam_factor=1
13260 IF SAM_RENEW$="SAM RENEW" or sam_renew$="CREDIT SAM" or ic_renew$="Y" THEN SAM_FACTOR=0;if annual_jul>year_end then current_factor=0 else current_factor=year_end-annual_jul,new_remaining=365 fi;GOTO SAM_RETURN
13270 IF NUM(SMC01.DISB_METHOD$)>0 THEN REMAINING=NUM(SMC01.DISB_METHOD$)
13290 new_remaining=remaining-sam_factor
13300 if new_remaining<=remaining_year then current_factor=new_remaining else current_factor=remaining_year
13310 SAM_RETURN:
13320 while w[6]<0
13330   smc2k$=cvs(w1$(1,40),3)
13340   readrecord(smc02_dev,key=smc2k$,dom=*break)SMC02$
13350   orig_amt=num(smc02.orig_amount$)
13360   if orig_amt+w[6] then break;rem 'Check credit amt=original amt
13370   unearned_2=num(smc02.unearned_bal$)
13380   sales_2=orig_amt-unearned_2
13390   credit_list$=credit_list$+smc2k$;rem 'save for use in OPR.HF
13410   break
13420 wend
13490 RETURN
14500 REM Date with 4 digit year
14505 DEF FNA4$(Q$,Q2$)=STR(((ASC(Q$)-32)+1900)*POS(" "<>Q2$(2,1)):"0000")
14510 DEF FNB4$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA4$(Q1$(1),Q1$)
15000 ivm01_itm:
15010 ivmok=0
15020 FIND (ivm01_dev,KEY=n0$+ivm01_itm$,ERR=*next)iol=ivm01a;ivmok=1
15030 if ivmok or len(cvs(ivm01_itm$,3))<15 then return
15040 ivm01_itm$(10,3)="CUR"
15050 if ivm01_itm$(13,3)<>"STD" and ivm01_itm$(1,3)="BAS" then ivm01_itm$(13,3)="EXP"
15060 FIND (ivm01_dev,KEY=n0$+ivm01_itm$,ERR=*next)iol=ivm01a;ivmok=1
15090 return

16000 addColumns:
16010 rem ' add columns to the Report
16020 report!.addColumn("Invoice^Number","C",8,0,"","L","L")
16030 report!.addColumn("Order^Number","C",8,0,"","L","L")
16040 report!.addColumn("Customer^Number","C",10,0,"","L","L")
16050 report!.addColumn("Invoice^Date","C",10,0,"","L","L")
16060 report!.addColumn("Prod/SAM^Sales","C",11,0,"","R^R","R")
16070 report!.addColumn("^Other","C",10,0,"","R^R","R")
16080 report!.addColumn("Cur/Fut^Unearned","C",10,0,"","R^R","R")
16090 report!.addColumn("^Tax","C",10,0,"","R^R","")
16100 report!.addColumn("^Freight","C",10,0,"","R^R","R")
16110 report!.addColumn("Net^Sales","C",10,0,"","R^R","R")
16120 report!.addColumn("Comm^Sales","C",10,0,"","R^R","R")
16130 report!.addColumn("Gross^Profit","C",8,0,"","R^R","R")
16140 columnCount = report!.getColumnCount()
16150 rowTemplate$ = report!.getRowTemplate()
16160 dim row$:rowTemplate$
16170 return

16200 addHeadings:
16210 report!.addHeading(HEADINGS$[0])
16220 report!.addHeading(HEADINGS$[1])
16230 report!.addHeading(HEADINGS$[2])
16240 return

16300 setOutputAction:
16310 rem ' indicates individual out put fields may contain special formatting
16320 report!.setOutputAction("FORMAT")
16330 return

