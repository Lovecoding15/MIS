0010 REM "DDS - Export Record Layouts to BASIS Data Dictionary"
0020 REM "Program DDX.EB
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.1.0 - 01Apr99 |"
0026 REM "|         Copyright (c) 1999 ADD+ON Software, Inc.          |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists
0210 DDM01A: IOLIST X0$(1),X1$(1),X[ALL]
0220 SYM03A: IOLIST A0$(1),A1$(1),A2$(1),A[ALL]
0230 DDM03A: IOLIST B0$(1),B1$(1),B[ALL]
0240 DDM04A: IOLIST C0$(1),C1$(1),C[ALL]
0250 DDM10A: IOLIST Y0$(1),Y1$(1),Y2$(1)
0260 DDM20A: IOLIST Z0$(1),Z1$(1),Z2$(1)
0270 SYM02A: IOLIST D0$(1),D1$(1)
0300 IVS01A: IOLIST *,*,IV2$
0310 PRS01A: IOLIST *,*,*,PR3$
0400 REM " --- Parameters
0410 DIM D0$(3),D1$(128)
0415 LET D0$(1)=F0$(4,3),D1$(1,24)="Unknown User"
0420 FIND (SYM02_DEV,KEY=D0$,DOM=0430)IOL=SYM02A
0425 LET DEFAULT_PREC=2,IV_PREC=DEFAULT_PREC,PR_PREC=DEFAULT_PREC
0430 FIND (SYS01_DEV,KEY=N0$+"IV"+"00",DOM=0440)IOL=IVS01A
0435 LET IV_PREC=NUM(IV2$(5,1),ERR=0440)
0440 FIND (SYS01_DEV,KEY=N0$+"PR"+"00",DOM=0450)IOL=PRS01A
0445 LET IV_PREC=NUM(PR3$(7,1),ERR=0450)
0500 REM " --- Initializations
0510 DIM X0$(12),X1$(123),X[2],Y0$(12),Y1$(30),Y2$(240),Z0$(12),Z1$(30),Z2$(240)
0520 DIM A0$(6),A1$(77),A2$(30),A[2],B0$(7),B1$(63),B[2]
0530 DIM C0$(10),C1$(122),C[2],PGM$(6),MILESTONE$(20)
0550 LET PGM$(1)=PGM(-2),C9$=F0$(13,2),VERSION$="6.0.0"
0555 LET VERSION$=STBL("!VERSION",ERR=0560)
0560 IF F0$(25,1)<>" " THEN LET C9$=C9$+"-"+F0$(25,1)
0565 LET BBEXT$=""
0570 LET YY=FNYY_YEAR(F0$(18,2)),MM=NUM(F0$(20,2)),DD=NUM(F0$(22,2))
0575 LET ALPHA$="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
0580 LET ALPHA$=ALPHA$+CVS(ALPHA$,8),VALID$="0123456789"+ALPHA$
0600 REM " --- Additional File Opens
0610 CALL "_acu.utl",ERR=9400
0620 LET BBEXT$=STBL("BBEXT")
0630 CALL BBEXT$+"_ddopen.utl",ERR=9400
0640 CALL BBEXT$+"_ddinfo.utl",ERR=9400
0700 REM " --- Background
0790 CALL "SYC.NB","Processing",20,COLUMN
0800 REM " --- Expand and compress expressions for dates
0810 LET EXPYMD$="str(asc(%(2,1))-32:"+$22$+"00"+$22$+")+str(asc(%(3,1))-32:"+$22$+"00"+$22$+")+str(mod(asc(%(1,1))-32,100):"+$22$+"00"+$22$+")"
0815 LET CMPYMD$="chr(100*(num(%(5,2))<10)*(%(5,2)>$2020$)+num(%(5,2))+32)+chr(num(%(1,2))+32)+chr(num(%(3,2)+32)"
0820 LET EXPYYMMDD$="%(3,2)+%(5,2)+chr(asc(%(1,1))-(%(1,1)>=$41$)*17)+%(2,1)"
0825 LET CMPYYMMDD$="chr(asc(%(5,1))+(%(5,1)>=$30$)*(%(5,1)<$31$)*17)+%(6,1)+%(1,2)+%(3,2)"
0830 LET EXPYY$="chr(asc(%(1,1))-(%(1,1)>=$41$)*17)+%(2,1)"
0835 LET CMPYY$="chr(asc(%(1,1))+(%(1,1)>=$30$)*(%(1,1)<$31$)*17)+%(2)"
0900 REM " --- Position file
0960 LET K$=SYSTEM$
0970 IF SYSTEM$="" THEN LET K$=BEGFILE$
0980 READ (SYM03_DEV,KEY=K$,DOM=1000)IOL=SYM03A
0990 GOTO 1030
1000 REM " --- Read next SYM-03 File Definition Record
1010 LET K$=KEY(SYM03_DEV,END=4000)
1020 READ (SYM03_DEV)IOL=SYM03A
1025 IF BEGFILE$<>"" THEN IF A0$(1,6)<BEGFILE$ THEN GOTO 3900
1030 IF ENDFILE$<>"" THEN IF A0$(1,6)>ENDFILE$ THEN GOTO 4000
1040 IF SYSTEM$<>"" THEN IF A0$(1,LEN(SYSTEM$))<>SYSTEM$ THEN GOTO 4000
1050 LET MILESTONE$(1)=A0$(1,6)
1060 PRINT @(COLUMN,11),MILESTONE$,
1100 REM " --- Only keyed files are exported
1110 IF POS(A1$(37,1)="MDS")=0 THEN GOTO 3900
1150 REM " --- Check export flag
1160 IF A1$(39,1)<>"Y" THEN GOTO 3900
1200 REM " --- Convert file information to BBx format
1210 LET FILETYPE=6,RECLEN=A[2]
1400 REM " --- Position DDM-03
1490 READ (DDM03_DEV,KEY=A0$,DOM=1500)
1500 REM " --- Read next DDM-03 Record ID"
1510 LET K$=KEY(DDM03_DEV,END=3900)
1515 IF POS(A0$=K$)<>1 THEN GOTO 3900
1520 READ (DDM03_DEV)IOL=DDM03A
1530 LET MILESTONE$(1)=B0$(1,6)+" "+B0$(7,1)
1540 PRINT @(COLUMN,11),MILESTONE$,
1600 REM " --- Obtain file information
1610 LET MODDATE$=B1$(31,6),ALIAS$=FNP$(B1$(37,12))
1620 IF ALIAS$<>"" THEN GOTO 1700
1630 LET ALIAS$=B0$
1640 LET P=POS("-"=ALIAS$)
1650 IF P=0 THEN GOTO 1700
1660 LET ALIAS$=ALIAS$(1,P-1)+ALIAS$(P+1)
1690 GOTO 1640
1900 REM " --- Position DDM-04 Field Detail file
1910 DIM DATANAME$[999],DESCRIPTION$[999],LENGTH[999],OFFSET[999]
1920 DIM TYPE$(999,"C"),FS$(999,"N"),FIELD[999],KEYSEG$(48,"N")
1930 DIM MASK_SYS$[999],MASK_TYPE$[999],MASK_SPEC$[999],EXP$[999],CMP$[999]
1940 LET NUMBER=0,RECORDS=0,OFFSET=0,KEYFLD=0,KEYLEN=0,FIELD[1]=1
1990 READ (DDM04_DEV,KEY=B0$,DOM=2000)
2000 REM " --- Read next DDM-04 detail record
2010 LET K$=KEY(DDM04_DEV,END=2500)
2020 IF POS(B0$=K$)<>1 THEN GOTO 2500
2030 READ (DDM04_DEV)IOL=DDM04A
2040 LET RECORDS=RECORDS+1
2050 LET MILESTONE$(1)=C0$(1,6)+" "+C0$(7,1)+" "+C0$(8,3)
2060 PRINT @(COLUMN,11),MILESTONE$,
2100 REM " --- Retrieve DDM-01 record (if necessary)
2105 IF RECORDS>0 THEN IF X0$(1,12)=C1$(1,12) THEN GOTO 2200
2110 LET X0$(1)=C1$
2115 FIND (DDM01_DEV,KEY=X0$,DOM=2490)IOL=DDM01A
2120 IF FNP$(C1$(17,30))="" THEN LET C1$(17,30)=X1$(1,30)
2125 IF FNP$(C1$(55,18))="" THEN LET C1$(55,18)=X1$(38,18)
2130 IF FNP$(C1$(73,1))="" THEN LET C1$(73,1)=X1$(80,1)
2135 IF FNP$(C1$(74,6))="" THEN LET C1$(74,6)=X1$(81,6)
2140 IF FNP$(C1$(80,1))="" THEN LET C1$(80,1)=X1$(87,1)
2145 IF FNP$(C1$(81,6))="" THEN LET C1$(81,6)=X1$(88,6)
2150 REM " --- Get field compression and expansion instrucitons
2160 LET Y0$(1)=X1$(68,12),Y2$(1)=""
2170 FIND (DDM10_DEV,KEY=Y0$,DOM=2180)IOL=DDM10A
2180 LET Z0$(1)=X1$(56,12),Z2$(1)=""
2190 FIND (DDM20_DEV,KEY=Z0$,DOM=2200)IOL=DDM20A
2200 REM " --- Calculate field length and number of occurences
2210 LET L=X[0],TIMES=1
2230 IF C[1]>0 THEN LET L=L*C[1]
2240 IF C[2]>1 THEN LET TIMES=C[2]
2300 REM " --- Generate a field entry for each occurence
2310 FOR OCCURS=1 TO TIMES
2320 LET S$="N"
2330 IF POS(C1$(54,1)="XY") THEN LET S$="Y"
2340 IF C1$(54,1)="E" THEN IF OCCURS=TIMES THEN LET S$="Y"
2350 REM " --- Store field information
2355 LET NUMBER=NUMBER+1
2360 LET DATANAME$[NUMBER]=FNP$(C1$(1,12)),DESCRIPTION$[NUMBER]=FNP$(C1$(17,30))
2370 LET MASK_SYS$[NUMBER]=C1$(55,2),MASK_TYPE$[NUMBER]=C1$(57,1),MASK_SPEC$[NUMBER]=FNP$(C1$(58,15))
2380 LET CMP$[NUMBER]=FNP$(Y2$),EXP$[NUMBER]=FNP$(Z2$)
2390 LET TYPE$(NUMBER,1)=X1$(37,1),FS$(NUMBER,1)=S$,LENGTH[NUMBER]=L,OFFSET[NUMBER]=O
2400 REM " --- Recalculate field offset
2410 IF S$="N" THEN LET O=O+L,FIELD[NUMBER+1]=FIELD[NUMBER]
2420 IF S$="Y" THEN LET O=0,FIELD[NUMBER+1]=FIELD[NUMBER]+1
2430 IF POS(C1$(54,1)="KX")=0 THEN GOTO 2450
2440 LET KEYSEG$(NUMBER,1)="Y",KEYFLD=NUMBER,KEYLEN=KEYLEN+LENGTH[NUMBER]
2450 NEXT OCCURS
2490 GOTO 2000
2500 REM " --- Check for duplicate field names
2510 IF NUMBER=0 THEN GOTO 3800
2520 FOR N=1 TO NUMBER
2530 LET TIMES=1
2540 FOR X=1 TO NUMBER
2550 IF X=N THEN GOTO 2580
2560 IF DATANAME$[X]<>DATANAME$[N] THEN GOTO 2580
2570 LET TIMES=TIMES+1,DATANAME$[X]=DATANAME$[X]+"_"+STR(TIMES)
2580 NEXT X
2585 IF TIMES>1 THEN LET DATANAME$[N]=DATANAME$[N]+"_1"
2590 NEXT N
2600 REM " --- Check field names for invalid characters
2610 FOR N=1 TO NUMBER
2620 LET X$=DATANAME$[N],N$="",L=LEN(X$),TIMES=0
2630 FOR X=1 TO L
2640 LET CHAR$=X$(X,1)
2650 IF POS(CHAR$=VALID$)=0 THEN LET CHAR$="_"
2660 IF X=1 THEN IF POS(CHAR$=ALPHA$)=0 THEN LET CHAR$="X"+CHAR$
2670 LET N$=N$+CHAR$
2680 NEXT X
2685 LET DATANAME$[N]=N$
2690 NEXT N
3000 REM " --- Export File Information to BASIS Data Dictionary"
3010 REM " --- Remove any existing file definition
3020 CALL BBEXT$+"_ddfil.utl",ERR=3030,ALIAS$,2,$$,"s"
3030 REM " --- Set file template fields
3040 GOSUB 6000
3050 REM " --- Export complete file template
3060 CALL BBEXT$+"_ddfil.utl",FILE$,1,"",""
3100 REM " --- Export Field Information to BASIS Data Dictionary"
3110 FOR X=1 TO NUMBER
3120 LET MILESTONE$(1)=STR(X:"000-")+DATANAME$[X]
3130 PRINT @(COLUMN,11),MILESTONE$,
3150 REM " --- Set working variables
3160 LET FLDDESC$=DESCRIPTION$[X],L=LEN(FLDDESC$),EXPAND$="",COMPRESS$=""
3170 LET IMASK$="",BMASK$="",OMASK$="",PREC=0,SEPARATOR=0,TERM=0
3200 REM " --- Data Compression & Expansion
3210 IF POS(TYPE$(X,1)="NMZ")=0 THEN LET COMPRESS$="CVS(%,2)+FILL("+STR(LENGTH[X])+"-LEN(%))"; REM "Left justify and blank fill fields
3220 IF TYPE$(X,1)<>"D" THEN GOTO 3240
3225 IF LENGTH[X]=2 THEN LET EXPAND$=EXPYY$,COMPRESS$=CMPYY$
3230 IF LENGTH[X]=3 THEN LET EXPAND$=EXPYMD$,COMPRESS$=CMPYMD$
3234 IF LENGTH[X]=6 THEN LET EXPAND$=EXPYYMMDD$,COMPRESS$=CMPYYMMDD$
3240 IF EXP$[X]<>"" THEN LET EXPAND$=EXP$[X]
3245 IF CMP$[X]<>"" THEN LET COMPRESS$=CMP$[X]
3250 REM " --- Masked fields
3255 IF TYPE$(X,1)="Z" THEN DIM IMASK$(LENGTH[X],"#"),BMASK$(LENGTH[X],"0"),OMASK$(LENGTH[X],"0")
3260 IF POS(TYPE$(X,1)="HMN")=0 THEN GOTO 3300
3270 LET IMASK$=MASK_SPEC$[X]
3280 CALL "DDC.MA",N0$,MASK_SYS$[X],MASK_TYPE$[X],IMASK$,SYS01_DEV
3290 LET BMASK$=IMASK$,OMASK$=IMASK$
3300 REM " --- Numeric fields
3305 IF TYPE$(X,1)<>"N" THEN GOTO 3350
3310 LET PREC=DEFAULT_PREC,MODULE$=MASK_SYS$[X]
3320 IF FNP$(MODULE$)="" THEN LET MODULE$=A0$(1,2); REM "Use file's module if alternate not given
3330 IF POS(MODULE$="PR",2) THEN LET PREC=PR_PREC
3340 IF POS(MODULE$="BMIVMPOPPOSAWO",2) THEN LET PREC=IV_PREC
3350 REM " --- Field separator?
3360 IF FS$(X,1)<>"Y" THEN GOTO 3400
3370 LET SEPARATOR=ASC($80$),TERM=10
3400 REM " --- Set BASIS Data Dictionary field template fields
3410 IF TYPE$(X,1)<>"N" THEN LET TYPE$(X,1)="C"
3420 GOSUB 6300
3450 REM " --- Export complete field template
3460 CALL BBEXT$+"_ddfld.utl",FIELD$,1
3490 NEXT X
3600 REM " --- Export Index Information to BASIS Data Dictionary"
3610 LET INDEXNAME$=ALIAS$+"_KEY"
3620 FOR X=1 TO KEYFLD
3630 IF KEYSEG$(X,1)<>"Y" THEN GOTO 3690
3640 REM " --- Set file template fields
3650 GOSUB 6700
3660 REM " --- Export complete field template
3670 CALL BBEXT$+"_ddseg.utl",INDEX$,1
3690 NEXT X
3800 REM " --- Loop back for next DDM-03 Record ID record
3890 GOTO 1500
3900 REM " --- Loop back for next SYM-03 Header record
3990 GOTO 1000
4000 REM " --- All done
4090 GOTO 9900
6000 REM " --- Initialize BASIS Data Dictionary file template fields
6005 DIM FILE$:STBL("#FILECOMP")
6010 LET FILE.FILE_ID$=ALIAS$
6020 LET FILE.DESCR$=A1$(1,30)
6030 LET FILE.PATH$="(DATA)"+A0$
6040 LET FILE.CREATOR$=D1$(1,16)
6050 LET FILE.MODIFIER$=D1$(1,16)
6060 LET FILE.FORM$=""
6070 LET FILE.NARROW$=""
6080 LET FILE.WIDE$=""
6090 LET FILE.PRE_OPEN$=""
6100 LET FILE.POST_OPEN$=""
6110 LET FILE.PRE_CLOSE$=""
6120 LET FILE.POST_CLOSE$=""
6130 LET FILE.APP1$=""
6140 LET FILE.APP2$=""
6150 LET FILE.APP3$=""
6160 LET FILE.FILE_TYPE=FILETYPE
6170 LET FILE.KEYSIZ=KEYLEN
6180 LET FILE.RECLEN=RECLEN
6190 LET FILE.RECNUM=0
6200 LET FILE.M_DATE=JUL(1900+FNYY_YEAR(MODDATE$(1,2)),NUM(MODDATE$(3,2)),NUM(MODDATE$(5,2)))
6210 LET FILE.M_TIME=0
6220 LET FILE.C_DATE=JUL(1900+YY,MM,DD)
6230 LET FILE.C_TIME=INT(TIM*3600)
6240 LET FILE.FLAGS=0
6290 RETURN 
6300 REM " --- Initialize BASIS Data Dictionary field template fields
6305 DIM FIELD$:STBL("#FIELDCOMP")
6310 LET FIELD.FILE_ID$=ALIAS$
6320 LET FIELD.FIELD_ID$=DATANAME$[X]
6330 LET FIELD.BTYPE$=TYPE$(X,1)
6340 LET FIELD.TITLE$=DATANAME$[X]
6350 LET FIELD.LABEL$=FLDDESC$+":"
6360 LET FIELD.DESCR$=FLDDESC$
6370 LET FIELD.HELPFILE$=""
6380 LET FIELD.PROMPT$="Enter "+FLDDESC$(1,MIN(L,24))
6390 LET FIELD.DEFAULT$=""
6400 LET FIELD.IMASK$=IMASK$
6410 LET FIELD.BMASK$=BMASK$
6420 LET FIELD.OMASK$=OMASK$
6430 LET FIELD.INPUT_FLAGS$=""
6440 LET FIELD.ALT_INPUT$=""
6450 LET FIELD.EXPAND$=EXPAND$
6460 LET FIELD.COMPRESS$=COMPRESS$
6470 LET FIELD.SEARCH$=""
6480 LET FIELD.APP1$=""
6490 LET FIELD.APP2$=""
6500 LET FIELD.APP3$=""
6510 LET FIELD.SEQ=X
6520 LET FIELD.FIELD_TYPE$=TYPE$(X,1)
6530 LET FIELD.FLAG=SEPARATOR
6540 LET FIELD.TERM=TERM
6550 LET FIELD.DIM=1
6560 LET FIELD.NUM=FIELD[X]
6570 LET FIELD.OFFSET=OFFSET[X]
6580 LET FIELD.LENGTH=LENGTH[X]
6590 LET FIELD.PREC=PREC
6600 LET FIELD.MAXLEN=LENGTH[X]
6610 LET FIELD.COLS=LENGTH[X]
6620 LET FIELD.ROWS=1
6690 RETURN 
6700 REM " --- Initialize BASIS Data Dictionary index template fields
6705 DIM INDEX$:STBL("#INDEXREC")
6710 LET INDEX.FILE_ID$=ALIAS$
6720 LET INDEX.INDEX_ID$=INDEXNAME$
6730 LET INDEX.FIELD_ID$=DATANAME$[X]
6740 LET INDEX.KNUM=0
6750 LET INDEX.SEQ=X-1
6760 LET INDEX.NUM=FIELD[X]
6770 LET INDEX.OFFSET=OFFSET[X]
6780 LET INDEX.LENGTH=LENGTH[X]
6790 LET INDEX.ATTR=0
6800 LET INDEX.DESCR$=DESCRIPTION$[X]
6810 LET INDEX.PATH$=""
6820 LET INDEX.SELECT$=""
6830 LET INDEX.ACCESS$=""
6890 RETURN 
8000 REM " --- Functions
8080 DEF FNP$(Q$)=CVS(Q$,2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9205 SETESC 9000
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9400 REM " --- Dictionary/EUS Error"
9410 DIM MESSAGE$[1]
9420 LET MESSAGE$[0]="The BASIS Data Dictionary Cannot Be Opened (<Enter>=Continue)"
9430 CALL "SYC.XA",1,MESSAGE$[ALL],0,22,-1,V$,V3
9490 GOTO 9900
9900 REM " --- Return to menu"
9910 CALL BBEXT$+"_ddclose.utl",ERR=9950
9950 RUN "SYS.AA"
9999 END
