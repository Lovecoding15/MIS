0010 REM "DDM - Record Layout Maintenance (Duplicate Block)"
0020 REM "Program DDM.BE"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.1.0 - 01Apr99 |"
0026 REM "|         Copyright (c) 1999 ADD+ON Software, Inc.          |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists
0210 DDM01A: IOLIST X0$(1),X1$(1),X[ALL]
0230 DDM03A: IOLIST B0$(1),B1$(1),B[ALL]
0240 DDM04A: IOLIST C0$(1),C1$(1),C[ALL]
0250 DDM06A: IOLIST XREF$
0260 DDM14A: IOLIST D0$,D1$
0280 SYM03A: IOLIST A0$(1),A1$(1),A2$(1),A[ALL]
0500 REM " --- Initializations
0550 LET BEGBLOCK$="",ENDBLOCK$="",TIMES=1,STARTING$="",I0=0
0590 LET C0$(1)=B0$
0700 REM " --- Background
0750 PRINT @(0,L0-1),'CE','SB',@(18,L0),"Block Beginning Field",@(21,L0+1),"Block Ending Field",@(24,L0+2),"Number of Times",@(22,L0+3),"Starting at Field",'SF',
1000 REM " --- Beginning Field
1010 LET V0$="Z",V1$="C",V2$=BEGBLOCK$,V3$="",V0=3,V1=40,V2=L0,I0=0
1020 LET V4$="Enter the number of the first field of the block to be duplicated (<F1>=First)"
1030 GOSUB 7000
1040 ON V3 GOTO 1100,1120,1000,1100,4900
1100 REM 
1110 IF V$<>"" THEN GOTO 1150
1120 LET C0$(1)=B0$
1125 READ (DDM04_DEV,KEY=C0$,DOM=1130)
1130 LET V$=KEY(DDM04_DEV,END=1000)
1140 IF V$(1,LEN(B0$))<>B0$ THEN GOTO 1000
1145 LET V$=V$(8)
1150 LET C0$(8)=V$
1155 FIND (DDM04_DEV,KEY=C0$,DOM=1000)IOL=DDM04A
1160 FIND (DDM01_DEV,KEY=C1$(1,12),DOM=1170)IOL=DDM01A
1170 IF FNP$(C1$(17,30))<>"" THEN LET X1$(1,30)=C1$(17,30)
1180 LET BEGBLOCK$=C0$(8,3)
1185 PRINT @(V1,V2),BEGBLOCK$," ",X1$(1,30)
1190 GOTO 3900
1200 REM " --- Ending Field
1210 LET V0$="Z",V1$="C",V2$=ENDBLOCK$,V3$="",V0=3,V1=40,V2=L0+1
1220 LET V4$="Enter the number of the last field of the block to be duplicated (<F1>=Last)"
1230 GOSUB 7000
1240 ON V3 GOTO 1300,1320,3900,1300,4900
1300 REM 
1310 IF V$<>"" THEN GOTO 1350
1320 LET C0$(1)=B0$,C0$(8)=$FF$
1325 READ (DDM04_DEV,KEY=C0$,DOM=1330)
1330 LET V$=KEYP(DDM04_DEV,END=1200)
1340 IF V$(1,LEN(B0$))<>B0$ THEN GOTO 1200
1345 LET V$=V$(8)
1350 LET C0$(8)=V$
1355 FIND (DDM04_DEV,KEY=C0$,DOM=1200)IOL=DDM04A
1360 FIND (DDM01_DEV,KEY=C1$(1,12),DOM=1365)IOL=DDM01A
1365 IF FNP$(C1$(17,30))<>"" THEN LET X1$(1,30)=C1$(17,30)
1370 IF C0$(8,3)<BEGBLOCK$ THEN GOTO 1200
1380 LET ENDBLOCK$=C0$(8,3)
1385 PRINT @(V1,V2),ENDBLOCK$," ",X1$(1,30)
1390 GOTO 3900
1400 REM " --- Number of Times
1410 LET V0$="N",V1$="C",V2$=STR(TIMES),V3$="#0",V0=2,V1=40,V2=L0+2
1420 LET V4$="Enter the number of times that the block should be duplicated"
1430 GOSUB 7000
1440 ON V3 GOTO 1450,1400,3900,1400,4900
1450 IF V<1 THEN GOTO 1400
1470 LET TIMES=V
1480 PRINT @(V1,V2),TIMES:"#0"
1490 GOTO 3900
1800 REM " --- Starting at Field
1810 LET V0$="Z",V1$="C",V2$=STARTING$,V3$="",V0=3,V1=40,V2=L0+3
1820 LET V4$="Enter the field number to start the block duplication at (<F1>=Last)"
1830 GOSUB 7000
1840 ON V3 GOTO 1900,1850,3900,1800,4000
1850 LET C0$(1)=B0$,C0$(8)=$FF$
1860 READ (DDM04_DEV,KEY=C0$,DOM=1870)
1870 LET V$=KEYP(DDM04_DEV,END=1800)
1880 IF V$(1,LEN(B0$))<>B0$ THEN GOTO 1800
1890 LET V$=V$(8),V$=STR(NUM(V$)+10:"000")
1900 REM 
1910 IF NUM(V$)<NUM(ENDBLOCK$) THEN GOTO 1800
1920 LET STARTING$=V$
1930 PRINT @(V1,V2),STARTING$
1990 GOTO 3900
3900 REM " --- Next field
3915 IF V3=4 THEN GOTO 4000
3920 IF V3<>2 THEN GOTO 3950
3930 IF I0>0 THEN LET I0=I0-1
3940 GOTO 3960
3950 LET I0=I0+1
3960 ON I0 GOTO 1000,1200,1400,1800,3990
3990 LET I0=0
4000 REM " --- Correct?
4010 LET V4$="Is The Above Information Correct (Y/N)?"
4020 LET V0$="S",V1$="CR",V2$="Y",V3$="",V0=1,V2=22,V1=FNV(V4$)
4030 GOSUB 7000
4040 ON V3 GOTO 4050,4000,4000,4000,4900
4090 ON POS(V$="YN") GOTO 4000,4100,1000
4100 REM " --- Initializations
4110 LET STARTING=NUM(STARTING$),SEQUENCE=STARTING,INCREMENT=10,NUMBER=0
4150 PRINT @(31,22),"Updating",
4180 LET C0$(1)=B0$+BEGBLOCK$,K$=C0$
4190 GOTO 4250
4200 REM " --- Determine block size
4210 LET K$=KEY(DDM04_DEV,END=4300)
4220 IF K$(1,LEN(B0$))<>B0$ THEN GOTO 4300
4240 IF NUM(B0$(8))>NUM(ENDBLOCK$) THEN GOTO 4300
4250 READ (DDM04_DEV,KEY=K$)
4260 LET NUMBER=NUMBER+1
4290 GOTO 4200
4300 REM " --- Determine sequence increment
4310 IF NUMBER<1 THEN GOTO 4900
4315 LET INCREMENT=10,LAST=SEQUENCE+NUMBER*INCREMENT*TIMES
4320 IF LAST<1000 THEN GOTO 4600
4325 LET INCREMENT=5,LAST=SEQUENCE+NUMBER*INCREMENT*TIMES
4330 IF LAST<1000 THEN GOTO 4600
4340 FOR X=3 TO 1 STEP -1
4345 LET INCREMENT=X,LAST=SEQUENCE+NUMBER*INCREMENT*TIMES
4350 IF LAST<1000 THEN EXITTO 4600
4355 NEXT X
4390 GOTO 4900
4600 REM " --- Duplicate block TIMES times
4610 FOR X=1 TO TIMES
4680 LET C0$(1)=B0$+BEGBLOCK$,K$=C0$
4690 READ (DDM04_DEV,KEY=C0$(1,LEN(C0$)-1),DOM=4700)
4700 REM " --- Read next DDM-04 record
4710 LET K$=KEY(DDM04_DEV,END=4800)
4715 IF K$(1,LEN(B0$))<>B0$ THEN GOTO 4800
4720 IF NUM(K$(8))>NUM(ENDBLOCK$) THEN GOTO 4800
4725 READ (DDM04_DEV,KEY=K$)IOL=DDM04A
4730 LET C0$(8,3)=STR(SEQUENCE:"000"),X$=C0$,SEQUENCE=SEQUENCE+INCREMENT
4735 PRINT @(40,22),C0$(8),
4740 READ (DDM04_DEV,KEY=C0$,DOM=4770)IOL=DDM04A
4745 LET O0$=C0$,O1$=C1$,O[0]=C[0],O[1]=C[1]
4750 GOSUB 6200
4760 GOSUB 6400
4770 READ (DDM04_DEV,KEY=K$)IOL=DDM04A
4775 LET C0$(1)=X$
4780 WRITE (DDM04_DEV2,KEY=C0$)IOL=DDM04A
4785 GOSUB 6300
4790 GOSUB 6500
4795 GOTO 4700
4800 REM 
4890 NEXT X
4900 REM " --- Run detail overlay
4910 GOSUB 6800
4990 RUN "DDM.BC"
6200 REM " --- Remove old field cross-reference
6210 LET X0$(1)=O1$(1),X1$(1,30)=O1$(17,30)
6220 LET X1$(37,1)=O1$(53,1),X[0]=O[0]
6230 FIND (DDM01_DEV,KEY=X0$,DOM=6240)IOL=DDM01A
6240 LET LENGTH=X[0]
6250 IF O[1]>0 THEN LET LENGTH=LENGTH*O[1]
6260 LET XREF$(1)=X0$(1,12)+X1$(1,30)+X1$(37,1)+STR(LENGTH:"0000")+O0$
6270 REMOVE (DDM06_DEV,KEY=XREF$,DOM=6280)
6290 RETURN 
6300 REM " --- Write new field cross-reference
6310 LET X0$(1)=C1$(1),X1$(1)=""
6320 LET X[0]=0
6330 FIND (DDM01_DEV,KEY=X0$,DOM=6340)IOL=DDM01A
6340 LET LENGTH=X[0]
6350 IF C[1]>0 THEN LET LENGTH=LENGTH*C[1]
6355 IF FNP$(C1$(17,30))<>"" THEN LET X1$(1,30)=C1$(17,30)
6360 LET XREF$(1)=X0$(1,12)+X1$(1,30)+X1$(37,1)+STR(LENGTH:"0000")+C0$
6370 WRITE (DDM06_DEV,KEY=XREF$)IOL=DDM06A
6390 RETURN 
6400 REM " --- Remove Old Data Field Comments
6410 READ (DDM14_DEV,KEY=O0$,DOM=6420)
6420 LET DDM14_K$=KEY(DDM14_DEV,END=6490)
6430 IF POS(O0$=DDM14_K$)<>1 THEN GOTO 6490
6440 REMOVE (DDM14_DEV,KEY=DDM14_K$)
6450 GOTO 6420
6490 RETURN 
6500 REM " --- Copy Data Field Comments
6510 READ (DDM14_DEV,KEY=K$,DOM=6520)
6520 LET DDM14_K$=KEY(DDM14_DEV,END=6590)
6530 IF POS(K$=DDM14_K$)<>1 THEN GOTO 6590
6540 FIND (DDM14_DEV,KEY=DDM14_K$)IOL=DDM14A
6550 LET D0$(1,10)=C0$
6560 WRITE (DDM14_DEV,KEY=D0$)IOL=DDM14A
6570 READ (DDM14_DEV,KEY=DDM14_K$)
6580 GOTO 6520
6590 RETURN 
6800 REM " --- Update Last Revision Date on Header/Record ID Records
6810 LET A0$(1)=C0$(1,6),B0$(1)=C0$(1,7)
6820 FIND (SYM03_DEV,KEY=A0$)IOL=SYM03A
6830 FIND (DDM03_DEV,KEY=B0$)IOL=DDM03A
6840 LET A1$(31,6)=REVISION$,B1$(31,6)=REVISION$
6850 WRITE (SYM03_DEV,KEY=A0$)IOL=SYM03A
6860 WRITE (DDM03_DEV,KEY=B0$)IOL=DDM03A
6890 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions
8090 DEF FNP$(Q$)=CVS(Q$,2)
8095 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to menu"
9950 RUN "SYS.AA"
9999 END
