0010 REM "BMX - Convert 5.x BM Files to 6.0 Format"
0020 REM "Program BMX60A"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0060 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=13
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0115 LET FILES$[1]="SYS-01",FILES$[2]="BMM-01",FILES$[3]="BMM-02"
0120 LET FILES$[4]="BMM-03",FILES$[5]="BMM-05",FILES$[6]="BMM-09"
0125 LET FILES$[7]="BMM-10",FILES$[8]="BMM-22",FILES$[9]="BMM-23"
0130 LET FILES$[10]="BMM-24",FILES$[11]="BMM-25"
0160 CALL "SYC.DA",1,1,11,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0165 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],BMM01_DEV=CHANNELS[2],BMM02_DEV=CHANNELS[3]
0172 LET BMM03_DEV=CHANNELS[4],BMM05_DEV=CHANNELS[5],BMM09_DEV=CHANNELS[6]
0174 LET BMM10_DEV=CHANNELS[7],BMM22_DEV=CHANNELS[8],BMM23_DEV=CHANNELS[9]
0176 LET BMM24_DEV=CHANNELS[10],BMM25_DEV=CHANNELS[11]
0200 REM " --- IOLists
0210 BMM01A: IOLIST A0$(1),A1$(1),A2$(1),A[ALL]
0215 BMM01AW: IOLIST A0W$(1),A1$(1),A2$(1),A[ALL]
0220 BMM02A: IOLIST B0$(1),B1$(1),B2$(1),B[ALL]
0230 BMM03A: IOLIST C0$(1),C1$(1),C[ALL]
0250 BMM05A: IOLIST R0$(1),R1$(1),R2$(1),R3$(1),R4$(1),A[ALL]
0260 BMM09A: IOLIST U0$(1),U1$(1)
0265 BMM10A: IOLIST V0$(1),V1$(1),V2$(1),V3$(1)
0270 BMM22A: IOLIST W0$(1),W1$(1),W2$(1),W[ALL]
0275 BMM23A: IOLIST X0$(1),X1$(1),X[ALL]
0280 BMM24A: IOLIST Y0$(1),Y1$(1)
0295 BMM25A: IOLIST Z0$(1),Z1$(1),Z2$(1),Z3$(1),Z4$(1),Z[ALL]
0300 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0310 IVS01A: IOLIST *,*,I2$(1)
0400 REM " --- Parameters"
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N1$=F4$,N2$="BM",N4$=F5$
0500 REM " --- Initializations"
0505 PRECISION 14
0550 LET ADDON$="",DEALER$=""
0600 REM " --- Display Warning"
0610 CALL "SYC60A",N2$,SYS01_DEV,STATUS
0620 IF STATUS THEN GOTO 9900
0900 REM " --- Maintenance Files Initalizations
0970 LET X$="BOM Maintenance Files",X=28
0980 GOSUB SCRN_UPDATE
1000 REM " --- BMM-01"
1020 READ_BMM01: 
1030 LET K$=KEY(BMM01_DEV,END=READ_BMM02)
1040 IF POS(N0$=K$)<>1 THEN GOSUB PARAMETERS
1050 IF IV_PARAMS$="N" OR LEN(K$)<2+P[0] THEN GOTO DEL_BMM01
1060 IF LEN(K$)=22 THEN READ (BMM01_DEV); GOTO LOOPUPM01
1070 PRINT @(COLUMN,11),K$(1,2)," ",K$(3,P[0]),
1080 DIM A0$(52),A0W$(52),A1$(30),A2$(57),A[11]
1090 READ (BMM01_DEV)IOL=BMM01A
1100 LET A0W$(1)=A0$(1,2)+A0$(3,P[0]),A0W$(23)=A0$(3+P[0])
1110 REM " --- Update BMM-01
1120 WRITE (BMM01_DEV,KEY=A0W$(1,22))IOL=BMM01AW
1130 DEL_BMM01: 
1140 REMOVE (BMM01_DEV,KEY=K$,DOM=LOOPUPM01)
1150 LOOPUPM01: 
1160 GOTO READ_BMM01
1200 REM " --- BMM-02"
1220 READ_BMM02: 
1230 LET K$=KEY(BMM02_DEV,END=READ_BMM03)
1240 IF POS(N0$=K$)<>1 THEN GOSUB PARAMETERS
1250 IF IV_PARAMS$="N" OR LEN(K$)<5+P[0] THEN GOTO DEL_BMM02
1260 IF K$(1,2+P[0])<>LAST$ THEN LET LAST$=K$(1,2+P[0]); PRINT @(COLUMN,11),K$(1,2)," ",K$(3,P[0]),
1270 DIM B0$(25),B1$(20),B2$(114),B[10],D0$(45)
1280 READ (BMM02_DEV)IOL=BMM02A
1290 IF LEN(K$)=25 AND LEN(B1$)=20 THEN LET KEEPIT$="Y"; GOTO DEL_BMM02
1300 LET B0$(1)=K$(1,2)+K$(3,P[0]),B0$(23)=K$(3+P[0])
1310 REM " --- Update BMM-02
1320 WRITE (BMM02_DEV,KEY=B0$)IOL=BMM02A
1340 DEL_BMM02: 
1345 IF KEEPIT$="Y" THEN LET KEEPIT$="N"; GOTO LOOPUPM02
1350 REMOVE (BMM02_DEV,KEY=K$)
1360 LOOPUPM02: 
1370 GOTO READ_BMM02
1400 REM " --- BMM-03"
1420 READ_BMM03: 
1430 LET K$=KEY(BMM03_DEV,END=READ_BMM05)
1455 IF POS(N0$=K$)<>1 THEN GOSUB PARAMETERS
1460 IF IV_PARAMS$="N" OR LEN(K$)<5+P[0] THEN GOTO DEL_BMM03
1470 IF K$(1,2+P[0])<>LAST$ THEN LET LAST$=K$(1,2+P[0]); PRINT @(COLUMN,11),K$(1,2)," ",K$(3,P[0]),
1480 DIM C0$(25),C1$(110),C[11],S0$(28)
1490 READ (BMM03_DEV)IOL=BMM03A
1500 LET C0$(1)=K$(1,2)+K$(3,P[0]),C0$(23)=K$(3+P[0])
1505 IF LEN(K$)=25 THEN LET KEEPIT$="Y"; GOTO DEL_BMM03
1510 REM " --- Update BMM-03
1520 WRITE (BMM03_DEV,KEY=C0$)IOL=BMM03A
1540 DEL_BMM03: 
1545 IF KEEPIT$="Y" THEN LET KEEPIT$="N"; GOTO LOOPUPM03
1550 REMOVE (BMM03_DEV,KEY=K$)
1560 LOOPUPM03: 
1570 GOTO READ_BMM03
1800 REM " --- BMM-05"
1830 READ_BMM05: 
1840 LET K$=KEY(BMM05_DEV,END=READ_BMM09)
1850 IF LEN(K$)=25 THEN READ (BMM05_DEV); GOTO LOOPUPM05
1860 IF POS(N0$=K$)<>1 THEN GOSUB PARAMETERS
1870 IF IV_PARAMS$="N" OR LEN(K$)<5+P[0] THEN GOTO DEL_BMM05
1880 IF K$(1,2+P[0])<>LAST$ THEN LET LAST$=K$(1,2+P[0]); PRINT @(COLUMN,11),K$(1,2)," ",K$(3,P[0]),
1890 DIM R0$(25),R1$(69),R2$(6),R3$(20),R4$(20),R[9]
1900 READ (BMM05_DEV)IOL=BMM05A
1910 LET R0$(1)=K$(1,2)+K$(3,P[0]),R0$(23)=K$(3+P[0])
1920 REM " --- Update BMM-05
1930 WRITE (BMM05_DEV,KEY=R0$)IOL=BMM05A
1940 DEL_BMM05: 
1950 REMOVE (BMM05_DEV,KEY=K$)
1960 LOOPUPM05: 
1970 GOTO READ_BMM05
2200 REM " --- BMM-09"
2230 READ_BMM09: 
2240 LET K$=KEY(BMM09_DEV,END=READ_BMM10)
2250 IF LEN(K$)=24 THEN READ (BMM09_DEV); GOTO LOOPUPM09
2260 IF POS(N0$=K$)<>1 THEN GOSUB PARAMETERS
2270 IF IV_PARAMS$="N" OR LEN(K$)<4+P[0] THEN GOTO DEL_BMM09
2280 IF K$(1,2+P[0])<>LAST$ THEN LET LAST$=K$(1,2+P[0]); PRINT @(COLUMN,11),K$(1,2)," ",K$(3,P[0]),
2290 DIM U0$(24),U1$(48)
2300 READ (BMM09_DEV)IOL=BMM09A
2310 LET U0$(1)=K$(1,2)+K$(3,P[0]),U0$(23)=K$(3+P[0])
2320 REM " --- Update BMM-09
2330 WRITE (BMM09_DEV,KEY=U0$)IOL=BMM09A
2340 DEL_BMM09: 
2350 REMOVE (BMM09_DEV,KEY=K$)
2360 LOOPUPM09: 
2370 GOTO READ_BMM09
2400 REM " --- BMM-10"
2430 READ_BMM10: 
2440 LET K$=KEY(BMM10_DEV,END=READ_BMM22)
2460 IF POS(N0$=K$)<>1 THEN GOSUB PARAMETERS
2470 IF IV_PARAMS$="N" THEN REMOVE (BMM10_DEV,KEY=K$); GOTO LOOPUPM10
2480 PRINT @(COLUMN,11),K$(1,2)," ",K$(3,1),
2490 DIM V0$(4),V1$(20),V2$(20),V3$(3)
2500 READ (BMM10_DEV)IOL=BMM10A
2520 REM " --- Update BMM-10"
2530 WRITE (BMM10_DEV,KEY=V0$(1,3))IOL=BMM10A
2560 LOOPUPM10: 
2570 GOTO READ_BMM10
2600 REM " --- BMM-22"
2630 READ_BMM22: 
2640 LET K$=KEY(BMM22_DEV,END=READ_BMM23)
2660 IF POS(N0$=K$)<>1 THEN GOSUB PARAMETERS
2670 IF IV_PARAMS$="N" OR LEN(K$)<5+P[0] THEN GOTO DEL_BMM22
2680 IF K$(1,2+P[0])<>LAST$ THEN LET LAST$=K$(1,2+P[0]); PRINT @(COLUMN,11),K$(1,2)," ",K$(3,P[0]),
2690 DIM W0$(25),W1$(20),W2$(114),W[10]
2700 READ (BMM22_DEV)IOL=BMM22A
2705 IF LEN(K$)=25 AND LEN(W1$)=20 THEN GOTO LOOPUPM22
2710 LET W0$(1)=K$(1,2)+K$(3,P[0]),W0$(23)=K$(3+P[0])
2720 REM " --- Update BMM-22"
2730 WRITE (BMM22_DEV,KEY=W0$)IOL=BMM22A
2740 DEL_BMM22: 
2750 REMOVE (BMM22_DEV,KEY=K$)
2760 LOOPUPM22: 
2770 GOTO READ_BMM22
2800 REM " --- BMM-23"
2830 READ_BMM23: 
2840 LET K$=KEY(BMM23_DEV,END=READ_BMM24)
2850 IF LEN(K$)=25 THEN READ (BMM23_DEV); GOTO LOOPUPM23
2860 IF POS(N0$=K$)<>1 THEN GOSUB PARAMETERS
2870 IF IV_PARAMS$="N" OR LEN(K$)<5+P[0] THEN GOTO DEL_BMM23
2880 IF K$(1,2+P[0])<>LAST$ THEN LET LAST$=K$(1,2+P[0]); PRINT @(COLUMN,11),K$(1,2)," ",K$(3,P[0]),
2890 DIM X0$(25),X1$(110),X[11]
2900 READ (BMM23_DEV)IOL=BMM23A
2910 LET X0$(1)=K$(1,2)+K$(3,P[0]),X0$(23)=K$(3+P[0])
2920 REM " --- Update BMM-23
2930 WRITE (BMM23_DEV,KEY=X0$)IOL=BMM23A
2940 DEL_BMM23: 
2950 REMOVE (BMM23_DEV,KEY=K$)
2960 LOOPUPM23: 
2970 GOTO READ_BMM23
3000 REM " --- BMM-24"
3030 READ_BMM24: 
3040 LET K$=KEY(BMM24_DEV,END=READ_BMM25)
3050 IF LEN(K$)=25 THEN READ (BMM24_DEV); GOTO LOOPUPM24
3060 IF POS(N0$=K$)<>1 THEN GOSUB PARAMETERS
3070 IF IV_PARAMS$="N" OR LEN(K$)<5+P[0] THEN GOTO DEL_BMM24
3080 IF K$(1,2+P[0])<>LAST$ THEN LET LAST$=K$(1,2+P[0]); PRINT @(COLUMN,11),K$(1,2)," ",K$(3,P[0]),
3090 DIM Y0$(25),Y1$(3)
3100 READ (BMM24_DEV)IOL=BMM24A
3110 LET Y0$(1)=K$(1,2)+K$(3,P[0]),Y0$(23)=K$(3+P[0])
3120 REM " --- Update BMM-24
3130 WRITE (BMM24_DEV,KEY=Y0$(1,25))IOL=BMM24A
3140 DEL_BMM24: 
3150 REMOVE (BMM24_DEV,KEY=K$)
3160 LOOPUPM24: 
3170 GOTO READ_BMM24
3200 REM " --- BMM-25"
3230 READ_BMM25: 
3240 LET K$=KEY(BMM25_DEV,END=DONE)
3250 IF LEN(K$)=25 THEN READ (BMM25_DEV); GOTO LOOPUPM25
3260 IF POS(N0$=K$)<>1 THEN GOSUB PARAMETERS
3270 IF IV_PARAMS$="N" OR LEN(K$)<5+P[0] THEN GOTO DEL_BMM25
3280 IF K$(1,2+P[0])<>LAST$ THEN LET LAST$=K$(1,2+P[0]); PRINT @(COLUMN,11),K$(1,2)," ",K$(3,P[0]),
3290 DIM Z0$(25),Z1$(69),Z2$(6),Z3$(20),Z4$(20),Z[9]
3300 READ (BMM25_DEV)IOL=BMM25A
3310 LET Z0$(1)=K$(1,2)+K$(3,P[0]),Z0$(23)=K$(3+P[0])
3320 REM " --- Update BMM-25
3330 WRITE (BMM25_DEV,KEY=Z0$)IOL=BMM25A
3340 DEL_BMM25: 
3350 REMOVE (BMM25_DEV,KEY=K$)
3360 LOOPUPM25: 
3370 GOTO READ_BMM25
4900 REM " --- All done"
4905 DONE: 
4990 GOTO 9900
6500 REM " --- Get parameters for current firm
6503 PARAMETERS: 
6505 DIM P[0],I2$(53)
6510 LET N0$=K$(1,2),IV_PARAMS$="N"
6525 FIND (SYS01_DEV,KEY=N0$+"IV00",DOM=6590)IOL=IVS01A
6530 LET P[0]=NUM(I2$(1,2)),IV_PARAMS$="Y"
6590 RETURN 
6900 REM " --- Update
6905 SCRN_UPDATE: 
6910 PRINT @(40,3),X$,'CL',@(0,5),'CE',
6920 CALL "SYC.NB","Processing",X,COLUMN
6990 RETURN 
8000 REM " --- Functions"
8050 DEF FNE$(Q$)=DATE(0:"%Hz%mZ")
8080 DEF FNP$(Q$)=CVS(Q$,2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9880 LET LINE_ERR$=LST(PGM(TCB(5)))
9890 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
