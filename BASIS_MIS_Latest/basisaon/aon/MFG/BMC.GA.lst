0010 REM "BMC - Explode Phantoms for Inventory Production Update"
0020 REM "Program BMC.GA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER CHANNEL[ALL],INFO$[ALL],INFO[ALL],PARENT$
0100 REM " --- Open/Lock Files
0135 REM " --- Assign Channel Info
0140 LET BMM01_DEV=CHANNEL[0],BMM03_DEV=CHANNEL[1],BMM05_DEV=CHANNEL[2]
0145 LET BMM08_DEV=CHANNEL[3],IVM01_DEV=CHANNEL[4],IVM02_DEV=CHANNEL[5]
0150 LET IVT04_DEV=CHANNEL[6],SYS01_DEV=CHANNEL[7],GLM01_DEV=CHANNEL[8]
0155 LET GLT04_DEV=CHANNEL[9],ARM10_DEV=CHANNEL[10],GLT05_DEV=CHANNEL[11]
0160 LET IVM04_DEV=CHANNEL[12],IVM05_DEV=CHANNEL[13],IVM07_DEV=CHANNEL[14]
0163 LET IVM08_DEV=CHANNEL[15],IVM12_DEV=CHANNEL[16],IVM17_DEV=CHANNEL[17]
0165 LET IVT01_DEV=CHANNEL[18],IVT02_DEV=CHANNEL[19],IVT03_DEV=CHANNEL[20]
0170 LET IVT04_DEV=CHANNEL[21],IVM03_DEV=CHANNEL[22],BMM02_DEV=CHANNEL[23]
0180 LET SUBITEM$=INFO$[0],REF1$=INFO$[1],REF2$=INFO$[2],AP$=INFO$[3]
0185 LET AR_DIST$=INFO$[4],BMREF$=INFO$[5],WHSE$=INFO$[6],PDATE$=INFO$[7]
0190 LET UPDATE$=INFO$[8],GL$=INFO$[9],IVACCT$=INFO$[10]
0195 LET QUANT=INFO[0],YIELD=INFO[1]
0200 REM " --- IOLists
0210 ARM10D1: IOLIST *,PARENTGL$
0215 ARM10D2: IOLIST *,CHILDGL$
0220 BMM01A: IOLIST H0$,H1$,H2$,H[ALL]
0230 BMM02A: IOLIST D0$,D1$,D2$,D[ALL]
0240 BMM03A: IOLIST K1$,K2$,K[ALL]
0250 BMM05A: IOLIST SUB0$,SUB1$,SUB2$,SUB3$,SUB4$,SUB[ALL]
0260 BMM08A: IOLIST X1$(1),X[ALL]
0270 IVM01A: IOLIST B0$,B1$,B2$,B3$,B4$,B5$,B6$,B[ALL]
0280 IVM02A: IOLIST C0$,C1$,C2$,C[ALL]
0300 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0310 BMS01A: IOLIST R0$(1),R1$
0320 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0330 IVS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0400 REM " --- Parameters
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="IV",N3$=F5$
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0435 DIM R0$(36)
0440 FIND (SYS01_DEV,KEY=N0$+"BM00",DOM=9800)IOL=BMS01A
0445 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0450 DIM P[6],G[4]
0460 FOR X=0 TO 4
0465 LET G[X]=NUM(G2$(X*2+1,2),ERR=0470)
0470 NEXT X
0480 LET G[2]=FNYY_YEAR(G2$(5,2))
0490 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P2$(3,2)),P[2]=NUM(P2$(5,1)),P[3]=NUM(P2$(7,2)),P[5]=NUM(P4$(1,2)),P[6]=FNYY_YEAR(P4$(3,2))
0500 REM " --- Init Data
0505 PRECISION P[2]
0510 LET VALUE=0
0515 DIM FILES[44],A0$(50),B0$(22),B1$(60)
0520 DIM B[12],C[20],D[10],H[11]
0525 LET FILES[0]=SYS01_DEV,FILES[1]=IVM01_DEV,FILES[2]=IVM02_DEV
0530 LET FILES[4]=IVM04_DEV,FILES[5]=IVM05_DEV,FILES[7]=IVM07_DEV
0535 LET FILES[8]=IVM08_DEV,FILES[12]=IVM12_DEV,FILES[17]=IVM17_DEV
0540 LET FILES[41]=IVT01_DEV,FILES[42]=IVT02_DEV,FILES[43]=IVT03_DEV
0545 LET FILES[44]=IVT04_DEV
0550 LET PARENTGL$=N0$
0555 LET REF3$="Prod Entry"
0560 LET COSTMETHOD$=P3$(8,1)
0570 REM " --- IVC.UA Params
0575 DIM PARAMS[10],PARAMS$[10],ITEM$[3],REF$[11]
0580 LET PARAMS[0]=G[0],PARAMS$[0]=F0$(7,3),PARAMS$[1]=F0$(4,3)
0585 LET PARAMS$[2]=P2$,PARAMS$[3]=P3$,PARAMS$[4]=P4$
0590 LET ITEM$[0]=N0$(1,2),ITEM$[1]=WHSE$
0595 LET REF$[0]=PDATE$,REF$[2]=BMREF$
1200 REM " --- Read BOM Header
1210 DIM H[11]
1220 READ (BMM01_DEV,KEY=N0$+SUBITEM$,DOM=GET_COST)IOL=BMM01A
1230 LET PHANTOM$=H2$(40,1)
1240 IF YIELD=0 THEN LET YIELD=100
1400 REM " --- Item Number
1410 DIM GLACCT$(G[4])
1420 FIND (IVM01_DEV,KEY=N0$+SUBITEM$,DOM=2000)IOL=IVM01A
1480 LET PARENTGL$=B6$(1,G[4])
1490 LET GLACCT$=PARENTGL$
2000 REM " --- Children
2020 READ (BMM02_DEV,KEY=N0$+SUBITEM$,DOM=2100)
2100 REM " --- Read Children Detail
2105 LET K$=KEY(BMM02_DEV,END=3000)
2110 READ (BMM02_DEV)IOL=BMM02A
2115 IF D2$(5,3)<>"   " THEN IF PDATE$<D2$(5,3) THEN GOTO NEXTCHILD
2120 IF D2$(8,3)<>"   " THEN IF PDATE$>=D2$(8,3) THEN GOTO NEXTCHILD
2125 IF D2$(4,1)="M" THEN GOTO NEXTCHILD
2130 IF D0$(1,22)<>N0$+SUBITEM$ THEN GOTO 3000
2135 FIND (BMM01_DEV,KEY=N0$+D1$,DOM=2160)IOL=BMM01A
2140 IF PHANTOM$<>"Y" THEN GOTO 2160
2145 GOSUB EXPLODE
2150 READ (BMM02_DEV,KEY=K$)
2155 GOTO NEXTCHILD
2160 DIM GLACCT$(G[4])
2165 LET CHILDGL$=B6$(1,G[4])
2170 FIND (IVM01_DEV,KEY=N0$+D1$(1,20),DOM=2900)IOL=IVM01A
2175 LET CHILDGL$=B6$(1,G[4])
2180 LET GLACCT$=CHILDGL$
2200 REM " --- Issue Children
2210 IF D[3]=0 THEN LET D[3]=1
2220 FIND (IVM02_DEV,KEY=N0$+WHSE$+D1$(1,20),DOM=2240)IOL=IVM02A
2230 GOTO 2250
2240 LET IN_WHSE$="F"
2250 LET QTY=FNQTY(D[0],D[1],D[3],YIELD,D[4])*QUANT
2260 LET ISS_OR_REC$="I"; REM "I==Issue, O==Receipt"
2270 LET UNITCOST=C[11],CURLIST=C[9]
2280 LET ITEM$=D1$,FINISHED$=SUBITEM$
2290 GOSUB ATAMO
2400 REM " --- Distribution
2410 IF AR_DIST$="N" OR IN_WHSE$="F" THEN GOTO UPDATE_GL
2440 DIM CHILDGL$(G[4],"0"),GLACCT$(G[4])
2450 FIND (ARM10_DEV,KEY=N0$+"D"+C1$(13,2),DOM=UPDATE_GL)IOL=ARM10D2
2460 LET CHILDGL$=CHILDGL$(6*G[4]+1,G[4]),GLACCT$=CHILDGL$
2500 REM " --- Update G/L
2505 UPDATE_GL: 
2510 IF UPDATE$="N" THEN LET PARENTGL$=R0$(7,G[4]) ELSE LET PARENTGL$=IVACCT$
2520 LET ACCOUNT$=PARENTGL$,WHEN$=PDATE$
2525 LET AMOUNT=UNITCOST*FNQTY(D[0],D[1],D[3],YIELD,D[4])*QUANT,UNITS=FNQTY(D[0],D[1],D[3],YIELD,D[4])*QUANT
2530 PRECISION 2
2535 LET AMOUNT=AMOUNT*1,VALUE=VALUE+AMOUNT,MEMO$="Item "+PARENT$
2540 GOSUB GLPOST
2560 LET ACCOUNT$=CHILDGL$,AMOUNT=-AMOUNT,UNITS=-UNITS,MEMO$="Item "+D1$(1,P[0])
2580 GOSUB GLPOST
2590 PRECISION NUM(P2$(5,1))
2900 REM " --- Loop back for next record
2910 NEXTCHILD: 
2990 GOTO 2100
3000 REM " --- Operation & Subcontract Distribution
3010 GOSUB OPERATION
3020 IF AP$="Y" THEN GOSUB SUBCONTRACTS
3100 REM " --- Update Last Used Flag
3110 READ (BMM01_DEV,KEY=N0$+SUBITEM$,DOM=GET_COST)IOL=BMM01A
3120 IF PDATE$>=H2$(41,3) THEN LET H2$(41,3)=PDATE$,H2$(44,1)="B"
3130 WRITE (BMM01_DEV,KEY=N0$+SUBITEM$)IOL=BMM01A
3300 REM " --- Receive Parents(Subitems) - Non-Phantoms
3310 GET_COST: 
3330 FIND (IVM02_DEV,KEY=N0$+WHSE$+SUBITEM$,DOM=4000)IOL=IVM02A
3400 REM " --- Update IV
3410 IF UPDATE$<>"Y" THEN GOTO 4000
3420 LET QTY=QUANT
3425 IF PHANTOM$="Y" THEN LET QTY=0; REM "So that when ATAMO processes phantoms, it won't change on-hand etc qtys in file
3440 LET ISS_OR_REC$="O"; REM "I==Issue, O==Receipt"
3450 LET UNITCOST=C[11],CURLIST=C[9]
3460 LET TCOST=UNITCOST*QUANT
3465 IF COSTMETHOD$="A" THEN GOSUB 5900
3470 IF COSTMETHOD$<>"S" AND UPDATE$<>"N" AND QUANT>0 THEN LET UNITCOST=VALUE/QUANT
3480 LET ITEM$=SUBITEM$,FINISHED$=FILL(20)
3490 GOSUB ATAMO
3600 REM " --- Get GL Acct by Dist Code - Non-Phantoms
3610 IF AR_DIST$="N" THEN GOTO 4000
3620 DIM PARENTGL$(G[4],"0")
3630 FIND (ARM10_DEV,KEY=N0$+"D"+C1$(13,2),DOM=4000)IOL=ARM10D1
3640 LET PARENTGL$=PARENTGL$(6*G[4]+1,G[4])
4000 REM " --- End
4100 GOTO 9900
5200 REM " --- Item Number
5205 ATAMO: 
5210 DIM REF[5],B6$(G[4])
5220 LET ACTION$="B"+ISS_OR_REC$
5230 LET ITEM$[2]=ITEM$
5250 LET REF$[7]=GLACCT$,REF$[9]=FINISHED$
5270 LET REF[0]=QTY,REF[1]=UNITCOST,REF[2]=CURLIST
5290 IF ISS_OR_REC$="I" THEN LET REF[0]=-QTY
5300 REM " --- Inventory updates
5310 CALL "IVC.UA",ACTION$,FILES[ALL],PARAMS[ALL],PARAMS$[ALL],ITEM$[ALL],REF$[ALL],REF[ALL],STATUS
5390 RETURN 
5700 REM " --- Subcontracts
5703 SUBCONTRACTS: 
5705 DIM SUB[9]
5710 READ (BMM05_DEV,KEY=N0$+SUBITEM$,DOM=5720)
5720 LET K1$=KEY(BMM05_DEV,END=5890)
5730 IF POS(N0$+SUBITEM$=K1$)<>1 THEN GOTO 5890
5740 READ (BMM05_DEV)IOL=BMM05A
5750 IF SUB2$(1,3)<>"   " THEN IF PDATE$<SUB2$(1,3) THEN GOTO 5720
5760 IF SUB2$(4,3)<>"   " THEN IF PDATE$>=SUB2$(4,3) THEN GOTO 5720
5770 IF SUB1$(1,1)<>"S" THEN GOTO 5720
5780 IF UPDATE$="N" THEN LET PARENTGL$=R0$(7,G[4]) ELSE LET PARENTGL$=IVACCT$
5790 IF SUB[3]=0 THEN LET SUB[3]=1
5800 LET A0=QUANT*SUB[2]*FNSUB(SUB[0],SUB[1],SUB[3]),UNITS=QUANT*SUB[2]
5810 LET WHEN$=PDATE$,ACCOUNT$=PARENTGL$,AMOUNT=A0,VALUE=VALUE+AMOUNT,MEMO$=CVS(PARENT$,2)+" "+SUB1$(10)
5820 GOSUB GLPOST
5830 LET ACCOUNT$=R0$(17,G[4]),AMOUNT=-A0,UNITS=-UNITS
5840 GOSUB GLPOST
5885 GOTO 5720
5890 RETURN 
5900 REM " --- Accumulation Of Warehouse Qtys For Average Cost
5901 REM "     TONHANDQTY=Total On Hand Qty, UNITCOST=From IVM-02
5903 REM "     QUANT=New Qty, TCOST=New Cost
5904 LET TONHANDQTY=0
5905 DIM COST_CHANS[3],COST_ITEM$[2],COST_WHSE$[2],COST_WHSE[20]
5906 LET COST_CHANS[2]=IVM02_DEV,COST_CHANS[3]=IVM03_DEV,COST_ITEM$[0]=N0$
5910 LET COST_ITEM$[1]="",COST_ITEM$[2]=SUBITEM$
5920 CALL "IVC.WA","A",COST_CHANS[ALL],COST_ITEM$[ALL],COST_WHSE$[ALL],COST_WHSE[ALL],COST_VALUE,STATUS
5930 LET TONHANDQTY=COST_WHSE[0]
5950 REM " --- Average Cost Calculation
5960 IF TONHANDQTY<=0 THEN LET UNITCOST=TCOST; GOTO 5995
5965 LET V=COST_VALUE+(QUANT*TCOST),SAVEUNITCOST=UNITCOST
5970 IF QUANT+TONHANDQTY>0 THEN LET UNITCOST=V/(QUANT+TONHANDQTY)
5980 IF UNITCOST=0 THEN LET UNITCOST=SAVEUNITCOST
5990 IF UNITCOST<0 THEN LET UNITCOST=TCOST
5993 LET TCOST=UNITCOST*QUANT
5995 RETURN 
6500 REM " --- Operation
6505 OPERATION: 
6510 DIM X1$(50),X[13],K[11],H[11]
6515 READ (BMM01_DEV,KEY=N0$+SUBITEM$,DOM=6520)IOL=BMM01A
6520 READ (BMM03_DEV,KEY=N0$+SUBITEM$,DOM=6530)
6530 LET K1$=KEY(BMM03_DEV,END=6690)
6540 IF POS(N0$+SUBITEM$=K1$)<>1 THEN GOTO 6690
6550 READ (BMM03_DEV,KEY=K1$)IOL=BMM03A
6552 IF K2$(65,3)<>"   " THEN IF PDATE$<K2$(65,3) THEN GOTO 6530
6554 IF K2$(68,3)<>"   " THEN IF PDATE$>=K2$(68,3) THEN GOTO 6530
6556 IF K2$(4,1)="M" THEN GOTO 6530
6560 FIND (BMM08_DEV,KEY=K1$(1,2)+K2$(1,3),DOM=6580)IOL=BMM08A
6580 IF H[5]=0 THEN LET H[5]=1
6585 IF QUANT<>0 THEN LET DIRECTCOST=FNOP2(QUANT,K[0],X[0],K[1],YIELD,K[4]),UNITS=FNOPU(QUANT,K[0],K[1],YIELD,K[4]) ELSE LET DIRECTCOST=0,UNITS=0
6600 LET OHCOST=DIRECTCOST*X[2],OUNITS=UNITS*X[2]
6610 REM " --- Direct Labor
6615 PRECISION 2
6617 LET DIRECTCOST=DIRECTCOST*1,OHCOST=OHCOST*1
6620 LET ACCOUNT$=X1$(31,G[4]),WHEN$=PDATE$,AMOUNT=-DIRECTCOST,UNITS=-UNITS,MEMO$=PARENT$+" "+X1$(6,20)
6630 GOSUB GLPOST
6632 LET ACCOUNT$=PARENTGL$,AMOUNT=DIRECTCOST,UNITS=-UNITS,VALUE=VALUE+DIRECTCOST
6634 GOSUB GLPOST
6640 REM " --- Overhead
6650 LET ACCOUNT$=X1$(41,G[4]),AMOUNT=-OHCOST,UNITS=-OUNITS
6660 GOSUB GLPOST
6670 LET ACCOUNT$=PARENTGL$,AMOUNT=OHCOST,UNITS=OUNITS,VALUE=VALUE+OHCOST
6680 GOSUB GLPOST
6682 PRECISION NUM(P2$(5,1))
6685 GOTO 6530
6690 RETURN 
6800 REM " --- Explode Phantoms
6805 EXPLODE: 
6810 LET INFO$[0]=D1$,INFO[0]=QUANT*D[0],INFO[1]=YIELD,INFO$[11]=D0$(3,20)
6820 CALL "BMC.GA",CHANNEL[ALL],INFO$[ALL],INFO[ALL]
6830 LET INFO[0]=QUANT,INFO[1]=YIELD,VALUE=VALUE+INFO[2]
6890 RETURN 
6900 REM " --- Standard G/L Posting Routine
6910 GLPOST: 
6920 IF GL$<>"Y" THEN GOTO 6990
6950 CALL "GLC.AA",GLM01_DEV,GLT04_DEV,GLT05_DEV,ACCOUNT$,WHEN$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN 
8000 REM " --- Functions
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8080 DEF FNQTY(Q1,Q2,Q3,Q4,Q5)=10000*Q1*Q2/(Q3*Q4*(100-Q5))
8085 DEF FNSUB(Q1,Q2,Q3)=Q1*Q2/Q3
8090 DEF FNOP2(Q1,Q2,Q3,Q4,Q5,Q6)=Q1*100*(Q2*Q3/Q4)/Q5+SGN(Q1)*Q6*Q3
8095 DEF FNOPU(Q1,Q2,Q3,Q4,Q5)=Q1*100*(Q2/Q3)/Q4+SGN(Q1)*Q5
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 REM " --- Exit
9950 LET INFO[2]=VALUE
9990 EXIT 
9999 END
