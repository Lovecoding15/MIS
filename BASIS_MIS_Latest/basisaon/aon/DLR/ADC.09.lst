0010 REM "ADC - ADministrator Unix Directory/File Pick/Point Utility"
0020 REM "PROGRAM: ADC.09"
0030 REM "+----------------------------------------------------------+"
0031 REM "|            ADminstrator System Version 1.0.2a            |
0032 REM "|     Copyright (C) 1994 MicroAccounting Systems, Inc.     |
0033 REM "|                 All Rights Reserved"                     |
0034 REM "+----------------------------------------------------------+
0050 ENTER PATH$,DSELECTION$,OHOME$
0090 SETERR 9000
0100 LET SYS01_DEV=UNT; OPEN (SYS01_DEV,ERR=9900)"SYS-01"
0260 SYS01T: IOLIST *,F0$,F1$,F2$,F3$,F4$,F5$
0270 SYS01SY: IOLIST *,*,*,P$(1)
0410 READ (SYS01_DEV,KEY="T"+FID(0),DOM=9900)IOL=SYS01T
0415 DIM P$(50); READ (SYS01_DEV,KEY="00SY00",DOM=9900)IOL=SYS01SY
0416 LET P$=FNP$(P$); IF P$="" THEN LET P$=DIR(0) FI; IF P$(LEN(P$),1)<>"/" THEN LET P$=P$+"/"
0417 LET DATAPATH$=P$
0420 LET USER$=FNS$(F0$(4,3)); IF USER$="" THEN LET USER$="XXX"
0430 CALL "ADC.04",X$; IF X$<>"UNIX" THEN GOTO 9900
0520 IF DATAPATH$="ERROR" THEN GOTO 9900
0530 LET DWIDTH=80,DHEIGHT=18,DXPOS=0,DYPOS=0,DTITLE$="Directory Listing",DNAME$="",DSELECTION$="",PAGE=1,X0=0,X1=1,DMAX_ROW=DHEIGHT-5
0540 LET PAGES=INT((DSZ-5000)/4000); REM "MAXIMUM NUMBER OF PAGES
0550 IF PAGES<3 THEN GOTO 9900; REM "INSUFFICIENT MEMORY AVAILABLE
0560 DIM DLIST$[PAGES,DMAX_ROW,5],DMORE$[PAGES,DMAX_ROW,3]
0610 IF PATH$="HOME" THEN GOSUB 6300
0710 CALL "ADC.WA",0,DWIDTH,DHEIGHT,DXPOS,DYPOS,DTITLE$,DNAME$
0720 DIM DHEADING$(DWIDTH-2),DFOOTING$(DWIDTH-2); LET DHEADING$(2)="File Name                Size    Last Modified    Owner     Group",DHEADING$(LEN(DHEADING$)-5)="Type",DFOOTING$(2)="<F1>=New Directory, <F4>=End"; PRINT @(0,0),'SB','BR',DHEADING$,'ER',@(0,DHEIGHT-3),'BR',DFOOTING$,'SF','ER',
0760 GOSUB 6300
1000 REM "BUILD DIRECTORY LISTING"
1120 LET DIR_CH=UNT; OPEN (DIR_CH,MODE="STRING",ERR=1540)"DIR"+USER$+FID(0)
1140 DIM FILE$(80)
1160 READ (DIR_CH,END=3000)FILE$(1)
1180 REM "IF POS("D"=FILE$)=1 THEN GOTO 01140
1200 IF LEN(FNP$(FILE$))<50 THEN GOTO 1140
1220 IF X1>=DMAX_ROW THEN GOSUB 6200 ELSE GOTO 1260
1240 IF DSELECTION$<>"" THEN GOTO 9900
1260 DIM G1$(DWIDTH-2); LET G1$(2)=FNS$(FILE$(54)),G1$(20)=" "+STR(NUM(FILE$(32,9)):"###,###,###")+"    "+FILE$(42,12)+"    "+FILE$(16,9)+"  "+FILE$(25,8); IF POS("d"=FILE$)=1 THEN LET G1$(LEN(G1$)-5,3)="Dir" ELSE LET G1$(LEN(G1$)-5,4)="File"
1280 LET DLIST$[PAGE,X1,1]=G1$,DLIST$[PAGE,X1,2]=FNS$(FILE$(55)),DLIST$[PAGE,X1,3]=FILE$
1300 LET X0=X0+1,X1=X1+1
1320 GOTO 1140
3000 REM "END OF FILE"
3060 IF X0=0 THEN FOR J=2 TO DMAX_ROW; PRINT @(0,J),'CL',; NEXT J; PRINT @(1,4),"No files found. <",'BB',"Return",'EB',"> to continue: ",; LET V0$="S",V1$="",V2$="",V3$="",V0=1,V1=43,V2=4; GOSUB 7000; PRINT @(1,4),'CL',; IF V3=4 THEN GOTO 4000 ELSE GOSUB 5500; GOSUB 6300; GOTO 1000
3080 LET DSELECTION$=DSELECTION$+"|EOF"; GOSUB 6200; GOTO 4000
4190 GOTO 9900
5500 REM "GET NEW DIRECTORY NAME"
5510 CLOSE (DIR_CH,ERR=5511)
5515 IF NEWDIR$<>"" THEN GOTO 5590
5520 LET NDWIDTH=70,NDHEIGHT=3,NDXPOS=7,NDYPOS=DMAX_ROW-2,NDTITLE$="Enter Full Path of New Directory",NDNAME$=""
5530 LET V0$="S",V1$="C",V2$="",V3$="",V4$="",V0=60,V1=5,V2=0
5540 CALL "ADC.WA",0,NDWIDTH,NDHEIGHT,NDXPOS,NDYPOS,NDTITLE$,NDNAME$
5550 GOSUB 7000
5560 IF V3=4 THEN EXITTO 9900
5570 LET NEWDIR$=V$
5580 CALL "ADC.WD",ERR=5581,NDNAME$
5590 RETURN 
6200 REM "CONTINUE/SELECT UNIX FILE"
6210 LET NEWDIR$=""
6220 CALL "ADC.SA",1,DLIST$[ALL],DMORE$[ALL],DSELECTION$,PAGE,DMAX_ROW,DNAME$,DHEIGHT,DWIDTH,FKEY
6225 GOSUB 6700
6230 IF FKEY<>1 THEN GOTO 6250
6240 DIM DLIST$[PAGES,DMAX_ROW,5]; LET PAGE=1,X1=1,X0=0; GOSUB 5500; GOSUB 6300; IF ERROR$<>"" THEN LET NEWDIR$=""; GOSUB 6300; EXITTO 1000 FI; IF ERROR$="" THEN EXITTO 1000
6250 IF FKEY=-16 THEN LET PAGE=PAGE+1
6255 IF PAGE>PAGES THEN LET PAGE=PAGES-1; GOSUB 6800
6260 IF DSELECTION$="END" OR FKEY=4 THEN EXITTO 4000
6270 LET X1=1
6290 RETURN 
6300 REM "DIRECTORY NAME TO DISPLAY"
6305 LET ERROR$=""
6310 ERASE "DIR"+USER$+FID(0),ERR=6311; GOTO 6310
6320 IF NEWDIR$="" THEN LET COMMAND$="echo $HOME  > "+DATAPATH$+"/DIR"+USER$+FID(0)+" 2>&1" ELSE GOTO 6500
6330 LET Y=SCALL(COMMAND$)
6340 LET HOME_CH=UNT; OPEN (HOME_CH,MODE="STRING",ERR=6360)"DIR"+USER$+FID(0)
6350 GOTO 6400
6360 REM "CANNOT OPEN REDIRECT OF ECHO $HOME"
6362 IF PATH$="HOME" THEN EXITTO 9900
6365 LET ERROR$="Cannot Open File Containing Home Directory Info"; GOTO 6900
6370 EXITTO 9900
6400 READ (HOME_CH,END=6430)X$
6410 LET HOME$=HOME$+X$
6420 GOTO 6400
6430 CLOSE (HOME_CH,ERR=6431)
6440 ERASE "DIR"+USER$+FID(0),ERR=6441
6450 IF LEN(HOME$)=0 THEN GOTO 6360
6455 LET NEWDIR$=HOME$,OLDIR$=NEWDIR$,OHOME$=HOME$,HOME$=""
6460 IF PATH$="HOME" THEN EXITTO 9900
6500 REM "OPEN NEW DIRECTORY"
6510 ERASE "DIR"+USER$+FID(0),ERR=6511; GOTO 6510
6520 LET COMMAND$="ls -l "+NEWDIR$+" > "+DATAPATH$+"/DIR"+USER$+FID(0)+" 2>&1"; LET Y=SCALL(COMMAND$)
6530 LET DIR_CH=UNT; OPEN (DIR_CH,MODE="STRING",ERR=6360)"DIR"+USER$+FID(0)
6540 READ (DIR_CH,END=6560,ERR=6560)DIRCHECK$
6545 CLOSE (DIR_CH,ERR=6546)
6550 IF POS("not found"=DIRCHECK$)>0 THEN LET ERROR$="Cannot open directory"; GOTO 6900
6552 LET OLDIR$=NEWDIR$
6555 GOTO 6600
6560 REM "ERROR/END - REDIRECT EMPTY"
6565 CLOSE (DIR_CH,ERR=6566)
6570 LET ERROR$="Error Opening or Reading File Containing Directory Info"; GOTO 6900
6600 REM "NORMAL EXIT
6620 LET DFOOTING$(30)=""; LET DFOOTING$(LEN(DFOOTING$)-LEN(NEWDIR$)-2)=NEWDIR$; PRINT @(0,DHEIGHT-3),'SB','BR',DFOOTING$,'SF','ER',
6630 LET PATH$=NEWDIR$
6690 RETURN 
6700 REM "CHECK FOR DIRECTORY"
6710 FOR J=1 TO DMAX_ROW
6715 IF DSELECTION$=DLIST$[PAGE,J,2] THEN EXITTO 6730
6720 NEXT J
6725 GOTO 6790
6730 LET DLINE=J
6735 IF POS("d"=DLIST$[PAGE,DLINE,3])=1 THEN LET NEWDIR$=OLDIR$+"/"+DSELECTION$ ELSE GOTO 6790
6740 IF FKEY<>4 AND FKEY<>-16 THEN LET FKEY=1
6790 RETURN 
6800 REM "ROLL DLIST$ BACK ONE PAGE
6805 FOR J1=1 TO PAGES-1
6810 FOR J2=1 TO DMAX_ROW
6815 FOR J3=1 TO 5
6820 LET DLIST$[J1,J2,J3]=DLIST$[J1+1,J2,J3]
6825 NEXT J3
6830 NEXT J2
6840 NEXT J1
6845 FOR J2=1 TO DMAX_ROW
6850 FOR J3=1 TO 5
6855 LET DLIST$[PAGES,J2,J3]=""
6860 NEXT J3
6865 NEXT J2
6890 RETURN 
6900 REM "ERROR ACCESSING DIRECTORY"
6910 CLOSE (DIR_CH,ERR=6911)
6920 CLOSE (HOME_CH,ERR=6921)
6930 ERASE "DIR"+USER$+FID(0),ERR=6931; GOTO 6930
6940 LET EWIDTH=80,EHEIGHT=3,EXPOS=0,EYPOS=19,ETITLE$="Error Message",ENAME$=""; CALL "ADC.WA",0,EWIDTH,EHEIGHT,EXPOS,EYPOS,ETITLE$,ENAME$
6950 LET ERROR$=ERROR$+" <CR>=End: "
6960 LET V0$="S",V1$="C",V2$="",V3$="",V4$=ERROR$,V0=1,V1=40+INT(LEN(V4$)/2)+2,V2=22; GOSUB 7000
6970 CALL "ADC.WD",ERR=6971,ENAME$
6990 RETURN 
7000 REM " --- User Input Routine"
7020 CALL "ADC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-1),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7040 IF V3=5 THEN GOTO 7100
7050 IF V3=6 THEN GOTO 7200
7085 LET I$=V$
7090 RETURN 
7100 REM " --- Error During Input"
7200 REM " --- Escape Requested"
7210 PRINT @(0,22),'CL','CURSOR'("ON"),
7220 ESCAPE
7290 GOTO 7000
7300 REM "---- Special User Input"
7320 CALL "ADC.IB",V0$,V1$,V2$,V3$,V4$,PGM(-1),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7330 IF V3<5 OR V3>6 THEN GOTO 7350
7340 ESCAPE
7390 RETURN 
8000 REM "---- Functions"
8020 DEF FNL$(Q$)=CVS(Q$,1); REM "---- Leading Blanks
8040 DEF FNP$(Q$)=CVS(Q$,2); REM "---- Trailing Blanks
8050 DEF FNQ$(Q$)=CVS(Q$,16); REM "---- Unprintable Characters
8060 DEF FNS$(Q$)=CVS(Q$,1+2); REM "---- Leading & Trailing Blanks
8080 DEF FNU$(Q$)=CVS(Q$,4); REM "---- Uppercase
9000 REM " --- Called Error Processing"
9005 PRINT 'GOTO'(0),@(0,20),"ERR=",ERR," LINE=",TCB(5),'LF',LST(PGM(TCB(5))),'LF',; ESCAPE
9010 LET E$=LST(PGM(TCB(5))),E1$=STR(TCB(5)),E2$=PGM(-1),E0=ERR,E1=0
9030 CALL "ADC.EA",ERR=9200,E$,E1$,E2$,E0,E1
9050 IF E1<>1 THEN GOTO 9200
9100 REM " --- Retry"
9110 RETRY
9200 REM " --- Exit to host"
9210 SETERR 9000
9290 GOTO 9900
9900 REM "EXIT"
9910 CALL "ADC.WD",ERR=9911,DNAME$
9920 CLOSE (DIR_CH,ERR=9921)
9930 CALL "ADC.WD",ERR=9931,NDNAME$
9940 ERASE "DIR"+USER$+FID(0),ERR=9941; GOTO 9940
9990 EXIT 
