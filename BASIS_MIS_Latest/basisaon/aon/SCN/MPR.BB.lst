0010 REM "MPR - Planned Production Report (Report Overlay)"
0020 REM "Program MPR.BB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.2 - 01Jan96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "16Oct96 JJD: Determine "Projected Availability" correctly. (2170)"
0032 REM "27Jan97 JJD: Use correct stocking level for buyer info (1255,1260), needs associated MPR.BA SCN dated 27Jan97"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 CALL "MPC.FA",MPE03_DEV,"MPE-03",N0$,FORECAST$,FILENAME$,STATUS
0115 IF STATUS>0 THEN GOTO 9900
0170 CALL "SYC.GA",7,1,"","",STATUS
0175 IF STATUS THEN GOTO 9900
0200 REM " --- IOLIST's"
0210 MPE03A: IOLIST A0$(1),A1$(1),A[ALL]
0230 BMM01A: IOLIST B0$(1),B1$,B2$(1),B[ALL]
0240 MPE01A: IOLIST C0$,C1$,C[ALL]
0250 IVM01A: IOLIST D0$(1),D1$(1),D2$(1),D3$,D4$,D5$,D6$,D[ALL]
0280 IVM02A: IOLIST W0$(1),W1$(1),W2$,W[ALL]
0500 REM " --- Initializations"
0505 PRECISION IVS01_PRECISION
0510 DIM A0$(28),A1$(MP*6),A[MP*6]
0550 LET HEADINGS$[1]=HEADINGS$[1]+" For "+H5$
0570 LET PREFIX$=FNP$(N0$+FORECAST$+WHSE$),LINES=6
0580 LET NUMBER=ENDPER-BEGPER+3
0590 IF ALLBUYERS>0 THEN LET BUYER$=""
0600 REM " --- Print positions"
0610 DIM O[10],TITLES$[LINES]
0615 LET O[10]=WIDTH-8,O[9]=O[10]-10,O[8]=O[9]-10,O[7]=O[8]-11
0620 LET O[6]=O[7]-9,O[5]=O[6]-M2-1,O[4]=O[5]-M2-1,O[3]=O[4]-4
0625 LET O[2]=O[3]-M5-1,O[1]=P[0],DW=O[2]-O[1]+1,X=WIDTH-O[1]-15
0630 LET NUMCOL=INT(X/M2)
0635 IF NUMCOL>NUMBER THEN LET NUMCOL=NUMBER
0640 LET TITLES$[0]="           Forecast",TITLES$[1]="  Gross Requirement"
0645 LET TITLES$[2]="  Scheduled Receipt",TITLES$[3]="Projected Available"
0650 LET TITLES$[4]="    Net Requirement",X$=" No Bill Of Materials Defined"
0652 LET TITLES$[5]=" Plan Order Release",TITLES$[6]=" Plan Order Receipt"
0660 DIM NB$(WIDTH-O[5],"-")
0680 LET BEGPER=BEGPER-1,ENDPER=ENDPER-1,POSITION=WIDTH-M2*NUMCOL
0690 LET HR=WIDTH-MAX(LEN(H7$),LEN(H8$)),NB$(FNC(X$,LEN(NB$)),LEN(X$))=X$
0700 REM " --- Background"
0710 CALL "SYC.NB","Printing",P[0],COLUMN
0900 REM " --- Position file"
0990 READ (MPE03_DEV,KEY=PREFIX$+BEGITEM$,DOM=1000)
1000 REM " --- Read next MPE-03 record"
1010 READ (MPE03_DEV,END=4000)IOL=MPE03A
1020 IF POS(PREFIX$=A0$)<>1 THEN GOTO 4000
1030 IF FNP$(ENDITEM$)<>"" THEN IF A0$(8,20)>ENDITEM$ THEN GOTO 4000
1040 IF POS(A0$(28,1)="B")=0 THEN GOTO 3900
1050 PRINT @(COLUMN,11),A0$(8,P[0]),
1200 REM " --- Additional reads"
1210 DIM D0$(22),D1$(P[2]+P[3]+P[4]),D2$(62),D[12],DESC$(DW)
1220 DIM W0$(24),W1$(64),W2$(1),W[20],C0$(27),C[MP]
1230 LET D0$(1,22)=N0$+A0$(8,20),W0$(1,24)=N0$+WHSE$+A0$(8,20),C0$(1,22)=A0$
1240 FIND (IVM01_DEV,KEY=D0$,DOM=1250)IOL=IVM01A
1250 FIND (IVM02_DEV,KEY=W0$,DOM=1255)IOL=IVM02A
1255 IF D2$(24,1)="I" THEN LET IV_BUYER$=D2$(9,3) ELSE LET IV_BUYER$=W1$(19,3)
1260 IF BUYER$<>"" THEN IF IV_BUYER$<>BUYER$ THEN GOTO 3900
1270 FIND (MPE01_DEV,KEY=C0$,DOM=1280)IOL=MPE01A
1290 LET DESC$(1)=FNZ$(D1$,P[2],P[3],P[4])
1300 REM " --- Bill of materials?"
1310 DIM B0$(52),B2$(57),B[11]
1320 LET REVCODE$="",LOT$="",PHANTOM$="",YIELD$="",CREATED$=""
1330 LET REVISION$="",USED$="",BILL$="",B0$(1,22)=D0$(1,22)
1340 FIND (BMM01_DEV,KEY=B0$(1,22),DOM=1500)IOL=BMM01A
1400 REM " --- Format bill fields"
1410 LET REVCODE$=B2$(38,2),PHANTOM$="No",CREATED$=FNB$(B2$(45,3))
1420 LET REVISION$=FNB$(B2$(35,3)),USED$=FNB$(B2$(41,3)),BILL$="Y"
1430 IF B2$(40,1)="Y" THEN LET PHANTOM$="Yes"
1440 IF B[4]>999.99 THEN LET B[4]=999.99
1450 IF B[4]<-999.99 THEN LET B[4]=-999.99
1460 LET YIELD$=STR(B[4]:"-##0.00")+"%",LOT$=STR(B[5]:M2$)
1500 REM " --- Print item heading"
1510 IF L+8>L9 THEN GOSUB 5000
1520 GOSUB 5200
2000 REM " --- Build detail"
2010 DIM REQUIRED$[NUMBER],AMOUNTS[NUMBER,LINES],PLANDATE$[NUMBER]
2020 LET REQUIRED$[1]="   Begin",AMOUNTS[1,3]=A[0],N=1
2100 REM 
2110 FOR X=BEGPER TO ENDPER
2120 LET P=X*6,N=N+1
2150 LET PLANDATE$[N]=FNB6$(A1$(X*6+1,6)),REQUIRED$[N]=FNB6$(S2$(X*6+1,6))
2160 LET AMOUNTS[N,0]=C[X],AMOUNTS[N,1]=A[P+2],AMOUNTS[N,2]=A[P+1]
2170 LET AMOUNTS[N,3]=A[P+6]
2180 LET AMOUNTS[N,4]=A[P+3],AMOUNTS[N,5]=A[P+4],AMOUNTS[N,6]=A[P+5]
2190 NEXT X
2200 REM " --- Detail printing initializations"
2210 LET LAST=0,REQUIRED$[NUMBER]=" Totals "
2220 FOR X=2 TO NUMBER-1
2230 FOR N=0 TO LINES
2240 LET AMOUNTS[NUMBER,N]=AMOUNTS[NUMBER,N]+AMOUNTS[X,N]
2250 NEXT N
2260 NEXT X
2280 LET AMOUNTS[NUMBER,3]=A[P+6]
2300 REM " --- Print detail"
2310 LET FIRST=LAST+1,LAST=FIRST+NUMCOL-1,NEEDED=4+LINES
2320 IF FIRST>NUMBER THEN GOTO 3000
2330 IF LAST>NUMBER THEN LET LAST=NUMBER
2340 IF L+NEEDED<L9 THEN GOTO 2400
2350 GOSUB 5000
2360 GOSUB 5200
2400 REM " --- Required By"
2410 DIM BUFFER$(WIDTH)
2420 LET BUFFER$(POSITION-12)="Required By",N=POSITION
2430 FOR X=FIRST TO LAST
2440 LET BUFFER$(N+M2-9)=REQUIRED$[X],N=N+M2
2450 NEXT X
2480 PRINT (7)""
2490 PRINT (7)BUFFER$
2500 REM " --- Amounts"
2510 FOR Y=0 TO LINES
2520 DIM BUFFER$(WIDTH)
2530 LET BUFFER$(POSITION-20)=TITLES$[Y],N=POSITION
2550 FOR X=FIRST TO LAST
2555 IF X=1 THEN IF Y<>3 THEN GOTO 2565
2560 LET BUFFER$(N)=STR(AMOUNTS[X,Y]:M2$)
2565 LET N=N+M2
2570 NEXT X
2580 PRINT (7)BUFFER$
2590 NEXT Y
2600 REM " --- Plan Date"
2610 DIM BUFFER$(WIDTH)
2620 LET BUFFER$(POSITION-10)="Plan Date",N=POSITION
2630 FOR X=FIRST TO LAST
2640 LET BUFFER$(N+M2-9)=PLANDATE$[X],N=N+M2
2650 NEXT X
2660 PRINT (7)BUFFER$
2670 LET L=L+NEEDED
2900 REM 
2990 GOTO 2300
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4090 GOTO 9900
5000 REM " --- Heading"
5010 LET L=HEADINGS+5
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)H6$,@(FNC(P9$,WIDTH)),P9$,@(HR),H7$
5050 PRINT (7)H9$,@(HR),H8$
5060 PRINT (7)""
5070 PRINT (7)@(O[2]),"Lead",@(O[5]+M2-4),"Lot",@(O[6]),"Phantom",@(O[7]),"Estimated",@(O[8]+2),"Bill",@(O[9]+2),"Last",@(O[10]+2),"Last"
5080 PRINT (7)"Item",@(O[1]),"Description",@(O[2]),"Time",@(O[3]),"Rev",@(O[4]+M2-4),"EOQ",@(O[5]+M2-5),"Size",@(O[6])," Bill?",@(O[7]+2),"Yield",@(O[8]),"Created",@(O[9]),"Revision",@(O[10]+2),"Used"
5090 RETURN 
5200 REM " --- Item Heading"
5210 PRINT (7)""
5220 IF BILL$="" THEN GOTO 5250
5230 PRINT (7)D0$(3),@(O[1]),DESC$,@(O[2]),D[7]:M5$,@(O[3]),REVCODE$,@(O[4]),D[6]:M2$,@(O[5]),LOT$,@(O[6]+3),PHANTOM$,@(O[7]),YIELD$,@(O[8]),CREATED$,@(O[9]),REVISION$,@(O[10]),USED$
5240 GOTO 5280
5250 PRINT (7)D0$(3),@(O[1]),DESC$,@(O[2]),D[7]:M5$,@(O[4]),D[6]:M2$,@(O[5]),NB$
5280 LET L=L+2
5290 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8025 DEF FNB6$(Q$)=Q$(3,2)+"/"+Q$(5,2)+"/"+FNYY21_YY$(Q$(1,2))
8060 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8080 DEF FNS$(Q$)=FNP$(Q$(POS(" "<>Q$)))
8090 DEF FNZ$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
