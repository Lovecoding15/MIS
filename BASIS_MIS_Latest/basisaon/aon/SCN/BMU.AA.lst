0010 REM "BMU - Inventory Production Update"
0020 REM "Program BMU.AA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.4 - 15Dec97 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "19Jun96 JJD: ATAMO updates Finished Goods items when the Update Flag is set to "N" (3680).
0032 REM "18Mar97 WGH: Correct FNQTY function definition (8070)"
0033 REM "24Jun97 JWK: Infinite loop in phantom process (2156-2157)
0034 REM "31Aug98 WGH: Use run quantity to get bill unit cost (1560,1590,5900-6050)
0035 REM "15Sep98 WGH: IVM-01 has 12 numeric fields instead of 10 (510)
0040 REM 
0050 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files
0105 LET FILES=26
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="BME-01",FILES$[2]="BMM-01",FILES$[3]="BMM-02"
0125 LET FILES$[4]="BMM-03",FILES$[5]="BMM-08",FILES$[6]="IVM-01"
0130 LET FILES$[7]="IVM-02",FILES$[8]="IVM-04",FILES$[9]="IVM-05"
0135 LET FILES$[10]="IVM-07",FILES$[11]="IVM-08",FILES$[12]="IVM-12"
0140 LET FILES$[13]="IVM-17",FILES$[14]="IVT-01",FILES$[15]="IVT-02"
0145 LET FILES$[16]="IVT-03",FILES$[17]="IVT-04",FILES$[18]="IVW-04"
0147 LET FILES$[19]="IVW-05",FILES$[20]="SYS-01",FILES$[21]="IVM-03"
0150 LET FILES$[22]="ARM-10",FILES$[23]="BMM-05"
0155 LET FILES$[24]="GLM-01",FILES$[25]="GLT-04",FILES$[26]="GLT-05"
0157 LET OPTIONS$[1]="L"
0160 CALL "SYC.DA",1,1,21,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS<>0 THEN GOTO 9900
0175 LET BME01_DEV=CHANNELS[1],BMM01_DEV=CHANNELS[2],BMM02_DEV=CHANNELS[3]
0180 LET BMM03_DEV=CHANNELS[4],BMM08_DEV=CHANNELS[5],IVM01_DEV=CHANNELS[6]
0185 LET IVM02_DEV=CHANNELS[7],IVM04_DEV=CHANNELS[8],IVM05_DEV=CHANNELS[9]
0187 LET IVM07_DEV=CHANNELS[10],IVM08_DEV=CHANNELS[11],IVM12_DEV=CHANNELS[12]
0190 LET IVM17_DEV=CHANNELS[13],IVT01_DEV=CHANNELS[14],IVT02_DEV=CHANNELS[15]
0195 LET IVT03_DEV=CHANNELS[16],IVT04_DEV=CHANNELS[17],IVW04_DEV=CHANNELS[18]
0197 LET IVW05_DEV=CHANNELS[19],SYS01_DEV=CHANNELS[20],IVM03_DEV=CHANNELS[21]
0200 REM " --- IOLists
0210 ARM10D1: IOLIST *,PARENTGL$
0220 ARM10D2: IOLIST *,CHILDGL$
0225 BME01A: IOLIST A0$,A1$,A[ALL]
0230 BMM01A1: IOLIST H0$,H1$,H2$,H[ALL]
0235 BMM01A2: IOLIST HX0$,HX1$,HX2$,HX[ALL]
0240 BMM02A: IOLIST D0$,D1$,D2$,D[ALL]
0250 BMM03A: IOLIST K1$,K2$,K[ALL]
0260 BMM05A: IOLIST SUB0$,SUB1$,SUB2$,SUB3$,SUB4$,SUB[ALL]
0265 BMM08A: IOLIST X1$(1),X[ALL]
0270 IVM01A: IOLIST B0$,B1$,B2$,B3$,B4$,B5$,B6$,B[ALL]
0280 IVM02A: IOLIST C0$,C1$,C2$,C[ALL]
0300 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0310 ARS01A: IOLIST *,*,*,X$
0320 BMS01A: IOLIST R0$(1),R1$
0330 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0340 IVS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0400 REM " --- Parameters
0404 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0408 LET N0$=F0$(16,2),N1$=F4$,N2$="IV",N3$=F5$
0412 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0416 DIM R0$(36),INFO$[20]
0420 FIND (SYS01_DEV,KEY=N0$+"BM00",DOM=9800)IOL=BMS01A
0424 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0428 LET AR_DIST$="N"
0432 FIND (SYS01_DEV,KEY=N0$+"AR00",DOM=0456)IOL=ARS01A
0436 IF X$(11,1)<>"Y" THEN GOTO 0456
0440 CALL "SYC.VA","AR",INFO$[ALL]
0444 IF INFO$[20]="N" THEN GOTO 0456
0446 CALL "SYC.DA",1,22,22,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0448 IF STATUS<>0 THEN GOTO 9900
0450 LET ARM10_DEV=CHANNELS[22]
0452 LET AR_DIST$="Y"
0456 DIM P[6],G[4],INFO$[20]
0460 FOR X=0 TO 4
0464 LET G[X]=NUM(G2$(X*2+1,2),ERR=0466)
0466 NEXT X
0468 LET G[2]=FNYY_YEAR(G2$(5,2))
0472 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P2$(3,2)),P[2]=NUM(P2$(5,1))
0476 LET P[3]=NUM(P2$(7,2)),P[5]=NUM(P4$(1,2)),P[6]=FNYY_YEAR(P4$(3,2))
0480 CALL "SYC.VA","BM",INFO$[ALL]
0484 LET GL$=INFO$[9]
0488 CALL "SYC.VA","AP",INFO$[ALL]
0492 LET AP$=INFO$[20]
0500 REM " --- Init Data
0505 PRECISION P[2]
0510 DIM A[1],B[12],C[16],D[10],H[11],HX[11]
0515 LET PARENTGL$=N0$
0520 LET REF1$="",REF2$="",REF3$="Prod Entry"
0525 LET COSTMETHOD$=P3$(8,1),LIFOFIFO$=P3$(3,1)
0545 REM " --- IVC.UA Params
0550 DIM PARAMS[10],PARAMS$[10],ITEM$[3],REF$[11],FILES[44]
0555 LET FILES[0]=SYS01_DEV,FILES[1]=IVM01_DEV,FILES[2]=IVM02_DEV
0560 LET FILES[4]=IVM04_DEV,FILES[5]=IVM05_DEV,FILES[7]=IVM07_DEV
0565 LET FILES[8]=IVM08_DEV,FILES[12]=IVM12_DEV,FILES[17]=IVM17_DEV
0570 LET FILES[41]=IVT01_DEV,FILES[42]=IVT02_DEV,FILES[43]=IVT03_DEV
0575 LET FILES[44]=IVT04_DEV
0580 LET PARAMS[0]=G[0],PARAMS$[0]=F0$(7,3),PARAMS$[1]=F0$(4,3)
0585 LET PARAMS$[2]=P2$,PARAMS$[3]=P3$,PARAMS$[4]=P4$
0590 LET ITEM$[0]=N0$(1,2)
0600 REM " --- Additional File Opens
0610 IF AP$<>"Y" THEN GOTO 0650
0620 CALL "SYC.DA",1,23,23,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0630 IF STATUS<>0 THEN GOTO 9900
0640 LET BMM05_DEV=CHANNELS[23]
0650 IF GL$<>"Y" THEN GOTO 0700
0660 CALL "SYC.DA",1,24,26,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0670 IF STATUS<>0 THEN GOTO 9900
0680 LET GLM01_DEV=CHANNELS[24],GLT04_DEV=CHANNELS[25],GLT05_DEV=CHANNELS[26]
0700 REM " --- Background
0710 PRINT @(0,3),'CE'
0720 CALL "SYC.WC",1,0,80,0,0,4,0
0740 PRINT 'SB',@(30,3),"Updating:",'SF','CL',@(0,22),'CL',
0800 REM " --- Options
0810 LET V4$="Are You Ready to Update the Production Register"
0820 CALL "SYC.YN",0,V4$,0,V$,V3
0830 IF V$<>"YES" THEN GOTO 9900
0870 IF GL$="Y" THEN CALL "GLC.CA",STATUS
0900 REM " --- Clear LIFO/FIFO Work Files
0910 IF LIFOFIFO$="N" THEN GOTO 0940
0920 CALL "SYC.FA",IVW04_DEV
0930 CALL "SYC.FA",IVW05_DEV
0940 REM " --- Disallow 'M'enu option in Error Routine
0950 LET EXIT_CTRL=1
1000 REM " --- Initial Read
1020 READ (BME01_DEV,KEY=N0$,DOM=1100)
1100 REM " --- Main Read
1110 LET VALUE=0
1120 LET K0$=KEY(BME01_DEV,END=4000)
1160 IF POS(N0$=K0$)<>1 THEN GOTO 4000
1170 READ (BME01_DEV)IOL=BME01A
1180 LET PARENT$=A0$(15,20),UPDATE$=A1$(8,1),WHSE$=A0$(3,2)
1190 PRINT @(40,3),WHSE$," ",A0$(15,P[0]),
1200 REM " --- Additional Reads
1210 DIM H[11]
1215 LET BILL$="N"
1220 READ (BMM01_DEV,KEY=N0$+PARENT$,DOM=1230)IOL=BMM01A1
1225 LET BILL$="Y"
1230 IF H[4]=0 THEN LET H[4]=100
1400 REM " --- Item Number
1420 FIND (IVM01_DEV,KEY=N0$+PARENT$,DOM=1600)IOL=IVM01A
1430 LET REF1$="Whse "+WHSE$,REF2$=A0$(8,7)
1450 LET PARENTGL$=B6$(1,G[4]),IVACCT$=B6$(1,G[4])
1460 FIND (IVM02_DEV,KEY=A0$(1,4)+PARENT$,DOM=1500)IOL=IVM02A
1470 LET UNITCOST=C[11],CURLIST=C[9]
1500 REM " --- Get Cost Info
1510 LET TCOST=UNITCOST
1520 IF A[0]<0 THEN GOTO 1600
1530 IF COSTMETHOD$<>"A" THEN GOTO 1600
1535 DIM CHANNEL[9]
1540 LET CHANNEL[0]=BMM01_DEV,CHANNEL[1]=BMM02_DEV,CHANNEL[2]=BMM03_DEV
1545 LET CHANNEL[3]=BMM05_DEV,CHANNEL[4]=BMM08_DEV,CHANNEL[5]=IVM02_DEV
1550 LET CHANNEL[6]=IVM04_DEV,CHANNEL[7]=IVW04_DEV,CHANNEL[8]=IVW05_DEV
1555 LET CHANNEL[9]=SYS01_DEV
1560 CALL "BMC.EA",PARENT$,CHANNEL[ALL],A[0],A0$(5,3),N0$,AP$,"N",1,MAT_COST,LAB_COST,OH_COST,SUB_COST,A[0],A[0],"Y",WHSE$,EA_STATUS
1570 LET TCOST=MAT_COST+LAB_COST+OH_COST+SUB_COST
1600 REM " --- Warehouse
1610 FIND (IVM02_DEV,KEY=A0$(1,4)+PARENT$,DOM=2000)IOL=IVM02A
1620 IF UPDATE$<>"Y" THEN GOTO 2000
1800 REM " --- Dist Code
1810 IF AR_DIST$="N" THEN GOTO 1900
1815 DIM PARENTGL$(G[4],"0")
1820 FIND (ARM10_DEV,KEY=N0$+"D"+C1$(13,2),DOM=1900)IOL=ARM10D1
1840 LET PARENTGL$=PARENTGL$(6*G[4]+1,G[4]),IVACCT$=PARENTGL$
1900 REM " --- Init for IV update for Finished Good
1910 LET FG_GLACCT$=PARENTGL$
2000 REM " --- Init Detail
2010 IF BILL$="N" THEN GOTO 3500
2020 READ (BMM02_DEV,KEY=A0$(1,2)+PARENT$,DOM=2100)
2100 REM " --- Read Detail
2120 READ (BMM02_DEV,END=3000)IOL=BMM02A
2125 IF D2$(5,3)<>"   " THEN IF A0$(5,3)<D2$(5,3) THEN GOTO NEXTCHILD
2130 IF D2$(8,3)<>"   " THEN IF A0$(5,3)>=D2$(8,3) THEN GOTO NEXTCHILD
2135 IF D2$(4,1)="M" THEN GOTO NEXTCHILD
2140 IF D0$(1,22)<>A0$(1,2)+PARENT$ THEN GOTO 3000
2145 LET HX[4]=100
2150 FIND (BMM01_DEV,KEY=A0$(1,2)+D1$(1,20),DOM=2160)IOL=BMM01A2
2152 IF HX2$(40,1)<>"Y" THEN GOTO 2160
2155 GOSUB EXPLODE
2157 READ (BMM02_DEV,KEY=D0$,DOM=2158); REM " --- Reset BMM-02 Pointer
2159 GOTO NEXTCHILD
2160 DIM GLACCT$(G[4])
2170 FIND (IVM01_DEV,KEY=A0$(1,2)+D1$(1,20),DOM=2900)IOL=IVM01A
2180 LET CHILDGL$=B6$(1,G[4]),GLACCT$=CHILDGL$
2200 REM " --- Update Warehouse By Issuing Children
2210 IF D[3]=0 THEN LET D[3]=1
2220 FIND (IVM02_DEV,KEY=A0$(1,4)+D1$(1,20),DOM=UPDATEGL)IOL=IVM02A
2240 LET UNITS=FNQTY(D[0],D[1],D[3],H[4],D[4])*A[0]
2250 IF PHANTOM$="Y" THEN LET UNITS=0; REM "So that when ATAMO processes phantoms, it won't change on-hand etc qty's in file
2260 LET ISS_OR_REC$="I"; REM "I=Issue, O=Receipt
2270 LET UNITCOST=C[11],CURLIST=C[9]
2280 LET FINISHED$=PARENT$,ITEM$=D1$(1,20)
2290 IF A[0]<>0 THEN GOSUB ATAMO; REM "Update IV unless qty ordered is 0"
2400 REM " --- Distribution
2410 IF AR_DIST$="N" THEN GOTO UPDATEGL
2415 DIM CHILDGL$(G[4],"0")
2420 FIND (ARM10_DEV,KEY=N0$+"D"+C1$(13,2),DOM=UPDATEGL)IOL=ARM10D2
2440 LET CHILDGL$=CHILDGL$(6*G[4]+1,G[4])
2500 REM " --- Update G/L
2505 UPDATEGL: 
2510 IF UPDATE$="N" THEN LET PARENTGL$=R0$(7,G[4]) ELSE LET PARENTGL$=IVACCT$
2520 LET ACCOUNT$=PARENTGL$,WHEN$=A0$(5,3)
2525 LET AMOUNT=UNITCOST*FNQTY(D[0],D[1],D[3],H[4],D[4])*A[0],UNITS=FNQTY(D[0],D[1],D[3],H[4],D[4])*A[0]
2530 PRECISION 2
2535 LET AMOUNT=AMOUNT*1,VALUE=VALUE+AMOUNT,MEMO$="Item "+A0$(15,P[0])
2540 GOSUB GLPOST
2560 LET ACCOUNT$=CHILDGL$,AMOUNT=-AMOUNT,UNITS=-UNITS,MEMO$="Item "+D1$(1,P[0])
2580 GOSUB GLPOST
2590 PRECISION NUM(P2$(5,1))
2900 REM " --- Loop back for next record
2905 NEXTCHILD: 
2910 GOTO 2100
3000 REM " --- Operation & Subcontract Distribution
3010 LET MEMO$="Variance"
3020 GOSUB OPERATION
3030 IF AP$="Y" THEN GOSUB SUBCONTRACTS
3040 IF COSTMETHOD$="R" AND A[0]>=0 THEN LET TCOST=VALUE/A[0]; GOTO 3500
3050 IF COSTMETHOD$="A" AND A[0]>=0 THEN GOTO 3500
3055 FIND (IVM01_DEV,KEY=N0$+PARENT$,DOM=3500)IOL=IVM01A
3060 FIND (IVM02_DEV,KEY=A0$(1,4)+PARENT$,DOM=3065)IOL=IVM02A
3065 LET UNITCOST=C[11]
3070 LET WHEN$=A0$(5,3),ACCOUNT$=R0$(27,G[4]),TCOST=UNITCOST
3075 LET AMOUNT=VALUE-TCOST*A[0],UNITS=0
3080 GOSUB GLPOST
3085 IF UPDATE$="N" THEN LET PARENTGL$=R0$(7,G[4]) ELSE LET PARENTGL$=IVACCT$
3090 LET ACCOUNT$=PARENTGL$,AMOUNT=-AMOUNT
3095 GOSUB GLPOST
3500 REM " --- Update Last Used Flag
3510 READ (BMM01_DEV,KEY=N0$+PARENT$,DOM=3900)IOL=BMM01A1
3520 IF A0$(5,3)>=H2$(41,3) THEN LET H2$(41,3)=A0$(5,3),H2$(44,1)="B"
3530 WRITE (BMM01_DEV,KEY=N0$+PARENT$)IOL=BMM01A1
3600 REM " --- Update Inventory for Finished Goods
3620 FIND (IVM01_DEV,KEY=N0$+PARENT$,DOM=3900)IOL=IVM01A
3625 FIND (IVM02_DEV,KEY=A0$(1,4)+PARENT$,DOM=3630)IOL=IVM02A
3630 LET UNITCOST=TCOST,CURLIST=C[9],UNITS=A[0]
3640 IF UPDATE$<>"Y" THEN LET UNITS=0; REM "Only change qtys if Update flag=Y
3650 IF COSTMETHOD$="S" OR UPDATE$="N" OR A[0]<0 THEN LET UNITCOST=C[11]; REM  "Use whse cost in ATAMO call so cost won't update under these conditions"
3660 LET ITEM$=PARENT$,GLACCT$=FG_GLACCT$,FINISHED$=FILL(20)
3670 LET ISS_OR_REC$="O"; REM "I==Issue, O==Receipt"
3680 IF UPDATE$="Y" AND A[0]<>0 THEN GOSUB ATAMO; REM "Update IV if qty ordered is > 0 and Finished Goods Update Flag = "Y".
3900 REM " --- Remove Record
3920 REMOVE (BME01_DEV,KEY=K0$,DOM=3990)
3990 GOTO 1100
4000 REM " --- End
4010 CALL "SYC.BB",STATUS
4100 GOTO 9900
5200 REM " --- Update IV
5205 ATAMO: 
5210 DIM REF[3],B6$(G[4])
5220 LET ACTION$="B"+ISS_OR_REC$
5230 LET ITEM$[1]=WHSE$,ITEM$[2]=ITEM$
5240 LET REF$[0]=A0$(5,3),REF$[2]=A0$(8,7)
5250 LET REF$[7]=GLACCT$,REF$[9]=FINISHED$
5270 LET REF[0]=UNITS,REF[1]=UNITCOST,REF[2]=CURLIST
5290 IF ISS_OR_REC$="I" THEN LET REF[0]=-UNITS
5300 REM " --- Inventory updates
5310 CALL "IVC.UA",ACTION$,FILES[ALL],PARAMS[ALL],PARAMS$[ALL],ITEM$[ALL],REF$[ALL],REF[ALL],STATUS
5390 RETURN 
5700 REM " --- Subcontracts
5703 SUBCONTRACTS: 
5705 DIM SUB[9]
5710 READ (BMM05_DEV,KEY=A0$(1,2)+A0$(15),DOM=5720)
5720 LET K1$=KEY(BMM05_DEV,END=5890)
5730 IF POS(A0$(1,2)+PARENT$=K1$)<>1 THEN GOTO 5890
5740 READ (BMM05_DEV)IOL=BMM05A
5750 IF SUB2$(1,3)<>"   " THEN IF A0$(5,3)<SUB2$(1,3) THEN GOTO 5720
5760 IF SUB2$(4,3)<>"   " THEN IF A0$(5,3)>=SUB2$(4,3) THEN GOTO 5720
5770 IF SUB1$(1,1)<>"S" THEN GOTO 5720
5780 IF UPDATE$="N" THEN LET PARENTGL$=R0$(7,G[4]) ELSE LET PARENTGL$=IVACCT$
5790 IF SUB[3]=0 THEN LET SUB[3]=1
5800 LET A0=A[0]*SUB[2]*FNSUB(SUB[0],SUB[1],SUB[3]),UNITS=A[0]*FNSUB(SUB[0],SUB[1],SUB[3])
5810 LET WHEN$=A0$(5,3),ACCOUNT$=PARENTGL$,AMOUNT=A0,VALUE=VALUE+AMOUNT
5815 LET MEMO$="Item "+CVS(A0$(15,20),2)+" "+SUB1$(10)
5820 GOSUB GLPOST
5830 LET ACCOUNT$=R0$(17,G[4]),AMOUNT=-A0,UNITS=-UNITS
5840 GOSUB GLPOST
5885 GOTO 5720
5890 RETURN 
6500 REM " --- Operation
6505 OPERATION: 
6510 DIM X1$(50),X[13],K[11],H[11]
6520 READ (BMM01_DEV,KEY=A0$(1,2)+PARENT$,DOM=6530)IOL=BMM01A1
6530 READ (BMM03_DEV,KEY=A0$(1,2)+PARENT$,DOM=6540)
6540 LET K1$=KEY(BMM03_DEV,END=6790)
6550 IF POS(A0$(1,2)+PARENT$=K1$)<>1 THEN GOTO 6790
6560 READ (BMM03_DEV)IOL=BMM03A
6570 IF K2$(65,3)<>"   " THEN IF A0$(5,3)<K2$(65,3) THEN GOTO 6540
6580 IF K2$(68,3)<>"   " THEN IF A0$(5,3)>=K2$(68,3) THEN GOTO 6540
6590 IF K2$(4,1)="M" THEN GOTO 6540
6600 FIND (BMM08_DEV,KEY=K1$(1,2)+K2$(1,3),DOM=6610)IOL=BMM08A
6610 IF H[5]=0 THEN LET H[5]=1
6620 IF A[0]<>0 THEN LET DIRECTCOST=FNOP2(A[0],K[0],X[0],K[1],H[4],K[4]),UNITS=FNOPU(A[0],K[0],K[1],H[4],K[4]) ELSE LET DIRECTCOST=0,UNITS=0
6630 LET OHCOST=DIRECTCOST*X[2],OUNITS=UNITS*X[2]
6640 REM " --- Direct Labor
6650 PRECISION 2
6660 LET DIRECTCOST=DIRECTCOST*1,OHCOST=OHCOST*1
6670 LET ACCOUNT$=X1$(31,G[4]),WHEN$=A0$(5,3),AMOUNT=-DIRECTCOST
6680 LET UNITS=-UNITS,MEMO$="Item "+CVS(A0$(15,20),2)+" "+X1$(6,20)
6690 GOSUB GLPOST
6700 LET ACCOUNT$=PARENTGL$,AMOUNT=DIRECTCOST,UNITS=-UNITS,VALUE=VALUE+DIRECTCOST
6710 GOSUB GLPOST
6720 REM " --- Overhead
6730 LET ACCOUNT$=X1$(41,G[4]),AMOUNT=-OHCOST,UNITS=-OUNITS
6740 GOSUB GLPOST
6750 LET ACCOUNT$=PARENTGL$,AMOUNT=OHCOST,UNITS=OUNITS,VALUE=VALUE+OHCOST
6760 GOSUB GLPOST
6770 PRECISION NUM(P2$(5,1))
6780 GOTO 6540
6790 RETURN 
6800 REM " --- Explode Phantom Bills
6803 EXPLODE: 
6805 DIM CHANNEL[23],INFO$[11],INFO[20]
6810 LET CHANNEL[0]=BMM01_DEV,CHANNEL[1]=BMM03_DEV,CHANNEL[2]=BMM05_DEV
6815 LET CHANNEL[3]=BMM08_DEV,CHANNEL[4]=IVM01_DEV,CHANNEL[5]=IVM02_DEV
6820 LET CHANNEL[6]=IVT04_DEV,CHANNEL[7]=SYS01_DEV,CHANNEL[8]=GLM01_DEV
6825 LET CHANNEL[9]=GLT04_DEV,CHANNEL[10]=ARM10_DEV,CHANNEL[11]=GLT05_DEV
6835 LET CHANNEL[12]=IVM04_DEV,CHANNEL[13]=IVM05_DEV,CHANNEL[14]=IVM07_DEV
6840 LET CHANNEL[15]=IVM08_DEV,CHANNEL[16]=IVM12_DEV,CHANNEL[17]=IVM17_DEV
6845 LET CHANNEL[18]=IVT01_DEV,CHANNEL[19]=IVT02_DEV,CHANNEL[20]=IVT03_DEV
6850 LET CHANNEL[21]=IVT04_DEV,CHANNEL[22]=IVM03_DEV,CHANNEL[23]=BMM02_DEV
6855 LET INFO$[0]=D1$,INFO$[1]=REF1$,INFO$[2]=REF2$,INFO$[3]=AP$
6860 LET INFO$[4]=AR_DIST$,INFO$[5]=A0$(8,7),INFO$[6]=WHSE$
6865 LET INFO$[7]=A0$(5,3),INFO$[8]=UPDATE$,INFO$[9]=GL$,INFO$[10]=IVACCT$
6875 LET INFO[0]=A[0]*D[0],INFO[1]=H[4]*HX[4]/100
6880 CALL "BMC.GA",CHANNEL[ALL],INFO$[ALL],INFO[ALL],A0$(15,20)
6885 LET VALUE=VALUE+INFO[2]
6890 RETURN 
6900 REM " --- Standard G/L Posting Routine
6910 GLPOST: 
6920 IF GL$<>"Y" THEN GOTO 6990
6950 CALL "GLC.AA",GLM01_DEV,GLT04_DEV,GLT05_DEV,ACCOUNT$,WHEN$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN 
8000 REM " --- Functions
8070 DEF FNQTY(Q1,Q2,Q3,Q4,Q5)=10000*Q1*Q2/(Q3*Q4*(100-Q5))
8085 DEF FNSUB(Q1,Q2,Q3)=Q1*Q2/Q3
8090 DEF FNOP2(Q1,Q2,Q3,Q4,Q5,Q6)=Q1*100*(Q2*Q3/Q4)/Q5+SGN(Q1)*Q6*Q3
8095 DEF FNOPU(Q1,Q2,Q3,Q4,Q5)=Q1*100*(Q2/Q3)/Q4+SGN(Q1)*Q5
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
