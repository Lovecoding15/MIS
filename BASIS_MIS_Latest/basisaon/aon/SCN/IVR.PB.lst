0010 REM "IVR - ABC Analysis Report (Generation Overlay)"
0020 REM "Program IVR.PB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "29Jun00 WGH: Not finding IVM-12 Item Activity By Warehouse records (230,2120)
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0110 CALL "SYC.GA",7,1,"","",STATUS
0120 IF STATUS THEN GOTO 9900
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$,A4$,A5$,A6$,A[ALL]
0220 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0230 IVM12A: IOLIST C0$,C1$,C2$,C[ALL]
0240 IVW07A: IOLIST D0$(1),D1$(1),D[ALL]
0250 IVW17A: IOLIST W0$(1),W1$(1),W[ALL]
0300 IVS10I: IOLIST S0$(1),S1$(1),S[ALL]
0310 IVS10W: IOLIST T0$(1),T1$(1),T[ALL]
0320 IVE07A: IOLIST R0$(1),R1$(1),R[ALL]
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],B0$(24),B1$(64),B[20]
0520 DIM FILES[12],ITEM$[2],WHEN$(16),R0$(24),R1$(16),R[6],U0$(24)
0550 LET M7$="###########.0000-",WHEN$(1)=I4$+F0$(7,3)
0560 LET SELECTION$="END",ACTION$="W",FILES[1]=IVM01_DEV,FILES[2]=IVM02_DEV
0570 LET FILES[3]=IVM03_DEV2,FILES[12]=IVM12_DEV,ITEM$[0]=N0$,ITEMS=0
0580 LET BASEPERIOD$=I4$,CURPERIOD$=I4$
0590 LET DAY_OF_MTH=NUM(F0$(22,2))
0700 REM " --- Background"
0710 CALL "SYC.NB","Processing",3+P[0],COLUMN
0800 REM " --- Rebuild IVW-07/IVW-17 for reprint"
0810 IF UPDATE$="Y" THEN GOTO 0900
0820 LET SOURCE=IVE07_DEV,TARGET=IVW07_DEV,FIRST$=N0$
0830 IF POS(LEVEL$="IB")>0 THEN GOSUB 6400
0840 LET SOURCE=IVE17_DEV,TARGET=IVW17_DEV,FIRST$=N0$+BEGWHSE$
0850 IF POS(LEVEL$="WB")>0 THEN GOSUB 6400
0890 GOTO 4900
0900 REM " --- Position files"
0990 READ (IVM01_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Get next item master"
1010 LET K$=KEY(IVM01_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 READ (IVM01_DEV)IOL=IVM01A
1040 PRINT @(COLUMN,11),A0$(3,P[0]),
1900 REM " --- Position warehouse xref"
1910 DIM D[6]
1980 LET FIRST$=N0$+"G"+A0$(3)
1990 READ (IVM03_DEV,KEY=FIRST$,DOM=2000)
2000 REM " --- Read next warehouse record"
2010 LET K$=KEY(IVM03_DEV,END=3000)
2020 IF POS(FIRST$=K$)<>1 THEN GOTO 3000
2030 READ (IVM03_DEV)
2100 REM " --- Retrieve warehouse records"
2110 DIM C[12]
2120 LET B0$(1)=N0$+K$(24)+A0$(3),C0$=B0$+I4$(3,2)+I4$(1,2)
2130 FIND (IVM02_DEV,KEY=B0$,DOM=2900)IOL=IVM02A
2140 LET COST=B[11],ONHAND=B[0],USAGE=0,BALANCE=0
2150 FIND (IVM12_DEV,KEY=C0$,DOM=2200)IOL=IVM12A
2160 CALL "IVC.PA",SELECTION$,C[ALL],BALANCE
2200 REM " --- Calculate estimated annual usage"
2210 LET ITEM$[1]=B0$(3,2),ITEM$[2]=B0$(5)
2250 CALL "IVC.AU",ACTION$,FILES[ALL],ITEM$[ALL],FACTORS[ALL],DAY_OF_MTH,BASEPERIOD$,CURPERIOD$,G[0],P[1],X,USAGE,FLAG$,STATUS
2300 REM " --- Calculate total value for warehouse"
2310 DIM W0$(42),W1$(16),W[6],T0$(5),T1$(16),T[3],U0$(24)
2320 LET W[0]=USAGE,W[1]=ONHAND,W[2]=BALANCE,W[3]=COST
2330 LET W[4]=W[0]*COST,W[5]=W[1]*COST,W[6]=W[2]*COST
2340 LET USAGE=W[4],ONHAND=W[5],BALANCE=W[6]
2350 GOSUB 6000
2360 LET W0$(1)=B0$(1,4),W0$(5)=SIGN$,W0$(6)=AMOUNT$,W0$(23)=B0$(5)
2370 LET W1$(1,1)=B1$(56,1),T0$(1)=N0$+"W"+B0$(3,2),U0$(1)=B0$
2400 REM " --- Update totals for warehouse/item"
2410 IF LEVEL$="I" THEN GOTO 2500
2420 WRITE (IVW17_DEV,KEY=W0$)IOL=IVW17A
2430 FIND (IVS10_DEV,KEY=T0$,DOM=2440)IOL=IVS10W
2440 LET T1$(1)=WHEN$,T[0]=T[0]+W[4],T[1]=T[1]+W[5]
2450 LET T[2]=T[2]+W[6],T[3]=T[3]+1
2460 WRITE (IVS10_DEV,KEY=T0$)IOL=IVS10W
2470 REMOVE (IVE17_DEV,KEY=U0$,DOM=2500)
2500 REM " --- Accumulate item totals"
2510 GOSUB 6100
2900 REM " --- Loop back for next warehouse"
2990 GOTO 2000
3000 REM " --- Done with warehouses"
3010 IF LEVEL$="W" THEN GOTO 3200
3020 DIM D0$(42),D1$(16),S0$(3),S1$(16),S[3],R0$(24)
3030 LET USAGE=D[4],ONHAND=D[5],BALANCE=D[6],D0$(1)=N0$,D1$(1,1)=A2$(25,1)
3040 GOSUB 6000
3050 LET R0$(1)=A0$(1,2),R0$(5)=A0$(3),S0$(1)=N0$+"I",D1$(1,1)=A2$(25,1)
3060 LET D0$(1)=N0$,D0$(5)=SIGN$,D0$(6)=AMOUNT$,D0$(23)=B0$(5)
3100 REM " --- Update item totals"
3110 WRITE (IVW07_DEV,KEY=D0$)IOL=IVW07A
3120 FIND (IVS10_DEV,KEY=S0$,DOM=3130)IOL=IVS10I
3130 LET S1$(1)=WHEN$,S[0]=S[0]+D[4],S[1]=S[1]+D[5]
3140 LET S[2]=S[2]+D[6],ITEMS=ITEMS+1,S[3]=ITEMS
3150 WRITE (IVS10_DEV,KEY=S0$)IOL=IVS10I
3160 REMOVE (IVE07_DEV,KEY=R0$,DOM=3200)
3900 REM " --- Loop back for next item"
3990 GOTO 1000
4000 REM " --- Done with generation loop"
4010 LET SOURCE=IVE07_DEV
4020 IF POS(LEVEL$="IB")>0 THEN GOSUB 6200
4040 LET SOURCE=IVE17_DEV
4050 IF POS(LEVEL$="WB")>0 THEN GOSUB 6200
4090 GOTO 4900
4900 REM " --- Run report overlay"
4990 RUN "IVR.PC"
6000 REM " --- Generate reciprocal amount"
6010 LET AMOUNT=ONHAND,SIGN$="",AMOUNT$=""
6020 IF VALUE$="U" THEN LET AMOUNT=USAGE
6030 IF VALUE$="B" THEN LET AMOUNT=BALANCE
6050 LET AMOUNT$=STR(100000000000-AMOUNT:M7$)
6060 IF AMOUNT<=0 THEN LET SIGN$="-",AMOUNT$=STR(AMOUNT:M7$)
6090 RETURN
6100 REM " --- Accumulate item totals"
6110 FOR X=0 TO 6
6120 LET D[X]=D[X]+W[X]
6130 NEXT X
6140 IF D[1]<>0 THEN LET D[3]=D[5]/D[1]
6150 IF D[2]<>0 THEN IF D[3]=0 THEN LET D[3]=D[6]/D[2]
6190 RETURN
6200 REM " --- Remove any remaining IVE-07/IVE-17 records"
6290 READ (SOURCE,KEY=N0$,DOM=6300)
6300 REM " --- Read/remove next record"
6310 LET K$=KEY(SOURCE,END=6390)
6320 IF POS(N0$=K$)<>1 THEN GOTO 6390
6330 REMOVE (SOURCE,KEY=K$)
6340 GOTO 6300
6390 RETURN
6400 REM " --- Generate IVW-07/IVW-17 records using IVE-07/IVE-17"
6490 READ (SOURCE,KEY=FIRST$,DOM=6500)
6500 REM " --- Read next record"
6510 LET K$=KEY(SOURCE,END=6900)
6520 IF POS(N0$=K$)<>1 THEN GOTO 6900
6530 READ (SOURCE)IOL=IVE07A
6540 IF LEVEL$="I" THEN GOTO 6590
6550 IF LEVEL$="W" THEN IF K$(3,2)>ENDWHSE$ THEN GOTO 6900
6570 LET X$=K$(3,2)+" "+K$(5,P[0])
6580 GOTO 6600
6590 LET X$=K$(5,P[0])
6600 REM " --- Update IVW-07/IVW-17"
6610 PRINT @(COLUMN,11),X$,
6620 DIM D0$(42),D1$(16),D[6]
6630 LET USAGE=R[4],ONHAND=R[5],BALANCE=R[6]
6640 GOSUB 6000
6650 LET D0$(1)=R0$(1,4),D0$(5)=SIGN$,D0$(6)=AMOUNT$
6660 LET D0$(23)=R0$(5),D1$(1)=R1$,D[ALL]=R[ALL]
6670 WRITE (TARGET,KEY=D0$)IOL=IVW07A
6690 GOTO 6500
6900 REM " --- All done"
6990 RETURN
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END