0010 REM "SAR - Generic Sales Analysis Report Selection"
0020 REM "Program SAR.AB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.2 - 01Jan96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "27Aug96 WGH: Not selecting specific territories, customers, product types and items correctly (6475-6480,6500-6505)"
0032 REM "28Oct96 WGH: Provide option to Include Zero Sales Lines (590,780,3200-3290,3960,5180)"
0033 REM "13Nov96 WGH: Clarify that Period and Year selection are for fiscal year, not calendar year (1020,1220)"
0034 REM "28Oct99 WGH: Fix inaccurate Territory/Customer report (6410,6460)
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists"
0210 SAM00A: IOLIST X0$,Q[ALL],C[ALL],S[ALL]
0230 ARM02A: IOLIST *,B1$(1)
0250 DESCCHANA: IOLIST X$[ALL]
0400 REM " --- Parameters"
0410 LET NMBR=4
0420 DIM LEVELS$[NMBR],LITERALS$[NMBR],TYPES$[NMBR],IMASKS$[NMBR],OMASKS$[NMBR],PROMPTS$[NMBR],INLEN[NMBR],FLDLEN[NMBR]
0430 DIM DESCCHAN[NMBR],DESCREC$[NMBR],DESCSTR[NMBR],DESCPOS[NMBR],DESCLEN[NMBR]
0440 DIM SA_CHANNELS[2],XREFS[NMBR],PERIODS$[13],IV_MASKS$[3],IV_DESC[3]
0450 CALL "SAC.PA",ACTION,SYS01_DEV,N0$,SEGMENTS,LEVELS$[ALL],LITERALS$[ALL],TYPES$[ALL],IMASKS$[ALL],OMASKS$[ALL],PROMPTS$[ALL],INLEN[ALL],FLDLEN[ALL],DESCCHAN[ALL],DESCREC$[ALL],DESCSTR[ALL],DESCPOS[ALL],DESCLEN[ALL],SA_CHANNELS[ALL],KEYLEN,XREFS[ALL],FY$,PERIODS,PERIODS$[ALL],IV_MASKS$[ALL],IV_DESC[ALL],IVM14_DEV,STATUS
0455 IF STATUS OR SEGMENTS<1 THEN GOTO 9900
0460 LET SAM00_DEV=SA_CHANNELS[1],SAM_DEV=SA_CHANNELS[1]
0465 IF SA_CHANNELS[2] THEN GOSUB BUILD_XREFS
0480 LET M1$=IV_MASKS$[1],M2$=IV_MASKS$[2],M3$=IV_MASKS$[3]
0490 LET M1=LEN(M1$),M2=LEN(M2$),M3=LEN(M3$)
0500 REM " --- Initializations"
0505 DIM C[12],Q[12],S[12]
0510 DIM KPOS[NMBR]; REM "Key positions of segments in SA file
0515 LET MP=12,COL=35,L0=4,L1=L0+3+2*SEGMENTS+1,FLDLEN[0]=LEN(N0$+FY$),KPOS[0]=1,LEVELS$=""
0520 FOR X=1 TO NMBR
0525 LET KPOS[X]=KPOS[X-1]+FLDLEN[X-1]
0530 NEXT X
0540 FOR X=1 TO SEGMENTS
0545 LET LEVELS$=LEVELS$+LEVELS$[X]
0550 NEXT X
0555 LET NA$="Not Applicable"
0560 DIM SEQS$[3]; LET SEQS$[1]="Ascending",SEQS$[2]="Descending",SEQS$[3]="Unsorted",SEQS$="ADU"
0565 DIM SUS$[2]; LET SUS$[1]="Sales",SUS$[2]="Units",SUS$="SU"
0570 DIM MYPS$[3]; LET MYPS$[1]="MTD",MYPS$[2]="YTD",MYPS$[3]="Prior",MYPS$="MYP"
0575 DIM BEGSEGS$[SEGMENTS],ENDSEGS$[SEGMENTS]
0580 CALL "SYC.PB",N0$,SYS01_DEV,F0$(7,3),PERIOD$,YEAR$
0590 LET LEVEL$=LEVELS$[SEGMENTS],SEQ$="U",REPORT$="N",SU$="S",MYP$="MYP",BREAK$="N",ZERO$="N"
0700 REM " --- Background"
0720 PRINT 'SB',@(COL-8,L0),"Period:",@(COL-6,L0+1),"Year:",@(COL-14,L0+2),"Detail Level:",@(COL-10,L0+3),"Sequence:",
0730 FOR X=1 TO SEGMENTS
0740 IF LITERALS$[X]="" THEN GOTO 0770
0750 LET BEGLIT$="Beginning "+LITERALS$[X]+": ",ENDLIT$="Ending "+LITERALS$[X]+": "
0760 PRINT @(COL-LEN(BEGLIT$),L0+2+2*X),BEGLIT$,@(COL-LEN(ENDLIT$),L0+3+2*X),ENDLIT$,
0770 NEXT X
0780 PRINT @(COL-18,L1),"12 Period Report:",@(COL-16,L1+1),"Sales Or Units:",@(COL-19,L1+2),"MTD, YTD Or Prior:",@(COL-12,L1+3),"Page Break:",@(COL-26,L1+4),"Include Zero Sales Lines:",'SF',
0900 REM " --- Display Defaults"
0920 GOSUB 5000
1000 REM " --- Period"
1010 LET V0$="Z",V1$="C",V2$=PERIOD$,V3$="",V0=2,V1=COL,V2=L0,I0=0
1020 LET V4$="Enter The Ending Fiscal Period For This Report (1 Through "+STR(PERIODS)+")"
1030 GOSUB 7000
1040 ON V3 GOTO 1050,1000,3900,1000,3900
1050 IF NUM(V$,ERR=1000)<1 OR NUM(V$,ERR=1000)>PERIODS THEN GOTO 1000
1060 LET PERIOD$=V$
1070 PRINT @(V1,V2),PERIOD$,"  ",PERIODS$[NUM(PERIOD$)],
1090 GOTO 3900
1200 REM " --- Beginning Year"
1210 LET V0$="D",V1$="CY",V2$=YEAR$,V3$="",V0=2,V1=COL,V2=L0+1
1220 LET V4$="Enter The Ending Fiscal Year For This Report"
1230 GOSUB 7000
1240 ON V3 GOTO 1250,1200,3900,1200,3900
1250 IF V$="" THEN GOTO 1200
1260 LET YEAR$=V$
1290 GOTO 3900
1400 REM " --- Detail Level"
1410 LET V0$="S",V1$="C",V2$=LEVEL$,V3$=LEVELS$,V4$="",V0=1,V1=COL,V2=L0+2
1415 FOR X=1 TO SEGMENTS
1420 IF LITERALS$[X]<>"" THEN LET V4$=V4$+" "+LEVELS$[X]+"="+LITERALS$[X]+" "
1425 NEXT X
1430 GOSUB 7000
1440 ON V3 GOTO 1450,1400,3900,1400,3900
1450 IF POS(V$=LEVELS$)=0 THEN GOTO 1400
1460 IF LITERALS$[POS(V$=LEVELS$)]="" THEN GOTO 1400
1470 LET LEVEL$=V$
1480 PRINT @(V1,V2),LEVEL$,"  ",LITERALS$[POS(LEVEL$=LEVELS$)],'CL',
1490 GOTO 3900
1600 REM " --- Sequence"
1610 LET V0$="S",V1$="C",V2$=SEQ$,V3$=SEQS$,V4$="",V0=1,V1=COL,V2=L0+3
1615 FOR X=1 TO LEN(SEQS$)
1620 LET V4$=V4$+" "+SEQS$(X,1)+"="+SEQS$[X]+" "
1625 NEXT X
1630 GOSUB 7000
1640 ON V3 GOTO 1650,1600,3900,1600,3900
1650 IF POS(V$=SEQS$)=0 THEN GOTO 1600
1660 LET SEQ$=V$
1670 PRINT @(V1,V2),SEQ$,"  ",SEQS$[POS(SEQ$=SEQS$)],'CL',
1690 GOTO 3900
1800 REM " --- Segment Input"
1820 LET S0=1
1840 IF V3=2 THEN LET S0=2*SEGMENTS; GOTO 2000
1900 REM " --- Get Beginning Segment Selections"
1905 LET FIELD=1+INT(S0/2)
1910 IF LITERALS$[FIELD]="" THEN GOTO 1990
1920 LET V4$=PROMPTS$[FIELD]+" (<F1>=First"
1925 IF LITERALS$[FIELD]="Non-Stock Item" OR LITERALS$[FIELD]="SIC" THEN LET V4$=V4$+")" ELSE LET V4$=V4$+"/<F3>=Lookup)"
1930 CALL "SAC.IA","R",TYPES$[FIELD],BEGSEGS$[FIELD],IMASKS$[FIELD],OMASKS$[FIELD],V4$,FLDLEN[FIELD],COL,L0+2+2*FIELD,INLEN[FIELD],N0$,DESCCHAN[FIELD],DESCREC$[FIELD],DESCSTR[FIELD],DESCPOS[FIELD],DESCLEN[FIELD],IV_DESC[ALL],IVM14_DEV,FY$,FIELD,SAM_DEV,LITERALS$[ALL],BEGSEGS$[ALL],V3
1940 ON V3 GOTO 1960,1950,1960,1900,2100
1950 LET BEGSEGS$[FIELD]=""
1960 LET SEG$=BEGSEGS$[FIELD],DEFAULT$="First"
1965 IF LITERALS$[FIELD]="Customer Ship-To" THEN LET DESCREC$[FIELD]=BEGSEGS$[FIELD-1]
1970 GOSUB GET_SEG_DESC
1980 PRINT @(COL,L0+2+2*FIELD),SEGDESC$,
1990 GOTO 2100
2000 REM " --- Get Ending Segment Selections"
2005 LET FIELD=INT(S0/2)
2010 IF LITERALS$[FIELD]="" THEN GOTO 2090
2020 LET V4$=PROMPTS$[FIELD]+" (<F1>=Last"
2025 IF LITERALS$[FIELD]="Non-Stock Item" OR LITERALS$[FIELD]="SIC" THEN LET V4$=V4$+")" ELSE LET V4$=V4$+"/<F3>=Lookup)"
2030 CALL "SAC.IA","R",TYPES$[FIELD],ENDSEGS$[FIELD],IMASKS$[FIELD],OMASKS$[FIELD],V4$,FLDLEN[FIELD],COL,L0+3+2*FIELD,INLEN[FIELD],N0$,DESCCHAN[FIELD],DESCREC$[FIELD],DESCSTR[FIELD],DESCPOS[FIELD],DESCLEN[FIELD],IV_DESC[ALL],IVM14_DEV,FY$,FIELD,SAM_DEV,LITERALS$[ALL],ENDSEGS$[ALL],V3
2040 ON V3 GOTO 2060,2050,2060,2000,2100
2050 LET ENDSEGS$[FIELD]=""
2060 IF ENDSEGS$[FIELD]<>"" AND ENDSEGS$[FIELD]<BEGSEGS$[FIELD] THEN GOTO 2000
2065 LET SEG$=ENDSEGS$[FIELD],DEFAULT$="Last"
2070 IF LITERALS$[FIELD]="Customer Ship-To" THEN LET DESCREC$[FIELD]=ENDSEGS$[FIELD-1]
2075 GOSUB GET_SEG_DESC
2080 PRINT @(COL,L0+3+2*FIELD),SEGDESC$,
2090 GOTO 2100
2100 REM " --- Next Segment"
2105 IF V3=4 THEN GOTO 2190
2110 IF V3<>2 THEN GOTO 2140
2120 IF S0>0 THEN LET S0=S0-1
2130 GOTO 2150
2140 LET S0=S0+1
2150 IF S0<1 OR S0>2*SEGMENTS THEN GOTO 2190
2160 ON MOD(S0+1,2)+1 GOTO 1600,1900,2000,2190
2190 GOTO 3900
2400 REM " --- 12 Period Report?"
2410 LET V0$="Y",V1$="C",V2$=REPORT$,V3$="",V0=1,V1=COL,V2=L1
2420 LET V4$="Y=Yes   N=No"
2430 GOSUB 7000
2440 ON V3 GOTO 2450,2400,3900,2400,3900
2450 IF POS(V$="YN")=0 THEN GOTO 2400
2460 LET X$=REPORT$,REPORT$=V$
2470 IF X$<>V$ THEN GOSUB 5000
2490 GOTO 3900
2600 REM " --- Sales Or Units"
2605 IF REPORT$="N" THEN GOTO 3900
2610 LET V0$="S",V1$="C",V2$=SU$,V3$=SUS$,V4$="",V0=1,V1=COL,V2=L1+1
2615 FOR X=1 TO LEN(SUS$)
2620 LET V4$=V4$+" "+SUS$(X,1)+"="+SUS$[X]+" "
2625 NEXT X
2630 GOSUB 7000
2640 ON V3 GOTO 2650,2600,3900,2600,3900
2650 IF POS(V$=SUS$)=0 THEN GOTO 2600
2660 LET SU$=V$
2670 PRINT @(V1,V2),SU$,"  ",SUS$[POS(SU$=SUS$)],'CL',
2690 GOTO 3900
2800 REM " --- MTD, YTD Or Prior"
2805 IF REPORT$="Y" THEN GOTO 3900
2810 LET V0$="S",V1$="^C",V2$=MYP$,V3$="",V4$="",V0=3,V1=COL,V2=L1+2
2815 LET V4$="M=MTD   Y=YTD   P=Include Prior MTD/YTD (Requires "+$22$+"M"+$22$+" And/Or "+$22$+"Y"+$22$+")"
2830 GOSUB 7000
2840 ON V3 GOTO 2850,2800,3900,2800,3900
2850 LET X$=""
2860 FOR X=1 TO LEN(V$)
2870 IF V$(X,1)=" " THEN GOTO 2900
2880 IF POS(V$(X,1)=MYPS$)=0 THEN EXITTO 2800
2890 IF POS(V$(X,1)=X$)=0 THEN LET X$=X$+V$(X,1)
2900 NEXT X
2910 IF POS("M"=X$)=0 AND POS("Y"=X$)=0 THEN GOTO 2800
2920 LET MYP$(1)=X$
2930 PRINT @(V1,V2),MYP$," ",'CL',
2940 FOR X=1 TO LEN(MYP$)
2950 PRINT " ",MYPS$[POS(MYP$(X,1)=MYPS$)],
2960 NEXT X
2990 GOTO 3900
3000 REM " --- Page Break?"
3010 LET V0$="Y",V1$="C",V2$=BREAK$,V3$="",V0=1,V1=COL,V2=L1+3
3020 LET V4$="Page Break After Each "+LITERALS$[1]+"?"
3030 GOSUB 7000
3040 ON V3 GOTO 3050,3000,3900,3000,3900
3050 IF POS(V$="YN")=0 THEN GOTO 3000
3060 LET BREAK$=V$
3090 GOTO 3900
3200 REM " --- Include Zero Sales Lines?"
3210 LET V0$="Y",V1$="C",V2$=ZERO$,V3$="",V0=1,V1=COL,V2=L1+4
3220 LET V4$="Print report lines where all numbers are zero?"
3230 GOSUB 7000
3240 ON V3 GOTO 3250,3200,3900,3200,3900
3250 IF POS(V$="YN")=0 THEN GOTO 3200
3260 LET ZERO$=V$
3290 GOTO 3900
3900 REM " --- Next Field"
3905 IF V3=4 THEN GOTO 3990
3910 IF V3<>2 THEN GOTO 3940
3920 IF I0>0 THEN LET I0=I0-1
3930 GOTO 3950
3940 LET I0=I0+1
3960 ON I0 GOTO 1000,1200,1400,1600,1800,2400,2600,2800,3000,3200,3990
3990 GOSUB 5000
4000 REM " --- Correct?"
4010 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
4020 ON V3 GOTO 4030,4000,4000,4000,9900
4030 ON POS(V$="YN") GOTO 4000,4050,1000
4100 REM " --- Run Report Overlay"
4120 IF ACTION=12 THEN GOSUB BUILD_SAM12
4140 IF REPORT$="Y" THEN RUN "SAR.AD"
4160 RUN "SAR.AC"
5000 REM " --- Display"
5010 PRINT @(COL,L0),PERIOD$,"  ",PERIODS$[NUM(PERIOD$)],@(COL,L0+1),FNYY21_YY$(YEAR$),@(COL,L0+2),LEVEL$,"  ",LITERALS$[POS(LEVEL$=LEVELS$)],'CL',@(COL,L0+3),SEQ$,"  ",SEQS$[POS(SEQ$=SEQS$)],'CL',
5020 FOR FIELD=1 TO SEGMENTS
5030 IF LITERALS$[FIELD]="" THEN GOTO 5100
5040 LET SEG$=BEGSEGS$[FIELD],DEFAULT$="First"
5050 GOSUB GET_SEG_DESC
5060 PRINT @(COL,L0+2+2*FIELD),SEGDESC$,
5070 LET SEG$=ENDSEGS$[FIELD],DEFAULT$="Last"
5080 GOSUB GET_SEG_DESC
5090 PRINT @(COL,L0+3+2*FIELD),SEGDESC$,
5100 NEXT FIELD
5110 PRINT @(COL,L1),REPORT$,@(COL,L1+1),'CL',@(COL,L1+2),'CL',
5120 IF REPORT$="Y" THEN PRINT @(COL,L1+1),SU$,"  ",SUS$[POS(SU$=SUS$)],'CL',@(COL,L1+2),NA$,'CL',
5130 IF REPORT$="Y" THEN GOTO 5180
5140 PRINT @(COL,L1+1),NA$,'CL',@(COL,L1+2),MYP$," ",'CL',
5150 FOR X=1 TO LEN(MYP$)
5160 PRINT " ",MYPS$[POS(MYP$(X,1)=MYPS$)],
5170 NEXT X
5180 PRINT @(COL,L1+3),BREAK$,@(COL,L1+4),ZERO$,
5190 RETURN
6000 REM " --- Build Cross References"
6005 BUILD_XREFS: 
6010 DIM SFERX[NMBR]
6020 FOR X=1 TO NMBR
6030 LET SFERX[XREFS[X]]=X; REM "Reverse cross reference
6040 NEXT X
6050 REM " --- Using Cross Reference File"
6055 IF ACTION<20 THEN GOTO 6190
6060 LET SAM_DEV=SA_CHANNELS[2],MAX_SEGMENTS=1
6070 DIM XLEVELS$[NMBR],XLITERALS$[NMBR],XTYPES$[NMBR],XIMASKS$[NMBR],XOMASKS$[NMBR],XPROMPTS$[NMBR],XINLEN[NMBR],XFLDLEN[NMBR]
6080 DIM XDESCCHAN[NMBR],XDESCREC$[NMBR],XDESCSTR[NMBR],XDESCPOS[NMBR],XDESCLEN[NMBR]
6090 FOR X=1 TO NMBR
6100 LET XLEVELS$[XREFS[X]]=LEVELS$[X],XLITERALS$[XREFS[X]]=LITERALS$[X],XTYPES$[XREFS[X]]=TYPES$[X],XIMASKS$[XREFS[X]]=IMASKS$[X],XOMASKS$[XREFS[X]]=OMASKS$[X],XPROMPTS$[XREFS[X]]=PROMPTS$[X],XINLEN[XREFS[X]]=INLEN[X],XFLDLEN[XREFS[X]]=FLDLEN[X]
6110 LET XDESCCHAN[XREFS[X]]=DESCCHAN[X],XDESCREC$[XREFS[X]]=DESCREC$[X],XDESCSTR[XREFS[X]]=DESCSTR[X],XDESCPOS[XREFS[X]]=DESCPOS[X],XDESCLEN[XREFS[X]]=DESCLEN[X]
6120 NEXT X
6130 LET LEVELS$[ALL]=XLEVELS$[ALL],LITERALS$[ALL]=XLITERALS$[ALL],TYPES$[ALL]=XTYPES$[ALL],IMASKS$[ALL]=XIMASKS$[ALL],OMASKS$[ALL]=XOMASKS$[ALL],PROMPTS$[ALL]=XPROMPTS$[ALL],INLEN[ALL]=XINLEN[ALL],FLDLEN[ALL]=XFLDLEN[ALL]
6140 LET DESCCHAN[ALL]=XDESCCHAN[ALL],DESCREC$[ALL]=XDESCREC$[ALL],DESCSTR[ALL]=XDESCSTR[ALL],DESCPOS[ALL]=XDESCPOS[ALL],DESCLEN[ALL]=XDESCLEN[ALL]
6145 LET X=NMBR
6150 WHILE X>SEGMENTS
6155 LET LITERALS$[XREFS[X]]="",X=X-1
6160 WEND
6170 FOR X=1 TO SEGMENTS
6175 LET MAX_SEGMENTS=MAX(MAX_SEGMENTS,XREFS[X])
6180 NEXT X
6185 LET SEGMENTS=MAX_SEGMENTS
6190 RETURN
6200 REM " --- Get Description For Segment Selection"
6205 GET_SEG_DESC: 
6210 DIM X$[DESCSTR[FIELD]],X$[DESCSTR[FIELD]](DESCPOS[FIELD]+DESCLEN[FIELD]),SEGDESC$(80-COL),DESC$(80-COL),FLD$(INLEN[FIELD])
6220 IF SEG$="" THEN LET FLD$=DEFAULT$; GOTO 6280
6225 IF DESCCHAN[FIELD]=0 THEN GOTO 6250
6230 LET X$[DESCSTR[FIELD]](DESCPOS[FIELD])="Unknown "+LITERALS$[FIELD]
6240 READ (DESCCHAN[FIELD],KEY=N0$+DESCREC$[FIELD]+SEG$,DOM=6250)IOL=DESCCHANA
6250 LET DESC$(1)=X$[DESCSTR[FIELD]](DESCPOS[FIELD],DESCLEN[FIELD])
6260 LET FLD$(1)=SEG$
6270 IF TYPES$[FIELD]="M" THEN LET FLD$=FNF$(FLD$(1,INLEN[FIELD]),OMASKS$[FIELD])
6275 IF LITERALS$[FIELD]="Item" THEN LET DESC$(1)=FNITEM$(X$[DESCSTR[FIELD]](DESCPOS[FIELD],DESCLEN[FIELD]),IV_DESC[1],IV_DESC[2],IV_DESC[3]),FLD$=FLD$(1,INLEN[FIELD])
6280 LET SEGDESC$(1)=FLD$+"  "+DESC$
6290 RETURN
6400 REM " --- Build SAM-12 Sales By Customer In Territory"
6405 BUILD_SAM12: 
6410 LET SAM12_DEV=SAM_DEV,SAM01_DEV=SA_CHANNELS[2],SAYEAR$=YEAR$,PRIYEAR$=FNYEAR_YY21$(FNYY_YEAR(SAYEAR$)-1),SUM_FLDLEN=0,T0$=""
6415 FOR X=1 TO SEGMENTS
6420 IF LITERALS$[X]<>"" THEN LET SUM_FLDLEN=SUM_FLDLEN+FLDLEN[X]
6425 NEXT X
6430 CALL "SYC.NB","  Building",2+SUM_FLDLEN,COLUMN
6435 CALL "SYC.FA",SAM12_DEV
6440 READ (SAM01_DEV,KEY=N0$+SAYEAR$,DOM=6450)
6450 LET SAM01_K$=KEY(SAM01_DEV,END=6575)
6455 IF POS(N0$+SAYEAR$=SAM01_K$)<>1 THEN GOTO 6575
6460 READ (SAM01_DEV,KEY=SAM01_K$)IOL=SAM00A
6465 LET X=2; REM "Begin loop
6470 IF BEGSEGS$[X]="" THEN GOTO 6495
6475 IF SAM01_K$(KPOS[X]-FLDLEN[1],FLDLEN[X])>=BEGSEGS$[X] THEN GOTO 6495
6480 LET SAM01_K$=SAM01_K$(1,KPOS[X]-FLDLEN[1]-1)+BEGSEGS$[X]
6485 READ (SAM01_DEV,KEY=SAM01_K$,DOM=6570)
6490 GOTO 6455
6495 IF ENDSEGS$[X]="" THEN GOTO 6515
6500 IF SAM01_K$(KPOS[X]-FLDLEN[1],FLDLEN[X])<=ENDSEGS$[X] THEN GOTO 6515
6505 LET SAM01_K$=SAM01_K$(1,KPOS[X]-FLDLEN[1]-1)+$FF$
6510 READ (SAM01_DEV,KEY=SAM01_K$,DOM=6570)
6515 LET X=X+1
6520 IF X<=SEGMENTS THEN GOTO 6470; REM "End loop
6525 PRINT @(COLUMN,11),FNYY21_YY$(SAM01_K$(3,2)),SAM01_K$(KPOS[1],SUM_FLDLEN-FLDLEN[1]),
6530 IF SAM01_K$(KPOS[1],FLDLEN[2])=T0$ THEN GOTO 6560
6535 LET T0$=SAM01_K$(KPOS[1],FLDLEN[2])
6540 DIM B1$(64)
6545 READ (ARM02_DEV,KEY=N0$+T0$+"  ",DOM=6550)IOL=ARM02A
6550 IF BEGSEGS$[1]<>"" AND B1$(21,3)<BEGSEGS$[1] THEN GOTO 6570
6555 IF ENDSEGS$[1]<>"" AND B1$(21,3)>ENDSEGS$[1] THEN GOTO 6570
6560 LET X0$=SAM01_K$(KPOS[0],FLDLEN[0])+B1$(21,3)+SAM01_K$(KPOS[1])
6565 WRITE (SAM12_DEV,KEY=X0$,DOM=6570)IOL=SAM00A
6570 GOTO 6450
6575 IF SAYEAR$=PRIYEAR$ THEN GOTO 6590
6580 LET SAYEAR$=PRIYEAR$
6585 GOTO 6440
6590 RETURN
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8070 DEF FNP$(Q$)=CVS(Q$,2)
8080 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9900 RUN "SYS.AA"
9999 END
