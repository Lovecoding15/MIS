0010 REM "MPR - Purchase Requisition Register (Report Overlay)"
0020 REM "Program MPR.IB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "25Oct96 JJD: Use vendor price discount if available. (310,6360,6365,6410,6900-6960)"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 CALL "MPC.FA",MPE05_DEV,"MPE-05",N0$,FORECAST$,FILENAME$,STATUS
0115 IF STATUS THEN GOTO 9900
0170 CALL "SYC.GA",7,1,"","",STATUS
0175 IF STATUS>0 THEN GOTO 9900
0200 REM " --- IOLIST's"
0210 MPE05A: IOLIST A0$(1),A1$(1),A2$(1),A3$,A[ALL]
0220 IVM01A: IOLIST B0$(1),B1$(1),B2$,B3$,B4$,B5$,B6$,B[ALL]
0230 IVM02A: IOLIST W0$(1),W1$(1),W2$,W[ALL]
0240 APM01A: IOLIST C0$(1),C1$(1)
0280 IVM10F: IOLIST X0$(1)
0290 MPW03A: IOLIST POREQ_SORT$
0300 MPW04A: IOLIST D0$(1),D1$(1),D[ALL]
0310 IVM05A: IOLIST V0$,V1$,V2$,V[ALL]
0500 REM " --- Initializations"
0505 PRECISION IVS01_PRECISION
0510 DIM A0$(39),A1$(20),A2$(63),A[12],J1$(40),O[9],R[1],POREQ_SORT$(45)
0550 LET PREFIX$=FNP$(N0$+FORECAST$+WHSE$),LAST$="",L1=0
0570 LET HR=WIDTH-MAX(LEN(H7$),LEN(H8$)),T0$="",T1$=""
0600 REM " --- Print positions"
0610 CALL "SYC.RM",M1$,M1,10,15
0620 CALL "SYC.RM",M2$,M2,9,12
0630 CALL "SYC.RM",M3$,M3,8,12
0640 LET O[7]=WIDTH-M1,O[6]=O[7]-M2,O[5]=O[6]-9,O[4]=O[5]-M3
0650 LET O[3]=O[4]-25,O[2]=O[3]-4,O[1]=P[0],DW=O[2]-O[1]
0700 REM " --- Background"
0710 CALL "SYC.NB"," Sorting",P[0]+9,COLUMN
0800 REM " --- Extract Planned Purchase records from MPE-05"
0810 GOSUB 6600
0900 REM " --- Position file"
0910 PRINT @(COLUMN-9,11),'SB',"Printing",'SF',J1$(1,P[0]+10),
0920 LET LAST$=""
0990 READ (MPW03_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Read next MPW-03 record"
1010 LET K$=KEY(MPW03_DEV,END=4000)
1020 IF POS(PREFIX$=K$)<>1 THEN GOTO 4000
1030 READ (MPW03_DEV)
1040 IF K$(8,26)=LAST$ THEN GOTO 1100
1050 PRINT @(COLUMN,11),K$(8,AP)," ",K$(14,P[0]),
1060 LET LAST$=K$(8,26)
1100 REM " --- Level breaks"
1110 IF K$(8,6)<>T0$ THEN GOSUB 6000
1120 IF K$(14,20)<>T1$ THEN GOSUB 6200
1200 REM " --- Additional reads"
1210 DIM A0$(39),A1$(20),A2$(63),A[12]
1220 LET A0$(1,39)=K$(1,7)+K$(14,32)
1230 FIND (MPE05_DEV,KEY=A0$,DOM=3900)IOL=MPE05A
1600 LET QTY=A[4]
1620 GOSUB 6400
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4010 LET T9$="END"
4020 GOSUB 6000
4030 IF L+2>L9 THEN GOSUB 5000
4040 PRINT (7)""
4050 PRINT (7)@(O[6]-18),"Totals For Report",@(O[7]),R[1]:M1$
4090 RUN "MPU.CA"
5000 REM " --- Heading"
5010 LET L=HEADINGS+2
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)H5$,@(HR),H7$
5045 PRINT (7)H6$,@(HR),H8$
5050 PRINT (7)""
5060 PRINT (7)@(O[4]+M3-5),"Unit",@(O[5]+2),"Date",@(O[6]+M2-9),"Quantity"
5070 PRINT (7)"Item",@(O[1]),"Description",@(O[2]),"UM",@(O[3]),"Buyer",@(O[4]+M3-5),"Cost",@(O[5]),"Required",@(O[6]+M2-9),"Required",@(O[7]+M1-10),"Extension"
5080 PRINT (7)""
5085 LET L=L+6
5090 RETURN 
6000 REM " --- Vendor Break"
6010 IF T0$="" THEN GOTO 6100
6020 GOSUB 6200
6030 IF L1=0 THEN GOTO 6100
6035 IF L+1>L9 THEN GOSUB 5000
6050 PRINT (7)@(O[6]-18),"Totals For Vendor",@(O[7]),T[1]:M1$
6060 LET L=L+1
6100 REM 
6105 IF T9$<>"" THEN GOTO 6190
6110 DIM C0$(8),C1$(30),T[1]
6120 LET C0$(1)=N0$+K$(8,6),C1$(1)="Unknown Vendor",T0$=C0$(3)
6130 FIND (APM01_DEV,KEY=C0$,DOM=6140)IOL=APM01A
6140 IF L+2>L9 THEN GOSUB 5000
6150 PRINT (7)FNF$(C0$(3,AP),VM0$)," ",C1$
6160 PRINT (7)""
6170 LET L=L+2
6190 RETURN 
6200 REM " --- Item Break"
6210 IF T1$="" THEN GOTO 6300
6220 IF L+3>L9 THEN GOSUB 5000
6240 PRINT (7)""
6250 PRINT (7)@(O[6]-16),"Totals For Item",@(O[6]),S[0]:M2$,@(O[7]),S[1]:M1$
6260 PRINT (7)""
6270 LET L=L+3
6300 REM 
6305 IF T9$<>"" THEN GOTO 6390
6310 DIM B0$(22),B1$(P[2]+P[3]+P[4]),B[12],W0$(24),W1$(64),W2$(1),W[20]
6315 DIM DESC$(DW),X0$(32),S[1]
6320 LET B0$(1,22)=N0$+K$(14),W0$(1,24)=N0$+K$(6,2)+K$(14),T1$=B0$(3)
6330 FIND (IVM01_DEV,KEY=B0$,DOM=6340)IOL=IVM01A
6340 FIND (IVM02_DEV,KEY=W0$,DOM=6350)IOL=IVM02A
6350 LET ITEM$=T1$,DESC$(1)=FNZ$(B1$,P[2],P[3],P[4]),BUYER$=W1$(19,3)
6360 LET UM$=B2$(6,2),X0$(1)=N0$+"F"+BUYER$
6365 LET FACTOR=B[0]
6370 FIND (IVM10_DEV,KEY=X0$(1,6),DOM=6390)IOL=IVM10F
6375 LET BUYER$=X0$(4,3)+" "+FNP$(X0$(7,20))
6390 RETURN 
6400 REM " --- Date break"
6410 GOSUB 6900
6425 IF L+1>L9 THEN GOSUB 5000
6430 LET X=QTY*COST,L=L+1,L1=L1+1
6435 PRINT (7)ITEM$,@(O[1]),DESC$,@(O[2]),UM$,@(O[3]),BUYER$,@(O[4]),COST$,@(O[5]),FNB6$(A2$(38,6)),@(O[6]),QTY:M2$,@(O[7]),X:M1$
6440 DIM D0$(39),D1$(35),D[6]
6450 LET D0$(1)=A0$(1,7)+A2$(14,6)+A0$(8,20)+A2$(38,6)
6460 FIND (MPW04_DEV,KEY=D0$,DOM=6470,ERR=6470)IOL=MPW04A
6470 LET D1$(1,2)=UM$,D[0]=FACTOR,D[1]=COST,D[2]=D[2]+A[4]
6475 IF A2$(38,6)<>"      " THEN LET D1$(3,3)=FND$(FNN$(A2$(38,6)))
6480 WRITE (MPW04_DEV,KEY=D0$)IOL=MPW04A
6485 LET S[0]=S[0]+QTY,S[1]=S[1]+X,T[1]=T[1]+X,R[1]=R[1]+X
6490 LET ITEM$="",DESC$="",UM$="",BUYER$="",COST$=""
6590 RETURN 
6600 REM " --- Sort MPE-05"
6610 READ (MPE05_DEV,KEY=PREFIX$,DOM=6700)
6700 REM " --- Read next MPE-05 record"
6705 READ (MPE05_DEV,END=6800)IOL=MPE05A
6710 IF POS(PREFIX$=A0$)<>1 THEN GOTO 6800
6715 IF A0$(34,1)<>"I" THEN GOTO 6700
6720 IF BEGDATE$<>"" THEN IF A0$(28,6)<BEGDATE$ THEN GOTO 6700
6725 IF ENDDATE$<>"" THEN IF A0$(28,6)>ENDDATE$ THEN GOTO 6700
6730 IF A0$(8,26)=LAST$ THEN GOTO 6735
6735 LET POREQ_SORT$=A0$(1,7)+A2$(14,6)+A0$(8)
6740 WRITE (MPW03_DEV,KEY=POREQ_SORT$)IOL=MPW03A
6745 PRINT @(COLUMN,11),A2$(14,6)+" "+A0$(8,P[0])
6750 GOTO 6700
6800 REM " --- Sort completed"
6890 RETURN 
6900 REM " --- Get Vendor/Item discount price if any "
6910 DIM V0$(28),V1$(32),V2$(20),V[12]
6915 LET COST=W[11]
6920 FIND (IVM05_DEV,KEY=N0$+C0$(3,6)+B0$(3,20),DOM=6955)IOL=IVM05A
6930 IF V[3]>0 THEN IF QTY>=V[0] THEN LET COST=V[3]
6940 IF V[4]>0 THEN IF QTY>=V[1] THEN LET COST=V[4]
6950 IF V[5]>0 THEN IF QTY>=V[2] THEN LET COST=V[5]
6955 LET COST$=STR(COST:M3$)
6960 RETURN 
8000 REM 8000,5 " --- Functions"
8025 DEF FNB6$(Q$)=Q$(3,2)+"/"+Q$(5,2)+"/"+FNYY21_YY$(Q$(1,2))
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8050 DEF FNN$(Q$)=Q$(3,4)+Q$(1,2)
8060 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8080 DEF FNZ$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
