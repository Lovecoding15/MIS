0010 REM "IVR - Inventory Stock Movement Report"
0020 REM "Program IVR.CB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.5 - 01Dec98 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "15Apr98 JWK: Selection trip reads don't work (3910,575)
0032 REM "03May00 KJS: Prevent endless loop when the starting item is greater than an existing item by only the last digit (1410)
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$,A5$,A6$,A[ALL]
0230 IVM10A: IOLIST X0$(1)
0240 IVM10C: IOLIST X0$(1)
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 LET HEADINGS=7,WHEN$=F0$(7,3),CLOCK$="",H9$="",DONE=0
0520 DIM HEADINGS$[HEADINGS],O[9],PROD_TOT[5],WHSE_TOT[5],GRAND_TOT[5]
0560 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$
0565 LET WIDTH=132,PAGE=0,L9=59,L=L9+1,PRODUCT=0,WAREHOUSE=0,REPORT=0
0570 DIM CHANNS[3],PERIOD$[1]
0575 LET CHANNS[2]=IVM12_DEV,CHANNS[3]=IVM03_DEV2,DAY_OF_MTH=NUM(F0$(22,2))
0580 LET PERIOD$[0]=YEAR$+PERIOD$,PERIOD$[1]=YEAR$+PERIOD$
0900 REM " --- Print positions"
0910 LET O[1]=P[0]+1,O[9]=WIDTH-M2,O[8]=O[9]-M2
0920 LET O[7]=O[8]-M2,O[6]=O[7]-M2,O[5]=O[6]-M2-1,O[4]=O[5]-M2
0925 LET O[3]=O[4]-9,O[2]=O[3]-4,SPLIT=0
0935 IF P[0]+P[3]+P[4]+P[5]>O[2] THEN LET SPLIT=1
0940 GOSUB 5800
0950 REM " --- Position files"
0960 CALL "SYC.GA",7,1,"","",STATUS
0965 IF STATUS THEN GOTO 9900
0970 CALL "SYC.NB","Printing",7+P[0],COLUMN
0975 LET FILES[2]=IVM02_DEV,FILES[3]=IVM03_DEV2
0980 LET FIRST$=N0$+"A",K$=FIRST$+BEGPROD$,P=0
0985 IF LEVEL$="W" THEN LET FIRST$=N0$+"C",K$=FIRST$+BEGWHSE$,P=2
0990 READ (IVM03_DEV,KEY=K$,DOM=1000)
1000 REM " --- Get next sort record"
1010 LET K$=KEY(IVM03_DEV,END=4000)
1020 IF POS(FIRST$=K$)<>1 THEN GOTO 4000
1030 LET WHSE$=K$(4,2),PRODUCT$=K$(4+P,3),ITEM$=K$(7+P)
1040 IF LEVEL$="W" THEN GOTO 1200
1100 REM " --- By Item: Valid Product/Item?"
1110 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 4000
1120 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 1300
1130 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 1350
1140 LET X$=PRODUCT$+" "+ITEM$(1,P[0])
1190 GOTO 1500
1200 REM " --- By Warehouse: Valid Warehouse/Product/Item?"
1210 IF ENDWHSE$<>"" THEN IF WHSE$>ENDWHSE$ THEN GOTO 4000
1220 IF BEGPROD$<>"" THEN IF PRODUCT$<BEGPROD$ THEN GOTO 1300
1230 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 1350
1240 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 1400
1250 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 1450
1260 LET X$=WHSE$+" "+PRODUCT$+" "+ITEM$(1,P[0])
1290 GOTO 1500
1300 REM " --- Skip to beginning product for this warehouse'
1310 READ (IVM03_DEV,KEY=K$(1,5)+BEGPROD$,DOM=3900)
1340 GOTO 3900
1350 REM " --- Skip to next warehouse"
1360 READ (IVM03_DEV,KEY=K$(1,5)+$FF$,DOM=3900)
1390 GOTO 3900
1400 REM " --- Skip to beginning item"
1410 READ (IVM03_DEV,KEY=K$(1,6+P)+BEGITEM$,DIR=0,DOM=3900)
1440 GOTO 3900
1450 REM " --- Skip to next product"
1460 READ (IVM03_DEV,KEY=K$(1,6+P)+$FF$,DOM=3900)
1490 GOTO 3900
1500 REM " --- Level breaks?"
1510 PRINT @(COLUMN,11),X$,
1520 IF LEVEL$="W" THEN IF WHSE$<>T0$ THEN GOSUB 6000
1530 IF PRODUCT$<>T1$ THEN GOSUB 6200
1540 READ (IVM03_DEV)
2000 REM " --- Retrieve item"
2010 DIM ITEM$[2],WHSE$[2],W[20],ACTIVITY[12]
2020 LET A0$(1)=N0$+ITEM$
2030 FIND (IVM01_DEV,KEY=A0$,DOM=3900)IOL=IVM01A
2040 IF TYPE$<>"" THEN IF A2$(53,3)<>TYPE$ THEN GOTO 3900
2050 LET ACTION$="A",ITEM$[0]=N0$,ITEM$[2]=ITEM$
2060 IF LEVEL$="W" THEN LET ITEM$[1]=WHSE$,ACTION$=""
2070 CALL "IVC.WA",ACTION$,FILES[ALL],ITEM$[ALL],WHSE$[ALL],W[ALL],VALUE,STATUS
2080 CALL "IVC.AU",LEVEL$,FILES[ALL],ITEM$[ALL],FACTORS[ALL],DAY_OF_MTH,PERIOD$+YEAR$,I4$(1,4),G[0],P[1],USAGE,ESTIMATED,FLAG$,STATUS
2085 IF FLAG$<>"" THEN LET USAGE=ESTIMATED
2090 LET AVG_USAGE=USAGE/G[0]
2100 IF LEVEL$="W" THEN LET ACTION$="" ELSE LET ACTION$="A"
2110 CALL "IVC.WB",ACTION$,CHANNS[ALL],ITEM$[ALL],PERIOD$[ALL],ACTIVITY[ALL],STATUS
2120 LET CUR_USAGE=ACTIVITY[3]+ACTIVITY[4]-ACTIVITY[8]
2130 LET PRIOR_USAGE=USAGE-CUR_USAGE
2140 LET CUR_RECPTS=ACTIVITY[1]+ACTIVITY[2]
2150 LET CUR_ADJ=ACTIVITY[5]+ACTIVITY[6]+ACTIVITY[7]
3000 REM " --- Print detail line"
3010 LET X$="",ISSUED$="",NEEDED=1+SPLIT
3020 IF H9$<>"" THEN LET NEEDED=NEEDED+2
3025 IF LEVEL$="W" THEN LET LAST_ISSUE$=FNL$(WHSE$[1](34,3),WHSE$[1](37,3)) ELSE LET LAST_ISSUE$=FNL$(A2$(35,3),A2$(38,3))
3030 IF FNP$(LAST_ISSUE$)<>"" THEN LET ISSUED$=FNB$(LAST_ISSUE$)
3040 IF SPLIT=0 THEN LET X$=FNITEM$(A1$,P[3],P[4],P[5])
3045 IF L+NEEDED>L9 THEN GOSUB 5000
3050 IF H9$<>"" THEN GOSUB 5200
3060 PRINT (7)@(O[0]),A0$(3),@(O[1]),X$,@(O[2]),A2$(4,2),@(O[3]),ISSUED$,@(O[4]),AVG_USAGE:M2$,@(O[5]),USAGE:M2$,FLAG$,@(O[6]),CUR_USAGE:M2$,@(O[7]),PRIOR_USAGE:M2$,@(O[8]),CUR_RECPTS:M2$,@(O[9]),CUR_ADJ:M2$
3065 LET L=L+1+SPLIT
3070 IF SPLIT=0 THEN GOTO 3100
3080 LET X$=FNITEM$(A1$,P[3],P[4],P[5])
3090 PRINT (7)@(O[0]+3),X$
3100 REM " --- Accumulate totals"
3110 LET PROD_TOT[0]=PROD_TOT[0]+AVG_USAGE,PROD_TOT[1]=PROD_TOT[1]+USAGE,PROD_TOT[2]=PROD_TOT[2]+CUR_USAGE,PROD_TOT[3]=PROD_TOT[3]+PRIOR_USAGE,PROD_TOT[4]=PROD_TOT[4]+CUR_RECPTS,PROD_TOT[5]=PROD_TOT[5]+CUR_ADJ
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4010 IF SUBTOTALS$="N" THEN GOTO 4090
4020 LET DONE=1
4030 IF LEVEL$="W" THEN GOSUB 6000
4040 IF LEVEL$="I" THEN GOSUB 6200
4050 IF L+2>L9 THEN GOSUB 5000
4060 PRINT (7)@(O[4]),FILL(M2*6+1,"-"),'LF',@(O[4]-21),"Total For Report ",@(O[4]),GRAND_TOT[0]:M2$,@(O[5]),GRAND_TOT[1]:M2$,@(O[6]),GRAND_TOT[2]:M2$,@(O[7]),GRAND_TOT[3]:M2$,@(O[8]),GRAND_TOT[4]:M2$,@(O[9]),GRAND_TOT[5]:M2$
4090 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5090 RETURN
5200 REM " --- Product subheading"
5210 IF L+2>L9 THEN GOSUB 5000
5220 PRINT (7)'LF',H9$
5240 LET L=L+2,H9$=""
5290 RETURN
5800 REM " --- Initialize HEADINGS$"
5810 DIM H1$(WIDTH),H2$(WIDTH),H6$(WIDTH),H7$(WIDTH)
5815 IF LEVEL$="I" THEN LET HEADINGS$[1]=HEADINGS$[1]+" By Item"
5820 IF LEVEL$="W" THEN LET HEADINGS$[1]=HEADINGS$[1]+" By Warehouse"
5825 LET HEADINGS$[1]=HEADINGS$[1]+" For Period "+PERIOD$+" "+FNYY21_YY$(YEAR$)+" "+G3$(11+NUM(PERIOD$)*16,16)
5830 LET X1$="First",X2$="First",X2=5
5835 IF BEGITEM$<>"" THEN LET X1$=BEGITEM$
5840 IF BEGPROD$<>"" THEN LET X2$=BEGPROD$,X2=3
5850 IF ENDPROD$="" THEN IF X2=3 THEN LET X2=4
5860 LET H1$(1)="From Item: "+X1$,H1$(WIDTH-X2-13)="From Product: "+X2$
5870 LET X1$="Last",X2$="Last",X3$="All Item Types"
5880 IF ENDITEM$<>"" THEN LET X1$=ENDITEM$
5890 IF ENDPROD$<>"" THEN LET X2$=ENDPROD$
5900 IF TYPE$<>"" THEN LET X3$="Item Type "+TYPE$
5910 LET H2$(1)="  To Item: "+X1$,H2$(FNC(X3$,WIDTH))=X3$
5920 LET H2$(WIDTH-X2-13)="  To Product: "+X2$
5925 LET H6$(O[3]+1)="Date of",H6$(O[4]+M2-10)="Avg Period"
5930 LET H6$(O[5]+M2-6)="Annual",H6$(O[6]+M2-6)="Period",H6$(O[7]+M2-5)="Prior"
5935 LET H6$(O[8]+M2-6)="Period",H6$(O[9]+M2-6)="Period"
5940 LET H7$(O[0]+1)="Item",H7$(O[1]+1)="Description"
5950 LET H7$(O[2]+1)="UM",H7$(O[3])="Last Issue",H7$(O[4]+M2-7)="Usage"
5960 LET H7$(O[5]+M2-5)="Usage",H7$(O[6]+M2-5)="Usage",H7$(O[7]+M2-5)="Usage"
5975 LET H7$(O[8]+M2-8)="Receipts",H7$(O[9]+M2-6)="Adjust"
5980 LET HEADINGS$[3]=H1$,HEADINGS$[4]=H2$,HEADINGS$[6]=H6$,HEADINGS$[7]=H7$
5990 RETURN
6000 REM " --- Warehouse Break"
6010 IF T0$="" OR SUBTOTALS$="N" THEN GOTO 6100
6020 GOSUB 6200
6030 IF L+2>L9 THEN GOSUB 5000
6040 PRINT (7)@(O[4]),FILL(M2*6+1,"-"),'LF',@(O[4]-24),"Total For Warehouse ",T0$,@(O[4]),WHSE_TOT[0]:M2$,@(O[5]),WHSE_TOT[1]:M2$,@(O[6]),WHSE_TOT[2]:M2$,@(O[7]),WHSE_TOT[3]:M2$,@(O[8]),WHSE_TOT[4]:M2$,@(O[9]),WHSE_TOT[5]:M2$
6050 LET L=L+2
6100 IF DONE THEN GOTO 6190
6110 DIM X0$(32),WHSE_TOT[5]
6120 LET T0$=WHSE$,X0$(6,24)="(Not on File)",L=L9+1,WAREHOUSE=0
6130 FIND (IVM10_DEV,KEY=N0$+"C"+T0$,DOM=6140)IOL=IVM10C
6140 LET X$="Warehouse "+T0$+" "+FNP$(X0$(6,24))
6150 LET HEADINGS$[3]=H1$,HEADINGS$[3](FNC(X$,WIDTH),LEN(X$))=X$
6190 RETURN
6200 REM " --- Product break"
6210 IF T1$="" OR SUBTOTALS$="N" THEN GOTO 6300
6220 IF L+2>L9 THEN GOSUB 5000
6230 PRINT (7)@(O[4]),FILL(M2*6+1,"-"),'LF',@(O[4]-22),"Total For Product ",T1$,@(O[4]),PROD_TOT[0]:M2$,@(O[5]),PROD_TOT[1]:M2$,@(O[6]),PROD_TOT[2]:M2$,@(O[7]),PROD_TOT[3]:M2$,@(O[8]),PROD_TOT[4]:M2$,@(O[9]),PROD_TOT[5]:M2$
6240 LET L=L+2
6250 FOR X=0 TO 5
6260 LET GRAND_TOT[X]=GRAND_TOT[X]+PROD_TOT[X],WHSE_TOT[X]=WHSE_TOT[X]+PROD_TOT[X]
6270 NEXT X
6300 IF DONE THEN GOTO 6390
6310 DIM X0$(32),PROD_TOT[5]
6320 LET T1$=PRODUCT$,X0$(7,20)="(Not on File)",PRODUCT=0
6330 FIND (IVM10_DEV,KEY=N0$+"A"+T1$,DOM=6340)IOL=IVM10A
6340 LET H9$="Product Type "+T1$+" "+X0$(7,20)
6390 RETURN
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8300 REM " --- Multi-Line Functions"
8310 DEF FNL$(Q1$,Q2$)
8320 IF CVS(Q1$,2)="" THEN LET Q1$="ZZZ"
8330 IF CVS(Q2$,2)="" THEN LET Q2$="ZZZ"
8340 LET Q$=Q1$
8350 IF Q2$>Q1$ THEN LET Q$=Q2$
8360 IF Q$="ZZZ" THEN LET Q$="   "
8370 RETURN Q$
8380 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9900 RUN "SYS.AA"
9999 END