0010 REM "IVX - Rebuild Inventory Beginning Balances"
0020 REM "Program IVX.GA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.4 - 15Dec97 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "27May97 WGH: New utility added for 6.0.4 SCN Release"
0032 REM "09Sep97 JWK: Correct IOLIST for IVM-07 (220)
0033 REM "17Mar98 WGH: Write missing IVM-12 and IVM-17 records when necessary (1220,1610-1620,1660,2220,2610-2620,2660)"
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=5
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="IVM-02",FILES$[2]="IVM-07",FILES$[3]="IVM-12"
0130 LET FILES$[4]="IVM-17",FILES$[5]="SYS-01"
0150 CALL "SYC.DA",1,1,FILES,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS THEN GOTO 9900
0170 LET IVM02_DEV=CHANNELS[1],IVM07_DEV=CHANNELS[2],IVM12_DEV=CHANNELS[3]
0180 LET IVM17_DEV=CHANNELS[4],SYS01_DEV=CHANNELS[5]
0200 REM " --- IOLIST's"
0210 IVM02A: IOLIST *,*,*,ONHAND
0220 IVM07A: IOLIST *,*,ONHAND
0230 IVM12A: IOLIST A0$,A1$,A2$,A[ALL]
0240 IVM17A: IOLIST A0$,A1$,A2$,A[ALL]
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0400 REM " --- Parameters"
0405 DIM P[2]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0440 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1)),P[2]=NUM(I2$(7,2))
0450 LET IVPERIOD$=I4$(1,2),IVYEAR$=I4$(3,2)
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM A[12]
0700 REM " --- Background"
0710 PRINT 'SB',@(33,3),"Phase:",'SF',
0720 CALL "SYC.WC",1,0,80,0,0,4,0
0800 REM " --- Options
0810 LET NUMBER=5; DIM MESSAGE$[NUMBER]
0820 LET MESSAGE$[0]="This utility resets the IVM-12 and IVM-17 beginning balances"
0825 LET MESSAGE$[1]="for the current period. It uses the current on-hand quantities"
0830 LET MESSAGE$[2]="from IVM-02 and IVM-07, and current and future activity from"
0835 LET MESSAGE$[3]="IVM-12 and IVM-17 to calculate the beginning balance."
0850 LET MESSAGE$[NUMBER]="      Rebuild Inventory Beginning Balances (YES/NO)?"
0860 CALL "SYC.XA",3,MESSAGE$[ALL],NUMBER,-1,-1,V$,V3
0870 ON V3 GOTO 0880,0800,0800,0800,9900
0880 IF V$="NO" THEN GOTO 9900
0890 IF V$<>"YES" THEN GOTO 0800
0900 REM " --- Position IVM-02"
0910 LET X$="Setting Items' Warehouse Beginning Balance",X=3+P[0]
0920 GOSUB 6000
0990 READ (IVM02_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Get On-Hand Quantity From IVM-02"
1010 LET IVM02K$=KEY(IVM02_DEV,END=1900)
1020 IF POS(N0$=IVM02K$)<>1 THEN GOTO 1900
1030 PRINT @(COLUMN,11),IVM02K$(3,2)," ",IVM02K$(5,P[0]),
1040 EXTRACT (IVM02_DEV,KEY=IVM02K$)IOL=IVM02A
1200 REM " --- Get Current Activity From IVM-12"
1220 READ (IVM12_DEV,KEY=IVM02K$+IVYEAR$+IVPERIOD$,DOM=1400)IOL=IVM12A
1240 LET ONHAND=ONHAND-A[1]-A[2]+A[3]+A[4]-A[5]-A[6]+A[7]-A[8]
1400 REM " --- Get Future Activity From IVM-12"
1410 LET IVM12K$=KEY(IVM12_DEV,END=1600)
1420 IF POS(IVM02K$=IVM12K$)<>1 THEN GOTO 1600
1430 READ (IVM12_DEV)IOL=IVM12A
1440 LET ONHAND=ONHAND-A[1]-A[2]+A[3]+A[4]-A[5]-A[6]+A[7]-A[8]
1490 GOTO 1400
1600 REM " --- Set Beginning Balance For IVM-12"
1610 DIM A1$(0),A2$(0),A[12]
1615 LET A0$=IVM02K$+IVYEAR$+IVPERIOD$
1620 READ (IVM12_DEV,KEY=A0$,DOM=1630)IOL=IVM12A
1640 LET A[0]=ONHAND
1660 WRITE (IVM12_DEV,KEY=A0$)IOL=IVM12A
1800 REM " --- Get Next IVM-02 Record"
1810 READ (IVM02_DEV,KEY=IVM02K$); REM "Advance file pointer
1890 GOTO 1000
1900 REM " --- Position IVM-07"
1910 LET X$="Setting Lot/Serial's Beginning Balance",X=4+P[0]+P[2]
1920 GOSUB 6000
1960 READ (IVM07_DEV,KEY=N0$,DOM=2000)
2000 REM " --- Get On-Hand Quantity From IVM-07"
2010 LET IVM07K$=KEY(IVM07_DEV,END=4000)
2020 IF POS(N0$=IVM07K$)<>1 THEN GOTO 4000
2030 PRINT @(COLUMN,11),IVM07K$(3,2)," ",IVM07K$(5,P[0])," ",IVM07K$(25,P[2]),
2040 EXTRACT (IVM07_DEV,KEY=IVM07K$)IOL=IVM07A
2200 REM " --- Get Current Activity From IVM-17"
2220 READ (IVM17_DEV,KEY=IVM07K$+IVYEAR$+IVPERIOD$,DOM=2400)IOL=IVM17A
2240 LET ONHAND=ONHAND-A[1]-A[2]+A[3]+A[4]-A[5]-A[6]+A[7]-A[8]
2400 REM " --- Get Future Activity From IVM-17"
2410 LET IVM17K$=KEY(IVM17_DEV,END=2600)
2420 IF POS(IVM07K$=IVM17K$)<>1 THEN GOTO 2600
2430 READ (IVM17_DEV)IOL=IVM17A
2440 LET ONHAND=ONHAND-A[1]-A[2]+A[3]+A[4]-A[5]-A[6]+A[7]-A[8]
2490 GOTO 2400
2600 REM " --- Set Beginning Balance For IVM-17"
2610 DIM A1$(0),A2$(0),A[12]
2615 LET A0$=IVM07K$+IVYEAR$+IVPERIOD$
2620 READ (IVM17_DEV,KEY=A0$,DOM=2630)IOL=IVM17A
2640 LET A[0]=ONHAND
2660 WRITE (IVM17_DEV,KEY=A0$)IOL=IVM17A
2800 REM " --- Get Next IVM-07 Record"
2810 READ (IVM07_DEV,KEY=IVM07K$); REM "Advance file pointer
2890 GOTO 2000
4000 REM " --- All done"
4090 GOTO 9900
6000 REM " --- Update screen"
6010 PRINT @(40,3),X$,'CL',@(0,5),'CE',
6020 CALL "SYC.NB","Updating",X,COLUMN
6090 RETURN 
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
