0010 REM "IVR - Inventory Turns Report (Report Overlay)"
0020 REM "Program IVR.KB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.3 - 15May97 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "25Oct96 JAL: Prevent Error 47/Line 3030 when item length > 18 (2710)"
0032 REM "23Jan97 WGH: Fix Product Type breaks when printed by Item (2780)"
0033 REM "03May00 KJS: Prevent endless loop when the starting item is greater than an existing item by only the last digit (1410)
0034 REM "28Jun00 WGH: Item level reports may be wrong when a single Item is selected for a single Product Type (1120-1130)
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0110 CALL "SYC.GA",7,1,"","",STATUS
0120 IF STATUS THEN GOTO 9900
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$,A5$,A6$,A[ALL]
0220 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0230 IVM10A: IOLIST X0$(1)
0240 IVM10C: IOLIST X0$(1)
0250 IVW03A: IOLIST W0$(1),W1$(1),W[ALL]
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],ITEM[3],TOTALS[1]
0520 DIM PERIOD$[1],HEADINGS$[6],O[8],PRODUCT[1],WAREHOUSE[1],REPORT[1]
0530 DIM W0$(45),W1$(64),W[5]
0540 LET FILES[2]=IVM12_DEV,FILES[3]=IVM03_DEV2,CH1$="",CH2$=""
0545 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$,WHEN$=F0$(7,3),CLOCK$="",H9$=""
0550 LET WIDTH=132,PAGE=0,L9=59,L=L9+1,DW=P[3]+P[4]+P[5],DONE=0
0555 LET HEADINGS=6,IH$="Item",DH$="Description",M9$="00",M8$="-##0.00"
0560 LET BEGWHSE$=OPTIONS$[1],ENDWHSE$=OPTIONS$[2],BEGPROD$=OPTIONS$[3]
0565 LET ENDPROD$=OPTIONS$[4],BEGITEM$=OPTIONS$[5],ENDITEM$=OPTIONS$[6]
0570 LET TYPE$=OPTIONS$[7],LEVEL$=OPTIONS$[0],M9=LEN(M9$),M8=LEN(M8$)
0575 LET P=NUM(PERIOD$)-(G[0]-1),X=FNYY_YEAR(YEAR$),M7$="###########.0000-"
0580 IF P<1 THEN LET P=G[0]+P,X=X-1
0585 LET PERIOD$[0]=FNYEAR_YY21$(X)+STR(P:M9$),PERIOD$[1]=YEAR$+PERIOD$
0590 IF LEVEL$="W" THEN LET CH1$="Unit",CH2$="Cost"
0600 REM " --- Print positions"
0610 CALL "SYC.RM",M1$,M1,8,15
0615 CALL "SYC.RM",M2$,M2,8,12
0620 CALL "SYC.RM",M3$,M3,8,12
0625 LET O[8]=WIDTH-M8,O[7]=O[8]-M1,O[6]=O[7]-M2,O[5]=O[6]-M1,O[4]=O[5]
0630 IF LEVEL$="W" THEN LET O[4]=O[5]-M1
0635 LET O[3]=O[4]-M2,O[2]=O[3]-3,O[1]=P[0]+1,X=O[2]-O[1],SPLIT=0
0640 IF X>DW THEN GOTO 0700
0645 LET O[1]=O[2]-1,DW=O[2]-3,SPLIT=1
0650 LET IH$="Item/Description",DH$=""
0700 REM " --- Background"
0710 CALL "SYC.NB"," Sorting",7+P[0],COLUMN
0800 REM " --- Report headings"
0810 GOSUB 5800
0900 REM " --- Position files"
0980 LET FIRST$=N0$+"A",K$=FIRST$+BEGPROD$,P=0
0985 IF LEVEL$="W" THEN LET FIRST$=N0$+"C",K$=FIRST$+BEGWHSE$,P=2
0990 READ (IVM03_DEV,KEY=K$,DOM=1000)
1000 REM " --- Get next sort record"
1010 LET K$=KEY(IVM03_DEV,END=2900)
1020 IF POS(FIRST$=K$)<>1 THEN GOTO 2900
1030 LET WHSE$=K$(4,2),PRODUCT$=K$(4+P,3),ITEM$=K$(7+P)
1040 IF LEVEL$="W" THEN GOTO 1200
1100 REM " --- By Item: Valid Product/Item?"
1110 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 2900
1120 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 1400
1130 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 1450
1140 LET X$=PRODUCT$+" "+ITEM$(1,P[0])
1190 GOTO 1500
1200 REM " --- By Warehouse: Valid Warehouse/Product/Item?"
1210 IF ENDWHSE$<>"" THEN IF WHSE$>ENDWHSE$ THEN GOTO 2900
1220 IF BEGPROD$<>"" THEN IF PRODUCT$<BEGPROD$ THEN GOTO 1300
1230 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 1350
1240 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 1400
1250 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 1450
1260 LET X$=WHSE$+" "+PRODUCT$+" "+ITEM$(1,P[0])
1290 GOTO 1500
1300 REM " --- Skip to beginning product for this warehouse'
1310 READ (IVM03_DEV,KEY=K$(1,5)+BEGPROD$,DOM=2800)
1340 GOTO 2800
1350 REM " --- Skip to next warehouse"
1360 READ (IVM03_DEV,KEY=K$(1,5)+$FF$,DOM=2800)
1390 GOTO 2800
1400 REM " --- Skip to beginning item"
1410 READ (IVM03_DEV,KEY=K$(1,6+P)+BEGITEM$,DIR=0,DOM=2800)
1440 GOTO 2800
1450 REM " --- Skip to next product"
1460 READ (IVM03_DEV,KEY=K$(1,6+P)+$FF$,DOM=2800)
1490 GOTO 2800
1500 REM " --- Retrieve item"
1510 DIM DESCRIPTION$(DW)
1520 PRINT @(COLUMN,11),X$,
1530 LET A0$(1)=N0$+ITEM$
1535 READ (IVM03_DEV)
1540 FIND (IVM01_DEV,KEY=A0$,DOM=2800)IOL=IVM01A
1550 IF TYPE$<>"" THEN IF A2$(53,3)<>TYPE$ THEN GOTO 2800
1560 LET DESCRIPTION$(1)=FNITEM$(A1$,P[3],P[4],P[5])
1570 IF LEVEL$="I" THEN GOTO 1900
1580 GOSUB 6400
1590 GOTO 2500
1900 REM " --- Position xref for item level report"
1910 DIM ITEM[3]
1980 LET X$=N0$+"G"+A0$(3)
1990 READ (IVM03_DEV2,KEY=X$,DOM=2000)
2000 REM " --- Get next warehouse xref"
2010 LET K$=KEY(IVM03_DEV2,END=2400)
2020 IF POS(X$=K$)<>1 THEN GOTO 2400
2030 READ (IVM03_DEV2)
2040 LET WHSE$=K$(24,2)
2050 GOSUB 6400
2100 REM " --- Accumulate item totals"
2110 LET ITEM[0]=ITEM[0]+USAGE,ITEM[1]=ITEM[1]+TOTAL
2120 LET ITEM[2]=ITEM[2]+BALANCE,ITEM[3]=ITEM[3]+AVERAGE
2190 GOTO 2000
2400 REM " --- Set detail fields for item"
2410 LET COST=0,TURNS=0,USAGE=ITEM[0]
2420 LET TOTAL=ITEM[1],BALANCE=ITEM[2],AVERAGE=ITEM[3]
2430 IF AVERAGE>0 THEN LET TURNS=TOTAL/AVERAGE
2500 REM " --- Number of turns meets selection criteria?"
2510 IF XLIMIT$="A" THEN IF TURNS<XLIMIT THEN GOTO 2800
2520 IF XLIMIT$="B" THEN IF TURNS>XLIMIT THEN GOTO 2800
2600 REM " --- Generate reciprocal amount"
2610 IF SEQUENCE$="D" THEN GOTO 2650
2620 LET SIGN$="+",AMOUNT$=STR(TURNS:M7$)
2630 IF TURNS<0 THEN LET SIGN$="",AMOUNT$=STR(100000000000-ABS(TURNS):M7$)
2640 GOTO 2700
2650 LET SIGN$="",AMOUNT$="",AMOUNT$=STR(100000000000-TURNS:M7$)
2660 IF TURNS<=0 THEN LET SIGN$="-",AMOUNT$=STR(TURNS:M7$)
2700 REM " --- Write sort record"
2710 DIM W0$(45),W1$(64),W[5]
2720 LET W0$(1)=N0$+WHSE$,W0$(5)=PRODUCT$,W0$(8)=SIGN$,W0$(9)=AMOUNT$
2730 LET W0$(26)=A0$(3),W1$(1)=DESCRIPTION$,W1$(61,2)=A2$(4,2)
2740 LET W[0]=USAGE,W[1]=COST,W[2]=TOTAL,W[3]=BALANCE,W[4]=AVERAGE,W[5]=TURNS
2780 IF LEVEL$="I" THEN LET W0$(3,2)=""
2790 WRITE (IVW03_DEV,KEY=W0$)IOL=IVW03A
2800 REM " --- Loop back for next record"
2890 GOTO 1000
2900 REM " --- Report initializations"
2910 PRINT @(COLUMN-9,11),FILL(16+P[0]),@(COLUMN-9),'SB',"Printing",'SF',
2990 READ (IVW03_DEV,KEY=N0$,DOM=3000)
3000 REM " --- Read next work record"
3010 READ (IVW03_DEV,END=4000)IOL=IVW03A
3020 LET WHSE$=W0$(3,P),PRODUCT$=W0$(5,3),ITEM$=W0$(26)
3030 PRINT @(COLUMN,11),WHSE$," ",PRODUCT$," ",ITEM$(1,P[0]),
3200 REM " --- Level breaks?"
3210 IF LEVEL$="W" THEN IF WHSE$<>T0$ THEN GOSUB 6000
3220 IF PRODUCT$<>T1$ THEN GOSUB 6200
3300 REM " --- Format print fields"
3310 LET DESCRIPTION$(1)=W1$(1,60),UM$=W1$(61,2),COST$=""
3320 IF LEVEL$="W" THEN LET COST$=STR(W[1]:M3$)
3400 REM " --- Print detail line"
3410 LET NEEDED=1+SPLIT,X$=""
3420 IF H9$<>"" THEN LET NEEDED=NEEDED+2
3430 IF L+NEEDED>L9 THEN GOSUB 5000
3440 IF H9$<>"" THEN GOSUB 5200
3450 IF SPLIT=0 THEN LET X$=DESCRIPTION$
3460 PRINT (7)@(O[0]),ITEM$(1,P[0]),@(O[1]),X$,@(O[2]),UM$,@(O[3]),W[0]:M2$,@(O[4]),COST$,@(O[5]),W[2]:M1$,@(O[6]),W[3]:M2$,@(O[7]),W[4]:M1$,@(O[8]),W[5]:M8$
3465 LET L=L+1,L0=L0+1,L1=L1+1
3470 IF SPLIT=0 THEN GOTO 3500
3480 PRINT (7)@(O[0]+3),DESCRIPTION$
3490 LET L=L+1
3500 REM " --- Accumulate totals"
3510 LET PRODUCT[0]=PRODUCT[0]+W[2],PRODUCT[1]=PRODUCT[1]+W[4]
3520 LET WAREHOUSE[0]=WAREHOUSE[0]+W[2],WAREHOUSE[1]=WAREHOUSE[1]+W[4]
3530 LET REPORT[0]=REPORT[0]+W[2],REPORT[1]=REPORT[1]+W[4]
3900 REM " --- Loop back for next record"
3990 GOTO 3000
4000 REM " --- All done"
4010 LET DONE=1
4020 IF LEVEL$="W" THEN GOSUB 6000
4030 IF LEVEL$="I" THEN GOSUB 6200
4040 LET TOTALS$="Totals For Report",TOTALS[0]=REPORT[0],TOTALS[1]=REPORT[1]
4050 GOSUB 6900
4090 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+5
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)@(O[3]),H5$
5050 PRINT (7)@(O[3]+M2-6),"Total",@(O[4]+M3-5),CH1$,@(O[5]+M1-6),"Total",@(O[6]+M2-8),"Average",@(O[7]+M1-8),"Average"
5060 PRINT (7)@(O[0]),IH$,@(O[1]),DH$,@(O[2]),"UM",@(O[3]+M2-6),"Usage",@(O[4]+M3-5),CH2$,@(O[5]+M1-6),"Cost",@(O[6]+M2-8),"On Hand",@(O[7]+M1-8),"Value",@(WIDTH-5),"Turns"
5070 PRINT (7)""
5090 RETURN
5200 REM " --- Product subheading"
5210 IF L+2>L9 THEN GOSUB 5000
5220 PRINT (7)H9$
5230 PRINT (7)""
5240 LET L=L+2,H9$=""
5290 RETURN
5800 REM " --- Initialize HEADINGS$"
5810 DIM H1$(WIDTH),H2$(WIDTH),H5$(WIDTH-O[3],"-")
5815 IF LEVEL$="I" THEN LET HEADINGS$[1]=HEADINGS$[1]+" By Item"
5820 IF LEVEL$="W" THEN LET HEADINGS$[1]=HEADINGS$[1]+" By Warehouse"
5825 LET HEADINGS$[1]=HEADINGS$[1]+" For Period "+PERIOD$+" "+FNYY21_YY$(YEAR$)
5830 LET HEADINGS=5,X$=" Last "+STR(G[0])+" Periods "
5835 LET H5$(FNC(X$,WIDTH-O[3]),LEN(X$))=X$
5875 IF XLIMIT$="" THEN GOTO 5900
5880 LET X$="Limited To Items With Turns ",HEADINGS=6
5885 IF XLIMIT$="A" THEN LET X$=X$+"Greater"
5890 IF XLIMIT$="B" THEN LET X$=X$+"Less"
5895 LET HEADINGS$[2]=X$+" Than "+FNS$(STR(XLIMIT:"#0.00"))
5900 REM 
5920 LET X1$="First",X2$="First",X2=5
5925 IF BEGITEM$<>"" THEN LET X1$=BEGITEM$
5930 IF BEGPROD$<>"" THEN LET X2$=BEGPROD$,X2=3
5935 IF ENDPROD$="" THEN IF X2=3 THEN LET X2=4
5940 LET H1$(1)="From Item: "+X1$,H1$(WIDTH-X2-13)="From Product: "+X2$
5945 LET X1$="Last",X2$="Last",X3$="All Item Types"
5950 IF ENDITEM$<>"" THEN LET X1$=ENDITEM$
5955 IF ENDPROD$<>"" THEN LET X2$=ENDPROD$
5960 IF TYPE$<>"" THEN LET X3$="Item Type "+TYPE$
5965 LET H2$(1)="  To Item: "+X1$,H2$(FNC(X3$,WIDTH))=X3$
5970 LET H2$(WIDTH-X2-13)="  To Product: "+X2$
5980 LET HEADINGS$[HEADINGS-2]=H1$,HEADINGS$[HEADINGS-1]=H2$
5990 RETURN
6000 REM " --- Warehouse Break"
6010 IF T0$="" THEN GOTO 6100
6020 GOSUB 6200
6030 IF L0<1 THEN GOTO 6100
6040 LET TOTALS$="Totals For Warehouse "+T0$
6050 LET TOTALS[0]=WAREHOUSE[0],TOTALS[1]=WAREHOUSE[1]
6060 GOSUB 6900
6100 IF DONE THEN GOTO 6190
6110 DIM X0$(32),WAREHOUSE[1]
6120 LET T0$=WHSE$,X0$(6,24)="(Not on File)",L=L9+1,L0=0
6130 FIND (IVM10_DEV,KEY=N0$+"C"+T0$,DOM=6140)IOL=IVM10C
6140 LET X$="Warehouse "+T0$+" "+FNP$(X0$(6,24)),HEADINGS$[HEADINGS-2]=H1$
6150 LET HEADINGS$[HEADINGS-2](FNC(X$,WIDTH),LEN(X$))=X$
6190 RETURN
6200 REM " --- Product break"
6210 IF T1$="" THEN GOTO 6300
6220 IF L1<1 THEN GOTO 6300
6230 LET TOTALS$="Totals For Product "+T1$
6240 LET TOTALS[0]=PRODUCT[0],TOTALS[1]=PRODUCT[1]
6250 GOSUB 6900
6300 IF DONE THEN GOTO 6390
6310 DIM X0$(32),PRODUCT[1]
6320 LET T1$=PRODUCT$,X0$(7,20)="(Not on File)",L1=0
6330 FIND (IVM10_DEV,KEY=N0$+"A"+T1$,DOM=6340)IOL=IVM10A
6340 LET H9$="Product Type "+T1$+" "+X0$(7,20)
6390 RETURN
6400 REM " --- Retrieve warehouse info and calculate turns"
6410 DIM B0$(24),B1$(64),B[20],ITEM$[2],ACTIVITY[12]
6415 LET USAGE=0,COST=0,COST$="",TOTAL=0,BALANCE=0,AVERAGE=0,TURNS=0
6420 LET B0$(1)=N0$+WHSE$+ITEM$,ITEM$[0]=N0$,ITEM$[1]=WHSE$,ITEM$[2]=A0$(3)
6425 FIND (IVM02_DEV,KEY=B0$,DOM=6490)IOL=IVM02A
6430 LET COST=B[11],COST$=STR(COST:M3$),ACTION$="T"
6435 CALL "IVC.WB",ACTION$,FILES[ALL],ITEM$[ALL],PERIOD$[ALL],ACTIVITY[ALL],STATUS
6440 LET USAGE=(ACTIVITY[3]+ACTIVITY[4])-ACTIVITY[8],BALANCE=ACTIVITY[0]/G[0]
6450 LET AVERAGE=BALANCE*COST,TOTAL=USAGE*COST
6480 IF AVERAGE<>0 THEN LET TURNS=TOTAL/AVERAGE
6490 RETURN
6900 REM " --- Print totals"
6910 LET TURNS=0
6920 IF TOTALS[1]<>0 THEN LET TURNS=TOTALS[0]/TOTALS[1]
6930 IF L+1>L9 THEN GOSUB 5000
6940 PRINT (7)@(O[5]-23),TOTALS$,@(O[5]),TOTALS[0]:M1$,@(O[7]),TOTALS[1]:M1$,@(O[8]),TURNS:M8$
6950 LET L=L+1
6990 RETURN
8000 REM " --- Functions"
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8085 DEF FNS$(Q$)=CVS(Q$,1)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
