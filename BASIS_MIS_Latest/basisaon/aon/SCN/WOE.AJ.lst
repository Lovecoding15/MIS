0010 REM "WOE - Work Order Entry Serial/Lot #'s"
0020 REM "Program WOE.AJ"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.6 - 15Aug99 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "20Jan99 WGH: Display and remove Lot/Serial Comments correctly (2420,3320,3335,3350,3390,3780,3990-3999,5020)
0032 REM "22Jan99 WGH: Can't <F2> or <F4> out of Lot/Serial Number field (2020)
0033 REM "22Jan99 WGH: Place Line 22 input fields at correct position after prompt (2135-2140,4010,5210,6320)
0034 REM "10Sep99 KJS: S9 is used as the original scheduled qty everywhere else, can cause bad on-order amounts (420,2020)
0040 REM 
0045 REM "L9=MAX LINES, L1=FIRST LINES, L0=HEADER LINE, L=CURRENT LINE
0050 REM 
0085 SETESC 9000
0090 SETERR 9000
0095 PRECISION IVS01_PRECISION
0200 REM " --- IOLISTs"
0210 WOE06A: IOLIST W0$,W1$(1),W[ALL]
0220 IVM07A: IOLIST D0$,D1$,D[ALL]
0400 REM " --- Parameters"
0420 LET SS9=NUM(P2$(7,2))
0500 REM " --- Init Data
0510 DIM W0$(15),W1$(56),J1$(80),W[5],D[12]
0520 LET W0$(1)=A0$(1,11),L=L1
0540 LET L0=11,L1=L0+2,L9=20,L9$="",SL$="Serial Number"
0550 IF P3$(17,1)="L" THEN LET SL$="Lot Number"
0700 REM " --- Background
0710 PRINT @(0,L0+2),'CE','SB',@(72-10-M3-M2*2,L0),"Closed",@(72-M3-M2-9),"Schedule",@(72-M3-7),"Closed",@(65),"Closed",@(0,L0+1),"Seq",@(10),SL$,"/Comments",@(72-9-M3-M2*2),"Date",@(72-M3-M2-9),"Prod Qty",@(72-M3-4),"Qty",@(67),"Cost",@(74),"Cmpl?",
0900 REM " --- List existing lines"
0910 GOSUB 5100
0920 GOTO 4000
1000 REM " --- Next line"
1020 IF L+1>L9 THEN PRINT @(0,L1),'LD','LD',; LET L=L-2; GOTO 1020
1040 IF L>L9 THEN LET L=L9
1100 REM " --- Get Next Key"
1120 LET K$=KEY(WOE06_DEV,END=1400)
1140 IF POS(K$(1,11)=W0$)<>1 THEN GOTO 1400
1145 DIM W[5]
1150 READ (WOE06_DEV,KEY=K$)IOL=WOE06A
1160 GOTO 1490
1400 REM " --- Seq"
1405 PRINT @(0,21),'CL',@(0,22),'CL',
1410 LET W0=NUM(W0$(12,3))+1
1420 LET V0$="Z",V1$="ER",V2$=STR(W0),V3$="",V0=3,V1=0,V2=L,I0=0,O9=1
1430 GOSUB 7000
1440 IF V3=4 THEN GOTO 4000
1450 IF V$="000" THEN GOTO 1400
1460 LET W0$(12,3)=V$
1480 FIND (WOE06_DEV,KEY=W0$(1,14),DOM=1600)IOL=WOE06A
1490 IF W0$(1,14)<=K9$ THEN GOSUB 5400
1500 GOSUB 5000
1530 GOTO 3300
1600 REM " --- Setup"
1640 LET W1$(1)=""
2000 REM " --- Enter Data
2010 IF W1$(1,1)="Y" THEN LET V3=4; GOTO 3200
2020 LET V0$="S",V1$="CE",V2$=W1$(37,SS9),V3$="",V4$="Enter "+SL$,V0=SS9,V1=10,V2=L
2030 IF POS(P3$(17,1)="SL")>0 AND NEEDED>1 THEN LET V4$=V4$+" (<F1> To Auto Generate Numbers)"
2040 GOSUB 7000
2050 IF V3=2 THEN GOTO 1100
2055 IF POS(P3$(17,1)="SL")>0 AND V3=1 AND NEEDED>1 THEN GOSUB 6400; LET V$="L"; GOTO 4400
2060 IF V$=J1$(1,20) THEN GOTO 2000
2070 LET W1$(37)=V$
2080 FIND (IVM07_DEV,KEY=N0$+A0$(54)+W1$(37),DOM=2190)IOL=IVM07A
2090 GOTO 3200
2100 IF P3$(17,1)="S" AND D[1]-D[2]>0 THEN GOTO 2105 ELSE GOTO 2120
2105 LET V4$="Warning!! Serial Number On Hand! :"
2110 CALL "SYC.YN",1,V4$,2,V$,V3
2115 IF V$="N" THEN GOTO 2000 ELSE GOTO 2190
2118 PRINT @(V1,V2),'RB',
2120 IF P3$(17,1)="L" AND D[1]-D[2]>0 THEN GOTO 2130 ELSE GOTO 2170
2130 PRINT 'RB'
2135 LET V4$="Warning!! "+STR(D[1]-D[2])+" Items Are Currently On Hand!! <Enter> To Continue:"
2140 LET V0$="S",V1$="C",V2$="",V3$="",V0=1,V1=FNV(V4$),V2=22
2150 GOSUB 7000
2190 IF P3$(17,1)="S" THEN LET NEEDED=NEEDED+W[0]-1,W[0]=1,I0=I0+1; PRINT @(72-M2*2-M3,L),W[0]:M2$,
2195 GOTO 3200
2200 REM " --- Production Qty Here
2210 IF W1$(1,1)="Y" THEN GOTO 3200
2215 LET OLDQTY=W[0]
2220 LET V0$="N",V1$="C",V2$=STR(W[0]),V3$=M2$,V4$="Enter Production Qty For This "+SL$,V0=7,V1=72-M3-M2*2,V2=L
2230 IF W[0]=0 AND P3$(17,1)="L" THEN LET V2$=STR(A[0]-A[2]-A[4]),V4$=V4$+", <Enter>="+V2$+"."
2240 GOSUB 7000
2250 IF V3=2 OR V3=4 THEN GOTO 3200
2260 LET W[0]=V
2280 IF W[0]>A[0]-A[2]-A[4] THEN GOTO 2200
2285 IF OLDQTY<>W[0] THEN LET NEEDED=NEEDED-W[0]+OLDQTY
2290 GOTO 3200
2400 REM " --- Comments
2420 LET V0$="S",V1$="",V2$=W1$(5,20),V3$="",V4$="",V0=20,V1=10,V2=L+1
2440 GOSUB 7000
2460 LET W1$(5,20)=V$
2490 GOTO 3200
3200 REM " --- Seq Control"
3210 IF V3=4 THEN IF I0>1 THEN GOTO 3300
3220 IF V3<>2 THEN GOTO 3250
3230 IF I0>0 THEN LET I0=I0-1
3240 GOTO 3260
3250 LET I0=I0+1
3260 ON I0 GOTO 2000,2200,2400,3300
3300 REM " --- Correct"
3310 PRINT @(78,L),'CL',@(0,22),'CL'
3320 LET V0$="S",V1$="C",V2$="",V0=1,V1=78,V2=L,K9$=W0$(1,14),V4$="<Enter>=OK, <F2>=Change, D=Delete"
3325 IF W1$(25,1)="Y" AND W1$(2,3)<>"   " THEN LET V4$="<Enter>=OK"
3330 GOSUB 7000
3335 IF W1$(25,1)="Y" AND W1$(2,3)<>"   " THEN GOTO 3400
3340 IF V3=2 THEN GOTO 3200
3350 IF V$="" THEN GOTO 3400
3360 IF V$="D" THEN GOTO 3700
3370 GOTO 3300
3400 REM " --- Write"
3430 WRITE (WOE06_DEV,KEY=W0$(1,14))IOL=WOE06A
3450 LET L=L+2
3470 IF V3=4 THEN GOTO 4000
3490 GOTO 1000
3700 REM " --- Delete"
3720 REMOVE (WOE06_DEV,KEY=W0$(1,14),DOM=3740)
3730 LET NEEDED=NEEDED+W[0]
3780 PRINT @(0,L),'CL',@(0,L+1),'CL',
3790 GOTO 1000
4000 REM " --- Options"
4005 GOSUB 6200
4010 LET V0$="S",V1$="C",V2$="Y",V3$="",V4$="Is The Detail Information Correct? (Y/N/Review/List):",V0=1,V1=FNV(V4$),V2=22
4015 GOSUB 7000
4040 IF V$="R" OR V$="REVIEW" THEN GOTO 4600
4050 IF V$="L" OR V$="LIST" THEN GOTO 4400
4070 ON POS(V$="YN") GOTO 4000,4100,1400
4110 LET O9=2
4120 RUN "WOE.AA"
4400 REM " --- List"
4420 GOSUB 5100
4490 GOTO 4000
4600 REM " --- Review"
4620 READ (WOE06_DEV,KEY=A0$(1,11),DOM=4630)
4640 GOSUB 5400
4650 LET V3=0
4690 GOTO 1000
5000 REM " --- Display"
5020 PRINT @(0,L),W0$(12,3),@(10),W1$(37),@(10,L+1),W1$(5,20),
5060 PRINT @(72-10-M3-M2*2,L),FNB$(W1$(2)),@(72-M3-M2),W[2]+W[4]:M2$,W[3]:M3$,@(75),W1$(25,1),
5080 PRINT @(72-M2*2-M3,L),W[0]:M2$,
5090 RETURN 
5100 REM " --- List"
5110 GOSUB 5400
5120 READ (WOE06_DEV,KEY=A0$(1,11),DOM=5130)
5130 LET K$=KEY(WOE06_DEV,END=5300)
5135 IF K$(1,2)<>N0$ THEN GOTO 5300
5140 IF K$(1,11)<>W0$(1,11) THEN GOTO 5300
5150 READ (WOE06_DEV,KEY=K$)IOL=WOE06A
5200 IF L<=L9 THEN GOTO 5250
5210 LET V0$="S",V1$="CE",V2$="",V3$="",V4$="Continue? (<Enter>/End):",V0=1,V1=FNV(V4$),V2=22
5215 GOSUB 7000
5220 IF V3=4 THEN GOTO 5300
5230 GOSUB 5400
5250 GOSUB 5000
5260 LET L=L+2,K9$=W0$(1,14)
5290 GOTO 5130
5300 RETURN 
5400 REM " --- Clear Screen"
5420 PRINT @(0,L1),'CE',
5440 LET L=L1
5490 RETURN 
5700 REM " --- Compress Desc
5720 LET D9$=D1$
5730 LET Z=POS(" "<>D9$); IF Z>1 THEN LET D9$=D9$(Z)
5740 LET X8=POS("  "=D9$); IF X8<>0 THEN LET Y8=POS(" "<>D9$(X8+2)); LET D9$=D9$(1,X8)+D9$(X8+Y8+1); IF Y8<>0 THEN GOTO 5740
5750 LET D1$=D9$
5790 RETURN 
6000 REM " --- Display error message"
6010 DIM MESSAGE$[2]
6020 LET MESSAGE$[0]="An error was encountered during the "+SL$,MESSAGE$[1]="generation phase. <Enter> to continue."
6030 CALL "SYC.XA",2,MESSAGE$[ALL],1,22,-1,V$,V3
6090 RETURN 
6200 REM " --- Verify Qty Against Header Here
6220 LET X=0
6240 READ (WOE06_DEV,KEY=A0$(1,11),DOM=6250)
6250 LET K8$=KEY(WOE06_DEV,END=6300)
6260 IF POS(A0$(1,11)=K8$)<>1 THEN GOTO 6300
6280 READ (WOE06_DEV,KEY=K8$)IOL=WOE06A
6290 LET X=X+MAX(W[2]+W[4],1)
6295 GOTO 6250
6300 LET NEEDED=A[0]-X
6305 IF X<=A[0] THEN GOTO 6390
6320 LET V0$="S",V1$="C",V2$="",V3$="",V4$="Production Qty's Are Greater Than Work Order Qty's, <Enter> To Fix:",V0=1,V1=FNV(V4$),V2=22
6325 PRINT @(V1,V2),'RB',
6330 GOSUB 7000
6340 LET V$="R"; EXITTO 4600
6390 RETURN 
6400 REM " --- Auto Generate Numbers"
6410 DIM SERIAL$[1]
6420 LET SERIAL$[0]=STR(NEEDED)
6430 CALL "IVC.SN",SYS01_DEV,V2,NEEDED,SERIAL$[ALL],STATUS
6440 IF STATUS>0 THEN GOSUB 6000; GOTO 6690
6450 IF NUM(W0$(12,3))+NUM(SERIAL$[0])-1>999 THEN GOSUB 6000; GOTO 6690
6455 IF NUM(SERIAL$[0])=0 THEN GOTO 6690
6460 FOR X0=1 TO NUM(SERIAL$[0])
6470 DIM X0$(20)
6480 LET X0$(1)=SERIAL$[X0]
6490 FIND (IVM07_DEV,KEY=N0$+A0$(54)+X0$,DOM=6550)IOL=IVM07A
6500 IF D[1]-D[2]>0 THEN GOTO 6510 ELSE GOTO 6550
6510 LET V4$="WARNING: Serial Number On Hand - OK"
6520 PRINT @(V1,V2),'RB',
6530 CALL "SYC.YN",1,V4$,2,V$,V3
6540 IF V$="N" THEN EXITTO 6690 ELSE GOTO 6550
6550 NEXT X0
6610 FOR X0=1 TO NUM(SERIAL$[0])
6620 DIM W[5]
6630 LET W1$(1)="",W1$(37)=SERIAL$[X0]
6640 LET W[0]=1,NEEDED=NEEDED-W[0]
6650 WRITE (WOE06_DEV,KEY=W0$(1,14))IOL=WOE06A
6660 LET W0=NUM(W0$(12,3))+1
6670 LET W0$(12,3)=STR(W0:"000")
6680 NEXT X0
6690 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8080 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9220 GOTO 4100
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
