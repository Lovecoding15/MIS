0010 REM "PRR - Check Printing 2/Side-By-Side"
0020 REM "Program PRR.GF"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.2 - 01Jan96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "15May97 WGH: Program accidently not included in 6.0.0 release"
0040 REM 
0050 PRECISION P[4]
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists
0210 PRE01A: IOLIST A0$
0220 PRE11A: IOLIST W0$,W[ALL]
0240 PRE21A: IOLIST W0$,W[ALL]
0250 PRE31A: IOLIST W0$,W[ALL]
0260 PRM01A: IOLIST B0$,B1$
0270 PRM02A: IOLIST *,PAYRATE
0280 PRM10A: IOLIST X0$
0290 PRM10B: IOLIST X0$
0300 PRM10C: IOLIST X0$
0310 PRM10F: IOLIST *,PAYRATE
0320 PRT01A: IOLIST Y0$,Y[ALL]
0330 PRT11A: IOLIST Y0$,Y[ALL]
0340 PRT21A: IOLIST Y0$,*,*,*,*,*,*,*,*,*,*,*,*,Y[ALL]
0360 PRW01A: IOLIST D0$
0370 PRW01A1: IOLIST V$
0500 REM " --- Init Data
0510 LET L9=10,L=0,H0=0
0520 DIM CURPAYTOT[PAYCODELEN],CURDEDTOT[DEDCODELEN]
0530 CALL "SYC.GA",7,1,"","",STATUS
0540 IF STATUS=1 THEN GOTO 9900
0550 CALL "SYC.RM",M1$,M1,8,9
0800 REM " --- Test Pattern
0805 TEST_PATT: 
0810 CALL "SYC.YN",0,"Do You Wish To Print A Test Pattern?",3,V$,V3
0815 PRINT @(0,11),'CL',
0820 IF V3=4 THEN GOTO 9900
0840 ON POS(V$="YN") GOTO TEST_PATT,0850,0970
0850 DIM B0$(12,"9"),B1$(230,"X"),A0$(50,"X"),CUR_PAY[PAYCODELEN],UNITS[PAYCODELEN],YTD_PAY[PAYCODELEN],CUR_DED[DEDCODELEN],YTD_DED[DEDCODELEN],TOTALS[5]
0852 DIM S7$(8,"0")
0860 LET A0$(22,3)=P9$,X0=1,X1=1
0862 LET X9=PAYCODELEN,L=0,T0=0
0864 IF DEDCODELEN<X9 THEN LET X9=DEDCODELEN
0866 IF X9>10 THEN LET X9=10
0870 FOR X=0 TO X9-1
0880 LET CUR_PAY[X]=9999.9,UNITS[X]=999,YTD_PAY[X]=99999.99,CUR_DED[X]=999.99,YTD_DED[X]=9999.99,B1$(136,9)="999999999"
0890 NEXT X
0895 GOSUB CHECK_NET
0900 GOSUB STUB
0910 LET D0$=N0$+P8$+"V"+P9$+A0$(3,9)+A0$(13,2)
0920 GOSUB DETAIL
0940 GOSUB WRITE_PRW01
0950 GOSUB STEP_CHECKNUM
0960 GOTO TEST_PATT
0970 CALL "SYC.NB","Printing:",M0,COLUMN
1000 REM " --- Init Read
1010 INIT_PRE01: 
1020 READ (PRE01_DEV,KEY=N0$,DOM=1030)
1030 IF POS(P7$="SR")<>0 THEN READ (PRE01_DEV,KEY=N0$+P6$,DOM=1100)
1100 REM " --- Main Read
1110 NEXT_PRE01: 
1120 LET K$=KEY(PRE01_DEV,END=DONE)
1130 IF K$(1,2)<>N0$ THEN GOTO DONE
1140 READ (PRE01_DEV)IOL=PRE01A
1150 IF P7$="S" THEN IF K$(1,11)<>N0$+P6$ THEN GOTO DONE
1200 REM " --- Breaks
1210 PRINT @(COLUMN,11),FNF$(A0$(3,P[0]),M0$),
1300 REM " --- Type
1310 IF A0$(12,1)="C" THEN GOTO EMPLOYEE
1400 REM " --- Non-Printing
1410 LET D0$=N0$+A0$(15,7)+A0$(12,1)+A0$(22,3)+A0$(3,9)+A0$(13,2)
1420 GOSUB WRITE_PRW01
1430 GOTO NEXT_PRE01
1500 REM " --- Employee
1510 EMPLOYEE: 
1520 IF P7$="M" THEN GOTO NEXT_PRE01
1530 DIM I[PAYCODELEN],J[DEDCODELEN]
1540 FIND (PRM01_DEV,KEY=A0$(1,11),DOM=NEXT_PRE01)IOL=PRM01A
1550 GOSUB GET_RATE
1560 LET X1$=FNP$(B1$(1,16))+", "+FNP$(B1$(17,14))
1570 LET X2$=FNP$(B1$(17,14))+" "+FNP$(B1$(1,16))
1580 IF LEN(X1$)>25 THEN LET X1$=X1$(1,25)
1600 REM " --- YTD
1610 IF LASTEMPL$<>A0$(3,9) THEN GOTO 1640
1620 FOR I=1 TO PAYCODELEN; LET CURPAYTOT[I]=CURPAYTOT[I]+CUR_PAY[I]; NEXT I
1630 FOR I=1 TO DEDCODELEN; LET CURDEDTOT[I]=CURDEDTOT[I]+CUR_DED[I]; NEXT I
1640 DIM CUR_PAY[PAYCODELEN],UNITS[PAYCODELEN],YTD_PAY[PAYCODELEN],CUR_DED[DEDCODELEN],YTD_DED[DEDCODELEN],TOTALS[5],Y[4]
1650 IF LASTEMPL$<>A0$(3,9) THEN LET LASTEMPL$=A0$(3,9); DIM CURPAYTOT[PAYCODELEN],CURDEDTOT[DEDCODELEN]; GOTO 1685
1660 FOR I=1 TO PAYCODELEN; LET YTD_PAY[I]=YTD_PAY[I]+CURPAYTOT[I]; NEXT I
1670 FOR I=1 TO DEDCODELEN; LET YTD_DED[I]=YTD_DED[I]+CURDEDTOT[I]; NEXT I
1680 REM " --- Employee Detail Hist
1683 READ_PRT01: 
1685 READ (PRT01_DEV,KEY=A0$(1,11),DOM=NEXT_PRT01)
1690 NEXT_PRT01: 
1695 LET K$=KEY(PRT01_DEV,END=READ_PRT11)
1700 IF K$(1,11)<>A0$(1,11) THEN GOTO READ_PRT11
1705 READ (PRT01_DEV)IOL=PRT01A
1710 LET X=POS(Y0$(13,2)=PAYCODES$,2)
1715 IF X>0 THEN LET X=INT(X/2)+1
1720 IF X=0 THEN LET X=PAYCODELEN/2+1
1725 LET YTD_PAY[X]=YTD_PAY[X]+Y[1]+Y[2]+Y[3]+Y[4]
1730 GOTO NEXT_PRT01
1750 READ_PRT11: 
1755 READ (PRT11_DEV,KEY=A0$(1,11),DOM=NEXT_PRT11)
1760 NEXT_PRT11: 
1765 LET K$=KEY(PRT11_DEV,END=READ_PRT21)
1770 IF K$(1,11)<>A0$(1,11) THEN GOTO READ_PRT21
1775 READ (PRT11_DEV)IOL=PRT11A
1780 LET X=POS(Y0$(12,3)=U6$,3)
1785 IF X=0 THEN GOTO 1800
1787 LET X=INT(X/3)+1
1790 LET X=POS(Y0$(12,1)+U7$(X*2-1,2)=DEDCODES$,3)
1795 IF X>0 THEN LET X=INT(X/3)+1
1800 IF X=0 THEN LET X=DEDCODELEN/3+1
1805 LET YTD_DED[X]=YTD_DED[X]+Y[1]+Y[2]+Y[3]+Y[4]
1820 GOTO NEXT_PRT11
1830 READ_PRT21: 
1835 READ (PRT21_DEV,KEY=A0$(1,11),DOM=NEXT_PRT21)
1840 NEXT_PRT21: 
1845 LET K$=KEY(PRT21_DEV,END=DETAIL_PRE)
1850 IF K$(1,11)<>A0$(1,11) THEN GOTO DETAIL_PRE
1855 READ (PRT21_DEV)IOL=PRT21A
1860 LET X=POS(Y0$(12,3)=U6$,3)
1865 IF X=0 THEN GOTO 1880
1867 LET X=INT(X/3)+1
1870 LET X=POS(Y0$(12,1)+U7$(X*2-1,2)=DEDCODES$,3)
1875 IF X>0 THEN LET X=INT(X/3)+1
1880 IF X=0 THEN LET X=DEDCODELEN/3+1
1885 LET YTD_DED[X]=YTD_DED[X]+Y[1]+Y[2]+Y[3]+Y[4]
1890 GOTO NEXT_PRT21
2000 REM " --- Detail
2005 DETAIL_PRE: 
2040 FOR X=0 TO PAYCODELEN
2050 LET YTD_PAY[X]=YTD_PAY[X]+I[X]
2060 NEXT X
2070 FOR X=0 TO DEDCODELEN
2080 LET YTD_DED[X]=YTD_DED[X]+J[X]
2090 NEXT X
2095 REM " --- Accumulate
2100 REM " --- Earnings
2110 READ_PRE11: 
2120 READ (PRE11_DEV,KEY=A0$(1,21),DOM=NEXT_PRE11)
2130 NEXT_PRE11: 
2160 LET K$=KEY(PRE11_DEV,END=READ_PRE21)
2170 IF K$(1,21)<>A0$(1,21) THEN GOTO READ_PRE21
2180 READ (PRE11_DEV)IOL=PRE11A
2310 LET X=0
2320 READ (PRM10_DEV,KEY=N0$+"A"+W0$(25,2),DOM=2350)IOL=PRM10A
2330 LET X=POS(W0$(25,2)=PAYCODES$,2)
2340 IF X>0 THEN LET X=INT(X/2)+1
2350 IF X=0 THEN LET X=PAYCODELEN/2+1
2380 LET UNITS[X]=UNITS[X]+W[1],YTD_PAY[X]=YTD_PAY[X]+W[2],T0=T0+W[2],I[X]=I[X]+W[2]
2385 LET CUR_PAY[X]=CUR_PAY[X]+W[2]
2390 GOTO NEXT_PRE11
2400 REM " --- Deducts
2410 READ_PRE21: 
2420 READ (PRE21_DEV,KEY=A0$(1,21),DOM=NEXT_PRE21)
2430 NEXT_PRE21: 
2460 LET K$=KEY(PRE21_DEV,END=READ_PRE31)
2470 IF K$(1,21)<>A0$(1,21) THEN GOTO READ_PRE31
2480 READ (PRE21_DEV)IOL=PRE21A
2510 LET X=0
2520 READ (PRM10_DEV,KEY=N0$+"B"+W0$(25,2),DOM=2550)IOL=PRM10B
2530 LET X=POS("B"+X0$(22,2)=DEDCODES$,3)
2540 IF X>0 THEN LET X=INT(X/3)+1
2550 IF X=0 THEN LET X=DEDCODELEN/3+1
2580 LET YTD_DED[X]=YTD_DED[X]+W[2],J[X]=J[X]+W[2]
2585 LET CUR_DED[X]=CUR_DED[X]+W[2]
2590 GOTO NEXT_PRE21
2600 REM " --- Taxes
2610 READ_PRE31: 
2620 READ (PRE31_DEV,KEY=A0$(1,21),DOM=NEXT_PRE31)
2630 NEXT_PRE31: 
2660 LET K$=KEY(PRE31_DEV,END=PRINT)
2670 IF K$(1,21)<>A0$(1,21) THEN GOTO PRINT
2680 READ (PRE31_DEV)IOL=PRE31A
2710 LET X=0
2720 READ (PRM10_DEV,KEY=N0$+"C"+W0$(25,2),DOM=2750)IOL=PRM10C
2730 LET X=POS("C"+X0$(22,2)=DEDCODES$,3)
2740 IF X>0 THEN LET X=INT(X/3)+1
2750 IF X=0 THEN LET X=DEDCODELEN/3+1
2780 LET YTD_DED[X]=YTD_DED[X]+W[2],J[X]=J[X]+W[2]
2785 LET CUR_DED[X]=CUR_DED[X]+W[2]
2790 GOTO NEXT_PRE31
3000 REM " --- Print
3005 PRINT: 
3020 IF POS(" "<>A0$(26,7))<>0 THEN GOSUB 6400
3040 LET A0$(26,7)=P8$,D0$=N0$+P8$+"C"+P9$+A0$(3,9)+A0$(13,2),X0=1,X1=1
3050 LET L=0,T0=0
3052 DIM TOTALS[5]
3055 GOSUB CHECK_NET
3060 GOSUB STUB
3070 GOSUB DETAIL
3110 WRITE (PRE01_DEV2,KEY=A0$(1,21))IOL=PRE01A
3120 GOSUB WRITE_PRW01
3140 GOSUB STEP_CHECKNUM
3190 GOTO NEXT_PRE01
4000 REM " --- Done
4005 DONE: 
4100 GOTO 9900
5000 REM " --- Stub
5005 STUB: 
5010 LET L=0
5015 LET Q9$=FNF$(B0$(3,P[0]),M0$); IF LEN(Q9$)<8 THEN LET Q7$=Q9$+FILL(9-LEN(Q9$))+X1$
5020 IF LEN(Q9$)>=8 THEN LET Q7$=Q9$+" "+X1$
5025 IF LEN(Q7$)>33 THEN LET Q7$=Q7$(1,34)
5030 PRINT (7)@(H0+75),FNB$(P9$),@(H0+86),Q7$,@(H0+125),P8$
5040 PRINT (7)'LF',
5090 RETURN 
5100 REM " --- Detail
5105 DETAIL: 
5110 IF X0>PAYDESCLEN/12 AND X1>DEDDESCLEN/10 THEN GOTO TOTALS
5120 IF X0>PAYDESCLEN/12 THEN GOTO 5200
5140 IF CUR_PAY[X0]<>0 OR UNITS[X0]<>0 OR YTD_PAY[X0]<>0 THEN GOTO 5175
5160 LET X0=X0+1
5170 GOTO 5120
5175 IF L>=L9 THEN GOSUB 6800
5180 PRINT (7)@(H0+75),PAYDESCS$(12*(X0-1)+1,10),@(H0+85),CUR_PAY[X0]:M1$,@(H0+94),YTD_PAY[X0]:M1$,
5190 LET TOTALS[0]=TOTALS[0]+CUR_PAY[X0],TOTALS[1]=TOTALS[1]+UNITS[X0],TOTALS[2]=TOTALS[2]+YTD_PAY[X0]
5200 IF X1>DEDDESCLEN/10 THEN GOTO 5300
5220 IF CUR_DED[X1]<>0 OR YTD_DED[X1]<>0 THEN GOTO 5270
5240 LET X1=X1+1
5260 GOTO 5200
5270 IF L>=L9 THEN GOSUB 6800
5280 PRINT (7)@(H0+103),DEDDESCS$(10*(X1-1)+1,10),@(H0+113),CUR_DED[X1]:M1$,@(H0+122),YTD_DED[X1]:M1$,
5290 LET TOTALS[3]=TOTALS[3]+CUR_DED[X1],TOTALS[4]=TOTALS[4]+YTD_DED[X1]
5320 LET L=L+1,X0=X0+1,X1=X1+1
5330 GOSUB CHECK
5335 PRINT (7)'LF',
5340 GOTO DETAIL
5400 REM " --- Totals
5405 TOTALS: 
5410 IF L>L9 THEN GOTO 5440
5415 FOR I=L TO L9
5420 LET L=L+1
5425 GOSUB CHECK
5430 PRINT (7)'LF',
5435 NEXT I
5440 PRINT (7)@(H0+85),TOTALS[0]:M1$,@(H0+94),TOTALS[2]:M1$,@(H0+113),TOTALS[3]:M1$,@(H0+122),TOTALS[4]:M1$
5450 PRINT (7)'LF',
5490 RETURN 
5600 REM " --- Check
5605 REM " --- T0 = Net Check Amount, TOTALS[0] = Gross Earnings
5607 CHECK: 
5610 IF T0<0 THEN GOTO VOID
5615 IF POS("X"<>B1$(1,135))=0 THEN GOTO VOID
5620 PRECISION 2
5625 LET T0=T0*1
5630 PRECISION P[4]
5650 IF L=2 THEN PRINT (7)@(H0+41),P8$,@(H0+49),FNB$(P9$),@(H0+59),T0:M9$,
5665 LET X0$=STR(FPT(T0)*100:"00")
5670 IF X0$="00" THEN LET X0$="NO"
5680 IF L=4 AND T0>0 THEN PRINT (7)@(H0+10),"Exactly",INT(T0):M8$,"*Dollars*And*",X0$,"*Cents***",
5690 IF L=4 AND T0<=0 THEN PRINT (7)@(H0+10),"***Void***Void***Void***Void***",
5705 LET Q6$=B1$(101,2),Q8$=B1$(79,22)+"  "
5710 LET Q8$=Q8$(1,POS("  "=Q8$)-1)+", "+Q6$+" "
5720 IF L=6 THEN PRINT (7)@(H0+16),X2$,
5730 IF L=7 THEN PRINT (7)@(H0+16),B1$(31,24),
5740 IF L=8 THEN PRINT (7)@(H0+16),B1$(55,24),
5750 IF L=9 THEN PRINT (7)@(H0+16),Q8$,FNZ$(B1$(103)),
5790 RETURN 
5800 REM " --- Void Check
5805 VOID: 
5850 IF L=2 THEN PRINT (7)@(H0+41),P8$,@(H0+49),FNB$(P9$),@(H0+59),"***Void***",
5880 IF L=4 THEN PRINT (7)@(H0+10),"***Void***Void***Void***Void***",
5920 LET D0$(10,1)="V"
5990 RETURN 
6000 REM " --- Write
6005 WRITE_PRW01: 
6020 IF D0$(10,1)<>"V" THEN REMOVE (PRW01_DEV,KEY=D0$(1,9)+"V",DOM=6040)
6040 WRITE (PRW01_DEV,KEY=D0$(1,10))IOL=PRW01A
6090 RETURN 
6200 REM " --- Increment Check Number
6205 STEP_CHECKNUM: 
6220 LET X=NUM(P8$)+1
6240 IF X>9999999 THEN LET X=1
6260 LET P8$=STR(X:"0000000")
6290 RETURN 
6400 REM " --- Restart
6410 FIND (PRW01_DEV,KEY=N0$+A0$(26,7)+"C",DOM=6490)IOL=PRW01A1
6420 IF V$(14,9)<>A0$(3,9) THEN GOTO 6490
6430 REMOVE (PRW01_DEV,KEY=V$(1,10),DOM=6440)
6440 LET D0$=N0$+A0$(26,7)+"V"+P9$+A0$(3,9)+A0$(13,2)
6460 GOSUB WRITE_PRW01
6490 RETURN 
6600 REM " --- Get Rate
6605 GET_RATE: 
6610 LET PAYRATE=0
6620 FIND (PRM02_DEV,KEY=A0$(1,11)+B1$(223,2),DOM=6640)IOL=PRM02A
6630 GOTO 6690
6640 FIND (PRM10_DEV,KEY=A0$(1,2)+"F"+B1$(223,2),DOM=6690)IOL=PRM10F
6690 RETURN 
6700 REM " --- Total Check Net"
6705 CHECK_NET: 
6710 LET T0=0
6720 FOR X=1 TO PAYDESCLEN/12
6730 LET T0=T0+CUR_PAY[X]
6740 NEXT X
6750 FOR X=1 TO DEDDESCLEN/10
6760 LET T0=T0-CUR_DED[X]
6780 NEXT X
6790 RETURN 
6800 REM " --- Overflow
6805 PRINT (7)H9$(1,2)
6810 LET T0=0
6820 GOSUB WRITE_PRW01
6830 GOSUB STEP_CHECKNUM
6835 LET D0$(3,8)=P8$+"C"
6840 GOSUB STUB
6890 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8085 DEF FNZ$(Q$)=FILL(10,CVS(Q$(1,3)+FILL(POS("9"<Q$(1,5))>0)+Q$(4,2)+FILL(ABS(POS("A">=Q$(1,6))>0)-POS("0">Q$(6,4))>0,"-")+Q$(6,4)+FILL(10),16))
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
