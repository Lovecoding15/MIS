0010 REM "POE - Lot/Serial Number Receipt Entry"
0020 REM "Program POE.DD"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.3 - 15May97 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "12Jul96 JAL: Review option didn't work for multiple lines (530,905,1425,3410-3480,4010-4025,4660)"
0032 REM "12Jul96 JAL: Allow negative quantities (1630,2440-2465)"
0033 REM "28Aug96 WGH: Not calculating average unit cost correctly (4160)"
0034 REM "18Sep96 JAL: Correct inconsistant prompt (3320)"
0035 REM "03Mar97 WGH: Display lot/serial numbers only for current PO Line Number (1140)"
0036 REM "23Apr97 WGH: Allow returning serialized items (930,1410-1415,2080-2095,2135-2140,2160-2180,2450-2465,6215)
0037 REM "16Dec98 Caj: POE-24 was miskeyed as POE-42 in remark at 6300. (6300)
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists"
0210 POE24A: IOLIST T0$(1),T1$(1),T2$,T[ALL]
0240 IVM07A: IOLIST H0$(1),H1$(1),H[ALL]
0500 REM " --- Initialize Data"
0510 PRECISION I[1]
0520 DIM H0$(44),H1$(95),H[12],T$(20),T0$(28),T1$(20),T[2]
0530 LET L8=20,Q_COL=MAX(30,Q_COL),C_COL=MAX(Q_COL+1+M2,C_COL),REVIEW=0
0540 LET T0$(1)=W0$(1,25),LOTSER$=I3$(17,1),COST=UCOST,TOT_QNTY=0
0700 REM " --- Background"
0710 PRINT @(0,L8+1),'CE',
0720 WHILE L>L2
0730 PRINT @(0,L1),'LD',
0740 LET L=L-1
0750 WEND
0800 REM " --- List existing records"
0810 GOSUB 5100
0820 LET TOT_QNTY=0
0830 READ (POE24_DEV,KEY=W0$(1,25),DOM=0840)
0840 LET K$=KEY(POE24_DEV,END=0900)
0850 IF POS(W0$(1,25)=K$)<>1 THEN GOTO 0900
0860 READ (POE24_DEV)IOL=POE24A
0870 LET TOT_QNTY=TOT_QNTY+T[0]
0890 GOTO 0840
0900 REM " --- Totals match?"
0905 IF TOT_QNTY=0 THEN IF QNTY=0 THEN GOTO 4390
0910 IF TOT_QNTY=QNTY THEN GOTO 4000
0920 IF LOTSER$<>"S" THEN GOTO 1000
0930 IF TOT_QNTY<>0 THEN GOTO 1000
0940 LET V2=L
0950 GOSUB GEN_SERIAL_NUMS
0990 IF SUCCESS THEN GOTO 0800
1000 REM " --- Overflow"
1020 IF L>L8 THEN PRINT @(0,L8+1),'CE',@(0,L2),'LD',; LET L=L-1
1040 IF V3=4 THEN GOTO 4000
1100 REM " --- Next Key
1120 LET K$=KEY(POE24_DEV,END=1400)
1140 IF POS(W0$(1,25)=K$)<>1 THEN GOTO 1400
1160 READ (POE24_DEV)IOL=POE24A
1180 GOTO 1490
1400 REM " --- Seq"
1410 IF QNTY>=0 THEN IF TOT_QNTY<QNTY THEN LET T0=NUM(T0$(26,3))+1 ELSE LET T0=0
1415 IF QNTY<0 THEN IF TOT_QNTY>QNTY THEN LET T0=NUM(T0$(26,3))+1 ELSE LET T0=0
1420 LET V0$="Z",V1$="KCER",V2$=STR(T0:"000"),V3$="",V0=3,V1=4,V2=L,I0=0
1425 LET V4$="Enter A Lot/Serial Detail Sequence Number (<Enter>=Next)"
1430 GOSUB 7000
1435 IF V3=2 THEN GOTO 1420
1440 IF V3=4 THEN GOTO 4000
1450 IF NUM(V$)=0 THEN GOTO 1400
1460 LET T0$(26,3)=V$
1480 FIND (POE24_DEV,KEY=T0$,DOM=1600)IOL=POE24A
1490 LET SEQ_QNTY=T[0]
1500 GOSUB 5000
1530 GOTO 3300
1600 REM " --- Setup"
1610 IF TOT_QNTY=QNTY THEN GOTO 4000
1620 DIM T$(20),T1$(20),T[2]
1630 IF LOTSER$="S" THEN LET T[0]=SGN(QNTY)*1 ELSE LET T[0]=QNTY-TOT_QNTY
1640 LET SEQ_QNTY=0,T[1]=UCOST
2000 REM " --- Enter Lot/Serial Number"
2020 LET V0$="S",V1$="CE",V2$=T1$(1,I[2]),V3$="",V4$="Enter a Lot/Serial Number",V0=I[2],V1=9,V2=L,I0=1
2030 GOSUB 7000
2040 ON V3 GOTO 2060,2000,3200,2000,3200
2060 IF FNP$(V$)="" THEN GOTO 2000
2070 LET T$(1)=V$
2080 FIND (IVM07_DEV,KEY=N0$+W3$(1,2)+W3$(3,20)+T$,DOM=2095)IOL=IVM07A
2090 IF T[0]<0 THEN GOTO 2200 ELSE GOTO 2100; REM "Want record for returns but not receipts
2095 IF T[0]<0 THEN GOTO 2100 ELSE GOTO 2200; REM "Want record for returns but not receipts
2100 REM " --- Warn Existing Lot/Serial Number"
2110 LET NUMBER=1
2120 DIM MESSAGES$[NUMBER]
2130 LET MESSAGES$[0]="This Lot/Serial Number is already on file."
2135 IF T[0]<0 THEN LET MESSAGES$[0]="This Lot/Serial Number is NOT on file."
2140 IF LOTSER$="L" AND T[0]>=0 THEN LET MESSAGES$[1]="  <Enter>=Continue   <F2>=Change" ELSE LET MESSAGES$[1]="         <Enter>=Continue"
2150 CALL "SYC.XA",2,MESSAGES$[ALL],NUMBER,22,-1,V$,V3
2160 IF LOTSER$="S" THEN GOTO 2000
2170 IF LOTSER$="L" AND V3=2 THEN GOTO 2000
2180 IF LOTSER$="L" AND T[0]<0 THEN GOTO 2000
2200 REM " --- Good Lot/Serial Number"
2220 LET T1$(1)=T$
2240 GOSUB 5000
2290 GOTO 3200
2400 REM " --- Received Quantity"
2410 IF LOTSER$="S" THEN GOTO 3200
2420 LET V0$="N",V1$="C",V2$=STR(T[0]),V3$=M2$,V4$="Enter Quantity Received",V0=M2,V1=Q_COL,V2=L
2430 GOSUB 7000
2440 ON V3 GOTO 2450,2400,3200,2400,3200
2450 IF QNTY>=0 AND (V<=0 OR V>QNTY) THEN GOTO 2400
2460 IF QNTY<=0 AND (V>=0 OR V<QNTY) THEN GOTO 2400
2470 LET T[0]=V
2480 PRINT @(V1,V2),T[0]:M2$,
2490 GOTO 3200
2600 REM " --- Unit Cost"
2620 LET V0$="N",V1$="C",V2$=STR(T[1]),V3$=M3$,V4$="Enter Cost Per Unit-Of-Sale",V0=M3,V1=C_COL,V2=L
2630 GOSUB 7000
2640 ON V3 GOTO 2660,2600,3200,2600,3200
2660 IF V<0 THEN GOTO 2600
2670 LET T[1]=V,UCOST=T[1]
2680 PRINT @(V1,V2),T[1]:M3$,
2690 GOTO 3200
3200 REM " --- Seq Control"
3210 IF V3=4 THEN GOTO 3300
3220 IF V3<>2 THEN GOTO 3250
3230 IF I0>0 THEN LET I0=I0-1
3240 GOTO 3260
3250 LET I0=I0+1
3260 ON I0 GOTO 1400,2000,2400,2600,3300
3300 REM " --- Correct"
3320 LET V0$="",V2$="",V3$="",V0=1,V1=78,V2=L,V4$="<Enter>=Correct   <F2>=Change   <D>=Delete",I0=4,K9$=T0$
3330 GOSUB 7000
3340 ON V3 GOTO 3360,3300,3200,3300,3350
3350 LET V$=""
3360 IF V$="" THEN GOTO 3400
3370 IF V$="D" THEN GOTO 3500
3390 GOTO 3300
3400 REM " --- Write"
3410 LET TOT_QNTY=TOT_QNTY-SEQ_QNTY+T[0]
3420 WRITE (POE24_DEV,KEY=T0$)IOL=POE24A
3430 LET L=L+1
3440 PRINT @(0,21),'CE',
3450 IF REVIEW=0 THEN GOTO 3480
3460 LET K$=KEY(POE24_DEV,END=4000)
3470 IF POS(W0$(1,25)=K$)<>1 THEN GOTO 4000
3475 GOTO 1000
3480 IF TOT_QNTY=QNTY THEN GOTO 4000
3490 GOTO 1000
3500 REM " --- Delete"
3520 LET TOT_QNTY=TOT_QNTY-SEQ_QNTY
3540 REMOVE (POE24_DEV,KEY=T0$,DOM=3550)
3560 PRINT @(0,L),'CL',
3580 PRINT @(0,21),'CE',
3590 GOTO 1000
4000 REM " --- Options"
4005 PRINT @(0,L),'CE',
4010 LET REVIEW=0
4015 IF TOT_QNTY<>QNTY THEN GOSUB 6000; IF V$="N" THEN GOTO 1000
4020 PRINT @(0,22),'CL'," Is The Lot/Serial Number Information Correct (Y/N/Review/List/Delete)?",
4025 LET V0$="S",V1$="C",V2$="Y",V3$="",V4$="",V0=6,V1=72,V2=22
4030 GOSUB 7000
4040 ON V3 GOTO 4050,4000,4000,4000,4000
4050 IF V$="R" OR V$="REVIEW" THEN GOTO 4600
4060 IF V$="L" OR V$="LIST" THEN GOTO 4400
4070 IF V$="DELETE" THEN GOTO 4200
4080 IF V$="" THEN LET V$="Y"
4090 ON POS(V$="YN") GOTO 4000,4100,1000
4100 REM " --- Re-Calculate Cost Per Unit-Of-Sale"
4110 LET C=0,Q=0
4120 READ (POE24_DEV,KEY=W0$(1,25),DOM=4130)
4130 LET K$=KEY(POE24_DEV,END=4180)
4140 IF POS(W0$(1,25)=K$)<>1 THEN GOTO 4180
4150 READ (POE24_DEV)IOL=POE24A
4160 LET Q=Q+T[0],C=C+T[0]*T[1]
4170 GOTO 4130
4180 IF Q=0 THEN LET UCOST=COST ELSE LET UCOST=C/Q
4190 GOTO 4300
4200 REM " --- Delete All Assignments Here"
4220 READ (POE24_DEV,KEY=W0$(1,25),DOM=4230)
4230 LET K$=KEY(POE24_DEV,END=4280)
4240 IF POS(W0$(1,25)=K$)<>1 THEN GOTO 4280
4250 REMOVE (POE24_DEV,KEY=K$)
4270 GOTO 4230
4280 LET UCOST=COST
4290 GOTO 4300
4300 REM " --- Run Overlay"
4310 PRINT @(72,L),'CL',@(0,L2),'CE',
4320 LET L=L2,K9$=W0$,W0=NUM(W0$(18,3)),V$=""
4390 RUN PROGRAM$,ERR=9900
4400 REM " --- List"
4420 GOSUB 5100
4490 GOTO 4000
4600 REM " --- Review"
4620 READ (POE24_DEV,KEY=W0$(1,25),DOM=4630)
4640 GOSUB 5400
4660 LET REVIEW=1
4690 GOTO 1000
5000 REM " --- Display"
5010 IF T0$<=K9$ THEN GOSUB 5400
5060 PRINT @(4,L),T0$(26,3),@(9),T1$,@(Q_COL),T[0]:M2$,@(C_COL),T[1]:M3$,
5080 LET K9$=T0$
5090 RETURN 
5100 REM " --- List"
5110 GOSUB 5400
5120 READ (POE24_DEV,KEY=W0$(1,25),DOM=5130)
5130 LET K$=KEY(POE24_DEV,END=5290)
5140 IF POS(W0$(1,25)=K$)<>1 THEN GOTO 5290
5150 READ (POE24_DEV)IOL=POE24A
5200 IF L<=L8 THEN GOTO 5250
5210 LET V0$="S",V1$="CE",V2$="",V3$="",V4$="Press <Enter> To Continue",V0=1,V1=FNV(V4$),V2=22
5220 GOSUB 7000
5225 IF V3=4 THEN GOTO 5290
5230 GOSUB 5400
5250 GOSUB 5000
5260 LET L=L+1
5280 GOTO 5130
5290 RETURN 
5400 REM " --- Clear Screen
5410 FOR X=L2 TO L8
5420 PRINT @(0,X),'CL',
5430 NEXT X
5440 LET L=L2
5490 RETURN 
6000 REM " --- Assigned Number Warning"
6010 LET V0$="Only "+STR(TOT_QNTY)+" Items Were Assigned Lot/Serial Numbers."
6020 LET V1$="The Total Quantity Received Is "+STR(QNTY)+"."
6030 LET V2$="<Enter>=Review",NUMBER=2,X=MAX(LEN(V0$),LEN(V1$))+2
6040 DIM MESSAGE$[NUMBER](X)
6050 LET V1=FNC(V0$,X),MESSAGE$[0](V1)=V0$
6060 LET V1=FNC(V1$,X),MESSAGE$[1](V1)=V1$
6070 LET V1=FNC(V2$,X-6),MESSAGE$[2](V1)=V2$
6075 CALL "SYC.XA",2,MESSAGE$[ALL],NUMBER,22,-1,V$,V3
6080 LET V$="N"
6085 IF V3=4 THEN LET V$=""
6090 RETURN 
6200 REM " --- Generate List Of Serial Numbers"
6205 GEN_SERIAL_NUMS: 
6210 LET SUCCESS=0
6215 IF QNTY<=0 THEN GOTO 6390
6220 DIM SERIAL$[1]
6230 CALL "IVC.SN",SYS01_DEV,V2,QNTY,SERIAL$[ALL],STATUS
6240 IF STATUS OR NUM(SERIAL$[0])=0 THEN GOTO 6390
6250 FOR X=1 TO NUM(SERIAL$[0])
6260 DIM T1$(20)
6270 LET T1$(1)=SERIAL$[X]
6280 FIND (IVM07_DEV,KEY=N0$+W3$(1,2)+W3$(3,20)+T1$,DOM=6300)
6290 GOTO 6350
6300 REM " --- Write POE-24 Record For New Serial Number"
6310 LET T0=NUM(T0$(26,3))+1,TOT_QNTY=TOT_QNTY+1
6320 IF T0>999 OR TOT_QNTY>QNTY THEN EXITTO 6380
6330 LET T0$(26,3)=STR(T0:"000"),T[0]=1,T[1]=UCOST
6340 WRITE (POE24_DEV,KEY=T0$)IOL=POE24A
6350 NEXT X
6380 LET SUCCESS=1
6390 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)+1
8070 DEF FNP$(Q$)=CVS(Q$,2)
8080 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
