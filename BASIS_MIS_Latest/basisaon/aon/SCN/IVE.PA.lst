0010 REM "IVE - Physical Inventory Selection"
0020 REM "Program IVE.PA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.2 - 01Jan96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "11Jun96 WGH: Print Lot/Serial lines correctly when Freeze Quantity is zero or less (2010-2020,2040,2500-2990)"
0032 REM "21Oct96 WGH: Treat as Non-Serialized/Non-Lotted unless item is Inventoried by Serial/Lot number ()"
0033 REM "20Oct97 WGH: Distinguish between 'Blank' and 'Missing' lot/serial numbers (1240,2135,2920,3035,8080)"
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=8
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="SYS-01",FILES$[2]="IVM-10",FILES$[3]="IVW-10"
0130 LET FILES$[4]="IVM-02",FILES$[5]="IVE-03",FILES$[6]="IVM-01"
0140 LET FILES$[7]="IVM-03",FILES$[8]="IVM-07",OPTIONS$[3]="C"
0145 LET OPTIONS$[5]="L"
0150 CALL "SYC.DA",1,1,7,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM10_DEV=CHANNELS[2],IVW10_DEV=CHANNELS[3]
0180 LET IVM02_DEV=CHANNELS[4],IVE03_DEV=CHANNELS[5],IVM01_DEV=CHANNELS[6]
0190 LET IVM03_DEV=CHANNELS[7]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$,A5$,A6$,A[ALL]
0220 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0240 IVM10P: IOLIST Y0$(1)
0250 IVE03A: IOLIST W0$(1),W1$(1),W[ALL]
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0280 IVM07A: IOLIST L0$(1),L1$(1),L[ALL]
0400 REM " --- Parameters"
0405 DIM P[1],INFO$[20]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV",LS$="N"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0440 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1))
0450 IF POS(I3$(17,1)="SL")>0 THEN LET LS$="Y"
0460 CALL "SYC.VA","OP",INFO$[ALL]
0470 LET OP$=INFO$[20]
0480 CALL "SYC.VA","PO",INFO$[ALL]
0490 LET PO$=INFO$[20]
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],Y0$(11)
0520 DIM B0$(24),B1$(64),B[20],W0$(56),W1$(60),W[2],MESSAGE$[2]
0530 DIM L0$(44),L1$(96),L[12],ENTRY$[10],J1$(40)
0540 LET ENTRY$[1]="IVE-01",ENTRY$[2]="IVE-02"
0545 IF PO$="Y" THEN LET ENTRY$[3]="POE-04"
0600 REM " --- Additional file opens"
0620 GOSUB 6000
0630 IF STATUS>0 THEN GOTO 9900
0660 IF LS$="N" THEN GOTO 0700
0670 CALL "SYC.DA",1,8,8,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0680 IF STATUS>0 THEN GOTO 9900
0690 LET IVM07_DEV=CHANNELS[8]
0700 REM " --- Background"
0710 IF OP$="N" THEN GOTO 0800
0720 LET MESSAGE$[0]="The Accuracy Of The Resulting Physical Inventory Will Be Increased If The"
0730 LET MESSAGE$[1]="Order Processing Sales Register And Update Have Been Run For This Company"
0740 LET MESSAGE$[2]="Prior To Performing The Selection (<Enter>=Continue)"
0750 CALL "SYC.XA",2,MESSAGE$[ALL],2,-1,-1,V$,V3
0800 REM " --- Process input"
0810 LET ACTION$="S",WHSE$=I3$(6,2),CUTOFF$=F0$(7,3),QUANTITY$=""
0820 CALL "IVC.IC",ACTION$,CHANNELS[ALL],WHSE$,CUTOFF$,QUANTITY$,FKEY,STATUS
0830 IF FKEY<>0 THEN GOTO 9900
0840 IF STATUS<>0 THEN GOTO 9900
0900 REM " --- Position file"
0910 CALL "SYC.NB","Selecting",17+P[0],COLUMN
0990 READ (IVW10_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Read next entry record"
1010 LET K$=KEY(IVW10_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 READ (IVW10_DEV)
1080 LET FIRST$=N0$+"B"+WHSE$+K$(3),NUMBER=0
1090 READ (IVM03_DEV,KEY=FIRST$,DOM=1100)
1100 REM " --- Read next sort record"
1110 LET K$=KEY(IVM03_DEV,END=3800)
1120 IF POS(FIRST$=K$)<>1 THEN GOTO 3800
1130 READ (IVM03_DEV)
1140 PRINT @(COLUMN,11),K$(4,2)," ",K$(6,2)," ",K$(8,10)," ",K$(18,P[0]),
1200 REM " --- Retrieve warehouse record"
1210 DIM B0$(24),B1$(64),B[20]
1220 LET B0$(1)=N0$+K$(4,2)+K$(18)
1230 EXTRACT (IVM02_DEV,KEY=B0$,DOM=3500)IOL=IVM02A
1240 LET B1$(15,1)="Y",ONHAND=B[0],TOTAL=0,NUMBER=NUMBER+1,BLANKS=0
1250 WRITE (IVM02_DEV,KEY=B0$)IOL=IVM02A
1900 REM " --- Position lot/serial file"
1910 IF LS$="N" THEN GOTO 3000
1920 LET A0$(1)=N0$+B0$(5)
1930 FIND (IVM01_DEV,KEY=A0$,DOM=3500)IOL=IVM01A
1940 IF A2$(19,2)<>"YY" THEN GOTO 3000
1990 READ (IVM07_DEV,KEY=B0$,DOM=2000)
2000 REM " --- Read next lot/serial number record"
2010 LET K$=KEY(IVM07_DEV,END=2900)
2020 IF POS(B0$=K$)<>1 THEN GOTO 2900
2030 READ (IVM07_DEV)IOL=IVM07A
2040 IF L[0]=0 THEN GOTO 2500
2050 LET TOTAL=TOTAL+L,NUMBER=NUMBER+1
2100 REM " --- Write physical inventory entry record"
2110 DIM W0$(56),W1$(60),W[2]
2120 LET W0$(1)=N0$+B0$(3,2)+B1$(11,2)+B1$(1,10)+B0$(5),W0$(37)=L0$(25)
2130 LET W1$(1)=CUTOFF$,W1$(4,1)="N",W1$(5,1)="Y",W[0]=L[0],TOTAL=TOTAL+L[0]
2135 IF FNP$(L0$(25))="" THEN LET W[1]=W[0],BLANKS=W[1]; REM "Don't change onhand qnty for blank lot/serial number
2140 WRITE (IVE03_DEV,KEY=W0$)IOL=IVE03A
2500 REM " --- Loop back for next lot/serial record"
2590 GOTO 2000
2900 REM " --- Missing Lot/Serial Numbers?"
2920 IF ONHAND<>TOTAL THEN GOTO 3000
2940 IF TOTAL=0 THEN GOTO 3000
2990 GOTO 3500
3000 REM " --- Write physical inventory entry record"
3010 DIM W0$(56),W1$(60),W[2]
3020 LET W0$(1)=N0$+B0$(3,2)+B1$(11,2)+B1$(1,10)+B0$(5),W[0]=ONHAND-TOTAL
3030 LET W1$(1)=CUTOFF$,W1$(4,1)="N",W1$(5,1)="N",NUMBER=NUMBER+1
3035 IF A2$(19,2)="YY" THEN LET W1$(5,1)="Y",W[0]=W[0]+BLANKS,W[1]=BLANKS; REM "Treat as Non-Serialized/Non-Lotted unless item is Inventoried by Serial/Lot number
3040 WRITE (IVE03_DEV,KEY=W0$)IOL=IVE03A
3500 REM " --- Loop back for next sort record"
3590 GOTO 1100
3800 REM " ---- Update IVM-10 cycle code record"
3810 LET Y0$(1)=N0$+"P"+B0$(3,2)+B1$(11,2),Y0$(8,1)="1",Y0$(9,3)=CUTOFF$
3820 IF NUMBER=0 THEN REMOVE (IVM10_DEV,KEY=Y0$(1,7),DOM=3900)
3830 IF NUMBER>1 THEN WRITE (IVM10_DEV,KEY=Y0$(1,7))IOL=IVM10P
3900 REM " --- Loop back for next entry record"
3990 GOTO 1000
4000 REM " --- All done"
4090 GOTO 9900
6000 REM " --- Make sure appropriate entry files are empty"
6010 FOR X=1 TO 3
6020 LET FILENAME$=ENTRY$[X],BATCH=0
6030 IF FILENAME$="" THEN GOTO 6080
6040 CALL "SYC.BC",N0$,FILENAME$,DESCRIPTION$,BATCH,STATUS
6050 IF STATUS>0 THEN EXITTO 6100
6080 NEXT X
6090 GOTO 6190
6100 REM " --- Entry file contains records"
6110 DIM MESSAGE$[2](72)
6120 LET X1$=FILENAME$+" - "+DESCRIPTION$+" Contains Entries For This Firm."
6130 LET MESSAGE$[1]="The Register And Update Must Be Run Before Physical Inventory Selection."
6140 LET MESSAGE$[0](FNC(X1$,72))=X1$,MESSAGE$[2]=J1$(1,20)+"Press <Enter> To Continue"
6150 CALL "SYC.XA",3,MESSAGE$[ALL],2,-1,-1,V$,V3
6160 IF V$="SPECIAL" THEN LET STATUS=0
6190 RETURN 
8000 REM " --- Functions"
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9220 GOTO 0900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
