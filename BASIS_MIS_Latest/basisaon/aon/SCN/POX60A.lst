0010 REM "POX - Convert PO to 6.0"
0020 REM "Program POX60A"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.1 - 22Jul96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "21May96 Caj: Milestone displayed for POT-05 was too long for notification box (3060)
0032 REM "25Jun96 WGH: POE-11 is not required, so may be missing (155,1405)"
0040 REM 
0080 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files
0110 LET FILES=24
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="POE-04",FILES$[2]="POE-14",FILES$[3]="POE-21"
0127 LET FILES$[4]="POE-22",FILES$[5]="POT-02",FILES$[6]="POT-04"
0130 LET FILES$[7]="POT-14",FILES$[8]="POS-10",FILES$[9]="POT-05"
0133 LET FILES$[10]="POT-15",FILES$[11]="POT-25",FILES$[12]="SYS-01"
0135 LET FILES$[13]="SYM-06",FILES$[14]="APE-04",FILES$[15]="APE-05"
0140 LET FILES$[16]="APT-01",FILES$[17]="APT-11",FILES$[18]="APT-04"
0143 LET OPTIONS$[14]="F",OPTIONS$[15]="F",OPTIONS$[18]="F"
0145 LET FILES$[19]="POE-02",FILES$[20]="POE-12"
0150 LET FILES$[21]="POE-01",FILES$[22]="POE01.TMP"
0155 LET FILES$[23]="POE-11",FILES$[24]="POE11.TMP",OPTIONS$[24]="F"
0160 CALL "SYC.DA",1,1,18,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS THEN GOTO 9900
0175 LET POE04_DEV=CHANNELS[1],POE14_DEV=CHANNELS[2],POE21_DEV=CHANNELS[3]
0180 LET POE22_DEV=CHANNELS[4],POT02_DEV=CHANNELS[5],POT04_DEV=CHANNELS[6]
0185 LET POT14_DEV=CHANNELS[7],POS10_DEV=CHANNELS[8],POT05_DEV=CHANNELS[9]
0190 LET POT15_DEV=CHANNELS[10],POT25_DEV=CHANNELS[11],SYS01_DEV=CHANNELS[12]
0195 LET SYM06_DEV=CHANNELS[13],APE04_DEV=CHANNELS[14],APE05_DEV=CHANNELS[15]
0197 LET APT01_DEV=CHANNELS[16],APT11_DEV=CHANNELS[17],APT04_DEV=CHANNELS[18]
0200 REM " --- IOLists
0205 POE01A52: IOLIST A0$(1),A[ALL]
0210 POE01B52: IOLIST A0$(1),A1$(1),A2$(1),A[ALL]
0215 POE01B52X: IOLIST D0$(1),*,DATEREQD$(1)
0220 POE02A: IOLIST B0$(1),B1$(1),B2$(1),B3$(1),B[ALL]
0225 POE12A: IOLIST B0$(1),B1$(1),B2$(1),B3$(1),B4$(1),B5$(1),B6$(1),B[ALL]
0230 REM 
0235 POE11A52: IOLIST A0$(1),A[ALL]
0240 POE11B52: IOLIST A0$(1),A1$(1),A2$(1),A[ALL]
0245 POE11B52X: IOLIST D0$(1),*,DATEREQD$(1)
0250 POE01A: IOLIST B0$(1),B1$(1),B2$(1),B3$(1),B[ALL]
0255 POE11A: IOLIST B0$(1),B1$(1),B2$(1),B3$(1),B4$(1),B5$(1),B6$(1),B[ALL]
0260 REM 
0265 POE22A: IOLIST B0$(1)
0270 REM 
0275 POE21A: IOLIST B0$(1)
0280 REM 
0285 POE01C52: IOLIST A0$(1),A[ALL]
0290 POS10N: IOLIST B0$(1),B[ALL]
0295 REM 
0300 SYM06A: IOLIST A0$(1)
0305 POS01C: IOLIST C0$(1),*,*,C[ALL]
0310 REM 
0315 SYS01T: IOLIST X$,F0$,X$,X$,F4$,F5$
0320 IVS01A: IOLIST I0$,I1$,I2$
0325 REM 
0330 APT04A: IOLIST A0$(1),A[ALL]
0335 APT01A: IOLIST B0$(1),B[ALL]
0340 APT11A: IOLIST C0$(1),C1$(1),C[ALL]
0345 POT05A: IOLIST R0$(1),R1$(1),R2$,R3$,R[ALL]
0350 POT15A: IOLIST S0$(1),S1$(1),S2$,S[ALL]
0355 POT25A: IOLIST T0$(1),T1$(1),T2$,T[ALL]
0360 REM  
0365 POT02A: IOLIST D0$(1),D[ALL]
0370 POT02B: IOLIST D0$(1),D1$(1),D2$(1),D[ALL]
0375 POT04A: IOLIST W0$(1),W1$(1),W2$(1),W3$(1),W[ALL]
0380 POT14A: IOLIST W0$(1),W1$(1),W2$(1),W3$(1),W4$(1),W5$(1),W6$(1),W[ALL]
0400 REM " --- Parameters
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="PO",N3$=F4$
0500 REM " --- Init Data
0505 PRECISION 14
0600 REM " --- Ensure that AP has been converted
0620 IF APE04_DEV<>0 OR APE05_DEV<>0 THEN GOTO 0800
0625 REM "     These two files don't exist before AP conversion
0630 DIM MESSAGE$[0]
0640 LET MESSAGE$[0]="You Must Run The AP Conversion Before Converting PO."
0650 CALL "SYC.XA",2,MESSAGE$[ALL],0,-1,-1,V$,V3
0660 GOTO 9900
0800 REM " --- Display Warning"
0810 CALL "SYC60A",N2$,SYS01_DEV,STATUS
0820 IF STATUS THEN GOTO 9900
0850 GOSUB CLEAR_XREFS
0900 REM " --- Additional file Opens
0905 PRINT @(40,3),'CL',@(0,5),'CE',
0910 CALL "SYC.NB"," Making Temporary Files",0,COLUMN
0920 LET NUMBER=2
0930 DIM FROM$[NUMBER],TMPFILE$[NUMBER],FLAG$[NUMBER]
0935 LET FROM$[1]="POE-01",TMPFILE$[1]="POE01.TMP"
0940 LET FROM$[2]="POE-11",TMPFILE$[2]="POE11.TMP"
0950 CALL "SYC.RN",FROM$[ALL],TMPFILE$[ALL],FLAG$[ALL],NUMBER,STATUS
0955 IF STATUS<>0 THEN GOTO 9900
0970 CALL "SYC.DA",1,19,24,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0975 IF STATUS<>0 THEN GOTO 9900
0980 LET POE02_DEV=CHANNELS[19],POE12_DEV=CHANNELS[20]
0985 LET POE01_DEV=CHANNELS[21],POE01TMP_DEV=CHANNELS[22]
0990 LET POE11_DEV=CHANNELS[23],POE11TMP_DEV=CHANNELS[24]
0995 CALL "SYC.NB","Processing",13,COLUMN
1000 REM " --- Move temp 5.2 POE-01 to 6.0 POE-02 and POE-12
1020 LET X$="POE-01 Purchase Order Entry",X=21
1030 GOSUB UPDATE_SCRN
1040 LET K$=KEY(POE01TMP_DEV,END=DONE_POE01TMP)
1045 IF POS("Z"=K$)=1 OR LEN(K$)<19 THEN READ (POE01TMP_DEV); GOTO NEXT_POE01TMP; REM "Don't keep C records or Zs
1050 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
1060 IF K$(18,2)<>"00" THEN GOTO POE01TMP_BREC
1070 DIM A0$(110),A[2],B0$(15),B1$(160),B2$(1),B3$(1),B[8]
1080 READ (POE01TMP_DEV)IOL=POE01A52
1085 LET HDR_WHSE$=A0$(85,2)
1090 LET B0$(1)=A0$(1,2)+A0$(5,13)
1100 LET DATEORD$=FILL(6)
1110 IF A0$(20,3)<>FILL(3) THEN LET DATEORD$=FNYY_YY21$(FNM$(FNC$(A0$(20,3))),ERR=1115)
1115 GOSUB GETDATEREQD02
1120 LET B1$(1)=HDR_WHSE$+A0$(46,2)+DATEORD$+FILL(12)+DATEREQD$+FILL(6)+"N"+A0$(45,1)+" "+A0$(43,2)+FILL(4)+A0$(55,30)+A0$(23,20)+FILL(15)+"STD"+A0$(87,7)+FILL(42)
1130 WRITE (POE02_DEV,KEY=B0$)IOL=POE02A
1140 GOTO NEXT_POE01TMP
1150 POE01TMP_BREC: 
1160 DIM A0$(42),A1$(40),A2$(26),A[5]
1170 DIM B0$(18),B1$(48),B2$(32),B3$(22),B4$(40),B5$(1),B6$(1),B[12]
1180 READ (POE01TMP_DEV)IOL=POE01B52
1185 IF A0$(21,2)=FILL(2) THEN LET A0$(21,2)=HDR_WHSE$
1190 LET B0$(1)=A0$(1,2)+A0$(5,13)+A0$(18,2)+"0"
1200 LET DATEREQ$=FILL(6)
1210 IF A2$(1,3)<>FILL(3) THEN LET DATEREQ$=FNYY_YY21$(FNM$(FNC$(A2$(1,3))),ERR=1220)
1220 LET B1$(1)=A0$(20,1)+" "+DATEREQ$+FILL(12)+"N"+A2$(4,12)+FILL(15)
1230 LET B2$(1)=A2$(16,10)+FILL(22),B3$(1)=A0$(21),B4$(1)=A1$
1240 FOR X=0 TO 1
1250 LET B[X]=A[X]
1260 NEXT X
1270 LET B[3]=A[2],B[7]=A[3]+A[4]
1280 WRITE (POE12_DEV,KEY=B0$)IOL=POE12A
1290 NEXT_POE01TMP: 
1310 GOTO 1040
1320 DONE_POE01TMP: 
1400 REM " --- Move temp 5.2 POE-11 to 6.0 POE-01 and POE-11
1405 IF POE11TMP_DEV=0 THEN GOTO DONE_POE11TMP
1420 LET X$="POE-11 Purchase Order Entry",X=21
1430 GOSUB UPDATE_SCRN
1440 LET K$=KEY(POE11TMP_DEV,END=DONE_POE11TMP)
1445 IF POS("Z"=K$)=1 OR LEN(K$)<19 THEN READ (POE11TMP_DEV); GOTO NEXT_POE11TMP
1450 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
1460 IF K$(18,2)<>"00" THEN GOTO POE11TMP_BREC
1470 DIM A0$(110),A[2],B0$(15),B1$(160),B2$(1),B3$(1),B[8]
1480 READ (POE11TMP_DEV)IOL=POE11A52
1485 LET HDR_WHSE$=A0$(85,2)
1490 LET B0$(1)=A0$(1,2)+A0$(5,13)
1500 LET DATEORD$=FILL(6)
1510 IF A0$(20,3)<>FILL(3) THEN LET DATEORD$=FNYY_YY21$(FNM$(FNC$(A0$(20,3))),ERR=1515)
1515 GOSUB GETDATEREQD01
1520 LET B1$(1)=HDR_WHSE$+A0$(46,2)+DATEORD$+FILL(12)+DATEREQD$+FILL(6)+A0$(45,1)+FILL(2)+A0$(43,2)+FILL(4)+A0$(55,30)+A0$(23,20)+FILL(15)+"STD"+FILL(49)
1530 WRITE (POE01_DEV,KEY=B0$)IOL=POE01A
1540 GOTO NEXT_POE11TMP
1550 POE11TMP_BREC: 
1560 DIM A0$(42),A1$(40),A2$(50),A[5]
1570 DIM B0$(18),B1$(48),B2$(32),B3$(22),B4$(40),B5$(1),B6$(1),B[12]
1580 READ (POE11TMP_DEV)IOL=POE11B52
1585 IF A0$(21,2)=FILL(2) THEN LET A0$(21,2)=HDR_WHSE$
1590 LET B0$(1)=A0$(1,2)+A0$(5,13)+A0$(18,2)+"0"
1600 LET DATEREQ$=FILL(6)
1610 IF A2$(1,3)<>FILL(3) THEN LET DATEREQ$=FNYY_YY21$(FNM$(FNC$(A2$(1,3))),ERR=1620)
1620 LET B1$(1)=A0$(20,1)+" "+DATEREQ$+FILL(12)+"N"+A2$(4,12)+A2$(26,4)+FILL(11)
1630 LET B2$(1)=A2$(16,10)+FILL(22),B3$(1)=A0$(21),B4$(1)=A1$
1640 FOR X=0 TO 2
1650 LET B[X]=A[X]
1660 NEXT X
1680 WRITE (POE11_DEV,KEY=B0$)IOL=POE11A
1690 NEXT_POE11TMP: 
1710 GOTO 1440
1720 DONE_POE11TMP: 
1800 REM " --- Move 5.2 POE-04 to 6.0 POE-22
1805 DO_POE04: 
1810 LET X$="POE-04 PO Print File",X=18
1820 GOSUB UPDATE_SCRN
1830 LET K$=KEY(POE04_DEV,END=DONE_POE04)
1833 IF POS("Z"=K$)=1 OR LEN(K$)<>17 THEN READ (POE04_DEV); GOTO NEXT_POE04
1835 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
1840 DIM B0$(15)
1850 READ (POE04_DEV)
1860 LET B0$(1)=K$(1,2)+K$(5)
1865 WRITE (POE22_DEV,KEY=B0$)IOL=POE22A
1870 NEXT_POE04: 
1875 GOTO 1830
1880 DONE_POE04: 
1885 CLOSE (POE04_DEV,ERR=1890)
1890 ERASE "POE-04",ERR=1900
1895 GOTO 1890
1900 REM " --- Move 5.2 POE-14 to 6.0 POE-21
1905 DO_POE14: 
1910 LET X$="POE-14 PO Print File",X=18
1920 GOSUB UPDATE_SCRN
1930 LET K$=KEY(POE14_DEV,END=DONE_POE14)
1933 IF POS("Z"=K$)=1 OR LEN(K$)<>17 THEN READ (POE14_DEV); GOTO NEXT_POE14
1935 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
1940 DIM B0$(15)
1950 READ (POE14_DEV)
1960 LET B0$(1)=K$(1,2)+K$(5)
1965 WRITE (POE21_DEV,KEY=B0$)IOL=POE21A
1970 NEXT_POE14: 
1975 GOTO 1930
1980 DONE_POE14: 
1985 CLOSE (POE14_DEV,ERR=1990)
1990 ERASE "POE-14",ERR=2000
1995 GOTO 1990
2000 REM " --- Write 'Next' Sequence #'s to POS-10N
2010 DO_POS10N: 
2020 READ_SYM06: 
2030 DIM A0$(2),B0$(3),B[3],C0$(6),C[1]
2040 LET K$=KEY(SYM06_DEV,END=DONE_POS10)
2050 READ (SYM06_DEV)IOL=SYM06A
2060 LET B0$=A0$+"N"
2070 FIND (SYS01_DEV,KEY=A0$+"PO02",DOM=NEXT_SYM06)IOL=POS01C
2080 IF C[0]=0 THEN LET C[0]=1
2090 IF C[1]=0 THEN LET C[1]=1
2100 FIND (POS10_DEV,KEY=B0$,DOM=3000)IOL=POS10N
2110 LET B[0]=C[0],B[1]=C[1],B[2]=1,B[3]=10
2120 WRITE (POS10_DEV,KEY=B0$)IOL=POS10N
2130 REMOVE (SYS01_DEV,KEY=C0$,DOM=NEXT_SYM06)
2140 NEXT_SYM06: 
2150 GOTO READ_SYM06
2160 DONE_POS10: 
3000 REM " --- Create POT-05,POT-15 & POT-25 using 5.2 APT-04 & POT-02
3010 REM " ---                                 and 6.0 APT-01 & 11
3030 IF APT04_DEV=0 THEN GOTO DONE_APT04
3040 DIM A0$(32),A[0],B0$(71),B[2],C0$(22),C1$(11),C[2],D0$(45),D1$(40),D2$(26),D[5]
3050 DIM R0$(23),R1$(64),R[8],S0$(26),S1$(31),S[4],T0$(26),T1$(96),T[4]
3060 LET X$="POT-05 PO Invoice History",X=33
3070 GOSUB UPDATE_SCRN
3080 READ_APT04: 
3090 LET K$=KEY(APT04_DEV,END=DONE_APT04)
3100 IF POS("Z"=K$)=1 OR LEN(K$)<32 THEN READ (APT04_DEV); GOTO NEXT_APT04
3110 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
3120 READ (APT04_DEV)IOL=APT04A
3130 LET B0$(1)=A0$(1,2)+A0$(21,2)+A0$(5,6)+A0$(23,10)+"00"
3140 LET D0$(1)=A0$(1,2)+FILL(2)+A0$(5,16)+"00"
3150 FIND (APT01_DEV,KEY=B0$(1,22),DOM=NEXT_APT04)IOL=APT01A
3160 FIND (POT02_DEV,KEY=D0$(1,22),DOM=NEXT_APT04)
3170 LET INVDATE$=FILL(6),ACCTDATE$=FILL(6),DUEDATE$=FILL(6),DISCDATE$=FILL(6)
3180 IF B0$(29,3)<>FILL(3) THEN LET INVDATE$=FNYY_YY21$(FNM$(FNC$(B0$(29,3))))
3190 IF B0$(32,3)<>FILL(3) THEN LET ACCTDATE$=FNYY_YY21$(FNM$(FNC$(B0$(32,3))))
3200 IF B0$(35,3)<>FILL(3) THEN LET DUEDATE$=FNYY_YY21$(FNM$(FNC$(B0$(35,3))))
3210 IF B0$(38,3)<>FILL(3) THEN LET DISCDATE$=FNYY_YY21$(FNM$(FNC$(B0$(38,3))))
3220 LET R0$(1)=B0$(1,20)+"000"
3230 LET R1$(1)=INVDATE$+ACCTDATE$+DUEDATE$+DISCDATE$+B0$(67,1)+B0$(27,2)+B0$(23,4)+B0$(41,26)
3240 LET R[0]=B[0],R[1]=B[1],R[2]=B[2]
3250 WRITE (POT05_DEV,KEY=R0$)IOL=POT05A
3260 REM " --- Accumulate total invoice amount for POT-15
3270 DIM C0$(22),C1$(11),C[2],S0$(26),S1$(31),S[4],T0$(26),T1$(96),T[4]
3280 LET POLINENUM=1,TOTINVD=R[0]
3290 READ (APT11_DEV,KEY=R0$(1,20),DOM=READ_APT11)
3300 READ_APT11: 
3310 LET K11$=KEY(APT11_DEV,END=DONE_APT11)
3320 IF POS(K11$(1,20)=R0$)<>1 THEN GOTO DONE_APT11
3330 READ (APT11_DEV)IOL=APT11A
3340 IF C1$(1,1)<>"A" AND NUM(C0$(21,2))<>1 THEN GOTO NEXT_APT11; REM "Initial Inv & adjustments only
3350 LET TOTINVD=TOTINVD+C[0]
3360 NEXT_APT11: 
3370 GOTO READ_APT11
3380 DONE_APT11: 
3390 REM " --- Assign POT-15 variables from 5.2 POT-02
3400 LET FROMAPT04=1
3410 GOSUB DO_POT02
3420 LET FROMAPT04=0,S0$(1)=R0$
3430 LET S0$(24,3)=STR(POLINENUM:"000")
3440 LET S1$(1)=A0$(11,7)+STR(RECEIVERNUM:"0000000"),S[0]=TOTINVD
3450 LET POLINENUM=POLINENUM+1
3460 WRITE (POT15_DEV,KEY=S0$)IOL=POT15A
3470 REM " --- Write Non-PO amt to POT-15
3480 IF A[0]=0 THEN GOTO NEXT_APT04
3490 DIM S1$(31)
3500 LET S0$=S0$(1,23)+STR((POLINENUM+1):"000"),S[0]=A[0]
3510 WRITE (POT15_DEV,KEY=S0$)IOL=POT15A
3520 NEXT_APT04: 
3530 GOTO READ_APT04
3540 DONE_APT04: 
3600 REM " --- Move the rest of 5.2 POT-02 recs to 6.0 POT-04 & POT-14
3605 LET X$="POT-02 PO Receipt History",X=23
3610 GOSUB UPDATE_SCRN
3620 DIM LASTK$(22)
3625 LET RECEIVERNUM=RECEIVERNUM+1
3630 READ (POT02_DEV,KEY="",DOM=READPOT02)
3635 READPOT02: 
3640 LET K$=KEY(POT02_DEV,END=DONEPOT02)
3650 IF POS("Z"=K$)=1 OR LEN(K$)<>22 THEN READ (POT02_DEV); GOTO NEXTPOT02
3660 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
3670 IF K$(21,2)<>"00" THEN GOTO POT02BREC
3680 IF K$(1,17)=LASTK$(1,17) THEN LET RECEIVERNUM=RECEIVERNUM+1 ELSE LET LASTK$=K$
3690 DIM D0$(89),D[3],W0$(22),W1$(160),W2$(1),W3$(1),W[8]
3700 READ (POT02_DEV)IOL=POT02A
3710 LET W0$(1)=D0$(1,2)+D0$(5,6)+D0$(11,7)+STR(RECEIVERNUM:"0000000")
3720 LET DATEORD$=FILL(6),DATEREC$=FILL(6)
3730 IF D0$(23,3)<>FILL(3) THEN LET DATEORD$=FNYY_YY21$(FNM$(FNC$(D0$(23,3))),ERR=3740)
3740 IF D0$(18,3)<>FILL(3) THEN LET DATEREC$=FNYY_YY21$(FNM$(FNC$(D0$(18,3))),ERR=3750)
3750 LET W1$(1)=D0$(88,2)+D0$(49,2)+DATEORD$+FILL(18)+DATEREC$+FILL(1)+D0$(48,1)+FILL(1)+D0$(46,2)+FILL(4)+D0$(58,30)+D0$(26,20)+FILL(67)
3760 WRITE (POT04_DEV,KEY=W0$)IOL=POT04A
3770 GOTO NEXTPOT02
3780 POT02BREC: 
3790 DIM D0$(45),D1$(40),D2$(26),D[5]
3800 DIM W0$(25),W1$(48),W2$(32),W3$(22),W4$(40),W5$(1),W6$(1),W[12]
3810 READ (POT02_DEV)IOL=POT02B
3820 LET W0$(1)=D0$(1,2)+D0$(5,6)+D0$(11,7)+STR(RECEIVERNUM:"0000000")+"0"+D0$(21,2)
3830 LET DATEREQ$=FILL(6)
3840 IF D2$(1,3)<>FILL(3) THEN LET DATEREQ$=FNYY_YY21$(FNM$(FNC$(D2$(1,3))),ERR=3850)
3850 LET W1$(1)=D0$(23,1)+" "+DATEREQ$+FILL(12)+"Y"+D2$(4,12)+FILL(4)+"STD"+FILL(7)
3860 LET W2$(1)=D2$(16,7)+FILL(26),W3$(1)=D0$(24),W4$(1)=D1$
3870 FOR X=0 TO 1
3880 LET W[X]=D[X]
3890 NEXT X
3900 LET W[3]=D[2],W[7]=D[3]
3910 WRITE (POT14_DEV,KEY=W0$)IOL=POT14A
3920 NEXTPOT02: 
3930 GOTO READPOT02
3940 DONEPOT02: 
4000 REM " --- End Of Conversion
4010 CLOSE (POE01TMP_DEV,ERR=4020)
4020 ERASE "POE01.TMP",ERR=4030
4025 GOTO 4020
4030 CLOSE (POE11TMP_DEV,ERR=4040)
4040 ERASE "POE11.TMP",ERR=4050
4045 GOTO 4040
4050 CLOSE (POT02_DEV,ERR=4060)
4060 ERASE "POT-02",ERR=4090
4065 GOTO 4060
4090 GOTO 9900
5000 REM " --- Move 5.2 POT-02 to 6.0 POT-04 and POT-14
5010 REM "     If from APT-04 section, get RECEIVER for 6.0 POT-15,
5020 REM "                             & create POT-25 records
5030 DO_POT02: 
5040 DIM LASTK02$(22)
5050 LET INVLINENUM=1
5060 READ (POT02_DEV,KEY=D0$(1,20),DOM=5070)
5070 REM " --- Ensure there's no unprocessed (ie uninvoiced) rcpt for PO
5080 LET UNBILLED=0
5090 LET K02P$=KEYP(POT02_DEV,END=READ_POT02)
5100 IF K02P$(1,17)<>A0$(1,17) THEN GOTO READ_POT02
5110 LET K02$=K02P$,UNBILLED=1; REM "Needs cnvrting to maintain rcpt order
5120 GOTO 5150
5130 READ_POT02: 
5140 LET K02$=KEY(POT02_DEV,END=DONE_POT02)
5150 IF POS("Z"=K02$)=1 OR LEN(K02$)<>22 THEN GOTO NEXT_POT02
5160 PRINT @(COLUMN,11),K02$(1,2)," ",K02$(3),
5170 IF (FROMAPT04 AND UNBILLED=0) AND K02$(1,20)<>A0$(1,20) THEN GOTO DONE_POT02
5180 IF UNBILLED AND K02$(1,17)<>A0$(1,17) THEN GOTO DONE_POT02
5190 IF K02$(21,2)<>"00" THEN GOTO POT02_BREC
5200 IF (FROMAPT04 AND UNBILLED=0) OR K02$(1,17)=LASTK02$(1,17) THEN LET RECEIVERNUM=RECEIVERNUM+1 ELSE LET LASTK02$=K02$; GOTO DONE_POT02
5210 DIM D0$(89),D[3],W0$(22),W1$(160),W2$(1),W3$(1),W[8]
5220 READ (POT02_DEV)IOL=POT02A
5230 LET W0$(1)=D0$(1,2)+D0$(5,6)+D0$(11,7)+STR(RECEIVERNUM:"0000000")
5240 LET DATEORD$=FILL(6),DATEREC$=FILL(6)
5250 IF D0$(23,3)<>FILL(3) THEN LET DATEORD$=FNYY_YY21$(FNM$(FNC$(D0$(23,3))),ERR=5260)
5260 IF D0$(18,3)<>FILL(3) THEN LET DATEREC$=FNYY_YY21$(FNM$(FNC$(D0$(18,3))),ERR=5270)
5270 LET W1$(1)=D0$(88,2)+D0$(49,2)+DATEORD$+FILL(18)+DATEREC$+FILL(1)+D0$(48,1)+FILL(1)+D0$(46,2)+FILL(4)+D0$(58,30)+D0$(26,20)+FILL(67)
5280 WRITE (POT04_DEV,KEY=W0$)IOL=POT04A
5290 GOTO NEXT_POT02
5300 POT02_BREC: 
5310 DIM D0$(45),D1$(40),D2$(26),D[5]
5320 DIM W0$(25),W1$(48),W2$(32),W3$(22),W4$(40),W5$(1),W6$(1),W[12]
5330 DIM T0$(26),T1$(96),T[4]
5340 READ (POT02_DEV)IOL=POT02B
5350 LET W0$(1)=D0$(1,2)+D0$(5,6)+D0$(11,7)+STR(RECEIVERNUM:"0000000")+"0"+D0$(21,2)
5360 LET DATEREQ$=FILL(6)
5370 IF D2$(1,3)<>FILL(3) THEN LET DATEREQ$=FNYY_YY21$(FNM$(FNC$(D2$(1,3))),ERR=5380)
5380 LET W1$(1)=D0$(23,1)+" "+DATEREQ$+FILL(12)+"Y"+D2$(4,12)+FILL(4)+"STD"+FILL(7)
5390 LET W2$(1)=D2$(16,7)+FILL(26),W3$(1)=D0$(24),W4$(1)=D1$
5400 FOR X=0 TO 1
5410 LET W[X]=D[X]
5420 NEXT X
5430 LET W[3]=D[2],W[7]=D[3]
5440 WRITE (POT14_DEV,KEY=W0$)IOL=POT14A
5450 LET T0$(1)=R0$,T0$(24)=STR(INVLINENUM:"000")
5460 LET T1$(1,7)=W0$(9,7),T1$(8)=W0$(23,3)+W0$(16,7)+W1$(1,2)+W4$
5470 LET T[0]=W[1],T[1]=W[7]
5480 WRITE (POT25_DEV,KEY=T0$)IOL=POT25A
5490 LET INVLINENUM=INVLINENUM+1
5500 NEXT_POT02: 
5510 REMOVE (POT02_DEV,KEY=K02$)
5520 GOTO READ_POT02
5530 DONE_POT02: 
5540 RETURN 
6000 REM " --- Get Date Required for POE-02 header from the first line item
6005 GETDATEREQD02: 
6010 DIM D0$(42),DATEREQD$(3)
6020 LET SAVEPTR$=KEYP(POE01TMP_DEV,END=6090)
6030 READ (POE01TMP_DEV,END=6090)IOL=POE01B52X
6040 IF D0$(1,17)<>A0$(1,17) THEN GOTO 6090
6050 LET DATEREQD$=FNYY_YY21$(FNM$(FNC$(DATEREQD$),ERR=6070))
6060 IF DATEREQD$<>"000000" THEN GOTO 6150
6070 LET DATEREQD$=DATEORD$; REM "Use Ord Date if no Date Req'd
6080 GOTO 6150
6090 LET DATEREQD$=F0$(18,6)
6150 READ (POE01TMP_DEV,KEY=SAVEPTR$); REM "Reposition ptr
6190 RETURN 
6200 REM " --- Get Date Required for POE-01 header from the first line item
6205 GETDATEREQD01: 
6210 DIM D0$(42),DATEREQD$(3)
6220 LET SAVEPTR$=KEYP(POE11TMP_DEV,END=6290)
6230 READ (POE11TMP_DEV,END=6290)IOL=POE11B52X
6240 IF D0$(1,17)<>A0$(1,17) THEN GOTO 6290
6250 LET DATEREQD$=FNYY_YY21$(FNM$(FNC$(DATEREQD$),ERR=6290))
6260 IF DATEREQD$<>"000000" THEN GOTO 6350
6270 LET DATEREQD$=DATEORD$; REM "Use Ord Date if no Date Req'd
6280 GOTO 6350
6290 LET DATEREQD$=F0$(18,6)
6350 READ (POE11TMP_DEV,KEY=SAVEPTR$); REM "Reposition ptr
6390 RETURN 
6800 REM " --- Erase old xref files"
6805 CLEAR_XREFS: 
6810 ERASE "POE-02",ERR=6820
6815 GOTO 6810
6820 ERASE "POE-03",ERR=6830
6825 GOTO 6820
6830 ERASE "POE-05",ERR=6840
6835 GOTO 6830
6840 ERASE "POE-06",ERR=6850
6845 GOTO 6840
6850 ERASE "POE-07",ERR=6860
6855 GOTO 6850
6860 ERASE "POE-08",ERR=6870
6865 GOTO 6860
6870 ERASE "POE-09",ERR=6880
6875 GOTO 6870
6880 ERASE "POE-12",ERR=6890
6885 GOTO 6880
6890 RETURN 
6900 REM " --- Update screen
6905 UPDATE_SCRN: 
6910 PRINT @(40,3),X$,'CL',@(0,5),'CE',
6920 CALL "SYC.NB","Processing",X,COLUMN
6990 RETURN 
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8060 DEF FNM$(Q$)=Q$(5,2)+Q$(1,4)
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
