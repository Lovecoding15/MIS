0010 REM "OPX - Convert OP to 6.0"
0020 REM "Program OPX60A"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.1 - 22Jul96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "25Jun96 WGH: ART-05 is not required, so may be missing (157,1305)"
0040 REM 
0080 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files
0110 LET FILES=18
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="ARE-03",FILES$[2]="ARE-23",FILES$[3]="ARE-33"
0130 LET FILES$[4]="ARM-07",FILES$[5]="ARS-10",FILES$[6]="ART-04"
0135 LET FILES$[7]="ART-13",FILES$[8]="ART-23",FILES$[9]="ART-33"
0140 LET FILES$[10]="SYS-01"
0145 LET FILES$[11]="ARE-04",FILES$[12]="ARE04.TMP"
0150 LET FILES$[13]="ARE-13",FILES$[14]="ARE13.TMP",OPTIONS$[14]="F"
0155 LET FILES$[15]="ART-03",FILES$[16]="ART03.TMP"
0157 LET FILES$[17]="ART-05",FILES$[18]="ART05.TMP",OPTIONS$[18]="F"
0160 CALL "SYC.DA",1,1,10,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0175 LET ARE03_DEV=CHANNELS[1],ARE23_DEV=CHANNELS[2],ARE33_DEV=CHANNELS[3]
0180 LET ARM07_DEV=CHANNELS[4],ARS10_DEV=CHANNELS[5],ART04_DEV=CHANNELS[6]
0185 LET ART13_DEV=CHANNELS[7],ART23_DEV=CHANNELS[8],ART33_DEV=CHANNELS[9]
0190 LET SYS01_DEV=CHANNELS[10]
0200 REM " --- IOLists
0210 ARE13A52: IOLIST A0$(1),A1$(1),A2$(1),A[ALL]
0220 ARE23A: IOLIST A0$,A1$,A2$,A[ALL]
0225 REM 
0230 ART05A52: IOLIST A0$(1),A1$(1),A2$(1),A[ALL]
0240 ART23A: IOLIST A0$,A1$,A2$,A[ALL]
0245 REM 
0250 ART03A52: IOLIST A0$(1),A[ALL]
0255 ART03A60: IOLIST R0$(1),R[ALL]
0267 ART05A60: IOLIST S0$(1),S[ALL]
0270 REM 
0280 ART04A: IOLIST A0$(1),A[ALL]
0285 ART04B: IOLIST A0$(1),A1$(1),A[ALL]
0290 ART04C: IOLIST A0$(1),A1$(1)
0295 ART13A: IOLIST R0$(1),R1$(1),R[ALL]
0310 ART33A: IOLIST R0$(1),R1$(1)
0315 ARM07A: IOLIST A0$(2),A1$,A2$
0320 ARE03A52: IOLIST A0$(1),A[ALL]
0325 ARE03A60: IOLIST R0$(1),R[ALL]
0330 ARE03B: IOLIST A0$(1),A1$(1),A[ALL]
0335 ARE03C: IOLIST A0$(1),A[ALL]
0340 ARE03D: IOLIST NEXTORDNUM
0345 ARE03E: IOLIST NEXTINVNUM
0350 ARE03F: IOLIST A0$(1),A1$(1)
0355 ARE13A: IOLIST R0$(1),R1$(1),R[ALL]
0365 ARE33A: IOLIST R0$(1),R1$(1)
0375 ARS10N: IOLIST R0$(1),R[ALL]
0380 ARS10S: IOLIST R0$(1),R[ALL]
0385 SYS01P: IOLIST A0$(1),A1$(1),A2$(1)
0390 SYS01T: IOLIST X$,F0$,X$,X$,F4$,F5$
0395 ARE04A: IOLIST K$
0400 REM " --- Parameters
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="OP",N3$=F4$
0500 REM " --- Init Data
0505 PRECISION 14
0800 REM " --- Display Warning"
0810 CALL "SYC60A",N2$,SYS01_DEV,STATUS
0820 IF STATUS THEN GOTO 9900
0900 REM " --- Additional file Opens
0905 PRINT @(40,3),'CL',@(0,5),'CE',
0910 CALL "SYC.NB"," Making Temporary Files",0,COLUMN
0920 LET NUMBER=4
0930 DIM FROM$[NUMBER],TMPFILE$[NUMBER],FLAG$[NUMBER]
0940 LET FROM$[1]="ARE-04",TMPFILE$[1]="ARE04.TMP"
0943 LET FROM$[2]="ARE-13",TMPFILE$[2]="ARE13.TMP"
0945 LET FROM$[3]="ART-03",TMPFILE$[3]="ART03.TMP"
0947 LET FROM$[4]="ART-05",TMPFILE$[4]="ART05.TMP"
0950 CALL "SYC.RN",FROM$[ALL],TMPFILE$[ALL],FLAG$[ALL],NUMBER,STATUS
0955 IF STATUS<>0 THEN GOTO 9900
0970 CALL "SYC.DA",1,11,18,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0975 IF STATUS<>0 THEN GOTO 9900
0980 LET ARE04_DEV=CHANNELS[11],ARE04TMP_DEV=CHANNELS[12]
0985 LET ARE13_DEV=CHANNELS[13],ARE13TMP_DEV=CHANNELS[14]
0990 LET ART03_DEV=CHANNELS[15],ART03TMP_DEV=CHANNELS[16]
0993 LET ART05_DEV=CHANNELS[17],ART05TMP_DEV=CHANNELS[18]
0995 CALL "SYC.NB","Processing",13,COLUMN
1000 REM " --- Move OP Terminal Records From SYS-01 to ARM-07"
1005 LET X$="ARM-07 Order Processing Terminal",X=7
1010 GOSUB UPDATE_SCRN
1015 DIM A0$(7),A1$(32),A2$(41)
1020 READ (SYS01_DEV,KEY="P",DOM=1030)
1030 LET K$=KEY(SYS01_DEV,END=DONE_ARM07)
1040 IF POS("P"=K$)<>1 THEN GOTO DONE_ARM07
1045 IF LEN(K$)<4 THEN READ (SYS01_DEV); GOTO 1090
1050 PRINT @(COLUMN,11),K$(2,2)," ",K$(4),
1060 READ (SYS01_DEV)IOL=SYS01P
1070 WRITE (ARM07_DEV,KEY=A0$(2))IOL=ARM07A
1080 REMOVE (SYS01_DEV,KEY=K$)
1090 GOTO 1030
1095 DONE_ARM07: 
1200 REM " --- Move temp ARE-13 to ARE-23 w/fixed L/S 
1205 IF ARE13TMP_DEV=0 THEN GOTO DONE_ARE13
1210 LET X$="ARE-13 Lot/Serial # Detail",X=25
1220 GOSUB UPDATE_SCRN
1230 LET K$=KEY(ARE13TMP_DEV,END=DONE_ARE13)
1235 IF POS("Z"=K$)=1 OR LEN(K$)<>23 THEN READ (ARE13TMP_DEV); GOTO 1280
1240 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
1250 DIM A0$(23),A1$(20),A2$(12),A[2]
1260 READ (ARE13TMP_DEV)IOL=ARE13A52
1270 WRITE (ARE23_DEV,KEY=A0$)IOL=ARE23A
1280 GOTO 1230
1285 DONE_ARE13: 
1300 REM " --- Move 5.2's ART-05 (ART05.TMP) to ART-23 w/fixed L/S #
1305 IF ART05TMP=0 THEN GOTO DONE_ART05TMP
1310 LET X$="ART-05 Lot/Serial Invoice History",X=25
1320 GOSUB UPDATE_SCRN
1330 LET K$=KEY(ART05TMP_DEV,END=DONE_ART05TMP)
1335 IF POS("Z"=K$)=1 OR LEN(K$)<>23 THEN READ (ART05TMP_DEV); GOTO 1380
1340 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
1350 DIM A0$(23),A1$(20),A2$(12),A[2]
1360 READ (ART05TMP_DEV)IOL=ART05A52
1370 WRITE (ART23_DEV,KEY=A0$)IOL=ART23A
1380 GOTO 1330
1385 DONE_ART05TMP: 
1400 REM " --- Move Temp ART-03 to new ART-03
1401 REM " --- Build new ART-05 from 5.2 ART-03
1405 DO_ART03: 
1410 LET X$="ART-03 Open Invoice History",X=13
1420 GOSUB UPDATE_SCRN
1430 LET K$=KEY(ART03TMP_DEV,END=DONE_ART03)
1435 IF POS("Z"=K$)=1 OR LEN(K$)<>11 THEN READ (ART03TMP_DEV); GOTO 1590
1440 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
1450 DIM A0$(101),A[10],R0$(117),R[10],SHIPTO$(6),S0$(24),S[3]
1460 READ (ART03TMP_DEV)IOL=ART03A52
1465 IF A0$(30,2)<>FILL(2) THEN LET SHIPTO$=FILL(4,"0")+A0$(30,2)
1470 LET R0$(1)=A0$(1,4)+A0$(12,6)+A0$(5,7)+A0$(18,12)+FILL(2)+A0$(32)+SHIPTO$+FILL(10)
1500 FOR CNT=0 TO 10
1510 LET R[CNT]=A[CNT]
1530 NEXT CNT
1575 WRITE (ART03_DEV,KEY=R0$(1,20))IOL=ART03A60
1580 LET S0$(1)=A0$(1,4)+A0$(59,3)+A0$(5,13)+A0$(21,1)+A0$(24,3)
1583 LET S[0]=A[3],S[1]=A[5],S[2]=A[6],S[3]=A[7]
1585 WRITE (ART05_DEV,KEY=S0$(1,14))IOL=ART05A60
1590 GOTO 1430
1595 DONE_ART03: 
1600 REM " --- Move ART-04 data to new ART-03, ART-13 & ART-33
1605 DO_ART04: 
1610 LET X$="ART-04 Open Invoice History",X=22
1620 GOSUB UPDATE_SCRN
1630 LET K$=KEY(ART04_DEV,END=DONE_ART04)
1633 IF POS("Z"=K$)=1 OR LEN(K$)<16 THEN READ (ART04TMP_DEV); GOTO NEXT_ART04
1635 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
1640 IF LEN(K$)<20 THEN GOTO RECORD_C
1650 IF K$(18,3)="000" THEN GOTO RECORD_A ELSE GOTO RECORD_B
1660 RECORD_A: 
1670 DIM A0$(101),A[10],R0$(117),R[10],SHIPTO$(6)
1680 READ (ART04_DEV)IOL=ART04A
1685 IF A0$(30,2)<>FILL(2) THEN LET SHIPTO$=FILL(4,"0")+A0$(30,2)
1690 LET R0$(1)=A0$(1,29)+FILL(2)+A0$(32)+SHIPTO$+FILL(10)
1700 FOR CNT=0 TO 10
1710 LET R[CNT]=A[CNT]
1730 NEXT CNT
1775 LET ORDER$=R0$(42,7)
1780 FIND (ART03_DEV,KEY=R0$(1,20),DOM=1790)IOL=ART03A60
1785 LET R0$(42,7)=ORDER$; REM "Keep existing ART03 record except order number when duplicate from ART-04
1790 WRITE (ART03_DEV,KEY=R0$(1,20))IOL=ART03A60
1795 GOTO NEXT_ART04
1800 RECORD_B: 
1810 DIM A0$(52),A1$(63),A[14],R0$(52),R1$(64),R[14]
1820 READ (ART04_DEV)IOL=ART04B
1830 LET R0$(1)=A0$(1,26)+FILL(4)+A0$(31)
1840 LET R1$(1)=A1$(1,43)+FILL(21)
1850 FOR CNT=0 TO 14
1860 LET R[CNT]=A[CNT]
1870 NEXT CNT
1880 WRITE (ART13_DEV,KEY=R0$(1,20))IOL=ART13A
1890 GOTO NEXT_ART04
1900 RECORD_C: 
1910 DIM A0$(18),A1$(111),R0$(15),R1$(111)
1920 READ (ART04_DEV)IOL=ART04C
1930 LET R0$(1)=A0$(1,2)+A0$(5); REM "Don't keep the 2 blanks in A0$(3,2)
1940 LET R1$(1)=A1$
1950 WRITE (ART33_DEV,KEY=R0$)IOL=ART33A
1960 GOTO NEXT_ART04
1975 NEXT_ART04: 
1980 GOTO 1630
1985 DONE_ART04: 
2100 REM " --- Move ARE-03 data to separate files
2105 DO_ARE03: 
2110 LET X$="ARE-03 Order/Invoice Entry",X=22
2120 GOSUB UPDATE_SCRN
2130 LET K$=KEY(ARE03_DEV,END=DONE_ARE03)
2135 IF POS("Z"=K$)=1 OR LEN(K$)<2 THEN READ (ARE03TMP_DEV); GOTO KILLRECORD
2140 IF LEN(K$)<20 THEN GOTO NOT_AORB
2145 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
2150 IF K$(18,3)="000" THEN GOTO ARECORD ELSE GOTO BRECORD
2160 ARECORD: 
2170 DIM A0$(101),A[10],R0$(117),R[10],SHIPTO$(6)
2180 READ (ARE03_DEV)IOL=ARE03A52
2185 IF A0$(30,2)<>FILL(2) THEN LET SHIPTO$=FILL(4,"0")+A0$(30,2)
2190 LET R0$(1)=A0$(1,29)+FILL(2)+A0$(32)+SHIPTO$+FILL(10)
2200 FOR CNT=0 TO 10
2210 LET R[CNT]=A[CNT]
2230 NEXT CNT
2250 WRITE (ARE03_DEV,KEY=R0$(1,20))IOL=ARE03A60
2280 GOTO NEXT_ARE03
2300 BRECORD: 
2310 DIM A0$(52),A1$(64),A[14],R0$(52),R1$(64),R[14]
2320 READ (ARE03_DEV)IOL=ARE03B
2330 LET R0$(1)=A0$(1,26)+FILL(4)+A0$(31)
2340 LET R1$(1)=A1$(1,45)+FILL(19)
2350 FOR CNT=0 TO 14
2360 LET R[CNT]=A[CNT]
2365 NEXT CNT
2380 WRITE (ARE13_DEV,KEY=R0$(1,20))IOL=ARE13A
2385 REMOVE (ARE03_DEV,KEY=K$)
2390 GOTO NEXT_ARE03
2393 NOT_AORB: 
2397 IF LEN(K$)>2 THEN GOTO NOTC
2400 CRECORD: 
2405 PRINT @(COLUMN,11),K$(1,2),FILL(20),
2410 DIM A0$(2),A[15],R0$(3),R[15]
2420 READ (ARE03_DEV)IOL=ARE03C
2430 LET R0$(1)=A0$+"S"
2440 FOR CNT=0 TO 15
2450 LET R[CNT]=A[CNT]
2455 NEXT CNT
2460 WRITE (ARS10_DEV,KEY=R0$)IOL=ARS10S
2470 REMOVE (ARE03_DEV,KEY=K$)
2480 GOTO NEXT_ARE03
2500 NOTC: 
2505 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
2510 IF LEN(K$)>5 THEN GOTO FRECORD
2520 IF K$(5,1)="I" THEN GOTO ERECORD ELSE GOTO DRECORD
2600 DRECORD: 
2605 IF K$(5,1)<>"O" THEN GOTO KILLRECORD
2610 DIM R0$(3),R[4]
2615 LET NEXTORDNUM=0
2620 READ (ARE03_DEV)IOL=ARE03D
2630 LET R0$(1)=K$(3,2)+"N"
2640 FIND (ARS10_DEV,KEY=R0$,DOM=2650)IOL=ARS10N
2650 LET R[2]=NEXTORDNUM
2670 WRITE (ARS10_DEV,KEY=R0$)IOL=ARS10N
2680 REMOVE (ARE03_DEV,KEY=K$)
2690 GOTO NEXT_ARE03
2700 ERECORD: 
2710 DIM R0$(3),R[4]
2715 LET NEXTINVNUM=0
2720 READ (ARE03_DEV)IOL=ARE03E
2730 LET R0$(1)=K$(3,2)+"N"
2740 FIND (ARS10_DEV,KEY=R0$,DOM=2750)IOL=ARS10N
2750 LET R[3]=NEXTINVNUM
2770 WRITE (ARS10_DEV,KEY=R0$)IOL=ARS10N
2780 REMOVE (ARE03_DEV,KEY=K$)
2790 GOTO NEXT_ARE03
2800 FRECORD: 
2810 DIM A0$(18),A1$(130),R0$(15),R1$(130)
2820 READ (ARE03_DEV)IOL=ARE03F
2830 LET R0$(1)=A0$(1,2)+A0$(5,13)
2850 LET R1$(1)=A1$
2860 WRITE (ARE33_DEV,KEY=R0$)IOL=ARE33A
2870 REMOVE (ARE03_DEV,KEY=K$)
2880 GOTO NEXT_ARE03
2900 REM 
2910 KILLRECORD: 
2920 REMOVE (ARE03_DEV,KEY=K$)
2975 NEXT_ARE03: 
2980 GOTO 2130
2985 DONE_ARE03: 
3000 REM " --- Move temp 5.2 ARE-04 data from sort file to 6.0 Mkeyed
3010 LET X$="ARE-04 Order/Invoice Print File",X=18
3020 GOSUB UPDATE_SCRN
3030 LET K$=KEY(ARE04TMP_DEV,END=DONE_ARE04TMP)
3035 IF POS("Z"=K$)=1 OR LEN(K$)<>18 THEN READ (ARE04TMP_DEV); GOTO 3080
3040 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
3050 DIM A0$(18)
3060 READ (ARE04TMP_DEV)
3070 WRITE (ARE04_DEV,KEY=K$)IOL=ARE04A
3080 GOTO 3030
3085 DONE_ARE04TMP: 
4000 REM " --- End Of Conversion
4010 CLOSE (ART04_DEV,ERR=4015)
4015 ERASE "ART-04",ERR=4025
4020 GOTO 4015
4025 CLOSE (ARE04TMP_DEV,ERR=4030)
4030 ERASE "ARE04.TMP",ERR=4055
4035 GOTO 4030
4055 CLOSE (ARE13TMP_DEV,ERR=4060)
4060 ERASE "ARE13.TMP",ERR=4070
4065 GOTO 4060
4070 CLOSE (ART03TMP_DEV,ERR=4075)
4075 ERASE "ART03.TMP",ERR=4090
4080 GOTO 4075
4090 CLOSE (ART05TMP_DEV,ERR=4095)
4095 ERASE "ART05.TMP",ERR=4190
4100 GOTO 4095
4190 GOTO 9900
6900 REM " --- Update screen
6905 UPDATE_SCRN: 
6910 PRINT @(40,3),X$,'CL',@(0,5),'CE',
6920 CALL "SYC.NB","Processing",X,COLUMN
6990 RETURN 
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
