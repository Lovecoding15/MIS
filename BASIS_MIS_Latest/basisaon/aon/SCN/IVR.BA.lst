0010 REM "IVR - Inventory Stock Status Report"
0020 REM "Program IVR.BA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.6 - 15Aug99 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "18May99 KJS: Prevent error ones when totals overflow mask (3060,6940,8400-8445)
0032 REM "05Apr00 KJS: Prevent endless loop when all but the last digit of an item are the same (1410)
0040 REM 
0070 BEGIN
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=8
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="SYS-01",FILES$[2]="IVM-01",FILES$[3]="IVM-02"
0130 LET FILES$[4]="IVM-03",FILES$[5]="IVM-10",FILES$[6]="IVM-14"
0140 LET FILES$[7]="IVM-03",FILES$[8]="IVM-15"
0150 CALL "SYC.DA",1,1,FILES,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM01_DEV=CHANNELS[2],IVM02_DEV=CHANNELS[3]
0180 LET IVM03_DEV=CHANNELS[4],IVM10_DEV=CHANNELS[5],IVM14_DEV=CHANNELS[6]
0190 LET IVM03_DEV2=CHANNELS[7],IVM15_DEV=CHANNELS[8]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$,A5$,A6$,A[ALL]
0230 IVM10A: IOLIST X0$(1)
0240 IVM10C: IOLIST X0$(1)
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0400 REM " --- Parameters"
0405 DIM P[5]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0415 LET N0$=F0$(16,2),N2$="IV"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0435 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1))
0440 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM FILES[15],PARAMS$[3],OPTIONS$[7],HEADINGS$[7],O[9]
0520 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12]
0550 LET FILES[1]=IVM01_DEV,FILES[10]=IVM10_DEV,FILES[14]=IVM14_DEV
0555 LET PARAMS$[0]=N0$,PARAMS$[1]=I1$,PARAMS$[2]=I2$,PARAMS$[3]=I3$
0560 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$,WHEN$=F0$(7,3),CLOCK$="",H9$=""
0565 LET WIDTH=132,PAGE=0,L9=59,L=L9+1,PRODUCT=0,WAREHOUSE=0,REPORT=0
0570 LET HEADINGS=7,DONE=0,FILES[15]=IVM15_DEV
0600 REM " --- Resize masks"
0610 CALL "SYC.RM",M1$,M1,12,15
0620 CALL "SYC.RM",M2$,M2,10,15
0630 CALL "SYC.RM",M3$,M3,10,15
0700 REM " --- Background"
0710 CALL "IVC.IB","BDL","",3,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0800 REM " --- Process input"
0810 CALL "IVC.IB","IL","",3,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0820 ON V3 GOTO 830,800,800,800,830
0830 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
0840 ON V3 GOTO 850,830,830,830,9900
0850 ON POS(V$="YN") GOTO 830,860,800
0860 LET LEVEL$=OPTIONS$[0],BEGWHSE$=OPTIONS$[1],ENDWHSE$=OPTIONS$[2]
0870 LET BEGPROD$=OPTIONS$[3],ENDPROD$=OPTIONS$[4],BEGITEM$=OPTIONS$[5]
0880 LET ENDITEM$=OPTIONS$[6],TYPE$=OPTIONS$[7]
0900 REM " --- Print positions"
0910 LET O[1]=P[0]+1,O[9]=WIDTH-M1,O[8]=O[9]
0915 IF LEVEL$="W" THEN LET O[8]=O[9]-M3
0920 LET O[7]=O[8]-M2,O[6]=O[7]-M2,O[5]=O[6]-M2,O[4]=O[5]-M2
0925 LET O[3]=O[4]-3,O[2]=O[3],SPLIT=0
0930 IF LEVEL$="W" THEN LET O[2]=O[3]-11
0935 IF P[0]+P[3]+P[4]+P[5]>O[2] THEN LET SPLIT=1
0940 GOSUB 5800
0950 REM " --- Position files"
0960 CALL "SYC.GA",7,1,"","",STATUS
0965 IF STATUS THEN GOTO 9900
0970 CALL "SYC.NB","Printing",7+P[0],COLUMN
0975 LET FILES[2]=IVM02_DEV,FILES[3]=IVM03_DEV2
0980 LET FIRST$=N0$+"A",K$=FIRST$+BEGPROD$,P=0
0985 IF LEVEL$="W" THEN LET FIRST$=N0$+"C",K$=FIRST$+BEGWHSE$,P=2
0990 READ (IVM03_DEV,KEY=K$,DOM=1000)
1000 REM " --- Get next sort record"
1010 LET K$=KEY(IVM03_DEV,END=4000)
1020 IF POS(FIRST$=K$)<>1 THEN GOTO 4000
1030 LET WHSE$=K$(4,2),PRODUCT$=K$(4+P,3),ITEM$=K$(7+P)
1040 IF LEVEL$="W" THEN GOTO 1200
1100 REM " --- By Item: Valid Product/Item?"
1110 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 4000
1120 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 1400
1130 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 1450
1140 LET X$=PRODUCT$+" "+ITEM$(1,P[0])
1190 GOTO 1500
1200 REM " --- By Warehouse: Valid Warehouse/Product/Item?"
1210 IF ENDWHSE$<>"" THEN IF WHSE$>ENDWHSE$ THEN GOTO 4000
1220 IF BEGPROD$<>"" THEN IF PRODUCT$<BEGPROD$ THEN GOTO 1300
1230 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 1350
1240 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 1400
1250 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 1450
1260 LET X$=WHSE$+" "+PRODUCT$+" "+ITEM$(1,P[0])
1290 GOTO 1500
1300 REM " --- Skip to beginning product for this warehouse"
1310 READ (IVM03_DEV,KEY=K$(1,5)+BEGPROD$,DOM=3900)
1340 GOTO 3900
1350 REM " --- Skip to next warehouse"
1360 READ (IVM03_DEV,KEY=K$(1,5)+$FF$,DOM=3900)
1390 GOTO 3900
1400 REM " --- Skip to beginning item"
1410 READ (IVM03_DEV,KEY=K$(1,6+P)+BEGITEM$,DIR=0,DOM=3900)
1440 GOTO 3900
1450 REM " --- Skip to next product"
1460 READ (IVM03_DEV,KEY=K$(1,6+P)+$FF$,DOM=3900)
1490 GOTO 3900
1500 REM " --- Level breaks?"
1510 PRINT @(COLUMN,11),X$,
1520 IF LEVEL$="W" THEN IF WHSE$<>T0$ THEN GOSUB 6000
1530 IF PRODUCT$<>T1$ THEN GOSUB 6200
1540 READ (IVM03_DEV)
2000 REM " --- Retrieve item"
2010 DIM ITEM$[2],WHSE$[2],W[20]
2020 LET A0$(1)=N0$+ITEM$
2030 FIND (IVM01_DEV,KEY=A0$,DOM=3900)IOL=IVM01A
2040 IF TYPE$<>"" THEN IF A2$(53,3)<>TYPE$ THEN GOTO 3900
2050 LET ACTION$="A",ITEM$[0]=N0$,ITEM$[2]=ITEM$
2060 IF LEVEL$="W" THEN LET ITEM$[1]=WHSE$,ACTION$=""
2070 CALL "IVC.WA",ACTION$,FILES[ALL],ITEM$[ALL],WHSE$[ALL],W[ALL],VALUE,STATUS
3000 REM " --- Print detail line"
3010 LET X$="",LOCATION$="",COST$="",AVAILABLE=W[0]-W[2],NEEDED=1+SPLIT
3020 IF H9$<>"" THEN LET NEEDED=NEEDED+2
3030 IF LEVEL$="W" THEN LET LOCATION$=WHSE$[1](1,10),COST$=STR(W[11]:M3$)
3040 IF SPLIT=0 THEN LET X$=FNITEM$(A1$,P[3],P[4],P[5])
3045 IF L+NEEDED>L9 THEN GOSUB 5000
3050 IF H9$<>"" THEN GOSUB 5200
3060 PRINT (7)@(O[0]),A0$(3),@(O[1]),X$,@(O[2]),LOCATION$,@(O[3]),A2$(4,2),@(O[4]),W[0]:M2$,@(O[5]),W[2]:M2$,@(O[6]),AVAILABLE:M2$,@(O[7]),W[1]:M2$,@(O[8]),COST$,@(O[9]),FNMASK$(VALUE,M1$)
3065 LET L=L+1+SPLIT
3070 IF SPLIT=0 THEN GOTO 3100
3080 LET X$=FNITEM$(A1$,P[3],P[4],P[5])
3090 PRINT (7)@(O[0]+3),X$
3100 REM " --- Accumulate totals"
3110 LET PRODUCT=PRODUCT+VALUE,WAREHOUSE=WAREHOUSE+VALUE,REPORT=REPORT+VALUE
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4010 LET DONE=1
4020 IF LEVEL$="W" THEN GOSUB 6000
4030 IF LEVEL$="I" THEN GOSUB 6200
4040 LET TOTAL$="Report",TOTAL=REPORT
4050 GOSUB 6900
4090 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5090 RETURN
5200 REM " --- Product subheading"
5210 IF L+2>L9 THEN GOSUB 5000
5220 PRINT (7)H9$
5230 PRINT (7)""
5240 LET L=L+2,H9$=""
5290 RETURN
5800 REM " --- Initialize HEADINGS$"
5810 DIM H1$(WIDTH),H2$(WIDTH),H6$(WIDTH)
5815 IF LEVEL$="I" THEN LET HEADINGS$[1]=HEADINGS$[1]+" By Item"
5820 IF LEVEL$="W" THEN LET HEADINGS$[1]=HEADINGS$[1]+" By Warehouse"
5825 LET X1$="First",X2$="First",X2=5
5830 IF BEGITEM$<>"" THEN LET X1$=BEGITEM$
5840 IF BEGPROD$<>"" THEN LET X2$=BEGPROD$,X2=3
5850 IF ENDPROD$="" THEN IF X2=3 THEN LET X2=4
5860 LET H1$(1)="From Item: "+X1$,H1$(WIDTH-X2-13)="From Product: "+X2$
5870 LET X1$="Last",X2$="Last",X3$="All Item Types"
5880 IF ENDITEM$<>"" THEN LET X1$=ENDITEM$
5890 IF ENDPROD$<>"" THEN LET X2$=ENDPROD$
5900 IF TYPE$<>"" THEN LET X3$="Item Type "+TYPE$
5910 LET H2$(1)="  To Item: "+X1$,H2$(FNC(X3$,WIDTH))=X3$
5920 LET H2$(WIDTH-X2-13)="  To Product: "+X2$
5930 LET H6$(O[0]+1)="Item",H6$(O[1]+1)="Description"
5940 IF LEVEL$="W" THEN LET H6$(O[2]+1)="Location"
5950 LET H6$(O[3]+1)="UM",H6$(O[4]+M2-7)="On Hand",H6$(O[5]+M2-9)="Committed"
5960 LET H6$(O[6]+M2-9)="Available",H6$(O[7]+M2-8)="On Order"
5970 IF LEVEL$="W" THEN LET H6$(O[8]+M3-9)="Unit Cost"
5975 LET H6$(O[9]+M1-11)="Total Value"
5980 LET HEADINGS$[3]=H1$,HEADINGS$[4]=H2$,HEADINGS$[6]=H6$
5990 RETURN
6000 REM " --- Warehouse Break"
6010 IF T0$="" THEN GOTO 6100
6020 GOSUB 6200
6030 LET TOTAL$="Warehouse "+T0$,TOTAL=WAREHOUSE
6040 GOSUB 6900
6100 IF DONE THEN GOTO 6190
6110 DIM X0$(32)
6120 LET T0$=WHSE$,X0$(6,24)="(Not on File)",L=L9+1,WAREHOUSE=0
6130 FIND (IVM10_DEV,KEY=N0$+"C"+T0$,DOM=6140)IOL=IVM10C
6140 LET X$="Warehouse "+T0$+" "+FNP$(X0$(6,24))
6150 LET HEADINGS$[3]=H1$,HEADINGS$[3](FNC(X$,WIDTH),LEN(X$))=X$
6190 RETURN
6200 REM " --- Product break"
6210 IF T1$="" THEN GOTO 6300
6220 LET TOTAL$="Product "+T1$,TOTAL=PRODUCT
6230 GOSUB 6900
6300 IF DONE THEN GOTO 6390
6310 DIM X0$(32)
6320 LET T1$=PRODUCT$,X0$(7,20)="(Not on File)",PRODUCT=0
6330 FIND (IVM10_DEV,KEY=N0$+"A"+T1$,DOM=6340)IOL=IVM10A
6340 LET H9$="Product Type "+T1$+" "+X0$(7,20)
6390 RETURN
6900 REM " --- Print total line"
6910 IF L+2>L9 THEN GOSUB 5000
6920 LET L=L+2,TOTAL$="Total For "+FNP$(TOTAL$)
6930 PRINT (7)""
6940 PRINT (7)@(O[9]-LEN(TOTAL$)),TOTAL$,@(O[9]),FNMASK$(TOTAL,M1$)
6990 RETURN
8000 REM " --- Functions"
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8400 REM " --- Numeric Mask with Overflow"
8410 DEF FNMASK$(Q,Q1$)
8420 LET Q2$=STR(Q:Q1$)
8430 IF LEN(Q2$)>LEN(Q1$) THEN LET Q2$=FILL(LEN(Q1$),"*")
8440 RETURN Q2$
8445 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END