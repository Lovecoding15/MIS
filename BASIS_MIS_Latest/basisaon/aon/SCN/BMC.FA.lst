0010 REM "BMC - Phantom Blow-through for Inventory Production Register
0020 REM "Program BMC.FA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "20Jan99 Caj: Clear the IVM-02 variables from the previous item cuz displayed wrong cost when Item wasn't set up in selected whse. (1795)
0040 REM 
0075 SETESC 9000
0080 SETERR 9000
0090 ENTER CHANNEL[ALL],INFO$[ALL],INFO[ALL],HEADINGS$[ALL],PARENT$
0100 REM " --- Open/Lock Files
0135 REM " --- Assign Channel Info
0140 LET BMM01_DEV=CHANNEL[0],BMM03_DEV=CHANNEL[1],BMM05_DEV=CHANNEL[2]
0145 LET BMM08_DEV=CHANNEL[3],IVM01_DEV=CHANNEL[4],IVM02_DEV=CHANNEL[5]
0150 LET PRINTER_DEV=CHANNEL[6],SYS01_DEV=CHANNEL[7],GLM01_DEV=CHANNEL[8]
0155 LET GLW11_DEV=CHANNEL[9],ARM10_DEV=CHANNEL[10],GLT05_DEV=CHANNEL[11]
0160 LET IVM04_DEV=CHANNEL[12],IVW04_DEV=CHANNEL[13],IVW05_DEV=CHANNEL[14]
0162 LET BMM02_DEV=CHANNEL[15]
0165 LET ITEM$=INFO$[0],REF1$=INFO$[1],REF2$=INFO$[2],AP$=INFO$[3],AR_DIST$=INFO$[4]
0170 LET WHSE$=INFO$[6],PDATE$=INFO$[7],UPDATE$=INFO$[8],GL$=INFO$[9]
0175 LET T1$=INFO$[10],IVACCT$=INFO$[11]; REM "O2$=INFO$[5]
0180 LET QUANT=INFO[0],HEADINGS=INFO[3],LEVEL=INFO[9],H=INFO[10]
0185 LET GLSTATUS=INFO[12],YIELD=INFO[13],VALUE=INFO[14]
0190 REM "L=INFO(1), L9=INFO(2), SHORT=INFO(4), O1=INFO(5),  U0=INFO(7)
0195 REM "U1=INFO(8), STATUS=INFO(11)
0200 REM " --- IOLists
0210 ARM10D: IOLIST UU$,UX$(1)
0220 BMM01A: IOLIST L0$,L1$,L2$,L[ALL]
0230 BMM02A: IOLIST S0$,S1$,S2$,S[ALL]
0240 BMM03A: IOLIST K1$,K2$,K[ALL]
0250 BMM05A: IOLIST SUB0$,SUB1$,SUB2$,SUB3$,SUB4$,SUB[ALL]
0260 BMM08A: IOLIST X1$(1),X[ALL]
0270 IVM01A: IOLIST B0$,B1$(1),B2$,B3$,B4$,B5$,B6$
0280 IVM02A: IOLIST C0$,C1$(1),C2$,C[ALL]
0290 IVM02A1: IOLIST *,*,*,JUNK[ALL],UNITCOST
0300 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0310 BMS01A: IOLIST R0$(1),R1$
0320 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0330 IVS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0400 REM " --- Parameters
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="IV",N3$=F5$
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0432 DIM R0$(36)
0435 FIND (SYS01_DEV,KEY=N0$+"BM00",DOM=9800)IOL=BMS01A
0440 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0450 DIM P[4],G[4],DESC[3]
0455 FOR X=0 TO 4
0460 LET G[X]=NUM(G2$(X*2+1,2),ERR=0465)
0465 NEXT X
0470 LET G[2]=FNYY_YEAR(G2$(5,2))
0475 FOR X=1 TO 3
0480 LET DESC[X]=NUM(P2$((X-1)*2+9,2))
0485 NEXT X
0490 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P2$(3,2)),P[2]=NUM(P2$(5,2)),P[3]=NUM(P2$(7,2))
0500 REM " --- Init Data
0505 PRECISION NUM(P2$(5,1))
0510 LET H0=132,O1$=""
0520 LET WHEN$=F0$(7,3),CLOCK$=""
0530 DIM DASHES$(132,"-")
0540 DIM C[20],S[10],K[11],L[11],SUB[9],B1$(60),C1$(64)
0545 LET ERRORS=0
0550 CALL "SYC.RM",M1$,M1,6,15
0552 CALL "SYC.RM",M2$,M2,10,15
0554 CALL "SYC.RM",M3$,M3,5,10
0580 LET M0=P[0],UNITS=0
0590 IF M0<6 THEN LET M0=6
0800 REM " --- Options
0810 LET U0$=R0$(7,G[4])
1100 REM " --- Heading Read
1290 LET REF3$="Prod Entry"
1300 REM " --- Get Cost Info
1310 LET I0$=ITEM$
1320 GOSUB 6400
1330 IF P3$(8,1)="S" THEN GOTO 1400
1335 DIM CHANN[9]
1340 LET CHANN[0]=BMM01_DEV,CHANN[1]=BMM02_DEV,CHANN[2]=BMM03_DEV
1345 LET CHANN[3]=BMM05_DEV,CHANN[4]=BMM08_DEV,CHANN[5]=IVM02_DEV
1350 LET CHANN[6]=IVM04_DEV,CHANN[7]=IVW04_DEV,CHANN[8]=IVW05_DEV
1353 LET CHANN[9]=SYS01_DEV
1355 LET KM02$=KEY(BMM02_DEV,END=1365); REM "Save ptr
1360 GOTO 1375
1365 READ (BMM02_DEV,KEY="",DOM=1370); REM "On EOF reset ptr to beg of file
1370 GOTO 1355
1375 CALL "BMC.EA",ITEM$,CHANN[ALL],1,PDATE$,N0$,AP$,"Y",1,MAT_COST,LAB_COST,OH_COST,SUB_COST,1,1,"Y",WHSE$,EA_STATUS
1380 READ (BMM02_DEV,KEY=KM02$); REM "Replace ptr
1400 REM " --- Additional Reads
1410 DIM L[11]
1420 READ (BMM01_DEV,KEY=N0$+ITEM$,DOM=1430)IOL=BMM01A
1430 IF YIELD=0 THEN LET YIELD=100
1500 REM " --- Print Phantom
1520 IF INFO[1]+6>INFO[2] THEN GOSUB 5000
1530 PRINT (PRINTER_DEV)@(9),DASHES$(1,123),'LF',@(9),"Phantom Bill"
1540 LET U0$=B6$(1,G[4])
1550 IF LEVEL=1 THEN PRINT (PRINTER_DEV)@(9),"*",
1560 PRINT (PRINTER_DEV)@(11),ITEM$
1570 PRINT (PRINTER_DEV)@(11),B1$(1,30),@(34+M3),QUANT:M2$
1580 LET INFO[1]=INFO[1]+4
1600 REM " --- Component Items
1610 DIM C[20]
1620 LET D0$=B0$
1630 IF UPDATE$="Y" THEN GOSUB 2100
1640 READ (BMM02_DEV,KEY=B0$,DOM=1650)
1650 LET K$=KEY(BMM02_DEV,END=1980)
1660 IF K$(1,2)<>N0$ THEN GOTO 1980
1670 IF K$(3,20)<>D0$(3,20) THEN GOTO 1980
1680 READ (BMM02_DEV)IOL=BMM02A
1690 IF S2$(4,1)="M" THEN GOTO 1650
1700 IF S2$(5,3)<>"   " THEN IF PDATE$<S2$(5,3) THEN GOTO 1650
1710 IF S2$(8,3)<>"   " THEN IF PDATE$>=S2$(8,3) THEN GOTO 1650
1720 FIND (BMM01_DEV,KEY=N0$+S1$,DOM=1770)IOL=BMM01A
1730 IF L2$(40,1)<>"Y" THEN GOTO 1770
1740 GOSUB 6800
1750 READ (BMM02_DEV,KEY=K$)
1760 GOTO 1650
1770 LET O1$="",I0$=S1$
1780 GOSUB 6400
1790 LET U1$=B6$(1,G[4])
1795 DIM C[20]
1800 FIND (IVM02_DEV,KEY=N0$+WHSE$+S1$,DOM=1820)IOL=IVM02A
1810 GOTO 1840
1820 LET O1$="** Missing Warehouse Record **",INFO[5]=1
1830 GOTO 1900
1840 GOSUB 2200
1900 REM " --- Print Components
1910 IF INFO[1]+2>INFO[2] THEN GOSUB 5000
1920 LET I0$=S1$; GOSUB 6400
1925 PRINT (PRINTER_DEV)@(14),S1$," ",O1$
1930 IF S[3]=0 THEN LET S[3]=1
1935 PRINT (PRINTER_DEV)@(14),B1$(1,30),@(132-4*M2),C[0]-C[2]:M2$,FNQTY(S[0],S[1],S[3],YIELD,S[4])*QUANT:M2$,
1940 IF C[0]-C[2]<FNQTY(S[0],S[1],S[3],YIELD,S[4])*QUANT THEN PRINT (7)@(132-2*M2),ABS(C[0]-C[2]-FNQTY(S[0],S[1],S[3],YIELD,S[4])*QUANT):M2$,; LET INFO[4]=INFO[4]+1
1945 PRINT (PRINTER_DEV)@(132-M2),C[1]:M2$
1950 LET INFO[1]=INFO[1]+2
1960 GOTO 1650
1980 GOSUB 6500
1985 IF AP$="Y" THEN GOSUB 5500
1990 GOTO 4000
2100 REM " --- Dist Code
2110 IF AR_DIST$="N" THEN GOTO 2190
2120 READ (IVM02_DEV,KEY=N0$+WHSE$+ITEM$,DOM=2190)IOL=IVM02A
2125 DIM UX$(100)
2130 FIND (ARM10_DEV,KEY=N0$+"D"+C1$(13,2),DOM=2140)IOL=ARM10D
2140 LET U0$=UX$(6*G[4]+1,G[4])
2190 RETURN 
2200 REM " --- Distribution
2220 IF AR_DIST$="N" THEN GOTO 2300
2225 DIM UX$(100,"0")
2230 FIND (ARM10_DEV,KEY=N0$+"D"+C1$(13,2),DOM=2240)IOL=ARM10D
2240 LET U1$=UX$(6*G[4]+1,G[4])
2300 REM " --- Update G/L
2310 IF UPDATE$="N" THEN LET U0$=R0$(7,G[4]) ELSE LET U0$=IVACCT$
2320 LET GLDATE$=PDATE$,ACCOUNT$=U0$,AMOUNT=UNITCOST*FNQTY(S[0],S[1],S[3],YIELD,S[4])*QUANT,MEMO$="Item "+CVS(PARENT$,2)
2330 PRECISION 2
2335 LET AMOUNT=AMOUNT*1,VALUE=VALUE+AMOUNT
2340 GOSUB GLRECAP
2350 LET GLDATE$=PDATE$,ACCOUNT$=U1$,AMOUNT=(-1)*AMOUNT,MEMO$="Item "+I0$
2360 GOSUB GLRECAP
2380 PRECISION NUM(P2$(5,1))
2390 RETURN 
4000 REM " --- Totals
4090 GOTO 9900
5000 REM " --- Heading
5010 LET INFO[1]=HEADINGS
5030 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,H,H0,WHEN$,CLOCK$,STATUS
5040 IF STATUS>0 THEN LET INFO[11]=STATUS; EXITTO 9900
5060 IF T9$<>"E" THEN GOSUB 5200
5110 PRINT (PRINTER_DEV)@(0),"Ref #",@(8),"Main Bill Number",@(34+M3-5),"Cost",@(34+M3+M2-4),"Qty",@(34+M3+M2+M1-6),"Total",
5130 PRINT (PRINTER_DEV)@(132-3*M2-10),"Available",@(132-2*M2-9),"Required",@(132-M2-9),"Shortage",@(132-9),"On-Order",'LF'
5180 PRINT (PRINTER_DEV)@(0),REF2$,
5185 LET INFO[1]=INFO[1]+2
5190 RETURN 
5200 REM " --- Date Heading
5220 PRINT (PRINTER_DEV)@(0),"Production Date: ",FNB$(T1$)
5230 IF GLSTATUS>0 THEN CALL "GLC.GA",7,T1$,GLSTATUS,L,ERRORS,STATUS
5240 PRINT (PRINTER_DEV)""
5250 LET INFO[1]=INFO[1]+2
5290 RETURN 
5500 REM " --- Subcontracts
5505 DIM SUB[9]
5510 READ (BMM05_DEV,KEY=N0$+ITEM$,DOM=5520)
5520 LET K1$=KEY(BMM05_DEV,END=5690)
5530 IF K1$(1,22)<>N0$+ITEM$ THEN GOTO 5690
5540 READ (BMM05_DEV)IOL=BMM05A
5550 IF SUB2$(1,3)<>"   " THEN IF PDATE$<SUB2$(1,3) THEN GOTO 5520
5560 IF SUB2$(4,3)<>"   " THEN IF PDATE$>=SUB2$(4,3) THEN GOTO 5520
5570 IF SUB1$(1,1)<>"S" THEN GOTO 5520
5580 IF UPDATE$="N" THEN LET U0$=R0$(7,G[4]) ELSE LET U0$=IVACCT$
5590 IF SUB[3]=0 THEN LET SUB[3]=1
5600 LET A0=QUANT*SUB[2]*FNSUB(SUB[0],SUB[1],SUB[3])
5610 LET GLDATE$=PDATE$,ACCOUNT$=U0$,AMOUNT=A0,VALUE=VALUE+AMOUNT,MEMO$="Item "+CVS(PARENT$,2)+" "+SUB1$(10)
5620 GOSUB GLRECAP
5630 LET ACCOUNT$=R0$(17,G[4]),AMOUNT=-A0
5640 GOSUB GLRECAP
5685 GOTO 5520
5690 RETURN 
6400 REM " --- Item
6410 LET UNITCOST=0
6420 DIM B1$(60),B6$(50),JUNK[10]
6440 READ (IVM01_DEV,KEY=N0$+I0$,DOM=6460)IOL=IVM01A
6460 LET B1$=FNITEM$(B1$,DESC[1],DESC[2],DESC[3]),B1$=B1$+FILL(62-LEN(B1$))
6470 READ (IVM02_DEV,KEY=N0$+WHSE$+I0$,DOM=6490)IOL=IVM02A1
6490 RETURN 
6500 REM " --- Operation
6510 DIM X1$(50),X[13],K[11],L[11]
6515 READ (BMM01_DEV,KEY=N0$+ITEM$,DOM=6520)IOL=BMM01A
6520 READ (BMM03_DEV,KEY=N0$+ITEM$,DOM=6530)
6530 LET K1$=KEY(BMM03_DEV,END=6690)
6540 IF K1$(1,22)<>N0$+ITEM$ THEN GOTO 6690
6550 READ (BMM03_DEV)IOL=BMM03A
6552 IF K2$(65,3)<>"   " THEN IF PDATE$<K2$(65,3) THEN GOTO 6530
6553 IF K2$(68,3)<>"   " THEN IF PDATE$>=K2$(68,3) THEN GOTO 6530
6555 IF K2$(4,1)="M" THEN GOTO 6530
6560 FIND (BMM08_DEV,KEY=K1$(1,2)+K2$(1,3),DOM=6580)IOL=BMM08A
6570 GOTO 6585
6580 LET INFO$[5]=INFO$[5]+"** Missing Operation Code In Bill Number "+K1$(3,P[0])+" Sequence "+K1$(23,3)+" **"+'LF'; GOTO 6530
6585 IF L[5]=0 THEN LET L[5]=1
6590 IF QUANT<>0 THEN LET A0=FNOP2(QUANT,K[0],X[0],K[1],YIELD,K[4]) ELSE LET A0=0
6600 LET A1=A0*X[2]
6610 REM " --- Direct Labor
6615 PRECISION 2
6617 LET A0=A0*1,A1=A1*1
6620 LET GLDATE$=PDATE$,ACCOUNT$=X1$(31,G[4]),AMOUNT=-A0,MEMO$="Item "+CVS(PARENT$,2)+" "+X1$(6,20)
6630 GOSUB GLRECAP
6632 IF UPDATE$="N" THEN LET U0$=R0$(7,G[4]) ELSE LET U0$=IVACCT$
6634 LET GLDATE$=PDATE$,ACCOUNT$=U0$,AMOUNT=A0,VALUE=VALUE+AMOUNT
6636 GOSUB GLRECAP
6640 REM " --- Overhead
6650 LET GLDATE$=PDATE$,ACCOUNT$=X1$(41,G[4]),AMOUNT=-A1
6660 GOSUB GLRECAP
6665 IF UPDATE$="N" THEN LET U0$=R0$(7,G[4]) ELSE LET U0$=IVACCT$
6670 LET GLDATE$=PDATE$,ACCOUNT$=U0$,AMOUNT=A1,VALUE=VALUE+AMOUNT
6680 GOSUB GLRECAP
6682 PRECISION NUM(P2$(5,1))
6685 GOTO 6530
6690 RETURN 
6800 REM " --- Explode Phantoms
6810 LET INFO$[0]=S1$,INFO[0]=QUANT*S[0],INFO[9]=LEVEL+1,INFO[10]=H,INFO[13]=YIELD*L[4]/100
6820 CALL "BMC.FA",CHANNEL[ALL],INFO$[ALL],INFO[ALL],HEADINGS$[ALL],PARENT$
6830 IF INFO[11]>0 THEN EXITTO 9900
6840 LET INFO[9]=LEVEL,H=INFO[10],INFO[13]=YIELD
6890 RETURN 
6900 REM " --- Standard G/L Recap Routine"
6910 GLRECAP: 
6920 IF GL$<>"Y" THEN GOTO 6990
6950 CALL "GLC.AA",GLM01_DEV,GLW11_DEV,GLT05_DEV,ACCOUNT$,GLDATE$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8075 DEF FNOP2(Q1,Q2,Q3,Q4,Q5,Q6)=Q1*100*(Q2*Q3/Q4)/Q5+SGN(Q1)*Q6*Q3
8080 DEF FNP$(Q$)=CVS(Q$,2)
8085 DEF FNQTY(Q1,Q2,Q3,Q4,Q5)=10000*Q1*Q2/(Q3*Q4*(100-Q5))
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8095 DEF FNSUB(Q1,Q2,Q3)=Q1*Q2/Q3
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9205 SETESC 9000
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 REM " --- Exit from program"
9950 LET INFO[10]=H,INFO[14]=VALUE
9990 EXIT 
9999 END
