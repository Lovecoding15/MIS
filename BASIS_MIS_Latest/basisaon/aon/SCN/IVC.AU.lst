0010 REM "IVC - Calculate Actual & Estimated Annual Usage"
0020 REM "Program IVC.AU"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "26Aug96 Caj: Don't duplicate processing of warehouses (940)
0040 REM 
0041 REM "ACTION$    : Action to perform (input)"
0042 REM "             I = Calculate Annual Usage (all warehouses)"
0043 REM "             W = Calculate Annual Usage (single warehouse)"
0050 REM "CHANNELS[N]: Channel Numbers (input)"
0051 REM "              [1] = IVM-01"
0052 REM "              [2] = IVM-02"
0053 REM "              [3] = IVM-03"
0055 REM "             [12] = IVM-12"
0060 REM "ITEM$[n]   : Inventory Item Information (input)"
0061 REM "             [0]  = Firm ID"
0062 REM "             [1]  = Warehouse ID"
0063 REM "             [2]  = Inventory Item Number"
0064 REM "FACTORS[n] : ABC Factors (input)"
0065 REM "DAY_OF_MTH : Current day of the month (input)"
0066 REM "BASE_PERYR$: Period + Year To Base Usage On (input)"
0067 REM "CUR_PERYR$ : Current Inventory Period + Year (input)"
0068 REM "NUMPERIODS : Number of periods in fiscal year (input)"
0069 REM "PLACES     : Inventory precision (input)"
0070 REM "ACTUAL     : Actual Annual Usage (returned)"
0071 REM "ESTIMATED  : Estimated Annual Usage (returned)"
0072 REM "FLAG$      : *=Not enough history to return ACTUAL (returned)
0075 REM "STATUS     : 0=No error (returned)"
0080 REM 
0085 SETERR 9000
0087 SETESC 9000
0090 ENTER ACTION$,CHANNELS[ALL],ITEM$[ALL],FACTORS[ALL],DAY_OF_MTH,BASE_PERYR$,CUR_PERYR$,NUMPERIODS,PLACES,ACTUAL,ESTIMATED,FLAG$,STATUS
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$,A1$,A2$
0220 IVM02A: IOLIST B0$,B1$,B2$,B[ALL]
0240 IVM12A: IOLIST W0$,W1$,W2$,W[ALL]
0500 REM " --- Initializations"
0505 PRECISION PLACES
0510 DIM B[20],W[12],PERIODS$[13]
0540 LET IVM01_DEV=CHANNELS[1],IVM02_DEV=CHANNELS[2],IVM03_DEV=CHANNELS[3]
0545 LET IVM12_DEV=CHANNELS[12],FLAG$="",STATUS=1
0550 LET PERIODS$[1]=BASE_PERYR$(3,2)+BASE_PERYR$(1,2),FLAG$=""
0555 LET P=NUM(BASE_PERYR$(1,2)),Y$=BASE_PERYR$(3,2),Y=FNYY_YEAR(Y$)
0560 FOR X=2 TO NUMPERIODS
0565 LET P=P-1
0570 IF P=0 THEN LET P=NUMPERIODS,Y=Y-1,Y$=FNYEAR_YY21$(Y)
0575 LET PERIODS$[X]=Y$+STR(P:"00")
0580 NEXT X
0585 LET N0$=ITEM$[0],WHSE$=ITEM$[1],ITEM_NO$=ITEM$[2],ACTUAL=0,ESTIMATED=0
0590 LET FIRST$=N0$+WHSE$+ITEM_NO$,CURRENT$=CUR_PERYR$(3,2)+CUR_PERYR$(1,2)
0800 REM " --- Retrieve Item"
0810 FIND (IVM01_DEV,KEY=N0$+ITEM_NO$,DOM=9900)IOL=IVM01A
0870 LET X$=ITEM$[0]+"G"+ITEM$[2],WAREHOUSES$=ITEM$[1]
0880 IF POS("I"=ACTION$)=0 THEN GOTO 1000
0890 READ (IVM03_DEV,KEY=X$,DOM=0900)
0900 REM " --- Read next warehouse for item"
0910 LET K$=KEY(IVM03_DEV,END=1000)
0920 IF POS(X$=K$)<>1 THEN GOTO 1000
0930 READ (IVM03_DEV)
0940 IF POS(K$(24,2)=WAREHOUSES$)=0 THEN LET WAREHOUSES$=WAREHOUSES$+K$(24,2)
0970 IF POS("I"=ACTION$)=0 THEN GOTO 1100
0990 GOTO 0900
1000 REM " --- For all requested warehouses"
1010 IF LEN(WAREHOUSES$)=0 THEN GOTO 9900
1020 FOR WAREHOUSE=1 TO LEN(WAREHOUSES$) STEP 2
1030 LET FIRST$=ITEM$[0]+WAREHOUSES$(WAREHOUSE,2)+ITEM$[2]
1200 REM " --- At Least One Year's Worth Of History?"
1210 READ (IVM12_DEV,KEY=FIRST$,DOM=1220)
1220 LET K$=KEY(IVM12_DEV,END=1300)
1230 IF POS(FIRST$=K$)<>1 THEN GOTO 1300
1240 IF K$(25,4)>PERIODS$[NUMPERIODS] THEN GOTO 1300
1290 GOTO 1400
1300 REM " --- Indicate that actual is not for full year"
1310 LET FLAG$="*"
1400 REM " --- Calculate Estimated/Accumulate Actual For Current Warehouse"
1410 LET CURRENT=0,PRIOR=0
1420 FOR X=1 TO NUMPERIODS
1430 FIND (IVM12_DEV,KEY=FIRST$+PERIODS$[X],DOM=1490)IOL=IVM12A
1440 LET PERIODS=X,USED=(W[3]+W[4])-W[8],ACTUAL=ACTUAL+USED
1450 IF X>1 THEN GOTO 1480
1455 IF PERIODS$[X]=CURRENT$ THEN GOTO 1470
1460 LET CURRENT=USED
1465 GOTO 1490
1470 LET CURRENT=(USED*30.55)/DAY_OF_MTH
1475 GOTO 1490
1480 LET PRIOR=PRIOR+USED
1490 NEXT X
1600 REM " --- Base estimate on available history or full year?"
1610 IF FLAG$="" THEN LET PERIODS=NUMPERIODS
1800 REM " --- Calculate Weighted Usage"
1810 LET ABC$=A2$(25,1)
1820 IF A2$(24,1)<>"W" THEN GOTO 1850
1830 FIND (IVM02_DEV,KEY=FIRST$,DOM=1850)IOL=IVM02A
1840 LET ABC$=B1$(56,1)
1850 IF ABC$<"A" OR ABC$>"Z" THEN LET ABC$="A"
1860 LET FACTOR=FACTORS[POS(ABC$="ABCDEFGHIJKLMNOPQRSTUVWXYZ")-1]
1870 LET CURRENT=CURRENT*FACTOR*.01,PERIODS=MAX(PERIODS,2)
1880 LET WEIGHTED=CURRENT+(PRIOR/(PERIODS-1)*(1-FACTOR*.01))
1890 LET ESTIMATED=ESTIMATED+(WEIGHTED*NUMPERIODS)
3900 REM " --- Loop back for next warehouse xref"
3990 NEXT WAREHOUSE
4000 REM " --- All done"
4010 LET STATUS=0
4090 GOTO 9900
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to calling program"
9950 EXIT 
9999 END
