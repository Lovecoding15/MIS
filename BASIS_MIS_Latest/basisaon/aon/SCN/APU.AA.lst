0010 REM "APU - Invoice Update"
0020 REM "Program APU.AA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.4 - 15Dec97 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "17Nov97 JWK: Purchases for next period post to next year (540,1220,1225,1260,1270)
0032 REM "16Oct98 WGH: Post to prior year when appropriate (470,1260-1265,8110-8140)
0040 REM 
0050 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=16
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0123 LET OPTIONS$[1]="L",OPTIONS$[2]="L"
0125 LET FILES$[1]="APE-01",FILES$[2]="APE-11",FILES$[3]="APM-01"
0130 LET FILES$[4]="APM-02",FILES$[5]="APM-03",FILES$[6]="APM-10"
0135 LET FILES$[7]="SYS-01",FILES$[8]="APT-01",FILES$[9]="APT-11"
0140 LET FILES$[10]="APT-02",FILES$[11]="APT-03"
0145 LET FILES$[12]="GLM-01",FILES$[13]="GLM-11",FILES$[14]="GLM-21"
0150 LET FILES$[15]="GLT-04",FILES$[16]="GLT-05"
0155 LET OPTIONS$[1]="L",OPTIONS$[2]="L"
0160 CALL "SYC.DA",1,1,11,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0180 LET APE01_DEV=CHANNELS[1],APE11_DEV=CHANNELS[2],APM01_DEV=CHANNELS[3]
0185 LET APM02_DEV=CHANNELS[4],APM03_DEV=CHANNELS[5],APM10_DEV=CHANNELS[6]
0190 LET SYS01_DEV=CHANNELS[7],APT01_DEV=CHANNELS[8],APT11_DEV=CHANNELS[9]
0195 LET APT02_DEV=CHANNELS[10],APT03_DEV=CHANNELS[11]
0200 REM " --- IOLists"
0210 APE01A: IOLIST A0$,A[0],A[1],A[2]
0220 APM02A: IOLIST B0$,B1$(1),B2$(1),B[ALL]
0230 APT01A: IOLIST C0$,C[0],C[1],C[2]
0235 APT02A: IOLIST D0$,D[0],D[1]
0240 APT03X: IOLIST APT03_K$
0250 APM10B: IOLIST *,Z0$
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0265 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0270 APS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0280 APM01A: IOLIST S0$,S1$(1)
0290 APM03A: IOLIST S0$,S1$(1)
0310 APE11A: IOLIST W0$,W1$(1),W2$,W[0],W[1]
0330 APT11A: IOLIST C0$,C1$,C[0],C[1],C[2]
0400 REM " --- Parameters"
0405 DIM P[6],G[4],INFO$[20]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0415 LET N0$=F0$(16,2),N1$=F4$,N2$="AP",N3$=F5$
0420 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=APS01A
0425 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0430 FOR X=0 TO 4
0435 LET G[X]=NUM(G2$(X*2+1,2),ERR=0440)
0440 NEXT X
0445 LET G[2]=FNYY_YEAR(G2$(5,2))
0450 LET P[0]=NUM(P2$(1,2)),M0=LEN(M0$)
0460 LET P[5]=NUM(P4$(1,2)),P[6]=FNYY_YEAR(P4$(3,2))
0470 LET PRIOR_YR$=FNYEAR_YY21$(P[6]-1)
0480 CALL "SYC.VA",N2$,INFO$[ALL]
0490 LET GL$=INFO$[9]
0500 REM " --- Init Data"
0530 DIM A[2],B[13],C[2],D[1],W[2],W1$(G[4]+1)
0600 REM " --- Additional File Opens"
0610 IF GL$<>"Y" THEN GOTO 0650
0620 CALL "SYC.DA",1,12,16,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0630 IF STATUS>0 THEN GOTO 9900
0640 LET GLM01_DEV=CHANNELS[12],GLM11_DEV=CHANNELS[13],GLM21_DEV=CHANNELS[14]
0645 LET GLT04_DEV=CHANNELS[15],GLT05_DEV=CHANNELS[16]
0700 REM " --- Background"
0710 PRINT @(0,3),'CE',
0800 REM " --- Run Update?"
0810 LET V4$="Are You Ready To Update The "+N3$
0820 CALL "SYC.YN",0,V4$,0,V$,V3
0830 IF V$<>"YES" THEN GOTO 9900
0900 REM " --- File initializations"
0910 CALL "SYC.NB","Updating",10+M0,COLUMN
0940 REM " --- Disallow 'M'enu option in Error Routine
0950 LET EXIT_CTRL=1
1000 REM " --- Initial Read"
1010 DIM N$(M0)
1020 READ (APE01_DEV,KEY=N0$,DOM=1040)
1100 REM " --- Main Read"
1120 LET K0$=KEY(APE01_DEV,END=4000)
1140 IF POS(N0$=K0$)<>1 THEN GOTO 4000
1160 READ (APE01_DEV)IOL=APE01A
1170 IF A0$(21,2)<>"00" THEN GOTO 3000
1180 LET N$(1)=A0$(5,4)
1185 IF A0$(5,4)<>"TEMP" THEN LET N$(1)=FNF$(A0$(5,P[0]),M0$)
1190 PRINT @(COLUMN,11),N$," ",A0$(11,10),
1200 REM " --- Vendor"
1205 GOSUB 6000
1210 IF A0$(5,4)="TEMP" THEN GOTO 1300
1220 LET B0$=N0$+A0$(5,6)+A0$(3,2),X$=A0$(32,3)
1225 CALL "SYC.PB",N0$,SYS01_DEV,X$,PERIOD$,YEAR$
1230 DIM B1$(24),B2$(G[4],"0"),B[13]
1240 EXTRACT (APM02_DEV,KEY=B0$,DOM=1250)IOL=APM02A
1250 LET B[0]=B[0]+A[0],B[1]=B[1]+A[2],B1$(7,3)=A0$(29,3)
1260 IF YEAR$<=PRIOR_YR$ THEN LET B[3]=B[3]+A[0]
1265 IF YEAR$>PRIOR_YR$ AND YEAR$<=P4$(3,2) THEN LET B[2]=B[2]+A[0]
1270 IF YEAR$>P4$(3,2) THEN LET B[4]=B[4]+A[0]
1290 WRITE (APM02_DEV,KEY=B0$)IOL=APM02A
1300 REM " --- Dist Code"
1310 IF A0$(23,2)=K1$ THEN GOTO 1400
1320 LET K1$=A0$(23,2)
1330 DIM Z0$(4*G[4],"0")
1340 FIND (APM10_DEV,KEY=N0$+"B"+K1$,DOM=1350)IOL=APM10B
1350 LET Z1$=Z0$(3*G[4]+1,G[4]),Z0$=Z0$(1,G[4])
1400 REM " --- Open Invoice"
1410 LET U0=0
1420 EXTRACT (APT01_DEV,KEY=A0$(1,22),DOM=2000)IOL=APT01A
1425 IF LEN(C0$)=67 THEN LET C0$=C0$+"    "
1426 IF C0$(68,1)="M" THEN LET C0$(69,1)="A"
1430 LET C0$(25,7)=A0$(25,7),C0$(35,34)=A0$(35,34)
1435 LET U0=U0+C[0]+A[0]
1490 WRITE (APT01_DEV,KEY=C0$(1,22))IOL=APT01A
1500 REM " --- Find Detail Record"
1510 READ (APT11_DEV,KEY=A0$(1,20),DOM=1520)
1520 LET K$=KEY(APT11_DEV,END=1700)
1540 IF K$(1,20)<>A0$(1,20) THEN GOTO 1700
1560 READ (APT11_DEV)IOL=APT11A
1580 LET C1=NUM(C0$(21,2))
1590 LET U0=U0+C[0]
1600 REM " --- Find Open Record"
1630 IF C1$(1,1)=" " THEN GOTO 1800
1650 GOTO 1520
1700 REM " --- New Record"
1720 LET C0$=A0$(1,22),C0$(21,2)=STR(C1+1:"00"),C0=0
1730 DIM C1$(11),C[2]
1800 REM " --- Update"
1820 LET C1$(1)="A"+A0$(32,3)+A0$(41,7),C[0]=A[0],C[2]=A[2],C[1]=A[1]
1840 WRITE (APT11_DEV,KEY=C0$)IOL=APT11A
1890 GOTO 2100
2000 REM " --- New Invoice"
2010 DIM C[2],C0$(71),C1$(11)
2020 LET C0$(1)=A0$(1,68)
2040 LET C[0]=A[0],C[1]=A[1],C[2]=A[2],U0=U0+C[0]
2060 WRITE (APT01_DEV,KEY=C0$(1,22),DOM=1400)IOL=APT01A
2070 LET APT03_K$=C0$(1,2)+"A"+C0$(3,2)+C0$(5,6)+C0$(29,3)+C0$(11,10)
2075 WRITE (APT03_DEV,KEY=APT03_K$)IOL=APT03X
2080 LET APT03_K$=C0$(1,2)+"B"+C0$(3,2)+C0$(5,6)+C0$(41,10)+C0$(11,10)
2085 WRITE (APT03_DEV,KEY=APT03_K$)IOL=APT03X
2090 LET APT03_K$=C0$(1,2)+"C"+C0$(11,10)+C0$(3,2)+C0$(5,6)
2095 WRITE (APT03_DEV,KEY=APT03_K$)IOL=APT03X
2100 REM " --- Payable/Retension Dist"
2110 IF P3$(4,1)="Y" THEN GOTO 2400
2120 LET ACCOUNT$=Z0$,WHEN$=A0$(32,3),REF1$=VENDNUMB$,REF2$=A0$(11,10)
2130 LET REF3$="",MEMO$=VENDNAME$,AMOUNT=(-A[0])+A[2],UNITS=0
2140 GOSUB GLPOST
2160 IF A[2]=0 THEN GOTO 2300
2180 LET ACCOUNT$=Z1$,AMOUNT=-A[2]
2190 GOSUB GLPOST
2400 REM " --- Detail"
2410 READ (APE11_DEV,KEY=K0$(1,20),DOM=2420)
2420 LET K$=KEY(APE11_DEV,END=3000)
2440 IF K$(1,20)<>A0$(1,20) THEN GOTO 3000
2460 READ (APE11_DEV)IOL=APE11A
2500 REM " --- Invoice Detail"
2510 LET D0$=W0$(1,10)+"I"+W0$(11,10)+W1$(1,G[4])+A0$(32,3)
2520 DIM D[1]
2540 EXTRACT (APT02_DEV,KEY=D0$,DOM=2550)IOL=APT02A
2550 LET D[0]=D[0]+W[0],D[1]=D[1]+W[1]
2560 WRITE (APT02_DEV,KEY=D0$)IOL=APT02A
2700 REM " --- GL Detail"
2710 IF P3$(4,1)="Y" THEN GOTO 2800
2730 LET ACCOUNT$=W1$(1,G[4]),WHEN$=A0$(32,3),AMOUNT=W[0],UNITS=W[1]
2750 LET REF3$="Line "+W0$(21,2)
2790 GOSUB GLPOST
2900 REM " --- Remove Detail"
2920 REMOVE (APE11_DEV,KEY=K$)
2990 GOTO 2420
3000 REM " --- Remove Heading
3020 REMOVE (APE01_DEV,KEY=K0$)
3090 GOTO 1100
4000 REM " --- All done"
4010 IF GL$="Y" THEN CALL "GLC.CA",STATUS
4020 CALL "SYC.BB",STATUS
4090 GOTO 9900
6000 REM " --- Retrieve Vendor"
6010 DIM VENDNUMB$(M0),VENDNAME$(30),S1$(30)
6020 LET VENDNAME$(1)="Unknown Vendor"
6030 IF A0$(5,4)="TEMP" THEN GOTO 6100
6040 LET VENDNUMB$(1)=FNF$(A0$(5,P[0]),M0$)
6050 FIND (APM01_DEV,KEY=N0$+A0$(5,6),DOM=6190)IOL=APM01A
6060 LET VENDNAME$(1)=S1$
6090 GOTO 6190
6100 REM " --- Temporary Vendor"
6110 LET VENDNUMB$(1)=A0$(5,4)
6120 FIND (APM03_DEV,KEY=A0$(1,4)+A0$(11,10),DOM=6190)IOL=APM03A
6130 LET VENDNAME$(1)=S1$
6190 RETURN 
6900 REM " --- Standard G/L Posting Routine"
6910 GLPOST: 
6920 IF GL$<>"Y" THEN GOTO 6990
6950 CALL "GLC.AA",GLM01_DEV,GLT04_DEV,GLT05_DEV,ACCOUNT$,WHEN$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN 
8000 REM " --- Functions"
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
