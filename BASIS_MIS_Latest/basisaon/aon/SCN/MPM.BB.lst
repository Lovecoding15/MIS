0010 REM "MPM - Planned Purchase Inquiry"
0020 REM "Program MPM.BB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "17Sep96 JJD: Display correct ribbon info. (1510)"
0032 REM "09Oct96 JJD: use correct Stocking Level information (item/whse).(1015,1020,1510)"
0033 REM "14Oct96 JJD: Display correct "Projected Available","Planned Receipt","Extended Cost" information (1510,2175,2180,2185)"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLIST's"
0240 APM01A: IOLIST W0$(1),W1$(1)
0290 IVM05A: IOLIST U0$(1),U1$(1),U2$,U[ALL]
0500 REM " --- Initializations"
0505 PRECISION IVS01_PRECISION
0510 DIM TITLES$[LINES]
0550 LET TITLES$[0]=" Gross Required",TITLES$[1]="  Sched Receipt"
0560 LET TITLES$[2]="Projected Avail",TITLES$[3]="   Net Required"
0565 LET TITLES$[4]="Planned Release",TITLES$[5]="Planned Receipt"
0570 LET TITLES$[6]="  Extended Cost",H$=" Purchase Information "
0700 REM " --- Background"
0730 PRINT 'SB',@(FNC(H$,WIDTH),L0),H$,@(0,L0+1),"Stocking Vendor:",@(HR-5),"EOQ:",@(0,L0+2),"Vendor Item Nbr:",@(HR-15),"Avg Mth Usage:",@(0,L0+3),"Last Purch Cost:",@(HR-13),"Qty On Hand:",@(6,L0+4),"Unit Cost:",@(HC-11),"Lead Time:",@(HR-14),"Safety Stock:",'SF',
1000 REM " --- Stocking Vendor"
1010 DIM W0$(8),W1$(30),V$(M0),U0$(28),U1$(6),U[6]
1015 IF C2$(24,1)="I" THEN LET VENDOR$=C2$(12,6),SS=C[5],EOQ=C[6],LT=C[7] ELSE LET VENDOR$=D1$(22,6),SS=D[5],EOQ=D[6],LT=D[7]
1020 LET V$(1)="None",P$="",C$=""
1030 IF FNP$(VENDOR$)="" THEN GOTO 1400
1040 LET V$(1)=FNF$(VENDOR$(1,R[0]),M0$),U0$(1,28)=N0$+VENDOR$+A0$(8)
1050 LET W0$(1)=N0$+VENDOR$,W1$(1)="Unknown Vendor"
1060 FIND (APM01_DEV,KEY=W0$,DOM=1070)IOL=APM01A
1070 FIND (IVM05_DEV,KEY=U0$,DOM=1400)IOL=IVM05A
1080 LET P$=U2$,C$=STR(U[6]:M3$)
1400 REM " --- Format item fields"
1420 GOSUB GET_USAGE
1500 REM " --- Display ribbon info"
1510 PRINT @(17,L0+1),V$," ",W1$,@(17,L0+2),P$,@(17,L0+3),C$,@(17,L0+4),D[11]:M2$,@(HC),STR(LT),@(HR,L0+1),EOQ:M4$,@(HR,L0+2),AVG_USAGE:M4$,@(HR,L0+3),D[0]:M4$,@(HR,L0+4),SS:M4$
2000 REM " --- Build detail"
2010 DIM REQUIRED$[NUMBER],AMOUNTS[NUMBER,LINES],ORDERBY$[NUMBER]
2020 LET REQUIRED$[1]="   Begin",AMOUNTS[1,2]=A[0],N=1
2100 REM 
2110 FOR X=BEGPER TO ENDPER
2120 LET P=X*6,N=N+1
2160 LET ORDERBY$[N]=FNB6$(A1$(X*6+1,6)),REQUIRED$[N]=FNB6$(B2$(X*6+1,6))
2170 LET AMOUNTS[N,0]=A[P+2],AMOUNTS[N,1]=A[P+1]
2175 LET AMOUNTS[N,2]=A[P+6]
2180 LET AMOUNTS[N,3]=A[P+3],AMOUNTS[N,4]=A[P+4],AMOUNTS[N,5]=A[P+5]
2185 LET AMOUNTS[N,6]=AMOUNTS[N,5]*D[11]
2190 NEXT X
2200 REM " --- Detail printing initializations"
2210 LET LAST=0,REQUIRED$[NUMBER]=" Totals "
2220 FOR X=2 TO NUMBER-1
2230 FOR N=0 TO LINES
2240 LET AMOUNTS[NUMBER,N]=AMOUNTS[NUMBER,N]+AMOUNTS[X,N]
2250 NEXT N
2260 NEXT X
2280 LET AMOUNTS[NUMBER,2]=A[P+6]
3000 REM " --- Print detail"
3010 LET FIRST=LAST+1,LAST=FIRST+NUMCOL-1,NEEDED=4+LINES
3020 IF FIRST>NUMBER THEN GOTO 4000
3030 IF LAST>NUMBER THEN LET LAST=NUMBER
3100 REM " --- Required By"
3110 DIM BUFFER$(WIDTH)
3120 LET BUFFER$(POSITION-11)="Required By",N=POSITION
3130 FOR X=FIRST TO LAST
3140 LET BUFFER$(N+M1-9)=REQUIRED$[X],N=N+M1
3150 NEXT X
3190 PRINT @(0,L1),BUFFER$,
3200 REM " --- Amounts"
3210 FOR Y=0 TO LINES
3220 DIM BUFFER$(WIDTH)
3230 LET BUFFER$(POSITION-15)=TITLES$[Y],N=POSITION,MASK$=M2$
3240 IF Y=LINES THEN LET MASK$=M1$
3250 FOR X=FIRST TO LAST
3255 IF X=1 THEN IF Y<>2 THEN GOTO 3265
3260 LET BUFFER$(N)=STR(AMOUNTS[X,Y]:MASK$)
3265 LET N=N+M1
3270 NEXT X
3280 PRINT @(0,L1+Y+1),BUFFER$,
3290 NEXT Y
3300 REM " --- Order By"
3310 DIM BUFFER$(WIDTH)
3320 LET BUFFER$(POSITION-8)="Order By",N=POSITION
3330 FOR X=FIRST TO LAST
3340 LET BUFFER$(N+M1-9)=ORDERBY$[X],N=N+M1
3350 NEXT X
3360 PRINT @(0,L1+2+LINES),BUFFER$,
3900 REM " --- More?"
3910 IF LAST>=NUMBER THEN GOTO 4000
3930 GOSUB 6000
3940 IF V3=4 THEN GOTO 4900
3950 IF V3<>2 THEN GOTO 3000
3960 LET LAST=FIRST-NUMCOL-1
3970 IF LAST<0 THEN LET LAST=0
3990 GOTO 3000
4000 REM " --- All done"
4010 GOSUB 6000
4020 IF V3<>2 THEN GOTO 4900
4030 LET LAST=FIRST-NUMCOL-1
4040 IF LAST<0 THEN LET LAST=0
4090 GOTO 3000
4900 REM 
4910 LET BEGPER=BEGPER+1,ENDPER=ENDPER+1
4990 RUN "MPM.BA"
6000 REM " --- Continue?"
6010 LET V4$="<F2>=Prior Page     <Enter>=Continue:"
6020 IF FIRST=1 THEN LET V4$="<Enter>=Continue:"
6030 LET V0$="S",V1$="C",V2$="",V3$=""
6040 LET V0=1,V1=FNV(V4$),V2=22
6050 GOSUB 7000
6090 RETURN 
6800 REM " --- Determine Product Usage "
6802 GET_USAGE: 
6805 DIM IVCHANS[12],ITEM$[2]
6810 LET ACTION$="W",IVCHANS[1]=IVM01_DEV,IVCHANS[2]=IVM02_DEV
6815 LET IVCHANS[3]=IVM03_DEV,IVCHANS[12]=IVM12_DEV,ITEM$[0]=N0$
6820 LET ITEM$[1]=WHSE$,ITEM$[2]=ITEM$,CUR_PERYR$=CURPER$+CURYR$
6825 LET BASE_PERYR$=CUR_PERYR$
6830 CALL "IVC.AU",ACTION$,IVCHANS[ALL],ITEM$[ALL],FACTORS[ALL],DAY_OF_MONTH,BASE_PERYR$,CUR_PERYR$,TOT_PERS,IVS01_PRECISION,ANNUAL_USAGE,ESTIMATED,CALLFLAG$,STATUS
6835 IF CALLFLAG$="" THEN GOTO 6845
6840 LET ANNUAL_USAGE=ESTIMATED
6845 LET AVG_USAGE=ANNUAL_USAGE/TOT_PERS
6850 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8025 DEF FNB6$(Q1$)=Q1$(3,2)+"/"+Q1$(5,2)+"/"+FNYY21_YY$(Q1$(1,2))
8060 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8080 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
