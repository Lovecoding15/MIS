0010 REM "OPR - Open Order Detail Report"
0020 REM "Program OPR.IA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "12Aug96 WGH: Using IVM-01 Maximum Quantity instead of IVM-02 Unit Cost (110,136-140,165)"
0040 REM 
0050 BEGIN 
0090 SETERR 9000
0095 SETESC 9000
0100 REM " --- Open/Lock Files "
0110 LET FILES=11
0115 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="ARE-03",FILES$[2]="ARE-13",FILES$[3]="ARM-01"
0130 LET FILES$[4]="IVM-01",FILES$[5]="ARE-04",FILES$[6]="ARE-23"
0135 LET FILES$[7]="SYS-01",FILES$[8]="ARM-02",FILES$[9]="IVM-10"
0136 LET FILES$[10]="ARM-10",FILES$[11]="IVM-02"
0140 CALL "SYC.DA",1,1,11,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0145 IF STATUS>0 THEN GOTO 9900
0150 LET ARE03_DEV=CHANNELS[1],ARE13_DEV=CHANNELS[2],ARM01_DEV=CHANNELS[3]
0155 LET IVM01_DEV=CHANNELS[4],ARE04_DEV=CHANNELS[5],ARE23_DEV=CHANNELS[6]
0160 LET SYS01_DEV=CHANNELS[7],ARM02_DEV=CHANNELS[8],IVM10_DEV=CHANNELS[9]
0165 LET ARM10_DEV=CHANNELS[10],IVM02_DEV=CHANNELS[11]
0200 REM " --- IOLISTS"
0240 ARM01A: IOLIST *,X0$
0250 ARM10F: IOLIST X2$
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 ARS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0290 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,I5$,M1$,M2$,M3$,M4$
0400 REM " --- Parameters "
0405 DIM P[1],I[5]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="AR",N4$=F5$
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=ARS01A
0440 FIND (SYS01_DEV,KEY=N0$+"IV00",DOM=9800)IOL=IVS01A
0445 LET I[0]=NUM(I2$(1,2)),I[1]=NUM(I2$(5,1)),I[2]=NUM(I2$(7,2))
0450 LET I[3]=NUM(I2$(9,2)),I[4]=NUM(I2$(11,2)),I[5]=NUM(I2$(13,2))
0490 LET P[0]=NUM(P2$(1,2))
0500 REM " --- Initialize Data "
0510 DIM J0$(10,"0")
0520 LET OPTN$="OQBC",S4$="",NUMBER=2
0550 LET M0=LEN(M0$),M1=LEN(M1$),M2=LEN(M2$),M3=LEN(M3$)
0700 REM " --- Background "
0710 FOR X=4 TO 18 STEP 2
0720 CALL "SYC.WC",1,0,80,0,0,X,0
0730 NEXT X
0750 PRINT 'SB',@(20,3),"Beginning Customer:",@(23,5),"Ending Customer:",@(18,7),"Beginning Order Date:",@(21,9),"Ending Order Date:",@(22,11),"Order Entered By:",@(27,13),"Salesperson:",@(20,15),"Order Print Status:",@(32,17),"Option:",'SF',
1000 REM " --- Beginning Customer "
1010 LET V0$="M",V1$="CE",V2$=S0$,V3$=M0$,V4$="Enter A Valid Customer Number (<F1>=First/<F3>=Lookup)",V0=6,V1=40,V2=3,I0=0
1020 GOSUB 7000
1025 IF V3=4 THEN GOTO 9900
1030 IF V3<>3 THEN GOTO 1040
1032 GOSUB 6000
1034 IF V$="" THEN GOTO 1000
1040 IF V3=1 THEN LET V$=""
1045 IF V$="" THEN PRINT @(V1,V2),"First",'CL',; LET S0$=""; GOTO 1090
1050 LET V$=V$+"000000"; LET V$=V$(1,6)
1060 FIND (ARM01_DEV,KEY=N0$+V$,DOM=1000)IOL=ARM01A
1070 PRINT @(V1,V2),FNF$(V$(1,P[0]),M0$),@(V1+M0+1,V2),X0$(1,30),
1075 LET H4$=FNF$(V$(1,P[0]),M0$)
1080 LET S0$=V$(1,P[0])
1090 GOTO 3900
1200 REM " --- Ending Customer "
1210 LET V0$="M",V1$="CE",V2$=S1$,V3$=M0$,V4$="Enter A Valid Customer Number (<F1>=Last/<F3>=Lookup)",V0=6,V1=40,V2=5
1220 GOSUB 7000
1230 IF V3<>3 THEN GOTO 1240
1232 GOSUB 6000
1234 IF V$="" THEN GOTO 1200
1240 IF V3=1 THEN LET V$=""
1245 IF V$="" THEN PRINT @(V1,V2),"Last",'CL',; LET S1$=""; GOTO 1290
1250 LET V$=V$+"000000"; LET V$=V$(1,6)
1255 IF V$<S0$ THEN GOTO 1200
1260 FIND (ARM01_DEV,KEY=N0$+V$,DOM=1200)IOL=ARM01A
1270 PRINT @(V1,V2),FNF$(V$(1,P[0]),M0$),@(V1+M0+1,V2),X0$(1,30),
1275 LET H5$=FNF$(V$(1,P[0]),M0$)
1280 LET S1$=V$(1,P[0])
1290 GOTO 3900
1400 REM " --- Beginning Order Date "
1420 LET V0$="D",V1$="C",V2$=S2$,V3$="",V4$="<F1>=First",V0=8,V1=40,V2=7
1430 GOSUB 7000
1440 IF V3=1 THEN LET V$=""
1450 IF V$="" THEN PRINT @(V1,V2),'CL',"First"
1460 IF V$<>"" THEN LET H6$=FNB$(V$)
1480 LET S2$=V$
1490 GOTO 3900
1600 REM " --- Ending Order Date "
1620 LET V0$="D",V1$="C",V2$=S3$,V3$="",V4$="<F1>=Last",V0=8,V1=40,V2=9
1630 GOSUB 7000
1640 IF V3=1 THEN LET V$=""
1650 IF V$="" THEN PRINT @(V1,V2),'CL',"Last"
1660 IF V$<>"" THEN LET H7$=FNB$(V$)
1680 LET S3$=V$
1690 GOTO 3900
1800 REM " --- Option "
1810 LET V0$="S",V1$="^C",V2$=S4$,V3$="",V4$="O=Open Orders, Q=Quotes, B=Backorders, C=Credit Held Orders, <F1>=All Orders",V0=4,V1=40,V2=17,X$="",X3$=""
1820 PRINT @(V1,V2),'CL',
1830 GOSUB 7000
1835 IF V3=2 OR V3=4 THEN LET V$=S4$
1840 IF V$="" OR V3=1 THEN LET V$=OPTN$; GOTO 1870
1842 FOR X=1 TO LEN(OPTN$)
1844 IF POS(OPTN$(X,1)=V$)>0 THEN LET X$=X$+OPTN$(X,1)
1846 NEXT X
1848 IF LEN(X$)>0 THEN LET V$=X$ ELSE GOTO 1800
1850 FOR X=1 TO LEN(V$)
1855 IF X=LEN(V$) AND X<>1 THEN LET X3$=X3$+" and " ELSE IF X3$<>"" THEN LET X3$=X3$+", "
1860 IF V$(X,1)="O" THEN LET X3$=X3$+"Open" ELSE IF V$(X,1)="Q" THEN LET X3$=X3$+"Quoted" ELSE IF V$(X,1)="B" THEN LET X3$=X3$+"Backordered" ELSE IF V$(X,1)="C" THEN LET X3$=X3$+"Credit Held" ELSE EXITTO 1800
1865 NEXT X
1870 LET S4$=V$
1875 IF LEN(S4$)<4 THEN LET X3$=X3$+" Orders Only" ELSE LET X3$="All Orders"
1880 IF LEN(X3$)>80-V1-LEN(S4$)-1 THEN LET X$=X3$(1,80-V1-LEN(S4$)-1) ELSE LET X$=X3$
1885 PRINT @(V1,V2),'CL',S4$," ",X$,
1890 GOTO 3900
2000 REM " --- Entered By "
2020 LET V0$="S",V1$="C",V2$=S5$,V3$="",V4$="<F1>=All",V0=3,V1=40,V2=11
2040 GOSUB 7000
2050 IF V3=1 THEN LET V$=""
2060 IF V$="" THEN PRINT @(V1,V2),'CL',"All"
2070 IF V$<>"" THEN LET V$=V$+"   ",V$=V$(1,3),H9$=V$ ELSE LET H9$="All"
2080 LET S5$=V$
2090 GOTO 3900
2100 REM " --- Salesperson "
2120 LET V4$="Enter A Valid Salesperson Code (<F1>=All/<F3>=Lookup)",V0=3,V1=40,V2=13
2125 PRINT @(V1,V2),'CL',
2130 GOSUB 7000
2131 IF V3=1 THEN LET V$=""
2132 IF V3<>3 THEN GOTO 2140
2134 GOSUB 6100
2136 IF V$="" THEN GOTO 2100
2140 IF V$="" THEN PRINT @(V1,V2),"All"; GOTO 2180
2145 PRINT @(V1,V2),V$
2150 LET V$=V$+"   ",V$=V$(1,3)
2160 FIND (ARM10_DEV,KEY=N0$+"F"+V$,DOM=2100)IOL=ARM10F
2170 PRINT @(V1+4,V2),X2$(7,20)
2180 LET S7$=V$
2190 GOTO 3900
2200 REM " --- Printed/Unprinted/All "
2220 LET V0$="S",V1$="^C",V2$="U",V3$="",V4$="Select Order Print Status To Include (P=Printed/U=Unprinted/A=All)",V0=1,V1=40,V2=15
2225 PRINT @(V1,V2),'CL',
2230 GOSUB 7000
2240 IF POS(V$="PUA")=0 THEN GOTO 2200
2250 IF V$="P" THEN PRINT @(V1,V2),"Printed Orders"; LET X1$="Printed "
2260 IF V$="U" THEN PRINT @(V1,V2),"Unprinted Orders"; LET X1$="Unprinted "
2270 IF V$="A" THEN PRINT @(V1,V2),"All Orders"
2280 LET S6$=V$
2290 GOTO 3900
3900 REM " --- New Field "
3910 IF V3=4 THEN GOTO 4000
3920 IF V3<>2 THEN GOTO 3950
3930 IF I0>0 THEN LET I0=I0-1
3940 GOTO 3960
3950 LET I0=I0+1
3960 ON I0 GOTO 1000,1200,1400,1600,2000,2100,2200,1800,4000
4000 REM " --- Correct "
4020 LET V4$="Is The Above Information Correct",V0=1,V1=42+INT(LEN(V4$)/2),V2=22
4025 CALL "SYC.YN",1,V4$,2,V$,V3
4040 IF V3=4 THEN GOTO 9900
4050 ON POS(V$="YN") GOTO 4000,4090,1000
4090 RUN "OPR.IB"
6000 REM " --- Alpha Search "
6010 CALL "SYC.LC",V$
6080 IF V$<>"" THEN PRINT @(V1,V2),FNF$(V$(1,P[0]),M0$),'CL',
6090 RETURN 
6100 REM " --- Salesperson Lookup "
6105 DIM DESCRIPTION$[NUMBER],FIELD[NUMBER],POSITION[NUMBER],LENGTH[NUMBER]
6107 LET DESCRIPTION$[0]="Sales ID",DESCRIPTION$[1]="Salesperson"
6110 LET FIELD[0]=1,POSITION[0]=4,LENGTH[0]=3
6119 LET FIELD[1]=1,POSITION[1]=7,LENGTH[1]=20
6120 LET COLUMN=79-LENGTH[0]-LENGTH[1]-2-NUMBER*4,RECORD$="F"
6125 CALL "SYC.LK",ARM10_DEV,RECORD$,NUMBER,TITLE$,DESCRIPTION$[ALL],FIELD[ALL],POSITION[ALL],LENGTH[ALL],COLUMN,ROW,V$
6190 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions "
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
