0010 REM "ARR - Aging Analysis Report (Input Overlay)"
0020 REM "Program ARR.5A"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "29Jan97 JAL: Prompt disappears when invalid value entered (1420)"
0040 REM 
0050 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=8
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="ARM-01",FILES$[2]="ARM-02",FILES$[3]="ARM-04"
0130 LET FILES$[4]="ARM-06",FILES$[5]="ARM-10",FILES$[6]="ART-01"
0135 LET FILES$[7]="ART-11",FILES$[8]="SYS-01"
0160 CALL "SYC.DA",1,1,8,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0180 LET ARM01_DEV=CHANNELS[1],ARM02_DEV=CHANNELS[2],ARM04_DEV=CHANNELS[3]
0185 LET ARM06_DEV=CHANNELS[4],ARM10_DEV=CHANNELS[5],ART01_DEV=CHANNELS[6]
0190 LET ART11_DEV=CHANNELS[7],SYS01_DEV=CHANNELS[8]
0200 REM " --- IOLists
0240 ARM01A: IOLIST *,X0$
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0290 ARS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0400 REM " --- Parameters
0440 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0450 LET N0$=F0$(16,2),N1$=F4$,N2$="AR",N3$=F5$
0455 FIND (SYS01_DEV,KEY=N0$+"AR00",DOM=9800)IOL=ARS01A
0480 DIM P[2]
0490 LET P[0]=NUM(P2$(1,2))
0500 REM " --- Init Data
0590 LET M0=LEN(M0$),P7$="D",M1=LEN(M1$),M8$="(###) ###-####"
0700 REM " --- Background
0710 FOR X=4 TO 12 STEP 2
0720 CALL "SYC.WC",1,0,80,0,0,X,0
0730 NEXT X
0740 PRINT 'SB',@(26,3),"Report Basis:",@(34,5),"Days:",@(23,7),"Report Sequence:",@(23,9),"Beginning Value:",@(26,11),"Ending Value:",'SF',
1000 REM " --- Report Basis "
1010 LET V0$="S",V1$="CR",V2$=P7$,V3$="DA",V4$="D=Select Based On Days To Pay   A=Select Based On Aging Balances",V0=1,V1=40,V2=3
1020 PRINT @(V1,V2),'CL',
1030 GOSUB 7000
1040 IF V3=4 THEN GOTO 9900
1050 LET P7$=V$
1100 REM " --- Days to Pay "
1110 IF P7$="D" THEN PRINT @(40,3),'CL',"Days To Pay" ELSE PRINT @(40,3),'CL',"Aging Balances",
1120 IF P7$="D" THEN LET V4$="Enter The Minimum Number Of Days To Pay For Report Selection" ELSE LET V4$="Enter <F/C/30/60/90/120> For Minimum Aging Balance Report Selection"
1130 LET V0$="S",V1$="CR",V2$="",V0=4,V1=40,V2=5
1140 GOSUB 7000
1150 IF V3=2 OR V3=4 THEN GOTO 1000
1160 IF P7$="A" AND V$<>"" THEN IF POS(V$(1,1)="FC3691")=0 THEN GOTO 1120
1170 IF P7$="A" THEN IF V$="F" THEN LET P7=0 ELSE IF V$="C" THEN LET P7=1 ELSE IF V$="30" THEN LET P7=2 ELSE IF V$="60" THEN LET P7=3 ELSE IF V$="90" THEN LET P7=4 ELSE IF V$="120" THEN LET P7=5 ELSE GOTO 1120
1180 IF P7$="D" THEN LET P7=NUM(V$,ERR=1120)
1190 IF V$="" THEN LET P7=0; PRINT @(V1,V2),V:"###0",
1200 REM " --- Customer Sequence "
1205 LET V4$="A=List Customers In Alt Sequence   C=List Customers In Customer Number Sequence"
1210 LET V0$="S",V1$="CE",V2$=P8$,V3$="AC",V0=1,V1=40,V2=7
1215 LET FROM_CUST$="",THRU_CUST$=""
1220 IF POS(V2$="AC")=0 THEN LET V2$="C"
1230 GOSUB 7000
1240 IF V3=2 THEN GOTO 1120
1250 LET P8$=V$
1300 REM " --- Beginning Customer "
1310 LET V4$="Enter Beginning Customer Number (<F1>=First/<F3>=Lookup)"
1320 LET V0$="M",V1$="C",V2$=FROM_CUST$,V3$=P1$,V0=P[0],V1=40,V2=9
1330 IF P8$="A" THEN LET V0$="S",V1$="C",V2$=FROM_CUST$,V3$="",V4$="Enter Beginning Alternate Sequence (<F1>=First)",V0=10
1340 GOSUB 7000
1350 ON V3 GOTO 1360,1370,1200,1410,9900
1360 IF V$<>"" THEN GOTO 1400
1370 PRINT @(40,9),"First",'CL'
1380 LET FROM_CUST$=""
1390 GOTO 1520
1400 IF P8$="C" THEN GOTO 1420 ELSE GOTO 1440
1410 CALL "SYC.LC",V$
1420 FIND (ARM01_DEV,KEY=N0$+V$,DOM=1300)IOL=ARM01A
1430 PRINT @(V1,V2),FNF$(V$(1,P[0]),M0$),"  ",X0$(1,30),'CL',
1440 LET FROM_CUST$=V$
1500 REM " ---  Ending Customer "
1510 LET THRU_CUST$=""
1520 LET V0$="M",V1$="C",V3$=M0$,V4$="Enter The Ending Customer Number (<F1>=Last/<F3>=Lookup)",V0=P[0],V1=40,V2=11,V2$=THRU_CUST$
1530 IF P8$="A" THEN LET V0$="S",V1$="C",V2$=THRU_CUST$,V3$="",V4$="Enter Ending Alternate Sequence (<F1>=Last)",V0=10
1540 GOSUB 7000
1550 ON V3 GOTO 1560,1570,1300,1610,9900
1560 IF V$<>"" THEN GOTO 1600
1570 PRINT @(40,11),"Last",'CL'
1580 LET THRU_CUST$=""
1590 GOTO 2900
1600 IF P8$="C" THEN GOTO 1620 ELSE GOTO 1640
1610 CALL "SYC.LC",V$
1620 FIND (ARM01_DEV,KEY=N0$+V$,DOM=1520)IOL=ARM01A
1630 PRINT @(V1,V2),FNF$(V$(1,P[0]),M0$),"  ",X0$(1,30),'CL',
1640 LET THRU_CUST$=V$
1650 IF FROM_CUST$<>"" AND THRU_CUST$<FROM_CUST$ THEN GOTO 1500
2900 REM " --- Build Heading
2910 LET H2$="",H3$=""
2920 LET H2$="Based On "
2930 IF P7$="D" THEN LET H2$=H2$+"Average Days To Pay" ELSE LET H2$=H2$+"Aging Balance"
2940 LET H8$=FROM_CUST$,H9$=THRU_CUST$
2950 IF FROM_CUST$="" THEN LET H8$="First"
2960 IF THRU_CUST$="" THEN LET H9$="Last"
2970 LET H3$="From "+H8$+" To "+H9$
4000 REM " --- Options
4010 LET V0$="Y",V1$="CE",V2$="Y",V3$="",V4$="Is The Above Information Correct (Y/N)?",V0=1,V1=FNV(V4$),V2=22
4020 GOSUB 7000
4030 IF V3=4 THEN GOTO 9900
4040 IF POS(V$="YN")=0 THEN GOTO 4000
4050 IF V$="N" THEN GOTO 1000
4090 RUN "ARR.5B"
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions
8080 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
