0010 REM "IVM - Item Maintenance (Lot/Serial Status)"
0020 REM "Program IVM.MN"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.5 - 01Dec98 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "12Jul96 JAL: Clear any preceding physical inventory date (5010)"
0032 REM "19Aug97 WGH: Use 10-char instead of 7-char for lot/serial location (5030)"
0033 REM "24Aug98 WGH: Allow maintaining Location (2300-3960,4010,4050)
0034 REM "07Jun00 JAL: Correct misspelled prompt (3020)"
0040 REM 
0070 SETERR 9000
0080 SETESC 9000
0090 PRECISION P[1]
0200 REM " --- IOLIST's"
0220 IVM07A: IOLIST B0$(1),B1$(1),B[ALL]
0230 IVM17A: IOLIST C0$(1),C1$,C2$,C[ALL]
0240 APM01A: IOLIST D0$(1),D1$(1)
0300 IVM10C: IOLIST W0$(1)
0500 REM " --- Initializations"
0510 DIM B0$(44),B1$(96),B[12],C0$(48),C[12],D0$(8),D1$(30),W0$(32),O[3]
0550 LET TYPES$="BEGRECBLTSLDISSXFIXFOADJRETEND",TYPES=LEN(TYPES$),INDEX=0
0560 LET LINES=INT(TYPES/3),O[1]=39-M2,O[2]=52-M2,O[3]=78-MAX(MAX(M2,M3),8)
0600 REM " --- Retrieve column titles"
0610 DIM TITLES$[LINES]
0620 FOR X=1 TO TYPES STEP 3
0630 LET V$=TYPES$(X,3)
0640 CALL "IVC.FA",V$,V1$,V2$,STATUS
0650 LET INDEX=INDEX+1,TITLES$[INDEX]=V2$
0660 NEXT X
0700 REM " --- Background"
0710 CALL "SYC.WC",1,1,0,11,13,11,0
0715 CALL "SYC.WC",1,1,0,11,26,11,0
0720 CALL "SYC.WC",1,1,0,11,39,11,0
0725 CALL "SYC.WC",1,1,0,11,52,11,0
0735 CALL "SYC.WC",1,0,80,0,0,7,0
0740 CALL "SYC.WC",1,0,80,0,0,10,0
0745 PRINT 'SB',@(0,6),"Warehouse ID:",@(78-P[2]-14),"Lot/Serial #:",@(1,8),"Vendor",@(58),"Closed?",@(0,9),"Comment",@(57),"Location",@(18,11),"Last",@(58),"On Hand",@(56,12),"Committed",@(56,13),"Available",@(56,14),"Unit Cost",@(57,15),"Avg Cost",@(57,16),"Std Cost",@(57,17),"Rep Cost",@(58,18),"PO Cost",@(56,20),"Last Phys",@(55,21),"Phys Count",'SF',
0750 FOR X=1 TO LINES
0760 PRINT 'SB',@(12-LEN(TITLES$[X]),11+X),TITLES$[X],'SF',
0790 NEXT X
0900 REM " --- Position file"
0990 READ (IVM03_DEV,KEY=A0$(1,2)+"G"+A0$(3),DOM=1000)
1000 REM " --- Warehouse ID"
1005 PRINT 'CF',
1010 LET V2$="",V2$=KEY(IVM03_DEV,END=1040)
1020 IF POS(A0$(1,2)+"G"+A0$(3)=V2$)<>1 THEN LET V2$=""
1030 IF V2$<>"" THEN LET V2$=V2$(24)
1040 LET V0$="S",V1$="KCE",V3$="",V0=2,V1=14,V2=6
1045 LET V4$="Enter A Valid Warehouse ID (<F3>=Lookup)"
1050 GOSUB 7000
1055 ON V3 GOTO 1065,1000,1000,1060,4900
1060 CALL "IVC.LK",3,V1,V2,V$
1065 IF V$="" THEN GOTO 0900
1070 LET WHSE$=V$+"  ",WHSE$=WHSE$(1,2),B0$(1)=A0$(1,2)+WHSE$+A0$(3)
1075 FIND (IVM10_DEV,KEY=N0$+"C"+WHSE$,DOM=1000)IOL=IVM10C
1080 PRINT @(V1,V2),W0$(4,2)," ",W0$(6,24),
1090 READ (IVM07_DEV,KEY=B0$,DOM=1100)
1100 REM " --- Lot/Serial #"
1110 LET V2$="",V2$=KEY(IVM07_DEV,END=1140)
1120 IF POS(B0$(1,24)=V2$)<>1 THEN LET V2$=""
1130 IF V2$<>"" THEN LET V2$=V2$(25)
1140 LET V0$="S",V1$="KCE",V3$="",V0=P[2],V1=78-P[2],V2=6
1145 LET V4$="Enter A Valid Lot/Serial Number (<F3>=Lookup)"
1150 GOSUB 7000
1155 ON V3 GOTO 1200,1100,1000,1160,4900
1160 LET ACTION$="",B0$(1)=B0$(1,24)
1170 CALL "SYC.LL",ACTION$,B0$,B1$,B[ALL]
1175 IF B0$=FILL(44) THEN LET B0$(1)=A0$(1,2)+WHSE$+A0$(3,20)
1180 LET V$=B0$(25)
1200 REM " --- Retrieve record"
1210 DIM D1$(30),VENDOR$(48)
1220 LET B0$(25)=V$,D0$(1)=N0$+B1$(55,6),K$=A0$(1,2)+"G"+A0$(3)+WHSE$
1230 FIND (IVM07_DEV,KEY=B0$,DOM=1100)IOL=IVM07A
1235 IF AP$<>"Y" THEN GOTO 1260
1240 IF FNP$(B1$(55,6))="" THEN GOTO 1260
1245 FIND (APM01_DEV,KEY=D0$,DOM=1250)IOL=APM01A
1250 LET VENDOR$(1)=FNF$(D0$(3,VENDLEN),VENDMASK$)+" "+D1$
1260 LET WHEN$=B1$(64,12)+B1$(79,6)+B1$(76,3)+B1$(85,3)
1270 LET PERIOD=P[6]+1,YEAR=P[7],AVAILABLE=B[0]-B[1]
1280 IF PERIOD>G[0] THEN LET PERIOD=1,YEAR=YEAR+1
1290 READ (IVM03_DEV,KEY=K$,DOM=1300)
1300 REM " --- Display record"
1310 GOSUB 5000
2000 REM " --- Initializations for period display"
2010 DIM HEADINGS$[2],QTY[2,10]
2020 LET P=PERIOD,Y=YEAR
2100 REM " --- Retrieve period records"
2110 FOR X=1 TO 2
2120 LET HEADINGS$[X]=MONTHS$((P-1)*3+1,3)+" "+STR(1900+Y:"0000")
2130 LET C0$(1)=B0$+FNYEAR_YY21$(Y)+STR(P:"00"),P=P-1
2140 IF P<1 THEN LET P=G[0],Y=Y-1
2150 FIND (IVM17_DEV,KEY=C0$,DOM=2190)IOL=IVM17A
2160 LET QTY[X,1]=C[0],QTY[X,2]=C[1],QTY[X,3]=C[2],QTY[X,4]=C[3]
2170 LET QTY[X,5]=C[4],QTY[X,6]=C[6],QTY[X,7]=C[7],QTY[X,8]=C[5]
2180 LET QTY[X,9]=C[8],QTY[X,10]=C[0]+C[1]+C[2]-C[3]-C[4]+C[5]+C[6]-C[7]+C[8]
2190 NEXT X
2200 REM " --- Display period quantities"
2210 FOR X=1 TO 2
2220 PRINT @(O[X]+M2-9,11),HEADINGS$[X],
2230 FOR P=1 TO 10
2240 PRINT @(O[X],11+P),QTY[X,P]:M2$,
2250 NEXT P
2290 NEXT X
2300 GOTO 4000
3000 REM " --- Maintain Location"
3010 LET V0$="S",V1$="C",V2$=B1$(1,10),V3$="",V0=10,V1=66,V2=9
3020 LET V4$="Enter The Location Of This Lot/Serial # In Warehouse "+B0$(3,2)
3030 GOSUB 7000
3040 ON V3 GOTO 3050,3000,3000,3000,4000
3050 LET B1$(1,10)=V$
3900 REM " --- Correct?"
3910 LET V4$="Is The Above Information Correct (Y/N)?"
3920 LET V0$="S",V1$="CER",V2$="Y",V3$="",V0=3,V2=22,V1=FNV(V4$)
3930 GOSUB 7000
3940 ON V3 GOTO 3950,3900,3900,3900,4000
3950 ON POS(V$="YN") GOTO 3900,3960,3000
3960 WRITE (IVM07_DEV,KEY=B0$)IOL=IVM07A
4000 REM " --- Correct?"
4010 LET V4$="<Enter>=Continue (<F1>=Next Lot/Serial #/<F2>=Prior/<F3>=Next/L=Location)"
4020 LET V0$="S",V1$="KC",V2$="",V3$="",V0=1,V1=FNV(V4$),V2=22
4030 GOSUB 7000
4040 ON V3 GOTO 4050,4100,4200,4300,4900
4050 IF V$="L" THEN GOTO 3000
4090 GOTO 1100
4100 REM " --- Next lot/serial number"
4110 LET K$=KEY(IVM07_DEV,END=4000)
4120 IF POS(B0$(1,24)=K$)<>1 THEN GOTO 4000
4140 LET V$=K$(25)
4190 GOTO 1200
4200 REM " --- Prior 2 periods"
4210 LET PERIOD=PERIOD-2
4220 IF PERIOD<1 THEN LET PERIOD=G[0]+PERIOD,YEAR=YEAR-1
4290 GOTO 2000
4300 REM " --- Next 2 periods"
4310 LET PERIOD=PERIOD+2
4320 IF PERIOD>G[0] THEN LET PERIOD=PERIOD-G[0],YEAR=YEAR+1
4390 GOTO 2000
4900 REM " --- Run menu overlay"
4990 RUN "IVM.MA"
5000 REM " --- Display record"
5010 LET V$=FILL(8)
5020 IF FNP$(B1$(61,3))<>"" THEN LET V$=FNB$(B1$(61,3))
5030 PRINT @(78-P[2],6),B0$(25),@(8,8),VENDOR$,@(66),B1$(54,1),@(8,9),B1$(14,40),@(66),B1$(1,10),@(O[3],11),B[0]:M2$,@(O[3],12),B[1]:M2$,@(O[3],13),AVAILABLE:M2$,@(O[3],14),B[3]:M3$,@(O[3],15),B[4]:M3$,@(O[3],16),B[5]:M3$,@(O[3],17),B[6]:M3$,@(O[3],18),B[8]:M3$,@(66,20),V$,@(O[3],21),B[2]:M2$,
5070 FOR X=1 TO 8
5075 IF FNP$(WHEN$((X-1)*3+1,3))<>"" THEN PRINT @(16,12+X),FNB$(WHEN$((X-1)*3+1,3)),
5080 NEXT X
5090 RETURN
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8080 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9900 RUN "SYS.AA"
9999 END
