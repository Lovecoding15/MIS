0010 REM "BMM - Get Bill Cost
0020 REM "Program BMC.EA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "09Oct98 WGH: Fix Unit Cost rounding error when compared to Inventory Productin Register and Update (1270,1500-1510,1700)
0040 REM 
0048 REM "BMM01_DEV : Channel BMM-01 Is Open On
0049 REM "BILL$     : Main Bill Number
0050 REM "BMM01_DEV : Channel BMM-01 Is Open On
0051 REM "BMM02_DEV : Channel BMM-02 Is Open On
0052 REM "BMM03_DEV : Channel BMM-03 Is Open On
0053 REM "BMM05_DEV : Channel BMM-05 Is Open On
0054 REM "BMM08_DEV : Channel BMM-08 Is Open On
0055 REM "IVM02_DEV : Channel IVM-02 Is Open On
0056 REM "IVM04_DEV : Channel IVM-04 Is Open On (If used)
0057 REM "IVW04_DEV : Channel IVW-04 Is Open On (If used)
0058 REM "IVW05_DEV : Channel IVW-05 Is Open On (If used)
0059 REM "SYS01_DEV : Channel SYS-01 Is Open On           
0060 REM "RUN_QTY   : Qty to base setup time on (Production or Std Lot Size)
0061 REM "PDATE$    : Effective Date
0062 REM "N0$       : Firm ID
0063 REM "AP$       : A/P Installed Flag
0064 REM "PHANTOM$  : Blow-through phantoms? (Y/N)
0065 REM "LEVEL     : Level of explosion
0066 REM "MAT_COST  : Material Cost
0067 REM "LAB_COST  : Direct Labor Cost
0068 REM "OH_COST   : Overhead Cost
0069 REM "SUB_COST  : Subcontract Cost
0070 REM "SETUP_DIV : Value to divide setup time by
0071 REM "SUB_QTY   : Subcontract quantity for levels 2 and below
0072 REM "LFY$      : Allow LIFO/FIFO costing (Y/N)
0073 REM "WH$       : Warehouse ID for LIFO/FIFO costing
0075 SETESC 9000
0080 SETERR 9000
0090 ENTER BILL$,CHANNEL[ALL],RUN_QTY,PDATE$,N0$,AP$,PHANTOM$,LEVEL,MAT_COST,LAB_COST,OH_COST,SUB_COST,SETUP_DIV,SUB_QTY,LFY$,WH$,EA_STATUS
0100 REM " --- Assign Channel Info
0110 LET BMM01_DEV=CHANNEL[0],BMM02_DEV=CHANNEL[1],BMM03_DEV=CHANNEL[2]
0120 LET BMM05_DEV=CHANNEL[3],BMM08_DEV=CHANNEL[4],IVM02_DEV=CHANNEL[5]
0130 LET IVM04_DEV=CHANNEL[6],IVW04_DEV=CHANNEL[7],IVW05_DEV=CHANNEL[8]
0140 LET SYS01_DEV=CHANNEL[9]
0200 REM " --- IOLists
0210 BMM01A1: IOLIST A0$,A1$,A2$,A[ALL]
0215 BMM01A2: IOLIST L0$,L1$,L2$,L[ALL]
0220 BMM02A: IOLIST R0$,R1$,R2$,R[ALL]
0240 BMM03A: IOLIST S0$,S1$,S[ALL]
0255 BMM05A: IOLIST W0$,W1$,W2$,W3$,W4$,W[ALL]
0260 BMM08A: IOLIST X0$,X[ALL]
0265 IVW05A: IOLIST W9$,ICOST
0270 IVM02A: IOLIST C0$,C1$,C2$,C[ALL]
0280 IVS01A: IOLIST *,*,P2$,P3$
0290 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0310 BMM09A: IOLIST X0$,X1$
0400 REM " --- Parameters
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="IV",N3$=F5$
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0500 REM " --- Initialize Data
0510 LET PLACES=NUM(P2$(5,1))
0520 LET MAT_COST=0,LAB_COST=0,OH_COST=0,SUB_COST=0,LF$="N"
0530 DIM A[11],C[20],L[11],R[10],S[11],W[9]
0540 PRECISION PLACES
0550 IF POS(P3$(3,1)="LF")>0 THEN LET LF$="Y"
0560 DIM IV_CHANS[10]
0570 LET IV_CHANS[0]=IVM04_DEV,IV_CHANS[1]=IVW04_DEV,IV_CHANS[2]=IVM02_DEV
1000 REM " --- Get Header Record
1010 READ (BMM01_DEV,KEY=N0$+BILL$,DOM=4000)IOL=BMM01A1
1100 REM " --- Get Material Cost
1110 READ (BMM02_DEV,KEY=N0$+BILL$,DOM=1120)
1120 LET K$=KEY(BMM02_DEV,END=1400)
1130 IF POS(N0$+BILL$=K$)<>1 THEN GOTO 1400
1140 READ (BMM02_DEV)IOL=BMM02A
1150 IF R2$(4,1)<>"S" THEN GOTO 1310
1160 IF R2$(5,3)<>"   " THEN IF R2$(5,3)>PDATE$ THEN GOTO 1310
1170 IF R2$(8,3)<>"   " THEN IF R2$(8,3)<=PDATE$ THEN GOTO 1310
1180 IF PHANTOM$="N" THEN GOTO 1240
1190 FIND (BMM01_DEV,KEY=N0$+R1$,DOM=1240)IOL=BMM01A2
1200 IF L2$(40,1)<>"Y" THEN GOTO 1240
1210 GOSUB EXPLODEPHANTOMS
1220 READ (BMM02_DEV,KEY=K$)
1230 GOTO 1310
1240 IF R[3]=0 THEN LET R[3]=1
1250 FIND (IVM02_DEV,KEY=N0$+WH$+R1$,DOM=1300)IOL=IVM02A
1260 IF LFY$="Y" AND LF$="Y" THEN GOSUB 6200; LET C[11]=ICOST
1270 LET MAT_COST=MAT_COST+ROUND(C[11]*FNQTY(R[0],R[1],R[3],A[4],R[4])*RUN_QTY,2)/RUN_QTY
1280 IF LEVEL>1 THEN LET MAT_COST=MAT_COST*RUN_QTY
1290 GOTO 1310
1300 LET EA_STATUS=11; REM "Not in whse"
1310 GOTO 1120
1400 REM " --- Get Labor Costs
1410 READ (BMM03_DEV,KEY=N0$+BILL$,DOM=1420)
1420 LET K$=KEY(BMM03_DEV,END=1600)
1430 IF POS(N0$+BILL$=K$)<>1 THEN GOTO 1600
1440 READ (BMM03_DEV)IOL=BMM03A
1450 IF S1$(4,1)<>"S" THEN GOTO 1550
1460 IF S1$(65,3)<>"   " THEN IF S1$(65,3)>PDATE$ THEN GOTO 1550
1470 IF S1$(68,3)<>"   " THEN IF S1$(68,3)<=PDATE$ THEN GOTO 1550
1480 DIM X[13]
1490 FIND (BMM08_DEV,KEY=N0$+S1$(1,3),DOM=1550)IOL=BMM08A
1500 LET DIRECTCOST=ROUND(FNOP1(S[0],X[0],S[1],A[4],S[4],SETUP_DIV)*RUN_QTY,2)/RUN_QTY
1510 LET OHCOST=ROUND(DIRECTCOST*X[2]*RUN_QTY,2)/RUN_QTY
1520 IF LEVEL>1 THEN LET DIRECTCOST=DIRECTCOST*RUN_QTY,OHCOST=OHCOST*RUN_QTY
1530 LET LAB_COST=LAB_COST+DIRECTCOST
1540 LET OH_COST=OH_COST+OHCOST
1550 GOTO 1420
1600 REM " --- Get Subcontract Cost
1610 IF AP$="N" THEN GOTO 4000
1620 READ (BMM05_DEV,KEY=N0$+BILL$,DOM=1630)
1630 LET K$=KEY(BMM05_DEV,END=4000)
1640 IF POS(N0$+BILL$=K$)<>1 THEN GOTO 4000
1650 READ (BMM05_DEV)IOL=BMM05A
1660 IF W1$(1,1)<>"S" THEN GOTO 1710
1670 IF W2$(1,3)<>"   " THEN IF W2$(1,3)>PDATE$ THEN GOTO 1710
1680 IF W2$(4,3)<>"   " THEN IF W2$(4,3)<=PDATE$ THEN GOTO 1710
1690 IF W[3]=0 THEN LET W[3]=1
1700 IF LEVEL>1 THEN LET SUB_COST=SUB_COST+W[2]*FNSUB(W[0],W[1],W[3])*SUB_QTY ELSE LET SUB_COST=SUB_COST+ROUND(W[2]*FNSUB(W[0],W[1],W[3])*SUB_QTY,2)/SUB_QTY
1710 GOTO 1630
4000 REM " --- End Of Calculation
4090 GOTO 9900
6200 REM " --- LIFO/FIFO
6205 DIM ITEM$[10]
6210 LET ITEM$[0]=N0$,ITEM$[1]=WH$,ITEM$[2]=R1$,TYPE$="R",LF_DATE$=PDATE$
6212 LET ACTION$=P3$(3,1)+"I",COST=C[11]
6215 LET QTY=ABS(FNQTY(R[0],R[1],R[3],A[4],R[4]))
6220 IF FNQTY(R[0],R[1],R[3],A[4],R[4])>=0 THEN GOTO 6310
6230 REM " --- Inquires For Tier Cost For Returned Items
6240 LET ACTION$(2,1)="R",TYPE$="I"
6270 CALL "IVC.LF",ACTION$,TYPE$,LF_DATE$,IV_CHANS[ALL],ITEM$[ALL],PLACES,QTY,COST,RET_COST,STATUS
6275 IF RET_COST<>0 THEN LET COST=RET_COST
6310 CALL "IVC.LF",ACTION$,TYPE$,LF_DATE$,IV_CHANS[ALL],ITEM$[ALL],PLACES,QTY,COST,RET_COST,STATUS
6320 IF RET_COST<>0 THEN LET ICOST=RET_COST
6330 LET W9$=FILL(17)+R1$+R0$(23,3)
6340 WRITE (IVW05_DEV,KEY=W9$)IOL=IVW05A
6350 RETURN 
6800 REM " --- Explode Phantoms
6805 EXPLODEPHANTOMS: 
6810 LET RUN1_QTY=FNQTY(R[0],R[1],R[3],A[4],R[4])*RUN_QTY
6820 LET SUB1_QTY=SUB_QTY*W[0]
6830 DIM CHANN[9]
6840 LET CHANN[0]=BMM01_DEV,CHANN[1]=BMM02_DEV,CHANN[2]=BMM03_DEV
6850 LET CHANN[3]=BMM05_DEV,CHANN[4]=BMM08_DEV,CHANN[5]=IVM02_DEV
6855 LET CHANN[6]=IVM04_DEV,CHANN[7]=IVW04_DEV,CHANN[8]=IVW05_DEV
6860 LET CHANN[9]=SYS01_DEV
6865 LET KM02$=KEY(BMM02_DEV,END=6875); REM "Save ptr
6870 GOTO 6880
6875 READ (BMM02_DEV,KEY="",DOM=6877); REM "On EOF reset ptr to beg of file
6877 GOTO 6865
6880 CALL "BMC.EA",R1$,CHANN[ALL],RUN1_QTY,PDATE$,N0$,AP$,PHANTOM$,LEVEL+1,MAT1_COST,LAB1_COST,OH1_COST,SUB1_COST,SETUP_DIV,SUB1_QTY,LFY$,WH$,EA_STATUS
6890 LET MAT_COST=MAT_COST+MAT1_COST,LAB_COST=LAB_COST+LAB1_COST,OH_COST=OH_COST+OH1_COST,SUB_COST=SUB_COST+SUB1_COST
6900 READ (BMM02_DEV,KEY=KM02$); REM "Replace ptr
6910 RETURN 
8000 REM " --- Functions
8060 DEF FNSUB(Q1,Q2,Q3)=Q1*Q2/Q3
8070 DEF FNQTY(Q1,Q2,Q3,Q4,Q5)=10000*Q1*Q2/(Q3*Q4*(100-Q5))
8080 DEF FNOP1(Q1,Q2,Q3,Q4,Q5,Q6)=100*(Q1*Q2/Q3)/Q4+Q5*Q2/Q6
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9280 LET TYPE$="R"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 REM " --- Exit Program
9990 EXIT 
9999 END
