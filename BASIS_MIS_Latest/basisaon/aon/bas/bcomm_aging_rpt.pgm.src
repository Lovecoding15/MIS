seterr errmsg
enter job_queue$
tmpdir$=stbl("TEMP")
boundary$="--==========_BASIS"
chn$=""
msk$="000"

firm$=job_queue.firm_id$
cust$=job_queue.customer_nbr$
email$=cvs(job_queue.e_mail$,3)
job$=cvs(job_queue.job$,7)
if job$="AR_AGING" then gosub aging_rpt
if job$="CUSTSALES" then gosub sales_rpt

pgm_end:
l=len(msk$)
while len(chn$)>=l
  ch=num(chn$(1,l))
  close(ch,err=*next)
  chn$=chn$(l+1)
wend
exit

errmsg:
    
  msgto$ = "mis@basis.cloud"
  msgfrom$ = "customer-service@basis.cloud"
  subject$ = "Queued report failed-error "
  
  msg$ = "Queued report failed-error " + str(err) + " in " + str(tcb(5)) + " of " + pgm(-2) + $0A$ + job_queue$
  
  call "sendEmail.src", msgfrom$, msgto$, "", "", subject$, msg$, ""

goto pgm_end

sales_rpt:
call "ec_open::ARM06";chn$=chn$+str(arm06:msk$)
call "ec_open::ARM10F";chn$=chn$+str(arm10f:msk$)
call "ec_open::TMM01";chn$=chn$+str(tmm01:msk$)
country_list$=job_queue.available$
end_cust$=cvs(job_queue.job_date$,3)
dl$=","
lf$=$0d0a$
m$="######0.00-"
rpt$="Cust#,Name,Salesperson,MTD,Next Month,YTD,PrevYR,Last Inv,Last Pmt"+lf$
read(tmm01,key=firm$+cust$,dom=*next)
while 1
  readrecord(tmm01,end=*break)tmm01$
  if tmm01.firm_id$<>firm$ then break
  if tmm01.customer_nbr$>end_cust$ then break
  if pos(tmm01.country_code$=country_list$,2)=0 then continue
  arm10f.SLSPSN_NAME$=""
  readrecord(arm10f,key=firm$+"F"+tmm01.SLSPERSON$,dom=*next)arm10f$
  readrecord(arm06,key=firm$+tmm01.customer_nbr$,dom=*continue)arm06$
  rpt$=rpt$+cvs(tmm01.customer_nbr$,3)+dl$+fncomma$(tmm01.cont_firm$)+dl$
  rpt$=rpt$+fncomma$(arm10f.slspsn_name$)+dl$+cvs(str(arm06.mtd_sales:m$),3)+dl$
  rpt$=rpt$+cvs(str(arm06.nmtd_sales:m$),3)+dl$+cvs(str(arm06.ytd_sales:m$),3)+dl$
  rpt$=rpt$+cvs(str(arm06.pyr_sales:m$),3)+dl$+fnb$(arm06.last_inv_date$)+dl$
  rpt$=rpt$+fnb$(arm06.last_pay_date$)+lf$
wend

outfile$=tmpdir$+"sales_rpt_"+date(0:"%m%s")+".txt"
erase outfile$,err=*next
string outfile$
outchan=unt
open (outchan)outfile$
print (outchan)rpt$
close (outchan,err=*next)

emsg$="Sales report attached."

mailto$ = email$
mailfrom$ = "customer-service@basis.cloud"
subject$ = "Customer Sales Report"

call "sendEmail.src", mailfrom$, mailto$, "", "", subject$, smsg$, outfile$

erase outfile$,err=*next

return

aging_rpt:
call "ec_open::ARM01";chn$=chn$+str(arm01:msk$)
call "ec_open::ART01";chn$=chn$+str(art01:msk$)
call "ec_open::ART11";chn$=chn$+str(art11:msk$)
call "ec_open::ART03";chn$=chn$+str(art03:msk$)
call "ec_open::sys01c";chn$=chn$+str(sys01c:msk$)

CALL "ec_open::ARM02_CANADA"
call "ec_open::ART03_CANADA"
call "templates.pgm::CANADIAN_EXCH"

rem ' is this a Canadian Customer
canadian_customer = 0
read record(ARM02_CANADA, key = firm$ + cust$, dom=*next)ARM02_CANADA$; canadian_customer = 1


ARS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
FIND (SYS01c,KEY=firm$+"AR00")IOL=ARS01A
L9=59,L=L9+1
M1=LEN(M1$)
d$=date(0:"%Yz%Mz%Dz")
p9$=chr(fnyy_year(d$(1,2))+32)+chr(num(d$(3,2))+32)+chr(num(d$(5,2))+32)
P6$="I";rem 'age on Due date or Invoice date

LET H4$="",P8=30
FOR X=-5 TO 0
LET begdate$=P9$,enddate$="",days=P8*X
gosub sycca
IF enddate$="N" THEN LET enddate$=P9$
LET H4$=enddate$+H4$
NEXT X

txtfile$=tmpdir$+cust$+"_aging.txt"
erase txtfile$,err=*next
string txtfile$
txt=unt
open(txt,mode="FILE="+txtfile$)"PX"
chn$=chn$+str(txt:msk$)
LET HEADINGS=2,WIDTH=132
DIM S[5],HEADINGS$[HEADINGS],U[5],T[5],X[5],Y[6],C[5]
LET H6$="Based On Due Date"
IF P6$="I" THEN LET H6$="Based On Invoice Date"
HEADINGS$[0]="BASIS International Ltd"
HEADINGS$[1]="Detail Aging Report As Of "+FNB$(P9$)
HEADINGS$[2]=H6$
LET M9$=M1$
IF POS("("=M9$)=1 THEN LET M9$=M9$(1,1)+"#"+M9$(2) ELSE LET M9$="#"+M9$
LET M9=LEN(M9$)

FINDrecord (ARM01,KEY=firm$+cust$)ARM01$
LET X0$=arm01.cust_name$
LET l0=1
gosub heading

READ (ART01,KEY=firm$+"  "+cust$,DOM=*next)
while 1
  K$=KEY(ART01,END=*break)
  if firm$<>K$(1,2) or cust$<>k$(5,6) THEN break
  READrecord (ART01,KEY=K$)ART01$
  LET Y0=art01.invoice_amt
  IF Art01.invoice_date$>P9$ THEN LET art01.invoice_amt=0
  READ (ART11,KEY=k$(1,17),DOM=*next)
  while 2
    LET K11$=KEY(ART11,END=*break)
    IF K11$(1,17)<>K$(1,17) THEN break
    READrecord (ART11)ART11$
    IF cvs(art11.AR_TRAN_CODE$,3)="" THEN continue
    LET Y0=Y0+art11.TRANS_AMT+art11.ADJ_DISC_AMT
    IF art11.TRANS_DATE$>P9$ THEN continue
    LET art01.invoice_amt=art01.invoice_amt+art11.TRANS_AMT+art11.ADJ_DISC_AMT
  wend

  LET X3$=art01.due_date$
  IF P6$="I" THEN LET X3$=art01.invoice_date$
  REM " --- Age
  LET X0=POS(X3$>H4$,3)
  IF X0=0 THEN 
    LET X0=5
  else
    LET X0=INT(X0/3)
    IF X0<0 THEN LET X0=0
  fi
  IF art01.invoice_amt=0 THEN GOTO L3220
  
  rem ' is this a Canadian Customer and if so is it a Canadian Invoice
  currency$ = ""
  if canadian_customer then
	canadian_inv = 0
  	rem ' ON ACCOUNT invoices will never make it to ART03 must be read differently
  	if pos("OA" = art01.ar_inv_nbr$) = 1 then
		read record(art03_canada, key = art01.firm_id$ + art01.customer_nbr$ + art01.invoice_date$ + art01.ar_inv_nbr$, knum=1, dom=*next)art03_canada$; canadian_inv = 1  	
  	else
	  	read record(art03,key=k$(1,17)+"000")art03$
	  	read record(art03_canada, key = art03.firm_id$ + art03.customer_nbr$ + art03.invoice_date$ + art03.order_number$, knum=0, dom=*next)art03_canada$; canadian_inv = 1
	fi

  	if canadian_inv then
		dim canadian_exch$:fattr(canadian_exch$)
		canadian_exch.ratedate$ = art03_canada.ratedate$
		canadian_exch.sequence_nbr$ = art03_canada.sequence_nbr$
		canadian_exch.to_us_doll = art03_canada.to_us_doll
		canadian_exch.to_cana_doll = art03_canada.to_cana_doll
	  	amountin = art01.invoice_amt; amountout = 0
	  	call "canDollConversion", canadian_exch$, 0, amountin, amountout
	  	art01.invoice_amt = amountout
		currency$ = "CAD"	  	
	 fi
  fi
  
  LET X8$="None      ",X9$="None   ",found=0
  FIND (ART03,KEY=K$(1,17)+"000",DOM=*next)ART03$;found=1
  if found then X8$=art03.ar_po_number$,X9$=art03.order_number$
  IF L+1>L9 THEN GOSUB heading
  LET Q$=FNC$(X3$)
  
  print (txt)@(2),Art01.ar_inv_nbr$,"  ",Q$(1,2)+"/"+Q$(3,2)+"/"+Q$(5,2),@(20),X8$,@(31),X9$,@(39),Art01.terms_code$,@(45),Art01.ar_inv_type$+ " " +currency$,@(131-(6-X0)*M1-M9),art01.invoice_amt:M1$,@(131-M9),art01.invoice_amt:M9$
  LET L=L+1
  
  L3220: 
  
  if canadian_inv then
  	C[X0] = C[X0] + art01.invoice_amt
  else
	  LET T[X0]=T[X0]+art01.invoice_amt,U[X0]=U[X0]+art01.invoice_amt,X[X0]=X[X0]+art01.invoice_amt,Y[X0]=Y[X0]+Y0,S[X0]=S[X0]+art01.invoice_amt
  fi
wend

rem ' print us totals
if U[0]+U[1]+U[2]+U[3]+U[4]+U[5] > 0 then 
	print (txt)'LF',@(10),"Grand Total USD:",@(131-5*M1-M9),U[1]:M1$,@(131-4*M1-M9),U[2]:M1$,@(131-3*M1-M9),U[3]:M1$,@(131-2*M1-M9),U[4]:M1$,@(131-M1-M9),U[5]:M1$,@(131-M9),U[0]+U[1]+U[2]+U[3]+U[4]+U[5]:M9$
fi
rem ' print canadian totals
if C[0]+C[1]+C[2]+C[3]+C[4]+C[5] > 0 then 
	print (txt)'LF',@(10),"Grand Total CAN:",@(131-5*M1-M9),C[1]:M1$,@(131-4*M1-M9),C[2]:M1$,@(131-3*M1-M9),C[3]:M1$,@(131-2*M1-M9),C[4]:M1$,@(131-M1-M9),C[5]:M1$,@(131-M9),C[0]+C[1]+C[2]+C[3]+C[4]+C[5]:M9$
fi

emsg$="Attached is your Aged AR Report in Adobe Portable Document Format (PDF)."

maildto$ = email$ 
mailfrom$ = "customer-service@basis.cloud"
subject$ = "Aged Accounts Receivable Report"

attach_inv:
call "PDF.01",txtfile$
tmp$=txtfile$(1,len(txtfile$)-3)+"pdf"

call "sendEmail.src", mailfrom$, mailto$, "", "", subject$, emsg$, tmp$

erase tmp$,err=*next
erase txtfile$,err=*next

return

Heading:
if l0>1 then print(txt)'ff',
for h=0 to headings
p1=int(width/2)-int(len(headings$[h])/2)
print (txt)fill(p1),headings$[h],
if h=0 then 
  w=width-p1-len(headings$[h])-8
  print (txt)fill(w),"Page",str(l0:"###"),
fi
print (txt)
next h
print (txt)
LET L=HEADINGS+1
PRINT (txt)"Customer No. & Name",@(32),"Order"
PRINT (txt)@(2),"Invoice    Due",@(20),"PO Number",@(31),"Number",@(39),"Terms",@(45),"Type",@(131-4*M1-M9-8),"Current",@(131-3*M1-M9-8),"30-Days",@(131-2*M1-M9-8),"60-Days",@(131-M1-M9-8),"90-Days",@(131-M9-9),"120-Days",@(131-8),"Balance",'LF'
print (txt)@(0),cust$," ",X0$
LET L=L+4,L0=L0+1
RETURN 

REM " --- Functions
REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
DEF FNYY21_YY$(Q1$)
LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
RETURN Q1$
FNEND
REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
DEF FNYY_YEAR(Q1$)
LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
RETURN Q
FNEND
DEF FNYY_YY21$(Q1$)
LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
RETURN Q1$
FNEND
DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
DEF FNM$(Q$)=Q$(5,2)+Q$(1,4)
DEF FNN$(Q$)=Q$(3,4)+Q$(1,2)
DEF fncomma$(Q1$)
while 1
  xx=POS(","=Q1$)
  if xx=0 then break
  q1$(xx,1)=" "
wend
q1$=cvs(q1$,35)
RETURN Q1$

sycca:
V0$=BEGDATE$,V1$=ENDDATE$
BEGDATE$="N",ENDDATE$="N"
DAYS=INT(DAYS)
V0$=FNYY_YY21$(FNM$(FNC$(V0$)))
JULIAN=0
Y=1900+FNYY_YEAR(V0$(1,2)),M=NUM(V0$(3,2)),D=NUM(V0$(5,2))
JULIAN=JUL(Y,M,D,ERR=*next)
V1$=DATE(JUL(Y,M,D)+DAYS:"%Yz%Mz%Dz")
V0$=FND$(FNN$(V0$))
V1$=FND$(FNN$(V1$)) 
BEGDATE$=V0$,ENDDATE$=V1$
Return

