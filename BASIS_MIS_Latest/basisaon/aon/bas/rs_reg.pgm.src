seterr enter_err
called=0
enter 
called=1
enter_err:
if called=0 then begin

seterr errmsg

clock$=date(0:"%Hz%mz%sz")
calendar$=date(0)
aon$=stbl("AON")
rem ' dsrv$=stbl("DATA_SERVER")+"/share/partners/"
dsrv$ = "/mnt/data/databases/partners/"
opened$=""
rem prefix "/usr/local/ec/ "+aon$+"bas/ "+pfx

tries=0
rs=unt
rsfile$=dsrv$+"reseller"
open(rs,err=open_err)rsfile$
opened$=opened$+str(rs:"00")

tries=0
reg=unt
regfile$=dsrv$+"reseller_new"
open(reg,err=open_err)regfile$
opened$=opened$+str(reg:"00")

x1$="firm:c(2),cust_num:c(6),password:c(6*),"
xx$="company:c(30*),addr1:c(30),addr2:c(30),addr3:c(30),addr4:c(30),city:c(25),state:c(2),zip:c(9),country:c(15),phone:c(14),fax:c(14)"
xx$=xx$+",contact1:c(30),cont1_title:c(18),cont1_same:c(1),cont1_email:c(80),cont1_addr1:c(30),cont1_addr2:c(30),cont1_city:c(25),cont1_state:c(2),cont1_zip:c(9),cont1_country:c(24),cont1_phone:c(14),cont1_ext:c(6),cont1_ap:c(1)"
xx$=xx$+",contact2:c(30),cont2_title:c(18),cont2_same:c(1),cont2_email:c(80),cont2_addr1:c(30),cont2_addr2:c(30),cont2_city:c(25),cont2_state:c(2),cont2_zip:c(9),cont2_country:c(24),cont2_phone:c(14),cont2_ext:c(6),cont2_adv:c(1),cont2_ann:c(1),cont2_ap:c(1)"
xx$=xx$+",contact3:c(30),cont3_title:c(18),cont3_same:c(1),cont3_email:c(80),cont3_addr1:c(30),cont3_addr2:c(30),cont3_city:c(25),cont3_state:c(2),cont3_zip:c(9),cont3_country:c(24),cont3_phone:c(14),cont3_ext:c(6),cont3_adv:c(1),cont3_ann:c(1),cont3_ap:c(1)"
xx$=xx$+",contact4:c(30),cont4_title:c(18),cont4_same:c(1),cont4_email:c(80),cont4_addr1:c(30),cont4_addr2:c(30),cont4_city:c(25),cont4_state:c(2),cont4_zip:c(9),cont4_country:c(24),cont4_phone:c(14),cont4_ext:c(6),cont4_adv:c(1),cont4_ann:c(1),cont4_ap:c(1)"

dim rs$:x1$+xx$+",cust_type:c(3)"

call "ec_open::arm02"
opened$=opened$+str(arm02:"00")
call "ec_open::arm06"
opened$=opened$+str(arm06:"00")
call "ec_open::tmm01"
opened$=opened$+str(tmm01:"00")

rem logfile$=aon$+"/ADATA/registered.log"
rem log=unt
rem open(log)logfile$
rem f$=fin(log),logindex=dec(f$(1,4))
rem opened$=opened$+str(log:"00")

firm$="01",type$="RS"
oldterms$="03"
newterms$="06"
rg$=""

while 1
  readrecord(reg,end=*break)rs_new$
  k$=rs_new$(1,8),firm$=k$(1,2),ok=0
  readrecord(arm02,key=k$+"  ",err=*next)arm02$;ok=1
  if ok=0 then remove(reg,err=*continue,key=k$);continue
  readrecord(tmm01,knum=0,key=k$+"000000")tmm01$
  if pos(type$=arm02.cust_type$)<>1 then continue
  dim arm06$:fattr(arm06$)
  readrecord(arm06,key=firm$+arm02.customer_nbr$,dom=*next)arm06$
  new_type$="PB"
  if firm$="01" then
    if arm06.pyr_sales>=5000 then new_type$="PS"
    if arm06.pyr_sales>=12500 then new_type$="PG"
    if arm02.terms_code$=oldterms$ then arm02.terms_code$=newterms$
  fi
  if firm$="02" then
    if arm06.pyr_sales>=12500 then new_type$="PS"
    if arm06.pyr_sales>=25000 then new_type$="PG"
  fi

  arm02.cust_type$(1,2)=new_type$
  arm02$=field(arm02$)
  writerecord(arm02,key=k$)arm02$

  tmm01.cust_type$=arm02.cust_type$
  tmm01.terms_code$=arm02.terms_code$
  tmm01$=field(tmm01$)
  writerecord(tmm01)tmm01$

  rem if rg$="" then write (log,ind=logindex)calendar$+" "+clock$
  rem print(log)arm02.slspsn_code$," ",arm02.customer_nbr$," ",tmm01.cont_firm$," ",arm02.terms_code$,str(arm06.pyr_sales:"###,###.00")," ",arm02.cust_type$
  rg$=rg$+arm02.customer_nbr$+" "+tmm01.cont_firm$+" "+arm02.cust_type$+$0a$

  readrecord(rs,key=rs_new$(1,8),dom=*continue)rs$
  rs.cust_type$=tmm01.cust_type$
  rs$=field(rs$)
  writerecord(rs)rs$

wend

if rg$<>"" then
  to$="mis@basis.cloud"
  cc$=""
  subj$="Reseller registration"
  msg$=rg$
  rem gosub notify
fi

pgm_exit:
while len(opened$)>1
  f=num(opened$(1,2))
  opened$=opened$(3)
  close(f,err=*next)
wend

if pos(clock$(1,2)="23") and pos(clock$(3,2)<"15") then call "cust_web_updt.pgm"

rem pgm$=aon$+"bas/bcomm_license.pgm"
rem cmd$="/usr/local/bbj/bin/bbj -tIO -c/basisaon/config.aon -q "+pgm$
rem a=scall(cmd$+"&")
if called then exit
release
 
open_err:
tries=tries+1
if tries<5 then 
  wait 1
  retry
fi

errmsg:
if pos("Error"=msg$) then exit

to$="mis@basis.cloud"
cc$=""
subj$="Reseller registration error (rs_reg.pgm)"
msg$="Error "+str(err)+" in "+str(tcb(5))
msg$=msg$+$0a$+errmes(-1)
gosub notify
goto pgm_exit

notify:
rem from$="BASIS Customer Service <customer-service@basis.cloud>"
from$="customer-service@basis.cloud"

hdr$="To: "+to$+$0A$
hdr$=hdr$+"From: "+from$+$0A$
hdr$=hdr$+"Cc: "+cc$+$0A$
hdr$=hdr$+"Subject: "+Subj$+$0A$+$0A$
hdr$=hdr$+msg$+$0a$+$0a$

tmpfile$=stbl("TEMP")+clock$+"email.txt"
erase tmpfile$,err=*next
string tmpfile$
tmp=unt
open(tmp)tmpfile$
writerecord(tmp)hdr$
close(tmp)
A=SCALL("/usr/lib/sendmail -t < "+tmpfile$)
erase tmpfile$,err=*next
return

END
