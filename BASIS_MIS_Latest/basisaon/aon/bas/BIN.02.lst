0010 REM "OPR - Invoice Printing w/out print flag check"
0020 REM "Program BIN.02 - based on OPR.CA"
0054 REM "       ARE03_DEV=ART03_DEV
0055 REM "       ARE13_DEV=ART13_DEV
0056 REM "       ARE23_DEV=ART23_DEV
0057 REM "       ARE33_DEV=ART33_DEV
0058 REM "PRTR_DEV=Open printer channel
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/lock files"
0110 LET FILES1=5; REM "WA:200
0120 DIM FILES1$[FILES1],OPTIONS1$[FILES1],CHANNELS1[FILES1]
0130 LET FILES1$[1]="TMM-01",FILES1$[2]="ARE-73"
0140 LET FILES1$[3]="ARE-83",FILES1$[4]="CSM-03"
0150 LET FILES1$[5]="SMC-01"
0160 CALL "SYC.DA",1,1,FILES1,FILES1$[ALL],OPTIONS1$[ALL],CHANNELS1[ALL],BATCH,STATUS
0170 IF STATUS<>0 THEN GOTO 4100
0180 LET TMM01_DEV=CHANNELS1[1],ARE73_DEV=CHANNELS1[2]
0190 LET ARE83_DEV=CHANNELS1[3],CSM03_DEV=CHANNELS1[4]
0195 LET SMC01_DEV=CHANNELS1[5]
0200 REM " --- IOLists" 
0210 ARE03A: IOLIST A0$(1),A[ALL]
0220 ARE13A: IOLIST W0$,W1$(1),W[ALL]
0230 ARE20A: IOLIST Z0$,Z1$
0240 ARE23A: IOLIST T0$,T1$(1),T2$,T[ALL]
0250 ARE33A: IOLIST D0$,D1$
0260 ARM01A1: IOLIST B0$,B1$
0270 ARM02A: IOLIST B0$,B1$,B[ALL]
0280 ARM03A: IOLIST C0$,C1$
0290 ARM09A: IOLIST X$,X8$(1)
0300 ARM10A: IOLIST X1$
0310 ARM10C: IOLIST Y7$,Y9$
0320 ARM10E: IOLIST Y0$(1)
0330 ARM10F: IOLIST X3$
0340 ARM10G: IOLIST *,X4$
0350 IVM01A: IOLIST *,X2$,X9$(1),*,*,X5$(1); REM "WA:200
0370 CSM03A: IOLIST CS0$,CS1$,CS2$
0380 ARE73A: IOLIST WX0$,WX1$,WX[ALL]; REM WA# 207
0390 ARE83A: IOLIST WY0$,WY1$,WY2$,WY[ALL]; REM WA# 207
0400 ARW43A: IOLIST ARW43_K$
0410 call "templates.pgm::SMC01"
0500 REM " --- Initialize Data"
0505 DIM WX[4],WY[2],X5$(2); REM WA# 207
0510 PRECISION I[2]
0520 LET H0=0,L9=25,HEADINGS=0,WHEN$=F0$(7,3); REM "WA:200
0530 DIM H9$(50,$0A$)
0540 DIM W1$(64),W[14],HEADINGS$[HEADINGS]
0550 LET PRICE_MASK$=M4$,EXT_MASK$=M1$
0700 REM " --- Background"
0720 DIM A0$(117),A[10]
0990 CALL "SYC.NB","Printing",LEN(M0$)+8,COLUMN; LET ROW=11
1000 REM " --- Initial Read"
1010 READ (ARW43_DEV,KEY=N0$,DOM=1011); REM "WA:200
1100 REM " --- Main Read"
1103 sam_renew$=""
1105 LET ARW43_K$=KEY(ARW43_DEV,END=4000); REM "WA:200
1110 READ (ARW43_DEV); REM "WA:200
1115 LET K1$=ARW43_K$(1,2)+"I"+ARW43_K$(3,2)+ARW43_K$(12,13); REM "WA:200
1130 IF K1$(1,3)<>N0$+"I" THEN GOTO 4000
1140 EXTRACT (ARE03_DEV,KEY=K1$(1,2)+K1$(4)+"000",DOM=1200)IOL=ARE03A
1145 IF A0$(99,1)="N" THEN GOTO 1170
1150 DIM Y7$(30),Y9$(21),Z0$(56),Z1$(30); LET Y7$(7)="Invalid Receipt Code",Y9$(21,1)="C"
1155 IF ARE20_DEV=0 THEN GOTO 1170
1160 FIND (ARE20_DEV,KEY=A0$(1,17),DOM=1170,ERR=1170)IOL=ARE20A
1165 FIND (ARM10_DEV,KEY=N0$+"C"+Z0$(21,3),DOM=1170)IOL=ARM10C
1170 IF A0$(21,1)="V" THEN GOTO 1100
1175 IF A0$(22,1)<>"I" THEN GOTO 1100
1400 REM " --- Heading"
1405 sam_renew$=CVS(A0$(49,10),1+2)
1410 PRINT @(COLUMN,ROW),FNF$(A0$(5,P[0]),M0$)," ",A0$(42,7),
1420 DIM B$(150),B1$(325)
1440 LET B1$(1)="Not On File",CONTACT$=""; REM "WA:200
1460 READ (ARM01_DEV,KEY=N0$+A0$(5,6),DOM=1490)IOL=ARM01A1
1465 LET CONTACT$=B1$(228,20); REM "WA:200
1470 LET B$=B1$(31,72)+B1$(179,48)+B1$(103,9)
1480 CALL "SYC.AA",B$,24,5,P[2],30
1490 LET B$=B1$(1,30)+B$
1495 GOSUB 10000; REM WA# 206
1500 REM " --- Ship-To"
1510 LET C$=B$
1520 IF FNP$(A0$(102,6))="" THEN GOTO 1600
1530 DIM C1$(155)
1540 IF A0$(102,6)<>"000099" THEN GOTO 1600
1545 LET SHIPTO$=""
1550 FIND (ARE33_DEV,KEY=N0$+A0$(5,13),DOM=1560)IOL=ARE33A
1555 LET C$=D1$(31,81),C1$(1)=D1$(1,30)
1560 CALL "SYC.AA",C$,24,3,P[2],30
1570 LET C$=C1$(1,30)+C$
1580 READ (ARE03_DEV,KEY=A0$(1,20),DOM=1690)
1590 GOTO 1690
1600 LET SHIPTO$=""
1610 FIND (ARM03_DEV,KEY=N0$+A0$(5,6)+A0$(102,6),DOM=1690)IOL=ARM03A
1620 LET SHIPTO$=A0$(102,6)
1630 LET C$=C1$(31,81)
1640 CALL "SYC.AA",C$,24,3,P[2],30
1650 LET C$=C1$(1,30)+C$
1690 IF LEN(C$)<LEN(B$) THEN LET C$=C$+FILL(40); GOTO 1690
1700 REM " --- Terms"
1710 DIM X1$(15)
1720 FIND (ARM10_DEV,KEY=N0$+"A"+A0$(62,2),DOM=*next)IOL=ARM10A
1730 LET X1$=X1$(6,20),disc$=""
1735 FIND (ARM10_DEV,KEY=N0$+"I"+A0$(64,2),DOM=*next)disc$;disc$=disc$(6,10)
1740 REM " --- Salesperson"
1745 LET X3$=""
1750 FIND (ARM10_DEV,KEY=N0$+"F"+A0$(59,3),DOM=1800)IOL=ARM10F
1760 LET X3$=X3$(7,20)
1800 REM " --- Job Name"
1810 DIM X8$(30)
1820 IF ARM09_DEV=0 THEN GOTO 1880
1830 FIND (ARM09_DEV,KEY=N0$+A0$(5,6)+A0$(86,10),DOM=1880)IOL=ARM09A
1840 LET X8$(1)=X8$
1850 GOTO 1900
1880 LET X8$(1)=A0$(86,10)
1900 REM " --- Print Heading"
1910 LET P=0
1920 GOSUB 5000
1940 LET T0=0,X6$=""
1990 READ (ARE13_DEV,KEY=A0$(1,17),DOM=2000)
2000 REM " --- Detail"
2020 LET K$=KEY(ARE13_DEV,END=3000)
2040 IF K$(1,17)<>A0$(1,17) THEN GOTO 3000
2060 READ (ARE13_DEV)IOL=ARE13A
2100 REM " --- Type"
2120 DIM Y0$(30)
2140 FIND (ARM10_DEV,KEY=N0$+"E"+W0$(21,1),DOM=2160)IOL=ARM10E
2150 LET X2$=W0$(23)
2160 IF POS(Y0$(25,1)=" SP")=0 THEN GOTO 2200
2170 DIM X9$(62),X2$(60)
2180 firm$=n0$,ivm01_itm$=w0$(33,20);gosub ivm01_itm
2185 GOSUB 5900
2190 LET X2$=X2$+FILL(40),X2$=X2$(1,42)
2200 IF Y0$(25,1)="M" AND POS(Y0$(28,1)="BI ")=0 THEN GOTO 2300
2210 GOSUB 12000; REM "WA:200
2220 GOSUB 5200
2250 REM " --- Print configurator/serial number info - WA# 207
2260 GOSUB 15400
2300 REM " --- Total"
2320 LET T0=T0+W[6]
2400 REM " --- Any Serial/Lot #'s?"
2410 IF POS(I3$(17,1)="LS")=0 THEN GOTO 2900
2420 IF POS(Y0$(25,1)="PS")=0 THEN GOTO 2900
2430 IF X9$(19,1)<>"Y" THEN GOTO 2900
2500 REM " --- OK, There Are Lots"
2505 DIM T1$(20),T[2]; LET T$="",T9=0
2510 READ (ARE23_DEV,KEY=W0$(1,20),DOM=2520)
2520 LET K9$=KEY(ARE23_DEV,END=2600)
2540 IF K9$(1,20)<>W0$(1,20) THEN GOTO 2600
2560 READ (ARE23_DEV)IOL=ARE23A
2570 IF T[0]=0 THEN GOTO 2520
2580 GOSUB 5400
2585 LET T9=T9+T[1]
2590 GOTO 2520
2610 IF T9>=W[4] THEN GOTO 2660
2620 DIM T1$(20,"_"),T[2]
2630 FOR Y=1 TO W[4]-T9
2635 IF I3$(17,1)="L" THEN LET Y=W[4]-T9
2640 GOSUB 5400
2650 NEXT Y
2660 IF L+1>L9 THEN GOTO 2700
2670 PRINT (PRTR_DEV)""
2680 LET L=L+1
2900 GOTO 2000
3000 REM " --- Total"
3020 GOSUB 5600
3080 GOTO 1100
4000 REM " --- Totals"
4105 CLOSE (PRTR_DEV,ERR=4110)
4190 GOTO 9900
5000 REM " --- Heading"
5005 GOTO 15000; REM "WA:200
5200 REM " --- Item Detail"
5210 IF L>L9-1 THEN GOSUB 5800
5250 IF POS(Y0$(25,1)="MO")<>0 THEN GOTO 5280
5260 PRINT (PRTR_DEV)@(H0+0),W[2],@(H0+7),W[4],
5280 IF POS(Y0$(25,1)="MNO")<>0 THEN PRINT (PRTR_DEV)@(H0+19),W1$(1,40),
5300 IF POS(Y0$(25,1)=" SRDP")<>0 THEN PRINT (PRTR_DEV)@(H0+21),W0$(33),
5330 PRINT (PRTR_DEV)@(H0+52),PORT$,; REM "WA:200
5340 IF POS(Y0$(25,1)=" SRDNP")<>0 THEN PRINT (PRTR_DEV)@(H0+58),W[1]:PRICE_MASK$,
5360 IF POS(Y0$(25,1)="M")=0 THEN PRINT (PRTR_DEV)@(H0+68),W[6]:EXT_MASK$,
5380 PRINT (PRTR_DEV)'LF',
5382 LET L=L+1
5385 IF LEN(X2$)>40 THEN LET X2$=X2$(1,40)
5387 IF POS(Y0$(25,1)="SP")<>0 AND L>L9-1 THEN GOSUB 5800
5390 IF POS(Y0$(25,1)="SP")<>0 THEN PRINT (PRTR_DEV)@(H0+19),X2$,'LF',
5394 IF POS(Y0$(25,1)="SP")<>0 THEN LET L=L+1
5396 RETURN 
5400 REM " --- Serial #'s Here"
5410 IF L<=L9-1 THEN GOTO 5440
5415 GOSUB 5800
5420 IF POS(Y0$(25,1)=" SP")<>0 THEN PRINT (PRTR_DEV)@(H0+24),W0$(33); LET L=L+1
5440 IF I3$(17,1)="L" THEN GOTO 5470
5450 PRINT (PRTR_DEV)@(H0+24),"S/N: ",T1$(1,I[3])
5460 GOTO 5480
5470 PRINT (PRTR_DEV)@(H0+24),"Lot: ",T1$(1,I[3]),"   Shipped: ",
5475 IF T[1]<>0 THEN PRINT (PRTR_DEV)T[1]:M2$ ELSE PRINT (PRTR_DEV)FILL(M2,"-")
5480 LET L=L+1
5490 RETURN 
5600 REM " --- Total"
5610 PRINT (PRTR_DEV)H9$(1,L9-L+4)
5620 IF A0$(99,1)="Y" THEN GOSUB 6900
5630 PRINT (PRTR_DEV)@(H0+0),MESSAGE$,@(H0+53),"NET INVOICE:",@(H0+68),T0:EXT_MASK$
5640 PRINT (PRTR_DEV)@(H0+51),"LESS DISCOUNT:",@(H0+68),-A[2]:EXT_MASK$
5645 PRINT (PRTR_DEV)@(H0+57),"FREIGHT:",@(H0+68),A[1]:EXT_MASK$
5650 PRINT (PRTR_DEV)@(H0+55),"SALES TAX:",@(H0+68),A[0]:EXT_MASK$
5670 PRINT (PRTR_DEV)@(H0+49),"INVOICE TOTAL:",@(H0+68),T0+A[0]-A[2]+A[1]:EXT_MASK$
5680 PRINT (PRTR_DEV)'FF',
5690 RETURN 
5800 REM " --- Continued"
5820 PRINT (PRTR_DEV)H9$(1,L9-L+1)
5840 PRINT (PRTR_DEV)@(H0+70),"Continued",'FF',
5870 GOSUB 5000
5890 RETURN 
5900 REM " --- Compress Description"
5905 LET Z=POS(" "<>X2$); IF Z>1 THEN LET X2$=X2$(Z)
5910 LET X=POS("  "=X2$); IF X<>0 THEN LET Y=POS(" "<>X2$(X+2)); LET X2$=X2$(1,X)+X2$(X+Y+1); IF Y<>0 THEN GOTO 5910
5920 RETURN 
6900 REM " --- Print Paid Info"
6920 LET X6$="PAID: "+FNP$(Y7$(7,20))+" "
6930 IF Y9$(21,1)="P" THEN LET X6$=X6$+"# "+Z0$(31,16)
6940 IF Y9$(21,1)="C" THEN LET X6$=X6$+"# "+Z0$(24,7)
6950 LET X6$=X6$+" NAME: "+Z1$
6990 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
10000 REM " --- Get 30 character address from Telemaster"
10010 READ (TMM01_DEV,KNUM=0,KEY=A0$(1,2)+A0$(5,6),DOM=10011)
10020 LET TMM01_K$=KEY(TMM01_DEV,END=10090)
10030 IF POS(A0$(1,2)+A0$(5,6)=TMM01_K$)<>1 THEN GOTO 10090
10040 READ (TMM01_DEV,KEY=TMM01_K$)TMM0$
10050 LET CUST_TYPE$=TMM0$(260,3)
10070 REM LET B$=TMM0$(142,85)+" "+TMM0$(227,2)+FILL(62," ")+TMM0$(229,9)
10071 LET B$=TMM0$(142,60)+TMM0$(389,60)+TMM0$(202,25)+" "+TMM0$(227,2)+"  "+TMM0$(275,2)+FILL(28," ")+TMM0$(229,9)
10080 CALL "SYC.AX",B$,30,6,P[2],30
10085 LET B$=B1$(1,30)+B$
10090 RETURN 
12000 REM " --- Find Port Id
12010 LET PORT$=""
12030 IF Y0$(25,1)<>"S" THEN GOTO 12090
12040 FIND (CSM03_DEV,KEY=N0$+W0$(39,3),DOM=12090)IOL=CSM03A; REM "WA:200
12050 LET PORT$=CS2$(1,5); IF W0$(33,2)="P4" THEN LET PORT$(5,1)="4"
12090 RETURN 
14500 REM Date with 4 digit year
14505 DEF FNA4$(Q$,Q2$)=STR(((ASC(Q$)-32)+1900)*POS(" "<>Q2$(2,1)):"0000")
14510 DEF FNB4$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA4$(Q1$(1),Q1$)
15000 REM " --- Heading"
15005 LET L=0,P=P+1
15010 LET ORDER$=A0$(11,7),INVOICE$=A0$(42,7)
15015 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
15020 PRINT (PRTR_DEV)'LF','LF',@(H0+45),"INVOICE NUMBER:",@(H0+62),INVOICE$,'LF',@(H0+47),"INVOICE DATE:",@(H0+62),FNB4$(A0$(24,3)),'LF',@(H0+55),"PAGE:",@(H0+62),P
15035 PRINT (PRTR_DEV)@(H0+47),"ORDER NUMBER:",@(H0+62),ORDER$,'LF',@(H0+49),"ORDER DATE:",@(H0+62),FNB4$(A0$(77,3)),'LF',@(H0+48),"CUSTOMER NO:",@(H0+62),FNF$(A0$(5,P[0]),M0$),"  ",CUST_TYPE$,H9$(1,2),@(H0+7),"SOLD TO:",@(H0+46),"SHIP TO:"
15040 FOR I=1 TO 6
15045 PRINT (PRTR_DEV)@(H0+7),B$(I*30-29,30),@(H0+46),C$(I*30-29,30)
15050 NEXT I
15055 IF CVS(CONTACT$,2)<>"" THEN PRINT (PRTR_DEV)@(H0+1),"CONFIRM TO: ",CONTACT$,'LF' ELSE PRINT (PRTR_DEV)'LF'
15060 PRINT (PRTR_DEV)@(H0+3),"CUSTOMER P.O.",@(H0+19),"DISCOUNT",@(H0+35),"SALESPERSON",@(H0+62),"TERMS"
15065 PRINT (PRTR_DEV)@(H0+3),A0$(49,10),@(H0+19),disc$,@(H0+35),X3$,@(H0+62),X1$(1,15)
15080 PRINT (PRTR_DEV)'LF',@(H0),"ORDER   SHIP",@(H0+19),"DESCRIPTION",@(H0+61)," PRICE       TOTAL",'LF'
15090 RETURN 
15400 REM " --- configuration detail
15402 IF X5$(1,1)<>"Y" THEN GOTO 15900
15405 FIND (ARE73_DEV,KEY=W0$(1,20),DOM=15900)IOL=ARE73A
15410 IF L+1>L9 THEN GOSUB 5800
15415 PRINT (PRTR_DEV)@(H0+21),"Type: ",WX1$(4,3),
15420 IF WX1$(4,1)="S" or wx1$(16,3)="RN1" THEN READ RECORD (SMC01_DEV,KEY=WX1$(31,6),ERR=*NEXT)SMC01$; annual_dt$=smc01.annual_dt$(5,2)+"/"+smc01.annual_dt$(7,2)+"/";if sam_renew$="SAM Renew" or sam_renew$ = "RNT Renew" then annual_dt$=annual_dt$+str(num(smc01.annual_dt$(1,4))+1:"0000") else annual_dt$=annual_dt$+smc01.annual_dt$(1,4) fi;PRINT (PRTR_DEV)" Coverage through: ",annual_dt$,
15425 IF WX[1]<>0 THEN PRINT (PRTR_DEV)@(H0+31),"Media: ",WX1$(1,3),
15430 IF WX[1]<>0 THEN PRINT (PRTR_DEV)"  Sets: ",WX[1]:"#0",
15435 PRINT (PRTR_DEV)'LF',
15440 LET L=L+1
15445 IF L+1>L9 THEN GOSUB 5800
15450 u$="Number of Users: "+str(wx[2]:"###0- ")+wx1$(10,2)+" "+str(WX[3]:"#### ")+wx1$(12,2)
15455 if wx1$(4,3)="ADD" and wx1$(8,1)="T" then u$="New "+u$
15460 PRINT (PRTR_DEV)@(H0+21),cvs(u$,35),
15465 PRINT (PRTR_DEV)'LF',
15470 LET L=L+1
15500 REM " --- serial number detail"
15510 LET ACT$="",DEACT$="",MOD$=""
15520 READ (ARE83_DEV,KEY=W0$(1,20),DOM=15521)
15530 LET ARE83_K$=KEY(ARE83_DEV,END=15600)
15540 IF POS(W0$(1,20)=ARE83_K$)<>1 THEN GOTO 15600
15550 READ (ARE83_DEV,KEY=ARE83_K$)IOL=ARE83A
15560 IF WY1$(1,1)="M" THEN LET MOD$=MOD$+WY2$
15570 IF WY1$(1,1)="A" THEN LET ACT$=ACT$+WY2$
15580 IF WY1$(1,1)="D" THEN LET DEACT$=DEACT$+WY2$
15590 GOTO 15530
15600 REM " --- print them
15610 LET STR$=MOD$,TITLE$="Serial Numbers: "
15620 GOSUB 15700
15630 LET STR$=ACT$,TITLE$="New Serial Numbers: "
15640 GOSUB 15700
15650 LET STR$=DEACT$,TITLE$="Deactivated Serial Numbers: "
15660 GOSUB 15700
15665 PRINT (PRTR_DEV)'LF',; LET L=L+1; IF L>L9 THEN GOSUB 5800
15670 GOTO 15900
15700 REM " --- print them
15705 IF STR$="" THEN GOTO 15790
15710 REM LET SLINES=INT(LEN(STR$)/40)+1
15715 LET SNUMBS=INT(LEN(STR$)/20)
15720 REM IF L+SLINES+1>L9 THEN GOSUB 5800
15722 REM IF L+4>L9 THEN GOSUB 5800
15724 IF L+2>L9 THEN GOSUB 5800
15730 PRINT (PRTR_DEV)@(H0+21),TITLE$; LET L=L+1
15740 PRINT (PRTR_DEV)@(H0+23),
15750 FOR SL=1 TO SNUMBS
15760 PRINT (PRTR_DEV)STR$((SL-1)*20+1,20),"  ",
15770 IF MOD(SL,2)=0 THEN PRINT (PRTR_DEV)'LF',@(H0+23),; LET L=L+1
15772 IF L+1>L9 THEN GOSUB 5800; PRINT (PRTR_DEV)@(H0+23),
15780 NEXT SL
15785 IF MOD(SNUMBS,2)<>0 THEN PRINT (PRTR_DEV)'LF',; LET L=L+1
15787 IF L+1>L9 THEN GOSUB 5800
15790 RETURN 
15900 REM " --- Done"
15990 RETURN
16200 ivm01_itm:
16210 ivmok=0
16220 READ (ivm01_dev,KEY=firm$+ivm01_itm$,ERR=*next)iol=ivm01a;ivmok=1
16230 if ivmok or len(cvs(ivm01_itm$,3))<15 then return
16240 ivm01_itm$(10,3)="CUR"
16250 if ivm01_itm$(13,3)<>"STD" and ivm01_itm$(1,3)="BAS" then ivm01_itm$(13,3)="EXP"
16260 READ (ivm01_dev,KEY=firm$+ivm01_itm$,ERR=*next)iol=ivm01a;ivmok=1
16290 return
46500 END
