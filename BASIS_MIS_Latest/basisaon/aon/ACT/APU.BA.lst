0010 REM "APU - Computer Check Register Update"
0020 REM "Program APU.BA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0050 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- OPEN/LOCK FILES"
0110 LET FILES=17
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="APW-01",FILES$[2]="APE-04",FILES$[3]="APE-05"
0130 LET FILES$[4]="APT-01",FILES$[5]="APT-11",FILES$[6]="SYS-01"
0135 LET FILES$[7]="APM-01",FILES$[8]="APM-03",FILES$[9]="APM-10"
0140 LET FILES$[10]="APT-02",FILES$[11]="APE-06",FILES$[12]="APE-16"
0145 LET FILES$[13]="APM-02"
0150 LET FILES$[14]="GLM-01",FILES$[15]="GLT-04",FILES$[16]="GLT-05"
0155 LET FILES$[17]="APM-11"
0157 LET OPTIONS$[2]="L"; REM "Lock APE-04"
0160 CALL "SYC.DA",1,1,13,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0172 LET APW01_DEV=CHANNELS[1],APE04_DEV=CHANNELS[2],APE05_DEV=CHANNELS[3]
0175 LET APT01_DEV=CHANNELS[4],APT11_DEV=CHANNELS[5],SYS01_DEV=CHANNELS[6]
0180 LET APM01_DEV=CHANNELS[7],APM03_DEV=CHANNELS[8],APM10_DEV=CHANNELS[9]
0185 LET APT02_DEV=CHANNELS[10],APE06_DEV=CHANNELS[11],APE16_DEV=CHANNELS[12]
0190 LET APM02_DEV=CHANNELS[13]
0200 REM " --- IOLISTS"
0210 APW01A: IOLIST A0$
0220 APE04A: IOLIST B0$,B[ALL]
0230 APE05A: IOLIST C0$(1),C1$,C[ALL]
0240 APT01A: IOLIST D0$,D[ALL]
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 APS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0280 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0285 APM03A: IOLIST *,X0$
0290 APM01A: IOLIST *,H1$
0300 APM10B: IOLIST Z$,Z0$
0310 APT02A: IOLIST X0$,X[ALL]
0330 APM02A: IOLIST X0$,X1$,X2$,X[ALL]
0340 APT11A: IOLIST Y0$,Y1$,Y[ALL]
0345 APM11A: IOLIST X0$,X1$,X[ALL]
0400 REM " --- PARAMETERS"
0405 DIM P[6],G[4],INFO$[20]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="AP",N3$=F5$
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=APS01A
0435 LET BR$=P3$(17,1)
0440 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0450 FOR X=0 TO 4
0455 LET G[X]=NUM(G2$(X*2+1,2),ERR=0460)
0460 NEXT X
0465 LET G[2]=FNYY_YEAR(G2$(5,2))
0470 LET P[0]=NUM(P2$(1,2)),P[5]=NUM(P4$(1,2)),P[6]=FNYY_YEAR(P4$(3,2))
0475 CALL "SYC.VA",N2$,INFO$[ALL]
0480 LET GL$=INFO$[9]
0500 REM " --- INIT DATA"
0510 DIM B[3],C[2],D[2],X[13],V[1],T[2],J1$(40)
0540 LET G9$=G3$(G[0]*2-1,2),W=P[6]
0550 IF G9$<G3$(1,2) THEN LET W=W+1
0570 LET G9$=FNI$(W)+G9$,G8$=FND$("1231"+FNYEAR_YY21$(W))
0575 LET P=POS(FNI$(12)=G3$,2),P=INT(P/2)+1
0585 IF P=12 THEN GOTO 0600; REM "THIS IS A CALENDAR YEAR
0590 IF P[5]<=P THEN LET G8$=FND$("1231"+FNYEAR_YY21$(P[6]))
0595 IF P[5]>P THEN LET G8$=FND$("1231"+FNYEAR_YY21$(P[6]+1))
0600 REM " --- Additional File Opens"
0610 IF GL$<>"Y" THEN GOTO 0650
0620 CALL "SYC.DA",1,14,16,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0630 IF STATUS>0 THEN GOTO 9900
0640 LET GLM01_DEV=CHANNELS[14],GLT04_DEV=CHANNELS[15],GLT05_DEV=CHANNELS[16]
0650 IF BR$<>"Y" THEN GOTO 0700
0670 CALL "SYC.DA",1,17,17,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0680 IF STATUS>0 THEN GOTO 9900
0690 LET APM11_DEV=CHANNELS[17]
0700 REM " --- Background"
0710 PRINT @(0,3),'CE',
0800 REM " --- Run Update?"
0810 LET V4$="Are You Ready To Update The "+N3$
0820 CALL "SYC.YN",0,V4$,0,V$,V3
0830 IF V$<>"YES" THEN GOTO 9900
0900 REM " --- File initializations"
0910 CALL "SYC.NB","Updating",10,COLUMN
0940 REM " --- Disallow 'M'enu option in Error Routine
0950 LET EXIT_CTRL=1
1000 REM " --- INIT READ"
1020 READ (APW01_DEV,KEY=N0$,DOM=1030)
1100 REM " --- MAIN READ"
1110 LET K0$=KEY(APW01_DEV,END=4000)
1120 READ (APW01_DEV)IOL=APW01A
1130 IF POS(N0$=A0$)<>1 THEN GOTO 4000
1140 PRINT @(COLUMN,11),A0$(3,2)," ",A0$(5,7),
1150 IF A0$(12,1)="V" THEN GOTO 3800
1200 REM " --- CHECK DETAIL"
1210 LET K1$=K0$(1,4)+A0$(16,16)
1220 READ (APE04_DEV,KEY=K1$,DOM=3800)IOL=APE04A
1225 IF LEN(B0$)<62 THEN GOTO 3800
1230 IF B0$(56,7)<>A0$(5,7) THEN GOTO 3800
1240 GOTO 1400
1300 REM " --- NEXT INVOICE"
1320 LET K1$=KEY(APE04_DEV,END=3900)
1340 IF K1$(1,10)<>K0$(1,4)+A0$(16,6) THEN GOTO 3900
1350 IF K1$(5,4)="TEMP" THEN GOTO 3900
1360 READ (APE04_DEV)IOL=APE04A
1400 REM " --- OPEN INVOICE"
1410 LET T0=0
1420 GOSUB 6000
1500 REM " --- VENDOR"
1510 IF B0$(5,4)="TEMP" THEN GOTO 1600
1540 EXTRACT (APM02_DEV,KEY=N0$+B0$(5,6)+B0$(3,2),DOM=1600)IOL=APM02A
1550 LET X1$(10,3)=A0$(13,3),X[0]=X[0]-B[0]+B[2]
1560 IF A0$(13,3)<=G9$ THEN LET X[5]=X[5]+B[1],X[8]=X[8]+B[0]-B[2]-B[1]
1570 IF A0$(13,3)>G9$ THEN LET X[7]=X[7]+B[1],X[10]=X[10]+B[0]-B[2]-B[1]
1580 IF A0$(13,3)<=G8$ THEN LET X[11]=X[11]+B[0]-B[2]-B[1]
1585 IF A0$(13,3)>G8$ THEN LET X[13]=X[13]+B[0]-B[2]-B[1]
1590 WRITE (APM02_DEV,KEY=N0$+B0$(5,6)+B0$(3,2))IOL=APM02A
1600 REM " --- G/L Reference Fields"
1610 IF GL$<>"Y" THEN GOTO 1700
1620 LET REF2$=B0$(11,10),REF3$=A0$(5,7)+" "+A0$(3,2),WHEN$=A0$(13,3)
1625 LET MEMO$="Unknown Vendor"
1630 IF B0$(5,4)="TEMP" THEN GOTO 1680
1640 LET REF1$=FNF$(B0$(5,P[0]),M0$)
1650 FIND (APM01_DEV,KEY=N0$+B0$(5,6),DOM=1700)IOL=APM01A
1660 LET MEMO$=H1$
1670 GOTO 1700
1680 LET REF1$=B0$(5,4)
1685 FIND (APM03_DEV,KEY=B0$(1,4)+B0$(11,10),DOM=1700)IOL=APM03A
1690 LET MEMO$=X0$
1700 REM " --- DIST CODE"
1710 IF D9$=K2$ THEN GOTO 1800
1730 LET K2$=D9$
1740 DIM Z0$(4*G[4],"0")
1750 FIND (APM10_DEV,KEY=N0$+"B"+K2$,DOM=1760)IOL=APM10B
2000 REM " --- CASH BASIS"
2010 IF P3$(4,1)<>"Y" THEN GOTO 2200
2035 LET ACCOUNT$="",T9=0
2040 READ (APT02_DEV,KEY=B0$(1,10)+"I"+B0$(11,10),DOM=2050)
2050 LET K$=KEY(APT02_DEV,END=2120)
2055 IF LEN(K$)<21 THEN GOTO 2120
2060 IF K$(1,21)<>B0$(1,10)+"I"+B0$(11,10) THEN GOTO 2120
2070 READ (APT02_DEV)IOL=APT02A
2075 IF T0=0 THEN LET T0=B[0]-B[2]
2077 IF T0=0 THEN GOTO 2050
2080 LET ACCOUNT$=X0$(22,G[4])
2085 LET AMOUNT=X[0]*((B[0]-B[2])/T0),UNITS=X[1]*((B[0]-B[2])/T0)
2090 GOSUB GLPOST
2095 LET T9=T9+AMOUNT
2100 GOTO 2050
2120 IF ACCOUNT$="" THEN GOTO 2150
2130 IF T9=B[0]-B[2] THEN GOTO 2150
2140 LET AMOUNT=B[0]-B[2]-T9
2145 GOSUB GLPOST
2200 REM " --- DIST CASH"
2220 LET ACCOUNT$=Z0$(G[4]+1,G[4]),AMOUNT=(-B[0])+B[2]+B[1],UNITS=0
2240 GOSUB GLPOST
2300 REM " --- PAYABLE"
2310 IF P3$(4,1)="Y" THEN GOTO 2400
2320 LET ACCOUNT$=Z0$(1,G[4]),AMOUNT=B[0]-B[2],UNITS=0
2340 GOSUB GLPOST
2400 REM " --- DISCOUNT"
2410 IF B[1]=0 THEN GOTO 2500
2420 LET ACCOUNT$=Z0$(2*G[4]+1,G[4]),AMOUNT=-B[1],UNITS=0
2440 GOSUB GLPOST
2800 REM " --- OPEN CHECKS"
2820 LET C0$=A0$(1,11)+B0$(5,16)+A0$(13,3)+"C"+K2$,C1$="",C[0]=B[0],C[1]=B[1],C[2]=B[2],C$=A0$(1,4)+C0$(5,23)
2840 IF B0$(5,4)<>"TEMP" THEN GOTO 2900
2870 FIND (APM03_DEV,KEY=B0$(1,4)+B0$(11,10),DOM=2900)IOL=APM03A
2880 LET C1$=X0$(1,30)
2900 WRITE (APE05_DEV,KEY=C$,DOM=2990)IOL=APE05A
2905 IF BR$="Y" THEN GOSUB 6500
2920 GOTO 3000
3000 REM " --- DELETE OPEN INVOICE"
3500 REM " --- REMOVE CHECK DETAIL"
3520 REMOVE (APE04_DEV,KEY=K1$)
3590 GOTO 1300
3800 REM " --- VOID CHECK"
3820 LET C0$=A0$(1,11)+J1$(1,16)+A0$(13,3)+"V",C1$="",C$=A0$(1,4)+C0$(5,23)
3830 DIM C[2]
3840 WRITE (APE05_DEV,KEY=C$,DOM=3890)IOL=APE05A
3845 IF BR$="Y" THEN LET X9$=X9$+C$(5,7)
3850 GOTO 3900
3900 REM " --- REMOVE CHECK"
3920 REMOVE (APW01_DEV,KEY=K0$,DOM=3930)
3990 GOTO 1100
4000 REM " --- CLEAR REMAINDER"
4020 READ (APE04_DEV,KEY=N0$,DOM=4040)
4100 LET K$=KEY(APE04_DEV,END=4200)
4120 IF POS(N0$=K$)<>1 THEN GOTO 4200
4140 REMOVE (APE04_DEV,KEY=K$)
4160 GOTO 4100
4200 REM " --- CLEAR SELECTION"
4230 READ (APE16_DEV,KEY=N0$,DOM=4240)
4240 LET K$=KEY(APE16_DEV,END=4280)
4245 IF K$="" THEN GOTO 4280
4250 IF POS(N0$=K$)<>1 THEN GOTO 4280
4260 REMOVE (APE16_DEV,KEY=K$)
4270 GOTO 4240
4280 REMOVE (APE06_DEV,KEY=N0$,DOM=4281)
4900 REM " --- All done"
4910 IF GL$="Y" THEN CALL "GLC.CA",STATUS
4990 GOTO 9900
6000 REM " --- UPDATE OPEN INVOICE"
6010 LET Y0$=B0$(1,20)+"00",D1=0,T0=0
6020 FIND (APT01_DEV,KEY=Y0$,DOM=6490)IOL=APT01A
6030 LET T[0]=D[0],T[1]=D[1],T[2]=D[2],D9$=D0$(23,2),T0=D[0]
6090 READ (APT11_DEV,KEY=Y0$,DOM=6100)
6100 REM " --- Accumulate any adjustments/payments"
6110 LET K$=KEY(APT11_DEV,END=6300)
6120 IF POS(K$(1,20)=B0$(1,20))<>1 THEN GOTO 6300
6130 READ (APT11_DEV)IOL=APT11A
6140 LET LASTSEQ=NUM(Y0$(21,2))
6150 LET T[0]=T[0]+Y[0],T[1]=T[1]+Y[1],T[2]=T[2]+Y[2]
6160 IF POS(Y1$(1,1)="IA") THEN LET T0=T0+D[0]
6190 GOTO 6100
6300 REM " --- Initialize new detail"
6320 LET Y0$=B0$(1,20)+STR(LASTSEQ+1:"00")
6340 DIM Y1$(11),Y[2]
6400 REM " --- WRITE DETAIL"
6420 LET Y1$(1)="C"+A0$(13,3)+A0$(5,7),Y[0]=(-B[0])+B[2],Y[1]=-B[1]
6440 WRITE (APT11_DEV,KEY=Y0$)IOL=APT11A
6450 LET T[0]=T[0]+Y[0],T[1]=T[1]+Y[1],T[2]=T[2]+Y[2]
6490 RETURN 
6500 REM " --- UPDATE APM-11"
6510 IF GL$<>"Y" THEN GOTO 6700
6515 DIM X1$(50),X[2]
6520 IF X9$="" THEN GOTO 6600
6540 LET X0$=C0$(1,2)+Z0$(G[4]+1,G[4])+X9$(1,7),X1$(1,2)="AV"
6545 LET X1$(3,6)=FNYY_YY21$(FNM$(FNC$(C0$(28,3)))),X1$(9,30)="VOID"
6550 WRITE (APM11_DEV,KEY=X0$)IOL=APM11A
6560 IF LEN(X9$)>7 THEN LET X9$=X9$(8) ELSE LET X9$=""
6590 GOTO 6515
6600 REM " --- DETAIL
6620 LET X0$=C0$(1,2)+Z0$(G[4]+1,G[4])+C0$(5,7),X1$(1,2)="AO"
6630 LET X1$(3,6)=FNYY_YY21$(FNM$(FNC$(C0$(28,3))))
6635 IF C0$(12,4)="TEMP" THEN LET X1$(9,30)=C1$; GOTO 6660
6640 FIND (APM01_DEV,KEY=C0$(1,2)+C0$(12,6),DOM=6660)IOL=APM01A
6650 LET X1$(9,30)=H1$
6655 LET Q$=X1$(9,30)
6660 LET X[0]=C[0]-C[1]-C[2]
6670 FIND (APM11_DEV,KEY=X0$,DOM=6690)IOL=APM11A
6680 LET X[0]=X[0]+C[0]-C[1],X1$(9,30)=Q$
6690 WRITE (APM11_DEV,KEY=X0$)IOL=APM11A
6750 DIM X[13]
6790 RETURN 
6900 REM " --- Standard G/L Posting Routine"
6910 GLPOST: 
6920 IF GL$<>"Y" THEN GOTO 6990
6950 CALL "GLC.AA",GLM01_DEV,GLT04_DEV,GLT05_DEV,ACCOUNT$,WHEN$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN 
8000 REM " --- FUNCTIONS"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8060 DEF FNM$(Q$)=Q$(5,2)+Q$(1,4)
8090 DEF FNI$(Q)=CHR(Q+32)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9205 SETESC 9000
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
