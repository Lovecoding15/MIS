0010 REM "ARR - LABEL II"
0020 REM "Program ARR.EB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open Files
0200 REM " --- IOLists
0210 ARM01A: IOLIST A0$,A1$
0220 ARM02A: IOLIST B0$,B1$
0400 REM " --- Parameters
0500 REM " --- Init Data
0515 LET X8$="First"
0520 IF W2<6 THEN LET X9=W2 ELSE LET X9=6
0530 DIM B0$(48),B1$(48)
0600 CALL "SYC.GA",7,1,"","",STATUS
0605 IF STATUS THEN GOTO 9900
0700 REM " --- Background
0800 REM " --- Options
0810 CALL "SYC.YN",0,"Do You Wish To Print A Test Pattern?",3,V$,V3
0825 PRINT @(0,15),'CL',
0830 IF V3=4 THEN GOTO 9900
0840 ON POS(V$="YN") GOTO 0800,0850,0900
0850 DIM W0$(W0*W1*6,"X")
0860 LET X0=1
0870 GOSUB 5500
0880 GOTO 0800
0900 REM " --- Determine Start
0920 CALL "SYC.NB","Printing:",30,COLUMN
0980 ON POS(P7$="NAZ") GOTO 0910,1000,1500,1800
1000 REM " --- Numeric Sequence
1020 READ (ARM01_DEV,KEY=N0$+P6$,DOM=1030)IOL=ARM01A
1025 GOTO 1130
1100 REM " --- Main Read Numeric Seq
1120 READ (ARM01_DEV,END=4000)IOL=ARM01A
1125 READ (ARM02_DEV,KEY=N0$+A0$(3,6)+"  ",DOM=1130)IOL=ARM02A
1130 IF A0$(1,2)<>N0$ THEN GOTO 4000
1135 IF P9$="N" THEN GOTO 1200
1140 IF P8$<>"" THEN IF A0$(3,6)>P8$ THEN GOTO 4000
1200 REM " --- Setup
1280 GOSUB 5000
1290 GOTO 1100
1500 REM " --- Alternate Sequence
1510 LET P7$="A"
1520 READ (ARM04_DEV,KEY=N0$+P7$+P6$,DOM=1530)
1600 REM " --- Main Read Alternate Seq
1620 LET K$=KEY(ARM04_DEV,END=4000)
1640 IF K$(1,3)<>N0$+P7$ THEN GOTO 4000
1645 IF P9$="N" THEN GOTO 1660
1650 IF P8$<>"" THEN IF K$(4,LEN(P8$))>P8$ THEN GOTO 4000
1660 READ (ARM04_DEV)
1680 FIND (ARM01_DEV,KEY=N0$+K$(14),DOM=1600)IOL=ARM01A
1690 FIND (ARM02_DEV,KEY=N0$+K$(14)+"  ",DOM=1700)IOL=ARM02A
1700 REM " --- Setup
1780 GOSUB 5000
1790 GOTO 1600
1800 REM " --- Zip Code Sequence
1810 LET P7$="E"
1820 READ (ARM04_DEV,KEY=N0$+P7$+P6$,DOM=1830)
1900 REM " --- Main Read Zip Code Seq
1920 LET K$=KEY(ARM04_DEV,END=4000)
1940 IF K$(1,3)<>N0$+P7$ THEN GOTO 4000
1945 IF P9$="N" THEN GOTO 1960
1950 IF P8$<>"" THEN IF K$(4,P[2])>P8$ THEN GOTO 4000
1960 READ (ARM04_DEV)
1980 FIND (ARM01_DEV,KEY=N0$+K$(13),DOM=1900)IOL=ARM01A
1985 FIND (ARM02_DEV,KEY=N0$+K$(13)+"  ",DOM=2000)IOL=ARM02A
2000 REM " --- Setup
2080 GOSUB 5000
2090 GOTO 1900
4000 REM " --- Totals
4020 GOSUB 5500
4100 GOTO 9900
5000 REM " --- Prepare Address
5010 IF X9$<>"  " THEN IF B1$(28,2)<>X9$ THEN RETURN 
5100 REM " --- Assemble
5120 LET X3=0
5130 LET X3=X3+1
5140 IF X3>W3 THEN RETURN 
5150 IF X0>=W0 THEN GOSUB 5500
5160 LET X0=X0+1
5180 PRINT @(COLUMN,11),A1$(1,30),
5190 LET W1$=A1$(31,72)+A1$(179,48)+A1$(103,P[2])
5192 CALL "SYC.AA",W1$,24,5,P[2],30
5200 LET W0$(W1*(X0-1)+1,W1)=A1$(1,30)
5210 LET W0$(W1*(W0+X0-1)+1,W1)=W1$(1,30)
5220 LET W0$(W1*(2*W0+X0-1)+1,W1)=W1$(31,30)
5230 LET W0$(W1*(3*W0+X0-1)+1,W1)=W1$(61,30)
5240 LET W0$(W1*(4*W0+X0-1)+1,W1)=W1$(91,30)
5250 LET W0$(W1*(5*W0+X0-1)+1,W1)=W1$(121,30)
5270 IF X8=21 OR X8>=W1 THEN GOTO 5290
5275 IF X8=1 THEN LET X8=0
5280 LET W0$(W1*((X9-1)*W0+X0-1)+X8+1,W1-X8)=W1$(151,30)
5290 GOTO 5130
5500 REM " --- Print
5520 IF X0=0 THEN RETURN 
5530 IF X8$="First" THEN FOR X=1 TO W2; PRINT (7)""; NEXT X; LET X8$=""
5540 FOR X=0 TO X9-1
5560 PRINT (7)@(0+W9),W0$(X*W0*W1+1,W0*W1)
5580 NEXT X
5600 IF W2>6 THEN PRINT (7)W9$(1,W2-7)
5620 LET X0=0,W0$(1)=""
5690 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
