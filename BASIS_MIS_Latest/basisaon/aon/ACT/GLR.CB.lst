0010 REM "GLR - G/L Transaction History Report (Report Overlay)"
0020 REM "Program GLR.CB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLIST's"
0210 GLM01A: IOLIST A0$(1),A1$(1)
0215 GLM02A: IOLIST X0$(1),A[ALL],U[ALL]
0220 GLM03A: IOLIST B0$(1),B1$,B[ALL]
0230 GLT06A: IOLIST C0$(1),C1$(1),C2$,C[ALL]
0500 REM " --- Initializations"
0510 DIM A0$(2+P[4]),A1$(40),B0$(32),B[2]
0520 DIM C0$(26+P[4]),C1$(64),C[4],O[10],AT[2],ET[2],PT[2],JT[2],RT[2]
0530 LET L9=59,L=L9+1
0550 IF INQUIRY$<>"" THEN LET HEADINGS$[1]=INQUIRY$
0560 LET T0$="",T1$="",T2$="",H0$="",H1$="",DONE=0,L1=0
0570 LET STARTING$=BEGYEAR$+BEGPER$,ENDING$=ENDYEAR$+ENDPER$
0575 IF BEGPER$="" THEN LET STARTING$=BEGYEAR$+"01"
0580 IF ENDPER$="" THEN LET ENDING$=ENDYEAR$+STR(P[0]:"00")
0590 LET A0$(1,2)=N0$,A0$(3)=ACCOUNT$,BB$="Beginning Balance"
0600 REM " --- Initialize Print Positions"
0610 LET O[10]=H0-1,UNITHDR=H0-1,UNITHDR$=""
0620 IF P4$(3,1)="Y" THEN LET O[10]=H0-M2,UNITHDR=H0-6,UNITHDR$="Units"
0630 LET O[9]=O[10]-M1,O[8]=O[9]-M1,O[7]=O[8]-11,O[6]=O[7]-11
0640 LET O[5]=O[6]-11,O[4]=O[5]-31,O[3]=O[4]-8,O[2]=O[3]-5
0650 IF DETAIL$="S" THEN LET O[2]=O[8]-25
0660 LET O[1]=O[2]-10
0700 REM " --- Background"
0750 CALL "SYC.NB","Printing",M0,COLUMN
0800 REM " --- Determine which years for GLM-02 records"
0810 LET BEGPER=0,ENDPER=P[0],YEAR2=YEAR1+1,YEAR3=YEAR2+1
0820 LET BEGYEAR=FNYY_YEAR(BEGYEAR$),ENDYEAR=FNYY_YEAR(ENDYEAR$)
0825 IF BEGPER$<>"" THEN LET BEGPER=NUM(BEGPER$)-1
0830 IF ENDPER$<>"" THEN LET ENDPER=NUM(ENDPER$)
0835 LET RECORDS$="204",RECORDS=LEN(RECORDS$),BEGOFFSET=0,ENDOFFSET=0
0840 IF BEGYEAR=YEAR2 THEN LET BEGOFFSET=1
0845 IF BEGYEAR=YEAR3 THEN LET BEGOFFSET=2
0850 IF ENDYEAR=YEAR2 THEN LET ENDOFFSET=1
0855 IF ENDYEAR=YEAR3 THEN LET ENDOFFSET=2
0860 LET BEGINDEX=MP*BEGOFFSET+BEGOFFSET,ENDINDEX=MP*ENDOFFSET+ENDOFFSET
0900 REM " --- Position File"
0970 LET C0$(1)=N0$+BEGACCT$
0980 IF BEGACCT$<>"" THEN LET C0$(3+P[4],2)=BEGYEAR$
0990 READ (GLT06_DEV,KEY=C0$,DOM=1000)
1000 REM " --- Read next GLT-06 record"
1010 LET K$=KEY(GLT06_DEV,END=4000)
1015 IF POS(N0$=K$)<>1 THEN GOTO 4000
1020 READ (GLT06_DEV,KEY=K$)IOL=GLT06A
1030 IF ENDACCT$<>"" THEN IF K$(3,P[4])>ENDACCT$ THEN GOTO 4000
1040 IF K$(3+P[4],4)<STARTING$ THEN GOTO 3900
1050 IF K$(3+P[4],4)>ENDING$ THEN GOTO 3900
1080 IF JOURNAL$<>"" THEN IF K$(13+P[4],2)<>JOURNAL$ THEN GOTO 3900
1085 GOSUB 6800
1090 IF STATUS>0 THEN GOTO 3900
1100 REM " --- Display account being processed"
1110 PRINT @(COLUMN,11),FNF$(C0$(3,P[3]),M0$)
1200 REM " --- Level breaks?"
1210 IF C0$(3,P[4])<>T0$ THEN GOSUB 6000
1220 IF C0$(3+P[4],4)<>T1$ THEN GOSUB 6200
1230 IF DETAIL$="S" THEN IF C0$(7+P[4],8)<>T2$ THEN GOSUB 6400
1500 REM " --- Print subheadings"
1510 IF H0$<>"" THEN GOSUB 5300
1520 IF H1$<>"" THEN GOSUB 5400
2000 REM " --- Format detail line fields"
2010 LET DEBITS=0,CREDITS=0,UNITS=C[1],DEBIT$="",CREDIT$="",UNIT$=""
2020 IF C[0]>0 THEN LET DEBITS=C[0],DEBIT$=STR(C[0]:M1$)
2030 IF C[0]<0 THEN LET CREDITS=C[0],CREDIT$=STR(ABS(C[0]):M1$)
2040 IF P4$(3,1)="Y" THEN IF UNITS<>0 THEN LET UNIT$=STR(UNITS:M2$)
2100 REM " --- Print detail line"
2110 IF DETAIL$="S" THEN GOTO 2500
2120 IF L+1>L9 THEN GOSUB 5000
2130 PRINT (7)@(O[1]),FNB6$(C0$(7+P[4],6)),@(O[2]),C0$(13+P[4],2),@(O[3]),C0$(15+P[4],7),@(O[4]),C1$(31,30),@(O[5]),C1$(1,10),@(O[6]),C1$(11,10),@(O[7]),C1$(21,10),@(O[8]),DEBIT$,@(O[9]),CREDIT$,@(O[10]),UNIT$
2140 LET L=L+1,L1=L1+1
2500 REM " --- Accumulate totals"
2510 LET AT[0]=AT[0]+DEBITS,AT[1]=AT[1]+CREDITS,AT[2]=AT[2]+UNITS
2520 LET PT[0]=PT[0]+DEBITS,PT[1]=PT[1]+CREDITS,PT[2]=PT[2]+UNITS
2530 LET JT[0]=JT[0]+DEBITS,JT[1]=JT[1]+CREDITS,JT[2]=JT[2]+UNITS
2540 LET RT[0]=RT[0]+DEBITS,RT[1]=RT[1]+CREDITS,RT[2]=RT[2]+UNITS
2550 LET ET[0]=ET[0]+DEBITS,ET[1]=ET[1]+CREDITS,ET[2]=ET[2]+UNITS
3900 REM " --- Loop back for next GLT-06 record"
3990 GOTO 1000
4000 REM " --- All Done"
4010 LET DONE=1
4020 GOSUB 6000
4030 LET TOTAL$="Total For Report",DEBITS=RT[0],CREDITS=RT[1],UNITS=RT[2]
4035 LET AMOUNT=DEBITS+CREDITS
4040 IF AMOUNT<>0 THEN GOSUB 6600
4090 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,H,H0,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5090 IF DETAIL$="D" THEN GOTO 5200
5100 REM " --- Summary Report Heading"
5110 PRINT (7)""
5120 PRINT (7)@(O[0]),"Account",@(O[1]+2),"Date",@(O[2]),"Journal",@(O[8]+M1-7),"Debits",@(O[9]+M1-8),"Credits",@(UNITHDR),UNITHDR$
5130 LET L=L+2
5190 RETURN 
5200 REM " --- Detail Report Heading"
5210 PRINT (7)""
5220 PRINT (7)@(O[0]),"Account",@(O[1]+2),"Date",@(O[2]),"Jrnl",@(O[3]),"Audit #",@(O[4]),"Memo",@(O[5]),"Ref 1",@(O[6]),"Ref 2",@(O[7]),"Ref 3",@(O[8]+M1-7),"Debits",@(O[9]+M1-8),"Credits",@(UNITHDR),UNITHDR$
5230 LET L=L+2
5290 RETURN 
5300 REM " --- Account Heading"
5310 IF L+5>L9 THEN GOSUB 5000
5320 PRINT (7)""
5330 PRINT (7)H0$,@(O[8]-LEN(BB$)),BB$,@(O[8]),BEGDEBIT$,@(O[9]),BEGCREDIT$,@(O[10]),BEGUNITS$
5340 LET L=L+2,H0$=""
5390 RETURN 
5400 REM " --- Period Heading"
5410 IF L+5>L9 THEN GOSUB 5000
5430 PRINT (7)@(O[1]),H1$
5450 LET L=L+1,H1$=""
5490 RETURN 
6000 REM " --- Account number break"
6010 IF T0$="" THEN GOTO 6100
6020 GOSUB 6200
6030 LET TOTAL$="Total For Account "+FNF$(A0$(3,P[3]),M0$)
6040 LET DEBITS=AT[0],CREDITS=AT[1],UNITS=AT[2]
6050 GOSUB 6600
6065 IF JOURNAL$<>"" THEN GOTO 6100
6070 GOSUB 6700
6075 IF ENDBAL=AMOUNT THEN GOTO 6100
6080 LET DEBITS=ENDBAL-AMOUNT,CREDITS=0,UNITS=ET[2]-UNITS
6085 IF DEBITS<0 THEN LET CREDITS=DEBITS,DEBITS=0
6090 LET TOTAL$="WARNING: Transaction Total Differs From Summary Activity By"
6095 GOSUB 6600
6100 REM 
6105 IF DONE>0 THEN GOTO 6190
6110 DIM AS[(MP+1)*3],US[(MP+1)*3],AT[2],ET[2]
6120 LET T0$=C0$(3,P[4]),A0$(1)=N0$+T0$,A1$(1)="(Not On File)"
6130 FIND (GLM01_DEV,KEY=A0$,DOM=6140)IOL=GLM01A
6140 LET H0$=FNF$(A0$(3,P[3]),M0$)+" "+A1$(1,35)
6145 GOSUB 6900
6150 LET ET[1]=AS[BEGINDEX],ET[2]=US[BEGINDEX]
6153 IF BEGPER=0 THEN GOTO 6175
6155 FOR X=1 TO BEGPER
6165 LET ET[1]=ET[1]+AS[BEGINDEX+X],ET[2]=ET[2]+US[BEGINDEX+X]
6170 NEXT X
6175 LET BEGCREDIT$=STR(ABS(ET[1]):M1$),BEGDEBIT$="",BEGUNITS$=""
6177 IF P4$(3,1)="Y" THEN LET BEGUNITS$=STR(ET[2]:M2$)
6180 IF ET[1]<0 THEN GOTO 6190
6185 LET ET[0]=ET[1],ET[1]=0,BEGDEBIT$=STR(ET[0]:M1$),BEGCREDIT$=""
6190 RETURN 
6200 REM " --- Period break"
6210 IF T1$="" THEN GOTO 6300
6215 IF DETAIL$="D" AND L1<1 THEN GOTO 6255
6220 GOSUB 6400
6230 LET X$=P3$((PERIOD-1)*3+235,3),TOTAL$="Total For "+X$+" "+Y$
6240 LET DEBITS=PT[0],CREDITS=PT[1],UNITS=PT[2]
6250 GOSUB 6600
6255 LET TOTAL$="Ending Balance For "+X$+" "+Y$
6260 LET ENDBAL=ET[0]+ET[1],DEBITS=ENDBAL,CREDITS=0,UNITS=ET[2]
6265 IF ENDBAL<0 THEN LET CREDITS=ENDBAL,DEBITS=0
6270 GOSUB 6600
6300 REM 
6305 IF DONE>0 THEN GOTO 6390
6310 DIM PT[2]
6320 LET M$=C0$(5+P[4],2),PERIOD=NUM(M$),X$=P3$((PERIOD-1)*3+235,3)
6330 LET Y$=C0$(3+P[4],2),T1$=Y$+M$,Y$=FNYY21_YY$(Y$),H1$=X$+" "+Y$
6340 LET L1=0
6390 RETURN 
6400 REM " --- Journal break"
6410 IF DETAIL$="D" THEN GOTO 6590
6420 IF T2$="" THEN GOTO 6500
6430 LET AMOUNT=JT[0]+JT[1],DEBIT$=STR(AMOUNT:M1$),CREDIT$="",UNIT$=""
6440 IF AMOUNT<0 THEN LET CREDIT$=STR(ABS(AMOUNT):M1$),DEBIT$=""
6445 IF P4$(3,1)="Y" THEN IF UNITS<>0 THEN LET UNIT$=STR(JT[2]:M2$)
6470 IF L+1>L9 THEN GOSUB 5000
6480 PRINT (7)@(O[1]),FNB6$(T2$(1,6)),@(O[2]),H2$,@(O[8]),DEBIT$,@(O[9]),CREDIT$,@(O[10]),UNIT$
6490 LET L=L+1
6500 REM 
6505 IF DONE>0 THEN GOTO 6590
6510 DIM JT[2],B[2]
6520 LET B0$(1,4)=N0$+C0$(13+P[4],2),B0$(5)="(Not On File)"
6530 FIND (GLM03_DEV,KEY=B0$(1,4),DOM=6540)IOL=GLM03A
6540 LET T2$=C0$(7+P[4],8),H2$=B0$(3,2)+" "+FNP$(B0$(5,20))
6590 RETURN 
6600 REM " --- Print totals line"
6610 LET AMOUNT=DEBITS+CREDITS,DEBIT$=STR(AMOUNT:M1$),CREDIT$="",UNIT$=""
6615 IF AMOUNT<0 THEN LET CREDIT$=STR(ABS(AMOUNT):M1$),DEBIT$=""
6620 IF P4$(3,1)="Y" THEN LET UNIT$=STR(UNITS:M2$)
6630 IF L+1>L9 THEN GOSUB 5000
6650 PRINT (7)@(O[8]-LEN(TOTAL$)),TOTAL$,@(O[8]),DEBIT$,@(O[9]),CREDIT$,@(O[10]),UNIT$
6660 LET L=L+1
6690 RETURN 
6700 REM " --- Calculate GLM-02 ending balance"
6710 LET AMOUNT=AS[ENDINDEX],UNITS=US[ENDINDEX]
6720 FOR X=1 TO ENDPER
6730 LET AMOUNT=AMOUNT+AS[ENDINDEX+X],UNITS=UNITS+US[ENDINDEX+X]
6740 NEXT X
6790 RETURN 
6800 REM " --- Test account number against specified wildcard mask"
6810 LET STATUS=0
6820 IF WILDCARD$="" THEN GOTO 6890
6825 IF WILDCARD<>LEN(WILDCARD$) THEN LET WILDCARD=LEN(WILDCARD$)
6830 LET X$=FNF$(K$(3,P[3]),M0$)
6840 FOR X=1 TO WILDCARD
6850 IF WILDCARD$(X,1)="?" THEN GOTO 6880
6860 IF X$(X,1)<>WILDCARD$(X,1) THEN LET STATUS=1
6880 NEXT X
6890 RETURN 
6900 REM " --- Load GLM-02 summary activity for account"
6910 FOR X=1 TO RECORDS
6920 DIM X0$(3+P[4]),A[MP],U[MP]
6930 LET X0$(1)=A0$+RECORDS$(X,1),Y=(X-1)*MP+(X-1)*1
6940 FIND (GLM02_DEV,KEY=X0$,DOM=6980)IOL=GLM02A
6950 FOR P=0 TO MP
6960 LET AS[Y+P]=A[P],US[Y+P]=U[P]
6970 NEXT P
6980 NEXT X
6990 RETURN 
8000 REM " --- Functions"
8025 DEF FNB6$(Q1$)=Q1$(3,2)+"/"+Q1$(5,2)+"/"+FNYY21_YY$(Q1$(1,2))
8070 DEF FNP$(Q$)=CVS(Q$,2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return To Menu"
9910 RUN MENU$,ERR=9950
9950 RUN "SYS.AA"
9999 END
