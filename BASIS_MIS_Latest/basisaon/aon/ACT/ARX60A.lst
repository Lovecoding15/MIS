0010 REM "ARX - Convert AR to 6.0"
0020 REM "Program ARX60A"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0106 LET FILES=1
0107 GOSUB RENAME_ARM03
0110 LET FILES=16
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0130 LET FILES$[1]="ARM-10",FILES$[2]="ARS-10",FILES$[3]="ART-01"
0140 LET FILES$[4]="ART-11",FILES$[5]="ART-06",FILES$[6]="ART-16"
0145 LET FILES$[7]="ART-26",FILES$[8]="ARM-03",FILES$[9]="ARM-T3"
0150 LET FILES$[10]="SYS-01"
0155 LET FILES$[11]="ARM-01",FILES$[12]="ARM01.TMP"
0160 LET FILES$[13]="ARM-02",FILES$[14]="ARM02.TMP"
0165 LET FILES$[15]="ARM-14",FILES$[16]="ARM14.TMP"
0170 CALL "SYC.DA",1,1,10,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0175 IF STATUS>0 THEN GOTO 9900
0180 LET ARM10_DEV=CHANNELS[1],ARS10_DEV=CHANNELS[2],ART01_DEV=CHANNELS[3]
0185 LET ART11_DEV=CHANNELS[4],ART06_DEV=CHANNELS[5],ART16_DEV=CHANNELS[6]
0190 LET ART26_DEV=CHANNELS[7],ARM03_DEV=CHANNELS[8],ARMT3_DEV=CHANNELS[9]
0195 LET SYS01_DEV=CHANNELS[10]
0200 REM " --- IOLISTs
0205 ARM03A: IOLIST C0$,C1$(1)
0210 ARMT3A: IOLIST T0$,T1$(1)
0220 ARM10JT: IOLIST C0$,C[ALL]
0230 ART01AR: IOLIST A0$,A1$(1),A[ALL]
0240 ART01AW: IOLIST A0$,A[0],A[1]
0250 ART01B: IOLIST B0$,B1$,B[ALL]
0260 ART11A: IOLIST C0$,C1$,C[ALL]
0270 ARS01CR: IOLIST D0$,D[ALL]
0275 ARS01CW: IOLIST D0$
0280 ARS10C: IOLIST D0$,D[ALL]
0285 ARS10N: IOLIST B0$,B[ALL]
0300 ARM14A: IOLIST K$
0310 ARM01A: IOLIST A0$,A1$(1)
0320 ARM02A: IOLIST B0$(1),B1$(1),B[ALL]
0370 SYS01N: IOLIST X$,X[ALL]
0380 SYS01T: IOLIST X$,F0$,X$,X$,F4$,F5$
0400 REM " --- Parameters
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="AR",N3$=F4$
0500 REM " --- Init Data
0505 PRECISION 14
0510 DIM A0$(71),A[8],J1$(13)
0530 LET M1$="##,##0"
0800 REM " --- Display Warning"
0810 CALL "SYC60A",N2$,SYS01_DEV,STATUS
0820 IF STATUS THEN GOTO 9900
0900 REM " --- Additional file Opens
0905 PRINT @(40,3),'CL',@(0,5),'CE',
0910 CALL "SYC.NB"," Making Temporary Files",0,COLUMN
0920 LET NUMBER=3
0925 DIM FROM$[NUMBER],TMPFILE$[NUMBER],FLAG$[NUMBER]
0930 LET FROM$[1]="ARM-01",TMPFILE$[1]="ARM01.TMP"
0935 LET FROM$[2]="ARM-02",TMPFILE$[2]="ARM02.TMP"
0940 LET FROM$[3]="ARM-14",TMPFILE$[3]="ARM14.TMP"
0950 CALL "SYC.RN",FROM$[ALL],TMPFILE$[ALL],FLAG$[ALL],NUMBER,STATUS
0955 IF STATUS<>0 THEN GOTO 9900
0970 CALL "SYC.DA",1,11,16,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0975 IF STATUS<>0 THEN GOTO 9900
0980 LET ARM01_DEV=CHANNELS[11],ARM01TMP_DEV=CHANNELS[12]
0985 LET ARM02_DEV=CHANNELS[13],ARM02TMP_DEV=CHANNELS[14]
0990 LET ARM14_DEV=CHANNELS[15],ARM14TMP_DEV=CHANNELS[16]
0995 CALL "SYC.NB","Processing",23,COLUMN
1000 REM " --- Initialize for ARM-03 Conversion "
1010 DIM C0$(14),C1$(174),T0$(10),T1$(174)
1015 PRINT @(40,3),"ARM-03 Ship-To Number Conversion"
1020 REM " --- Convert ARM-03 "
1030 READ_ARM03: 
1040 LET K$=KEY(ARMT3_DEV,END=DONE_ARM03)
1045 IF POS("Z"=K$)=1 THEN GOTO DONE_ARM03
1047 IF LEN(K$)<>10 THEN READ (ARMT3_DEV); GOTO NEXT_ARM03
1050 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
1055 READ (ARMT3_DEV)IOL=ARMT3A
1060 LET C0$(1)=T0$(1,8)+"0000"+T0$(9,2)
1070 LET C1$(1)=T1$(1)
1080 WRITE (ARM03_DEV,KEY=C0$(1))IOL=ARM03A
1090 NEXT_ARM03: 
1100 GOTO READ_ARM03
1110 DONE_ARM03: 
1120 CLOSE (ARMT3_DEV,ERR=1130)
1130 ERASE "ARM-T3"
1400 REM " --- Next Automatic Customer Number"
1405 PRINT @(40,3),"ARS-10 Next Customer Number",'CL',@(COLUMN,11),FILL(23),
1410 FOR I=1 TO 99
1420 DIM B[4],X[2]
1430 LET N0$=STR(I:"00"),B0$=N0$+"N"
1440 FIND (SYS01_DEV,KEY=N0$+"SY99",DOM=1490)IOL=SYS01N
1445 PRINT @(COLUMN,11),N0$,
1450 FIND (ARS10_DEV,KEY=B0$,DOM=1460)IOL=ARS10N
1460 LET B[0]=X[1],X[1]=0
1470 WRITE (SYS01_DEV,KEY=N0$+"SY99")IOL=SYS01N
1480 WRITE (ARS10_DEV,KEY=B0$)IOL=ARS10N
1490 NEXT I
1500 REM " --- Initialize for ARM-10 Conversion
1510 DIM C0$(6),C[0]
1520 PRINT @(40,3),"ARM-10 Accounts Receivable Codes",
1600 REM " --- Convert ARM-10
1605 READ_ARM10: 
1610 LET K$=KEY(ARM10_DEV,END=DONE_ARM10)
1615 IF POS("Z"=K$)=1 THEN REMOVE (ARM10_DEV,KEY=K$); GOTO DONE_ARM10
1620 IF LEN(K$)<3 THEN GOTO 1780
1625 IF K$(3,1)="J" THEN GOTO 1650
1630 READ (ARM10_DEV)
1640 GOTO NEXT_ARM10
1650 PRINT @(COLUMN,11),K$(1,2)," ",K$(3,1)," ",K$(4),
1660 READ (ARM10_DEV)IOL=ARM10JT
1670 FIND (ARS10_DEV,KEY=K$(1,2)+"N",DOM=NO_NREC)IOL=ARS10N
1680 GOTO WRITE_ARS10
1685 NO_NREC: 
1690 LET B0$=C0$(1,2)+"N"
1705 WRITE_ARS10: 
1720 LET B[4]=C[0]
1760 WRITE (ARS10_DEV,KEY=B0$)IOL=ARS10N
1780 REMOVE (ARM10_DEV,KEY=K$)
1785 NEXT_ARM10: 
1790 GOTO READ_ARM10
1795 DONE_ARM10: 
2000 REM " --- Initialize for ART-01 Conversion
2010 LET LAST$="",SEQ_NO=0
2020 DIM A0$(50),A1$(11),A[3],B0$(19),B1$(34),B[5],C0$(19),C1$(11),C[1]
2030 PRINT @(40,3),"ART-01 Open Invoices",'CL',@(COLUMN,11),J1$,
2100 REM " --- Convert ART-01"
2105 READ_ART01: 
2110 LET K$=KEY(ART01_DEV,END=DONE_ART01)
2120 IF POS("Z"=K$)=1 THEN REMOVE (ART01_DEV,KEY=K$); GOTO DONE_ART01
2125 IF LEN(K$)<19 THEN GOTO 2480
2130 IF NUM(K$(18,2))>0 THEN GOTO BRECORD
2140 READ (ART01_DEV)IOL=ART01AR
2145 IF K$(1,10)=LAST$ THEN GOTO 2170
2150 LET LAST$=K$(1,10)
2160 PRINT @(COLUMN,11),LAST$(1,2)," ",LAST$(5),
2170 WRITE (ART01_DEV,KEY=A0$(1,19))IOL=ART01AW
2180 IF A1$(1,1)=FILL(1) AND A[2]=0 AND A[3]=0 THEN GOTO NEXT_ART01
2185 LET C0$=A0$(1,17),C1$=A1$,C[0]=A[2],C[1]=A[3]
2210 READ (ART11_DEV,KEY=C0$+$FF$,DOM=2211)
2220 LET K0$=KEYP(ART11_DEV,ERR=2221)
2230 IF POS(C0$(1,17)=K0$)<>1 THEN LET C0$=C0$+"01"; GOTO WRITE_ART111
2240 LET SEQ_NO=NUM(K0$(18,2))+1
2250 IF SEQ_NO<100 THEN LET C0$=C0$(1,17)+STR(SEQ_NO:"00"); GOTO WRITE_ART111
2260 READ (ART11_DEV,KEY=C0$+"99")IOL=ART11A
2270 LET C[0]=C[0]+A[2],C[1]=C[1]+A[3]
2275 WRITE_ART111: 
2280 WRITE (ART11_DEV,KEY=C0$)IOL=ART11A
2290 GOTO NEXT_ART01
2300 REM " --- Put Detail Records into ART-11"
2305 BRECORD: 
2310 READ (ART01_DEV)IOL=ART01B
2340 LET C0$=B0$(1,17)
2350 FOR X=0 TO 2
2360 IF B1$(X*11+1,1)=FILL(1) AND B[X*2]=0 AND B[X*2+1]=0 THEN GOTO NEXTX
2370 LET C1$=B1$(X*11+1,11)
2380 LET C[0]=B[X*2],C[1]=B[X*2+1]
2390 READ (ART11_DEV,KEY=C0$(1,17)+$FF$,DOM=2391)
2400 LET K0$=KEYP(ART11_DEV,ERR=2401)
2410 IF POS(C0$(1,17)=K0$)<>1 THEN LET C0$=C0$+"01"; GOTO WRITE_ART112
2420 LET SEQ_NO=NUM(K0$(18,2))+1
2430 IF SEQ_NO<100 THEN LET C0$=C0$(1,17)+STR(SEQ_NO:"00"); GOTO WRITE_ART112
2440 READ (ART11_DEV,KEY=C0$(1,17)+"99")IOL=ART11A
2450 LET C[0]=C[0]+B[2],C[1]=C[1]+B[3]
2455 WRITE_ART112: 
2460 WRITE (ART11_DEV,KEY=C0$)IOL=ART11A
2465 NEXTX: 
2470 NEXT X
2480 REMOVE (ART01_DEV,KEY=K$)
2485 NEXT_ART01: 
2490 GOTO READ_ART01
2495 DONE_ART01: 
2500 REM " --- Initialize for ART-06 Conversion
2510 LET LAST$=""
2520 PRINT @(40,3),"ART-06 Cash Receipts History",'CL',@(COLUMN,11),J1$,
2540 REM " --- Convert ART-06
2545 READ_ART06: 
2550 LET K$=KEY(ART06_DEV,END=DONE_ART06)
2560 IF POS("Z"=K$)=1 THEN GOTO DONE_ART06
2570 READ RECORD(ART06_DEV)A0$
2575 IF K$(1,11)=LAST$ THEN GOTO 2600
2580 LET LAST$=K$(1,11)
2590 PRINT @(COLUMN,11),K$(1,2)," ",K$(6),
2600 IF A0$(25,1)="A" THEN LET WRITE_DEV=ART06_DEV,WRITEK$=A0$(1,25)
2610 IF A0$(25,1)="B" THEN LET WRITE_DEV=ART16_DEV,WRITEK$=A0$(1,32)
2620 IF A0$(25,1)="C" THEN LET WRITE_DEV=ART26_DEV,WRITEK$=A0$(1,35)
2630 LET A0$(25,1)=FILL(1),A0$(5,1)=FILL(1)
2635 LET WRITEK$(25,1)=FILL(1),WRITEK$(5,1)=FILL(1)
2640 LET A0$=A0$(1,POS($00$<>A0$,-1))
2650 WRITE RECORD(WRITE_DEV,KEY=WRITEK$)A0$
2660 REMOVE (ART06_DEV,KEY=K$)
2675 NEXT_ART06: 
2680 GOTO READ_ART06
2690 DONE_ART06: 
2700 REM " --- Initialize for ARS-01 Conversion
2710 LET LAST$=""
2715 DIM D0$(55),D[6]
2720 PRINT @(40,3),"ARS-01 Accounts Receivable Parameters",'CL',@(COLUMN,11),J1$,
2730 READ (SYS01_DEV,KEY="",DOM=READ_ARS01)
2740 REM " --- Convert ARS-01
2745 READ_ARS01: 
2750 LET K$=KEY(SYS01_DEV,END=DONE_ARS01)
2760 IF POS("Z"=K$)=1 THEN GOTO DONE_ARS01
2770 IF LEN(K$)<6 OR K$(3,4)<>"AR01" THEN READ (SYS01_DEV); GOTO NEXT_ARS01
2785 IF K$(1,2)=LAST$ THEN GOTO 2810
2790 LET LAST$=K$(1,2)
2800 PRINT @(COLUMN,11),K$(1,2),
2810 READ (SYS01_DEV)IOL=ARS01CR
2840 WRITE (SYS01_DEV,KEY=D0$(1,6))IOL=ARS01CW
2850 LET D0$=D0$(1,2)+"C"
2860 WRITE (ARS10_DEV,KEY=D0$)IOL=ARS10C
2875 NEXT_ARS01: 
2880 GOTO READ_ARS01
2890 DONE_ARS01: 
2900 REM " --- Initialize for Moving tmp file (sort) to ARM-14 (Mkeyed)
2910 LET LAST$=""
2920 PRINT @(40,3),"ARM-14 Credit Manager's Tickler File",'CL',@(COLUMN,11),J1$,
3000 REM " --- Next ARM-14 record"
3010 LET K$=KEY(ARM14TMP_DEV,END=DONE_ARM14)
3020 READ (ARM14TMP_DEV)
3025 IF LEN(K$)<22 THEN GOTO 3060
3030 IF K$(1,9)=LAST$ THEN GOTO 3050
3035 LET LAST$=K$(1,9)
3040 PRINT @(COLUMN,11),K$(1,2)," ",K$(3,1)," ",K$(4),
3050 WRITE (ARM14_DEV,KEY=K$)IOL=ARM14A
3060 GOTO 3000
3075 DONE_ARM14: 
3080 CLOSE (ARM14TMP_DEV,ERR=3085)
3085 ERASE "ARM14.TMP",ERR=3100
3090 GOTO 3085
3100 REM " --- Initialize for ARM-01 to ensure A1$ is right len
3120 PRINT @(40,3),"ARM-01 Customer Master File",'CL',@(COLUMN,11),J1$,
3130 DIM A1$(305)
3200 REM " --- Customer Master 
3210 READ (ARM01TMP_DEV,END=3800)IOL=ARM01A
3220 IF POS("Z"=A0$)=1 THEN GOTO 3800
3230 PRINT @(COLUMN,11),A0$(1,2)," ",A0$(3),
3280 WRITE (ARM01_DEV,KEY=A0$)IOL=ARM01A
3290 GOTO 3200
3800 REM " --- Initialize for ARM-02 to ensure correct key len
3820 PRINT @(40,3),"ARM-02 Customer Detail File",'CL',@(COLUMN,11),J1$,
3830 DIM B0$(10),B1$(64),B[10]
3900 REM " --- Remove short keys in ARM-02
3910 LET K$=KEY(ARM02TMP_DEV,END=4000)
3920 IF POS("Z"=K$)=1 THEN GOTO 4000
3930 IF LEN(K$)<>10 THEN READ (ARM02TMP_DEV); GOTO 3990
3950 READ (ARM02TMP_DEV)IOL=ARM02A
3980 WRITE (ARM02_DEV,KEY=K$)IOL=ARM02A
3990 GOTO 3900
4000 REM " --- End Of Conversion
4020 CLOSE (ARM01TMP_DEV,ERR=4030)
4030 ERASE "ARM01.TMP",ERR=4050
4040 GOTO 4030
4050 CLOSE (ARM02TMP_DEV,ERR=4060)
4060 ERASE "ARM02.TMP",ERR=4090
4070 GOTO 4060
4090 GOTO 9900
6900 RENAME_ARM03: 
6905 DIM SOURCE$[FILES],TARGET$[FILES],ERASE$[FILES]
6910 LET SOURCE$[1]="ARM-03",TARGET$[1]="ARM-T3",ERASE$[1]="Y"
6915 CALL "SYC.RN",SOURCE$[ALL],TARGET$[ALL],ERASE$[ALL],1,STATUS
6920 RETURN 
8080 DEF FNP$(Q$)=CVS(Q$,2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
