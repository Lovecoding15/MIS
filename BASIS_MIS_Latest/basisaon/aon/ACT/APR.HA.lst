0010 REM "APR - Monthly Check Report"
0020 REM "Program APR.HA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0050 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=5
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0130 LET FILES$[1]="APE-05",FILES$[2]="APM-01",FILES$[3]="APM-03"
0140 LET FILES$[4]="APM-10",FILES$[5]="SYS-01"
0160 CALL "SYC.DA",1,1,5,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0165 IF STATUS>0 THEN GOTO 9900
0170 LET APE05_DEV=CHANNELS[1],APM01_DEV=CHANNELS[2],APM03_DEV=CHANNELS[3]
0180 LET APM10_DEV=CHANNELS[4],SYS01_DEV=CHANNELS[5]
0200 REM " --- IOLIST's"
0210 APE05A: IOLIST A0$,A1$,A[ALL]
0220 APM01A: IOLIST B0$(1),B1$(1)
0230 APM03A: IOLIST C0$(1),C1$(1)
0240 APM10A: IOLIST D0$(1)
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 APS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0280 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0400 REM " --- Parameters"
0405 DIM P[2],G[1]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="AP",N3$=F5$
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=APS01A
0440 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0470 LET G[0]=NUM(G2$(1,2)),P[0]=NUM(P2$(1,2))
0480 LET P[1]=NUM(P4$(1,2)),P[2]=FNYY_YEAR(P4$(3,2))
0500 REM " --- Initializations"
0510 DIM B0$(8),B1$(30),C0$(14),C1$(30),A[2],M5$(7,"0")
0520 DIM H[8],O[8],X[3],T[3],S[3],R[3],HEADINGS$[4],TYPES$[4]
0550 LET L9=59,L=L9+1,WIDTH=132,PAGE=0,CLOCK$="",WHEN$=F0$(7,3)
0560 LET HEADINGS=3,M0=LEN(M0$),VM=MAX(M0,8),TYPES$[0]="Unknown"
0565 LET TYPES$[1]="Void",TYPES$[2]="Reversal",TYPES$[3]="Manual"
0570 LET TYPES$[4]="Computer",HEADINGS$[0]=N1$,HEADINGS$[1]=N3$
0575 IF P3$(1,1)="Y" THEN LET HEADINGS=HEADINGS+1
0580 LET PERIOD=P[1]
0590 CALL "SYC.RM",M1$,M1,10,15
0600 REM " --- Print positions"
0610 LET O[8]=WIDTH-M1,RH1$="Retention",RH2$="   Amount",N=4
0620 IF P3$(3,1)<>"Y" THEN LET O[8]=WIDTH-1,RH1$="",RH2$="",N=3
0630 LET O[7]=O[8]-M1,O[6]=O[7]-M1,O[5]=O[6]-M1,O[0]=0,O[1]=8
0640 LET O[2]=17,O[3]=28,O[4]=O[3]+VM,W=MIN(30,O[5]-O[4]-1)
0650 FOR X=0 TO 8
0655 LET H[X]=O[X]
0660 NEXT X
0670 LET H[5]=H[5]+M1-8,H[6]=H[6]+M1-8,H[7]=H[7]+M1-9
0680 IF P3$(3,1)="Y" THEN LET H[8]=H[8]+M1-10
0690 DIM J1$(N*M1)
0700 REM " --- Background"
0710 CALL "SYC.WC",1,0,80,0,0,4,0
0720 PRINT 'SB',@(28,3),"For Period:",'SF',
0800 REM " --- For Period"
0805 LET V0$="N",V1$="E",V2$=STR(PERIOD),V3$="##",V0=2,V1=40,V2=3
0810 LET V4$="Enter The Period For Which The Report Should Be Generated (1 Through "+STR(G[0])+")"
0815 GOSUB 7000
0820 ON V3 GOTO 0825,0800,0800,0800,9900
0825 IF V<1 OR V>G[0] THEN GOTO 1000
0830 LET PERIOD=V
0835 CALL "SYC.PA",SYS01_DEV,V,P[2],V0$,V9$,STATUS
0840 LET BEGDATE$=V0$,ENDDATE$=V9$
0845 LET HEADINGS$[2]="For Period "+STR(PERIOD)+" From "+FNB$(BEGDATE$)+" To "+FNB$(ENDDATE$)
0847 PRINT @(V1,V2),PERIOD:"#0-","(",FNB$(BEGDATE$)," To ",FNB$(ENDDATE$),")"
0850 REM " --- Correct?"
0855 LET V4$="Is The Above Information Correct (Y/N)?"
0860 LET V0$="Y",V1$="C",V2$="Y",V3$="",V0=1,V1=FNV(V4$),V2=22
0865 GOSUB 7000
0870 ON V3 GOTO 0875,0850,0850,0850,9900
0875 ON POS(V$="YN") GOTO 0850,0900,0800
0900 REM " --- Final initializations"
0905 CALL "SYC.GA",7,1,"","",STATUS
0910 IF STATUS THEN GOTO 9900
0915 CALL "SYC.NB","Printing",10,COLUMN
0990 READ (APE05_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Main Read
1010 LET K$=KEY(APE05_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 READ (APE05_DEV)IOL=APE05A
1040 LET X$=""
1050 IF P3$(1,1)="Y" THEN LET X$=A0$(3,2)+" "
1060 PRINT @(COLUMN,11),X$,A0$(5,7),
1070 IF A0$(28,3)<BEGDATE$ THEN GOTO 3900
1080 IF A0$(28,3)>ENDDATE$ THEN GOTO 3900
1200 REM " --- Level breaks"
1210 IF K$(3,2)<>T0$ THEN GOSUB 6000
1300 REM " --- Check Initializations"
1310 DIM X[3]
1320 LET CHECK$=A0$(5,7),PAID$=FNB$(A0$(28,3)),VENDOR$="",NAME$=""
1330 LET PAYMENT$="",INVOICE$="",DISCOUNT$="",RETENTION$=""
1340 LET TYPE=POS(A0$(31,1)="VRMC"),TYPE$=TYPES$[TYPE]
1600 REM " --- Process check header"
1610 LET MARK$=""
1620 IF T2$<>"" THEN IF A0$(5,7)<>T2$ THEN LET MARK$="*"
1630 LET X=10000000,X=NUM(A0$(5,7),ERR=1640)+1
1640 IF X<10000000 THEN LET T2$=STR(X:M5$)
1690 ON TYPE GOTO 3900,3000,3000,1900,1900
1900 REM " --- Manual and Computer Check"
1910 LET X[1]=A[0],X[2]=A[1],X[3]=A[2]
2000 REM " --- Additional records?"
2010 LET K$=KEY(APE05_DEV,END=2900)
2020 IF POS(A0$(1,17)=K$)<>1 THEN GOTO 2900
2030 READ (APE05_DEV)IOL=APE05A
2040 LET X[1]=X[1]+A[0],X[2]=X[2]+A[1],X[3]=X[3]+A[2]
2090 GOTO 2000
2900 REM " --- Format detail line amount fields"
2910 LET X[0]=X[1]-X[2]-X[3]
2920 LET PAYMENT$=STR(X[0]:M1$),INVOICE$=STR(X[1]:M1$)
2930 LET DISCOUNT$=STR(X[2]:M1$),RETENTION$=STR(X[3]:M1$)
2940 IF P3$(3,1)<>"Y" THEN LET RETENTION$=""
3000 REM " --- Print line"
3010 IF L+1>L9 THEN GOSUB 5000
3020 IF TYPE>1 THEN GOSUB 6400
3030 PRINT (7)@(O[0]),CHECK$,MARK$,@(O[1]),PAID$,@(O[2]),TYPE$,@(O[3]),VENDOR$,@(O[4]),NAME$,@(O[5]),PAYMENT$,@(O[6]),INVOICE$,@(O[7]),DISCOUNT$,@(O[8]),RETENTION$
3040 LET L=L+1
3100 REM " --- Accumulate totals"
3110 FOR X=0 TO 3
3120 LET S[X]=S[X]+X[X],R[X]=R[X]+X[X]
3130 NEXT X
3900 REM " --- Next check"
3990 GOTO 1000
4000 REM " --- All done"
4010 LET DONE=1
4020 GOSUB 6000
4030 LET TOTAL$="Total For Report"
4040 FOR X=0 TO 3
4050 LET T[X]=R[X]
4060 NEXT X
4070 GOSUB 6800
4090 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)@(H[0]),"Check",@(H[1]+2),"Check",@(H[5]),"Payment",@(H[6]),"Invoice",@(H[7]),"Discount",@(H[8]),RH1$
5050 PRINT (7)@(H[0]),"Number",@(H[1]+2),"Date",@(H[2]),"Type",@(H[3]),"Vendor",@(H[4]),"Name",@(H[5])," Amount",@(H[6])," Amount",@(H[7]),"  Amount",@(H[8]),RH2$
5060 PRINT (7)""
5070 LET L=L+3
5090 RETURN 
6000 REM " --- AP Type Break"
6010 IF P3$(1,1)<>"Y" THEN GOTO 6190
6020 IF T0$="" THEN GOTO 6100
6030 LET TOTAL$="Total For "+H0$,T[0]=S[0],T[1]=S[1],T[2]=S[2],T[3]=S[3]
6040 GOSUB 6800
6100 REM 
6110 IF DONE>0 THEN GOTO 6190
6120 DIM S[3],D0$(32)
6130 LET T0$=A0$(3,2),L=L9+1,D0$(6)=NF$
6140 FIND (APM10_DEV,KEY=N0$+"A"+T0$,DOM=6150)IOL=APM10A
6150 LET H0$="AP Type "+T0$+" "+FNP$(D0$(6,20)),HEADINGS$[3]=H0$
6190 RETURN 
6400 REM " --- Retrieve vendor"
6420 DIM B0$(8),B1$(198),C0$(14),C1$(30),NAME$(W)
6430 IF A0$(12,4)="TEMP" THEN GOTO 6500
6440 LET B0$(1)=N0$+A0$(12,6),B1$(1)=NF$
6450 FIND (APM01_DEV,KEY=B0$,DOM=6460)IOL=APM01A
6460 LET VENDOR$=FNF$(B0$(3,P[0]),M0$),NAME$(1)=B1$(1,30)
6490 GOTO 6590
6500 REM 
6510 LET C0$(1)=N0$+A0$(3,2)+A0$(18,10),C1$(1)=NF$
6520 FIND (APM03_DEV,KEY=C0$,DOM=6530)IOL=APM03A
6530 LET VENDOR$="TEMP",NAME$(1)=C1$
6590 RETURN 
6800 REM " --- Print totals"
6810 IF L+2>L9 THEN GOSUB 5000
6820 LET RETENTION$="",L=L+2
6830 IF P3$(3,1)="Y" THEN LET RETENTION$=STR(T[3]:M1$)
6840 PRINT (7)@(O[5]),J1$
6850 PRINT (7)@(O[5]-LEN(TOTAL$)),TOTAL$,@(O[5]),T[0]:M1$,@(O[6]),T[1]:M1$,@(O[7]),T[2]:M1$,@(O[8]),RETENTION$
6890 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9205 SETESC 9000
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
