0010 REM "ARC - Customer SpeedSearch (Open Invoices)"
0020 REM "Program ARC.QD"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0045 REM "D_STATUS  : SpeedSearch Status (0=No Error)"
0050 REM "OPTION$[n]: Standard SpeedSearch Options Array"
0055 REM 
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER D_STATUS,OPTION$[ALL]
0100 REM " --- Open Files"
0110 LET FILES=6
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0130 LET FILES$[1]="ARM-01",FILES$[2]="ARM-02",FILES$[3]="ARM-06"
0140 LET FILES$[4]="ARM-10",FILES$[5]="ART-01",FILES$[6]="ART-11"
0150 CALL "SYC.DA",1,1,FILES,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET ARM01_DEV=CHANNELS[1],ARM02_DEV=CHANNELS[2],ARM06_DEV=CHANNELS[3]
0180 LET ARM10_DEV=CHANNELS[4],ART01_DEV=CHANNELS[5],ART11_DEV=CHANNELS[6]
0200 REM " --- IOLIST's"
0210 ART01A: IOLIST A0$(1),A[ALL]
0220 ARM01A: IOLIST B0$(1),B1$(1)
0230 ARM02A: IOLIST C0$(1),C1$(1),C[ALL]
0240 ARM06A: IOLIST D0$(1),D1$(1),D[ALL]
0250 ARM10A: IOLIST X0$(1)
0260 ARS01A: IOLIST X$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0310 ART11A: IOLIST W0$(1),W1$(1),W[ALL]
0400 REM " --- Parameters"
0410 DIM P[2],X$(128)
0420 LET X$(1)=STBL("!SPEEDSEARCH",ERR=9900),N0$=X$(1,2),MAXPAGE=NUM(X$(66,2))
0425 LET TNAME$=FNP$(X$(3,8)),TWIDTH=NUM(X$(35,2)),THEIGHT=NUM(X$(37,2))
0430 LET NAME$=FNP$(X$(11,8)),WIDTH=NUM(X$(39,2)),HEIGHT=NUM(X$(41,2))
0435 LET SNAME$=FNP$(X$(19,8)),SWIDTH=NUM(X$(43,2)),SHEIGHT=NUM(X$(45,2))
0440 LET ONAME$=FNP$(X$(27,8)),OWIDTH=NUM(X$(83,2)),OHEIGHT=NUM(X$(85,2))
0445 LET MAXOPT=NUM(X$(57,2)),SYS01_DEV=NUM(STBL("!SYS01"))
0450 LET PARAM$=FNU$(FNP$(OPTION$[2])),SUBPARAM$="",P=POS("/"=PARAM$)
0455 IF P>0 THEN LET SUBPARAM$=PARAM$(P+1),PARAM$=PARAM$(1,P-1)
0460 LET PAGES=INT((DSZ-5000)/4000)
0465 IF PAGES<3 THEN GOTO 9900
0470 IF PAGES>MAXPAGE THEN LET PAGES=MAXPAGE
0480 FIND (SYS01_DEV,KEY=N0$+"AR00",DOM=9900)IOL=ARS01A
0490 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P2$(3,2)),P[2]=NUM(P3$(4,1))
0500 REM " --- Initializations"
0510 DIM A0$(50),A[1],W0$(19),W1$(12),W[1],J0$(10,"0"),X0$(32)
0515 DIM B0$(8),B1$(30),C0$(10),C1$(64),C[6],D0$(8),D1$(6),D[9]
0520 DIM HEADING$(WIDTH-2),FOOTING$(WIDTH-2),OPTLIST$[2,MAXOPT,6]
0540 LET D_STATUS=0,MAXROW=HEIGHT-5,B0$(1)=N0$+OPTION$[3]
0550 LET M1=LEN(M1$),W=SWIDTH-M1-12,DONE=0,PGM$=PGM(-2),OPTION=0
0560 LET A0$(1)=N0$+"  "+OPTION$[3],A0$(18,2)="00",BEGDATE$=""
0600 REM " --- Option Window"
0610 CALL "SYC.QC",SYM01_DEV,SYM11_DEV,PGM$,SECURITY$,OPTION,OPTLIST$[ALL],TITLE$,OMAXROW,PREVMENU$,ONAME$
0700 REM " --- Background"
0710 CALL "SYC.WB",NAME$,0
0720 LET HEADING$(2)="Invoice   Date     Due    Terms"
0730 LET HEADING$(WIDTH-9)="Balance"
0740 LET FOOTING$(2)=TITLE$,FOOTING$(WIDTH-26)="PgUp  PgDn  F4=End"
0750 PRINT @(0,0),'CS','SB','BR',HEADING$,@(0,HEIGHT-3),FOOTING$,'ER','SF',
0900 REM " --- Position file"
0910 CALL "SYC.WB",SNAME$,0
0920 PRINT 'CF',
0930 CALL "SYC.WB",TNAME$,0
0940 PRINT @(0,1),'CL',@(0,2),'CL',@(0,3),'CL',
0990 GOTO 1100
1000 REM " --- Process key field"
1010 GOSUB 6000
1015 CALL "SYC.WB",TNAME$,0
1030 PRINT @(1,0),'CL','SB',"Customer:",'SF',@(0,1),'CL',@(0,2),'CL',
1035 LET V2$="",V2$=KEY(ARM01_DEV,END=1050)
1040 IF POS(N0$=V2$)<>1 THEN LET V2$=""
1045 IF V2$<>"" THEN LET V2$=V2$(3)
1050 LET V0$="M",V1$="KE",V3$=M0$,V0=6,V1=11,V2=0,V4$=""
1055 PRINT @(V0+V1+1,V2),'CL',
1060 GOSUB 7000
1065 ON V3 GOTO 1080,1000,1000,1070,3900,3800,3900
1070 CALL "SYC.LC",V$
1080 IF V$="" THEN GOTO 0900
1090 LET B0$(3)=V$,A0$(5)=V$
1100 REM " --- Retrieve records for display"
1110 DIM X$(WIDTH-2)
1120 READ (ARM01_DEV,KEY=B0$,DOM=1000)IOL=ARM01A
1130 LET X$(1)='SB'+" Customer: "+'SF'+FNF$(B0$(3,P[0]),M0$)+" "+B1$(1,30)
1140 LET X1$=B0$(3,6),X2$=PARAM$
1150 CALL "SYC.QB",X$,X1$,X2$
1180 READ (ART01_DEV,KEY=A0$(1,19),DOM=1200)IOL=ART01A
1190 GOTO 1300
1200 REM " --- Invoice Number"
1210 PRINT @(1,1),'CL','SB'," Invoice:",'SF',
1215 LET V0=7,V1=11,V2=1,V0$="Z",V1$="KE",V2$=J0$(1,V0),V3$="",V4$=""
1220 GOSUB 7000
1225 ON V3 GOTO 1230,1200,1000,1200,3900,3800,3900
1230 LET A0$(1)=B0$(1,2)+"  "+B0$(3)+V$,A0$(18,2)="00"
1250 REM " --- Starting Date"
1255 PRINT @(0,2),'CL','SB'," Starting Date:",'SF',
1260 LET V0=3,V1=16,V2=2,V0$="D",V1$="E",V2$=BEGDATE$,V3$="",V4$=""
1270 GOSUB 7000
1280 ON V3 GOTO 1290,1250,1200,1250,3900,3800,3900
1290 LET BEGDATE$=V$
1300 REM " --- Retrieve records for display"
1310 DIM LLIST$[PAGES,MAXROW,5],MORE$[PAGES,MAXROW,SHEIGHT-2],X$(WIDTH-2)
1320 LET LINE=1,L=1,X0=0,X1=1,PAGE=1,ARBALANCE=0,C0$(1)=B0$,FIRST$=A0$(1,10)
1325 FIND (ARM02_DEV,KEY=C0$,DOM=1330)IOL=ARM02A
1330 FIND (ARM06_DEV,KEY=B0$,DOM=1335)IOL=ARM06A
1335 FOR X=0 TO 5
1340 LET ARBALANCE=ARBALANCE+C[X]
1345 NEXT X
1350 READ (ART01_DEV,KEY=A0$(1,19),DOM=1400)IOL=ART01A
1360 LET X$(1)='SB'+"  Invoice: "+'SF'+A0$(11,7)
1370 LET X1$=A0$(11,7),X2$=SUBPARAM$
1380 CALL "SYC.QB",X$,X1$,X2$
1385 GOSUB 6500
1390 GOTO 1500
1400 REM " --- Read next invoice"
1410 LET K$=KEY(ART01_DEV,END=1900)
1420 IF POS(FIRST$=K$)<>1 THEN GOTO 1900
1430 READ (ART01_DEV,KEY=K$)IOL=ART01A
1435 IF BEGDATE$<>"" THEN IF A0$(24,3)<BEGDATE$ THEN GOTO 1800
1440 GOSUB 6500
1450 IF BALANCE=0 THEN GOTO 1800
1460 LET X0$(6)="(Not On File)"
1470 FIND (ARM10_DEV,KEY=N0$+"A"+A0$(22,2),DOM=1480)IOL=ARM10A
1500 REM " --- Display page?"
1510 IF L<MAXROW THEN GOTO 1600
1520 LET ACTION$="M",CHOICE1$="",CHOICE2$=""
1530 GOSUB 5000
1540 IF DONE THEN GOTO 4000
1580 IF ANSWER$<>"" THEN GOTO 3000
1590 LET L=1,X1=1
1600 REM " --- Middle window record"
1610 DIM G1$(WIDTH-2)
1620 LET G1$(2)=A0$(11,7),G1$(10)=FNB$(A0$(24,3)),G1$(19)=FNB$(A0$(27,3))
1630 LET G1$(28)=A0$(22,2)+" "+X0$(6,20),G1$(WIDTH-M1-1)=STR(BALANCE:M1$)
1690 LET LLIST$[PAGE,X1,1]=G1$,LLIST$[PAGE,X1,2]=A0$(5,13)
1700 REM " --- Bottom window record"
1710 DIM G2$(SWIDTH-2)
1720 LET MORE$[PAGE,X1,0]=STR(SHEIGHT-2),G2$(2)="{Invoice}"+STR(INVOICE:M1$)
1730 LET G2$(W+2)="{Balance}"+STR(ARBALANCE:M1$),MORE$[PAGE,X1,1]=G2$
1740 LET G2$(2)="{Applied}"+STR(APPLIED:M1$),G2$(W)="{MTD Sales}"+STR(D[0]:M1$)
1750 LET MORE$[PAGE,X1,2]=G2$,G2$(1)="{Discount}"+STR(DISCOUNT:M1$)
1760 LET G2$(W)="{YTD Sales}"+STR(D[1]:M1$),MORE$[PAGE,X1,3]=G2$
1790 LET LLIST$[PAGE,X1,5]=SNAME$,X0=X0+1,X1=X1+1,L=L+1
1800 REM " --- Loop back for next invoice"
1890 GOTO 1400
1900 REM " --- No more invoices"
1910 IF X0>0 THEN GOTO 2000
1915 CALL "SYC.WB",NAME$,0
1920 LET V0$="Sa",V1$="",V2$="",V3$="",V4$=""
1925 LET V0=1,V1=39,V2=INT(HEIGHT/2)-1
1930 PRINT @(1,V2),"No Invoices Found (<Enter>=Continue):"
1940 GOSUB 7000
1950 PRINT @(0,V2),'CL',
1960 IF V3=5 THEN LET OPTION$[1]="STARTOVER"; GOTO 4000
1970 IF V3=6 THEN LET OPTION$[1]="EXIT"; GOTO 4000
1990 GOTO 3000
2000 REM " --- Display last page"
2010 LET ACTION$="M",CHOICE1$="",CHOICE2$=""
2020 GOSUB 5000
2030 IF DONE THEN GOTO 4000
3000 REM " --- Process option window"
3010 DIM MORE$[1,MAXOPT,1],LLIST$[0,0,0]
3020 LET ACTION$="O",CHOICE1$=A0$(5,6),CHOICE2$=A0$(5,13)
3030 GOSUB 5000
3040 IF CONTROL=1 THEN GOTO 1000
3090 GOTO 4000
3800 REM " --- Startover"
3810 LET OPTION$[1]="STARTOVER"
3890 GOTO 4000
3900 REM " --- Done"
3910 LET OPTION$[1]="EXIT"
4000 REM " --- All done"
4010 GOSUB 6000
4090 GOTO 9900
5000 REM " --- Standard window processing"
5010 DIM WININFO$[10],WININFO[10]
5020 LET WININFO$[1]=CHOICE1$,WININFO$[2]=CHOICE2$
5030 LET WININFO[1]=PAGE,WININFO[2]=PAGES,WININFO[3]=OMAXROW
5050 CALL "SYC.QW",ACTION$,OPTION$[ALL],OPTLIST$[ALL],LLIST$[ALL],MORE$[ALL],WININFO$[ALL],WININFO[ALL],FKEY
5060 LET ANSWER$=WININFO$[0],CONTROL=WININFO[0],PAGE=WININFO[1]
5080 LET DONE=OPTION$[1]="EXIT" OR OPTION$[1]="STARTOVER" OR OPTION$[1]="PRIOR"
5090 RETURN 
6000 REM " --- Clear all windows"
6010 CALL "SYC.WB",TNAME$,0
6020 PRINT 'CF',
6030 CALL "SYC.WB",NAME$,0
6040 PRINT 'CF',
6050 CALL "SYC.WB",SNAME$,0
6060 PRINT 'CS',
6090 RETURN 
6500 REM " --- Retrieve payment and adjustments"
6510 LET INVOICE=A[0],DISCOUNT=0,APPLIED=0
6590 READ (ART11_DEV,KEY=A0$(1,17),DOM=6600)
6600 REM " --- Read next detail"
6610 LET K$=KEY(ART11_DEV,END=6680)
6620 IF POS(A0$(1,17)=K$)<>1 THEN GOTO 6680
6630 READ (ART11_DEV,KEY=K$)IOL=ART11A
6640 LET APPLIED=APPLIED+W[0],DISCOUNT=DISCOUNT+W[1]
6650 GOTO 6600
6680 LET BALANCE=INVOICE+APPLIED+DISCOUNT
6690 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8085 DEF FNU$(Q$)=CVS(Q$,4)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to caller"
9910 FOR X=1 TO FILES
9920 CLOSE (CHANNELS[X],ERR=9921)
9930 NEXT X
9950 EXIT 
9999 END
