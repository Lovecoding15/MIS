0010 REM "ARR - Zero Invoice Purge Register"
0020 REM "Program ARR.8A"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=7
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="ARM-01",FILES$[2]="ART-01",FILES$[3]="ART-11"
0130 LET FILES$[4]="ART-03",FILES$[5]="ART-43",FILES$[6]="ART-53"
0140 LET FILES$[7]="SYS-01"
0160 CALL "SYC.DA",1,1,FILES,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS THEN GOTO 9900
0180 LET ARM01_DEV=CHANNELS[1],ART01_DEV=CHANNELS[2],ART11_DEV=CHANNELS[3]
0185 LET ART03_DEV=CHANNELS[4],ART43_DEV=CHANNELS[5],ART53_DEV=CHANNELS[6]
0190 LET SYS01_DEV=CHANNELS[7]
0200 REM " --- IOLists
0210 ARM01A: IOLIST B0$,B1$(1)
0220 ART01A: IOLIST A0$,A[ALL]
0230 ART11A: IOLIST W0$,W1$,W[ALL]
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 ARS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0280 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0400 REM " --- Parameters"
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="AR",N3$=F5$
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=ARS01A
0440 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0450 DIM P[2],G[4]
0460 FOR X=0 TO 4
0470 LET G[X]=NUM(G2$(X*2+1,2),ERR=0480)
0480 NEXT X
0485 LET G[2]=FNYY_YEAR(G2$(5,2))
0490 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P4$(1,2)),P[2]=FNYY_YEAR(P4$(3,2))
0500 REM " --- Init Data"
0510 LET L9=59,L=L9+1,HEADINGS=3,WIDTH=80,PAGE=0,WHEN$=F0$(7,3),CLOCK$=""
0520 DIM J$(80,"-"),J1$(40," "),HEADINGS$[HEADINGS]
0530 LET HEADINGS$[0]=N1$,HEADINGS$[1]="Zero Invoice Purge Register"
0540 LET M0=LEN(M0$)
0550 CALL "SYC.RM",M1$,M1,8,12
0560 DIM A[1],W[1]
0570 LET P9$=F0$(7,3)
0700 REM " --- Background"
0710 FOR X=4 TO 4 STEP 2
0720 CALL "SYC.WC",1,0,80,0,0,X,0
0730 NEXT X
0740 PRINT 'CF','SB',@(28,3),"Purge Date:",'SF',
0800 REM " --- Purge Date"
0810 LET V0$="D",V1$="ER",V2$=FNC$(P9$),V0=8,V1=40,V2=3,V3$="",V4$=""
0820 GOSUB 7000
0830 ON V3 GOTO 0840,0800,0800,0800,9900
0840 LET P9$=V$
0850 REM " --- Correct"
0860 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
0870 ON V3 GOTO 0880,0860,0860,0860,9900
0880 ON POS(V$="YN") GOTO 0850,0890,0800
0950 REM " --- Open Printer"
0960 CALL "SYC.GA",7,1,"","",STATUS
0965 IF STATUS THEN GOTO 9900
0970 CALL "SYC.NB","Printing",M0+9,COLUMN
0980 LET HEADINGS$[2]="Purge Date: "+FNB$(P9$)
1000 REM " --- Init ART-01 Read"
1020 READ (ART01_DEV,KEY=N0$,DOM=1030)
1100 REM " --- Read ART-01 AR Open Invoice Header"
1120 LET K0$=KEY(ART01_DEV,END=4000)
1140 IF K0$(1,2)<>N0$ THEN GOTO 4000
1200 READ (ART01_DEV)IOL=ART01A
1220 IF A0$(24,3)>P9$ THEN GOTO 1700
1240 PRINT @(COLUMN,11),FNF$(A0$(5,P[0]),M0$)," ",A0$(11,7),
1300 REM " --- Init Invoice Total"
1320 LET T9=A[0]
1400 REM " --- Find Invoice Balance"
1420 READ (ART11_DEV,KEY=K0$(1,17),DOM=1430)
1500 REM " --- Read ART-11 AR Open Invoice Detail"
1510 LET K$=KEY(ART11_DEV,END=1600)
1520 IF K$(1,17)<>K0$(1,17) THEN GOTO 1600
1540 READ (ART11_DEV)IOL=ART11A
1560 IF W1$(2,3)>P9$ THEN GOTO 1700
1580 LET T9=T9+W[0]+W[1]
1590 GOTO 1500
1600 REM " --- Keep Or Remove"
1620 IF T9=0 THEN GOTO 2000
1700 REM " --- Next Invoice"
1790 GOTO 1100
2000 REM " --- Print"
2020 IF L+2>L9 THEN GOSUB 5000
2040 IF T1$<>K0$(5,6) THEN GOSUB 5800
2060 PRINT (7)@(4),A0$(11,7)," ",FNC$(A0$(24,3))," ",FNC$(A0$(27,3))," ",A0$(22,2),@(30),A0$(33,1),@(80-M1*4),A[0]:M1$,@(80-M1),A[1]:M1$
2080 LET L=L+1,W0=0,L1=0
2100 READ (ART11_DEV,KEY=K0$(1,17),DOM=2110)
2110 LET K$=KEY(ART11_DEV,END=2200)
2120 IF K$(1,17)<>K0$(1,17) THEN GOTO 2200
2140 READ (ART11_DEV)IOL=ART11A
2150 IF L+1>L9 THEN GOSUB 5000
2160 PRINT (7)@(12),FNC$(W1$(2,3)),@(30),W1$(1,1),@(80-3*M1),W[0]:M1$,@(80-M1),W[1]:M1$
2180 LET L=L+1,L1=L1+1,W0=W0+W[0]+W[1],T2=T2+W[0],T3=T3+W[1]
2190 GOTO 2110
2200 IF L1<1 THEN GOTO 2260
2220 IF L+1>L9 THEN GOSUB 5000
2240 PRINT (7)@(19),"***Total:",@(80-M1*2),A[0]+W0:M1$
2260 LET L=L+1
2280 LET T0=T0+A[0]+W0,T1=T1+A[0]
2290 GOTO 1100
2300 REM " --- End Customer"
2390 GOTO 1100
4000 REM " --- End"
4010 LET T9$="END"; GOSUB 5800
4020 PRINT (7)'LF','LF',@(80-M1*4)," ",J$(1,M1-1)," ",J$(1,M1-1)," ",J$(1,M1-1)," ",J$(1,M1-1)
4030 PRINT (7)@(12),"***Report Total:",@(80-M1*4),T5:M1$,@(80-M1*3),T6:M1$,@(80-M1*2),T4:M1$,@(80-M1),T7:M1$
4100 REM " --- Run Update"
4110 CLOSE (7,ERR=4120)
4120 RUN "ARU.DA"
5000 REM " --- Heading"
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5070 PRINT (7)@(0),"Cust Inv #",@(13),"Date",@(20),"Due",@(26),"TC",@(29),"Typ",@(79-7-M1*3),"Invoice",@(79-7-M1*2),"Applied",@(79-7-M1),"Balance",@(71),"Discount"
5090 LET L=L+1
5180 IF T1$=K0$(5,6) THEN GOSUB 5900
5190 RETURN 
5800 REM " --- Customer Break"
5810 IF T1$="" THEN GOTO 5900
5820 IF L+2>L9 THEN GOSUB 5000
5830 PRINT (7)@(80-M1*4)," ",J$(1,M1-1)," ",J$(1,M1-1)," ",J$(1,M1-1)," ",J$(1,M1-1)
5840 PRINT (7)@(10),"***Customer Total:",@(80-M1*4),T1:M1$,@(80-M1*3),T2:M1$,@(80-M1*2),T0:M1$,@(80-M1),T3:M1$
5850 LET L=L+2
5860 LET T4=T4+T0,T5=T5+T1,T6=T6+T2,T7=T7+T3
5870 LET T0=0,T1=0,T2=0,T3=0
5900 IF T9$="END" THEN RETURN 
5910 IF L+4>L9 THEN GOSUB 5000
5920 DIM B1$(30)
5930 LET T1$=K0$(5,6),B1$(1)="** Customer Not On File **"
5950 FIND (ARM01_DEV,KEY=N0$+T1$,DOM=5960)IOL=ARM01A
5960 PRINT (7)'LF',FNF$(K0$(5,P[0]),M0$)," ",B1$
5970 LET L=L+2
5990 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
