0010 REM "IVM - Item Maintenance (Sales Order Inquiry)"
0020 REM "Program IVM.MM"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 SETERR 9000
0080 SETESC 9000
0090 PRECISION P[1]
0200 REM " --- IOLists
0210 ARE03A: IOLIST B0$(1),B[ALL]
0220 ARE13A: IOLIST C0$(1),C1$(1),C[ALL]
0230 ARM01A: IOLIST D0$(1),D1$(1)
0290 IVM10C: IOLIST X0$(1)
0400 REM " --- Parameters"
0450 IF PAGES<3 THEN GOTO 4000
0500 REM " --- Initializations
0510 DIM X0$(32),O[3],D[1],B0$(117),B[10],C0$(52),C1$(64),C[14],D0$(8),D1$(30)
0520 DIM LLIST$[PAGES,MAXROW,5],MORE$[PAGES,MAXROW,1],BEGDATE$(3),ENDDATE$(3)
0550 LET L=1,PAGE=1,X0=0,X1=1,SELECTION$="",NUMBER=1,ITEM$=A0$(3)
0555 LET O[2]=H0-M1,O[1]=O[2]-4,O[0]=O[1]-M2,D[1]=O[0]-9,D[0]=D[1]-9
0565 LET HEADING$(1)=" Order # Sts Customer",DW=D[0]-15
0570 LET HEADING$(D[0])="Ordered",HEADING$(D[1]+2)="Ship"
0575 LET HEADING$(O[0]+M2-9)="Quantity",HEADING$(O[1])="Com?"
0580 LET HEADING$(H0-10)="Extension",FOOTING$(1)=" <F1>=Next Warehouse"
0585 LET FOOTING$(WIDTH-26)="PgUp  PgDn  F4=End"
0700 REM " --- Background
0710 CALL "SYC.WA",0,WIDTH,HEIGHT,WIN_X,WIN_Y,TITLE$,NAME$
0720 PRINT 'CS','SB',@(1,0),"Warehouse ID:",@(48),"From:",@(65),"To:",'SF',
0730 CALL "SYC.WC",1,0,WIDTH-2,1,0,1,0
0740 PRINT @(0,2),'SB','BR',HEADING$,@(0,HEIGHT-3),FOOTING$,'ER','SF',
0900 REM " --- Position file
0990 READ (IVM03_DEV,KEY=A0$(1,2)+"G"+A0$(3),DOM=1000)
1000 REM " --- Warehouse ID
1005 PRINT 'CF',
1010 LET V2$="",V2$=KEY(IVM03_DEV,END=1040)
1020 IF POS(A0$(1,2)+"G"+A0$(3)=V2$)<>1 THEN LET V2$=""
1030 IF V2$<>"" THEN LET V2$=V2$(24)
1040 LET V0$="S",V1$="KE",V3$="",V4$="",V0=2,V1=15,V2=0
1050 GOSUB 7000
1055 ON V3 GOTO 1080,1000,1000,1060,4000
1060 CALL "IVC.LK",3,V1,V2,V$
1070 IF V$="" THEN GOTO 0900
1080 LET WHSE$=V$+"  ",WHSE$=WHSE$(1,2)
1100 REM " --- Retrieve record
1110 FIND (IVM10_DEV,KEY=N0$+"C"+WHSE$,DOM=1000)IOL=IVM10C
1120 LET K$=A0$(1,2)+"G"+A0$(3)+WHSE$
1130 READ (IVM03_DEV,KEY=K$,DOM=1140)
1140 PRINT @(15,0),WHSE$," ",X0$(6,24),
1200 REM " --- Beginning Date
1210 LET V0$="D",V1$="E",V2$=BEGDATE$,V3$="",V4$="",V0=3,V1=54,V2=0
1220 GOSUB 7000
1230 ON V3 GOTO 1250,1240,1000,1200,4000
1240 LET V$=""
1250 IF V$="" THEN PRINT @(V1,V2),"First   ",
1260 LET BEGDATE$=V$
1300 REM " --- Ending Date
1310 LET V0$="D",V1$="E",V2$=ENDDATE$,V3$="",V4$="",V0=3,V1=69,V2=0
1320 GOSUB 7000
1330 ON V3 GOTO 1350,1340,1200,1300,4000
1340 LET V$=""
1350 IF V$="" THEN PRINT @(V1,V2),"Last    ",
1360 IF V$<>"" THEN IF V$<BEGDATE$ THEN GOTO 1300
1370 LET ENDDATE$=V$
1400 REM " --- Get Data
1405 LET X0=0,LINE=1,PAGE=1,X1=1,L=1,TOTQTY=0,TOTEXT=0
1407 DIM LLIST$[PAGES,MAXROW,5],MORE$[PAGES,MAXROW,1]
1410 READ (ARE07_DEV,KEY=N0$+WHSE$+ITEM$,DOM=READ_ARE07)
1420 READ_ARE07: 
1430 LET K07$=KEY(ARE07_DEV,END=NOMORE)
1440 IF K07$(1,24)<>K$(1,2)+K$(24,2)+K$(4,20) THEN GOTO NOMORE
1450 READ (ARE07_DEV)
1460 LET C0$(1)=K07$(1,2)+K07$(25,2)+K07$(37,6)+K07$(27,10)
1470 LET B0$(1)=C0$(1,17)+"000"
1480 FIND (ARE03_DEV,KEY=B0$(1,20),DOM=NEXT_ARE07)IOL=ARE03A
1490 IF BEGDATE$<>"" THEN IF B0$(77,3)<BEGDATE$ THEN GOTO NEXT_ARE07
1500 IF ENDDATE$<>"" THEN IF B0$(77,3)>ENDDATE$ THEN GOTO NEXT_ARE07
1510 FIND (ARE13_DEV,KEY=C0$(1,20),DOM=NEXT_ARE07)IOL=ARE13A
1520 DIM CUSTOMER$(DW),STATUS$(3)
1530 LET D0$(1)=C0$(1,2)+C0$(5,6),D1$(1)="(Not On File)"
1540 FIND (ARM01_DEV,KEY=D0$,DOM=1550)IOL=ARM01A
1550 REM " --- Assign data
1560 LET ORDNUM$=C0$(11,7),ORDDATE$=FNB$(B0$(24,3)),SHIPDATE$=FNB$(C1$(41,3))
1565 IF B0$(24,3)=FILL(3) THEN LET ORDDATE$=FILL(8)
1570 IF C1$(41,3)=FILL(3) THEN IF B0$(27,3)=FILL(3) THEN LET SHIPDATE$=FILL(8) ELSE LET SHIPDATE$=FNB$(B0$(27,3))
1580 LET COMMIT$=C1$(44,1),EXT=C[6],QTY=C[2]
1590 LET TOTQTY=TOTQTY+QTY,TOTEXT=TOTEXT+EXT
1600 REM " --- Determine and assign Status
1610 IF B0$(101,1)="C" THEN IF B0$(22,1)="O" THEN LET B0$(22,1)="C"
1620 LET STATUS$(1,1)=B0$(22,1)
1630 IF B0$(68,1)="Y" THEN LET STATUS$(2,1)="P"
1640 IF B0$(69,1)="Y" THEN LET STATUS$(3,1)="L"
1650 IF POS(B0$(69,1)="YN")>0 THEN LET STATUS$(3,1)=B0$(69,1)
1800 REM " --- Display page?"
1810 IF L+1<=MAXROW THEN GOTO 1900
1820 GOSUB 5400
1830 IF FKEY=1 THEN GOTO 4000
1840 IF FKEY=4 THEN GOTO 4000
1850 IF SELECTION$<>"" THEN GOTO 4000
1860 LET L=1,X1=1
1900 REM " --- Store detail line"
1910 DIM G1$(WIDTH-2),CUSTOMER$(DW)
1920 LET CUSTOMER$(1)=FNF$(D0$(3,CUSTLEN),CUSTMASK$)+" "+D1$(1)
1930 LET G1$(2)=ORDNUM$+" "+STATUS$+" "+CUSTOMER$
1940 LET G1$(D[0])=ORDDATE$,G1$(D[1])=SHIPDATE$,G1$(O[0])=STR(QTY:M2$)
1950 LET G1$(O[1])=COMMIT$,G1$(O[2])=STR(EXT:M1$)
1960 LET LLIST$[PAGE,X1,1]=G1$,X1=X1+1,X0=X0+1,L=L+1
1970 REM " --- Loop back for more
1975 NEXT_ARE07: 
1985 GOTO READ_ARE07
2000 REM " --- No more transactions"
2005 NOMORE: 
2010 IF X0>0 THEN GOTO 3000
2020 DIM MESSAGE$[1]
2030 LET MESSAGE$[0]="No transactions found (<Enter>=Continue)"
2040 CALL "SYC.XA",3,MESSAGE$[ALL],0,-1,-1,V$,V3
2090 GOTO 1000
3000 REM " --- Add totals to display page"
3010 FOR X=0 TO NUMBER
3020 DIM G1$(WIDTH-2)
3200 REM " --- Display page?"
3210 IF L<MAXROW THEN GOTO 3300
3220 GOSUB 5400
3230 IF FKEY=1 THEN EXITTO 4000
3240 IF FKEY=4 THEN EXITTO 4000
3250 IF SELECTION$<>"" THEN EXITTO 4000
3290 LET L=1,X1=1
3300 REM " --- Insert bar"
3310 IF X>0 THEN GOTO 3400
3320 DIM G1$(WIDTH-2,"-")
3390 GOTO 3600
3400 REM " --- Store totals element"
3420 LET G1$(16)="Total"
3430 LET G1$(O[0])=STR(TOTQTY:M2$),G1$(O[2])=STR(TOTEXT:M1$)
3600 REM " --- Store line"
3610 LET LLIST$[PAGE,X1,1]=G1$,X1=X1+1,X0=X0+1,L=L+1
3800 REM " --- Next totals element"
3890 NEXT X
3900 REM " --- Display last page"
3910 LET SELECTION$="|EOF"
3920 GOSUB 5400
3990 GOTO 1000
4000 REM " --- Run menu overlay"
4010 IF SELECTION$="END" THEN LET FKEY=4,SELECTION$=""
4050 CALL "SYC.WD",NAME$
4090 RUN "IVM.MA"
5400 REM " --- Window processing"
5410 LET MODE=31
5420 CALL "SYC.SA",MODE,LLIST$[ALL],MORE$[ALL],SELECTION$,PAGE,MAXROW,NAME$,HEIGHT,WIDTH,FKEY
5480 IF FKEY=-16 OR SELECTION$="" THEN LET PAGE=PAGE+1
5485 IF PAGE>PAGES-1 THEN CALL "SYC.RB",LLIST$[ALL],MORE$[ALL],PAGES,PAGE,MAXROW,5,1
5490 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to menu"
9910 CALL "SYC.WD",NAME$
9950 RUN "SYS.AA"
9999 END
