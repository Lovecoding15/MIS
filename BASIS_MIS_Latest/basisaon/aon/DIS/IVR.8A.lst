0010 REM "IVR - Lot/Serial Transaction History By Vendor Report (Input)"
0020 REM "Program IVR.8A"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0050 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=11
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="IVM-01",FILES$[2]="IVM-07",FILES$[3]="IVM-10"
0130 LET FILES$[4]="IVM-14",FILES$[5]="IVM-15",FILES$[6]="IVT-01"
0135 LET FILES$[7]="IVT-03",FILES$[8]="SYS-01",FILES$[9]="APM-01"
0160 CALL "SYC.DA",1,1,8,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0180 LET IVM01_DEV=CHANNELS[1],IVM07_DEV=CHANNELS[2],IVM10_DEV=CHANNELS[3]
0185 LET IVM14_DEV=CHANNELS[4],IVM15_DEV=CHANNELS[5],IVT01_DEV=CHANNELS[6]
0190 LET IVT03_DEV=CHANNELS[7],SYS01_DEV=CHANNELS[8]
0200 REM " --- IOLists
0210 APM01A: IOLIST A0$,A1$
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$,M4$
0290 APS01A: IOLIST *,*,X$,*,*,VENDMASK$
0300 GLS01A: IOLIST G0$,G1$,G2$,G3$,G4$,G5$,G6$,G7$,G8$
0400 REM " --- Parameters"
0405 DIM P[7],INFO$[20]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="IV",N3$=F5$
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0440 IF POS(P3$(17,1)="SL")=0 THEN GOTO 4900
0450 CALL "SYC.VA","AP",INFO$[ALL]
0455 IF INFO$[20]<>"Y" THEN GOTO 4800
0460 CALL "SYC.VA",N2$,INFO$[ALL]
0465 LET GL$=INFO$[9],P[0]=NUM(P2$(1,2))
0470 LET P[1]=NUM(P2$(3,2)),P[2]=NUM(P2$(5,1)),P[3]=NUM(P2$(7,2))
0475 LET P[5]=NUM(P2$(9,2)),P[6]=NUM(P2$(11,2)),P[7]=NUM(P2$(13,2))
0480 FIND (SYS01_DEV,KEY=N0$+"AP00",DOM=9800)IOL=APS01A
0485 LET VENDLEN=NUM(X$(1,2)),VENDMASK=LEN(VENDMASK$)
0490 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0500 REM " --- Init Data"
0520 LET OPEN_LIST$="Open  ClosedBoth  ",OCB$="B"
0530 DIM A[1],U[1],FILES[15],PARAMS$[4],OPTION$[7],TTYPE$(18)
0535 LET FILES[0]=SYS01_DEV,FILES[1]=IVM01_DEV,FILES[10]=IVM10_DEV
0540 LET FILES[14]=IVM14_DEV,FILES[15]=IVM15_DEV,PARAMS$[0]=N0$
0545 LET PARAMS$[1]=P1$,PARAMS$[2]=P2$,PARAMS$[3]=P3$,PARAMS$[4]=P4$
0550 CALL "SYC.RM",M1$,M1,10,15
0555 CALL "SYC.RM",M2$,M2,9,12
0560 CALL "SYC.RM",M3$,M3,10,12
0565 CALL "SYC.RM",M4$,M4,6,12
0600 REM " --- Additional Opens"
0610 IF GL$="Y" THEN LET FILES$[10]="GLM-01"
0620 CALL "SYC.DA",1,9,10,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0630 IF STATUS>0 THEN GOTO 9900
0640 LET APM01_DEV=CHANNELS[9],GLM01_DEV=CHANNELS[10]
0700 REM " --- Background"
0710 PRINT @(22,3),'SB',"Beginning Vendor: ",'SF',"First",'SB',@(25,4),"Ending Vendor: ",'SF',"Last",'SB',@(24,5),"Beginning Date:",@(27,6),"Ending Date:",'SF',
0750 CALL "IVC.IB","B","D",7,FILES[ALL],PARAMS$[ALL],OPTION$[ALL],V3
0760 PRINT @(18,14),'SB',"Open, Closed Or Both:",'SF',
0900 REM 
0990 GOSUB 5000
1000 REM " --- Beginning Vendor"
1010 LET V0$="M",V1$="C",V2$=BEG_VENDOR$,V3$=VENDMASK$,V4$="Enter Beginning Vendor Number (<F1>=First/<F3>=Lookup)",V0=VENDLEN,V1=40,V2=3,I0=0
1030 GOSUB 7000
1040 ON V3 GOTO 1070,1050,1000,1060,3900
1050 LET BEG_VENDOR$=""; PRINT @(V1,V2),'CL',"First",; GOTO 1090
1060 CALL "SYC.LV",V$
1065 IF V$="" THEN GOTO 1000
1070 IF V$="" THEN GOTO 1050
1072 LET V$=V$+FILL(6-LEN(V$),"0")
1075 FIND (APM01_DEV,KEY=N0$+V$,DOM=1000)IOL=APM01A
1080 PRINT @(V1,V2),FNF$(V$(1,VENDLEN),VENDMASK$)," ",A1$(1,30),'CL',
1085 LET BEG_VENDOR$=V$
1090 GOTO 3900
1100 REM " --- Ending Vendor"
1110 LET V0$="M",V1$="C",V2$=END_VENDOR$,V3$=VENDMASK$,V4$="Enter Ending Vendor Number (<F1>=Last/<F3>=Lookup)",V0=VENDLEN,V1=40,V2=4
1120 GOSUB 7000
1130 ON V3 GOTO 1160,1140,1190,1150,3900
1140 LET END_VENDOR$=""; PRINT @(V1,V2),'CL',"Last",; GOTO 1190
1150 CALL "SYC.LV",V$
1155 IF V$="" THEN GOTO 1100
1160 IF V$="" THEN GOTO 1140
1170 LET V$=V$+FILL(6-LEN(V$),"0")
1175 FIND (APM01_DEV,KEY=N0$+V$,DOM=1100)IOL=APM01A
1180 PRINT @(V1,V2),FNF$(V$(1,VENDLEN),VENDMASK$)," ",A1$(1,30),'CL',
1185 LET END_VENDOR$=V$
1190 GOTO 3900
1200 REM " --- Beginning Date"
1220 LET V0$="D",V1$="C",V2$=BEG_DATE$,V3$="",V4$="Enter Beginning Transaction Date (<F1>=First)",V0=8,V1=40,V2=5
1240 GOSUB 7000
1260 IF V3=1 OR V$="" THEN LET BEG_DATE$=""; PRINT @(V1,V2),'CL',"First",; GOTO 1290
1280 LET BEG_DATE$=V$
1290 GOTO 3900
1300 REM " --- Ending Date"
1320 LET V0$="D",V1$="C",V2$=END_DATE$,V3$="",V4$="Enter Ending Transaction Date (<F1>=Last)",V0=8,V1=40,V2=6
1340 GOSUB 7000
1360 IF V3=1 OR V$="" THEN LET END_DATE$=""; PRINT @(V1,V2),'CL',"Last",; GOTO 1390
1370 LET END_DATE$=V$
1380 IF END_DATE$<>"" THEN IF END_DATE$<BEG_DATE$ THEN GOTO 1300
1390 GOTO 3900
1400 REM " --- Entry Call"
1420 CALL "IVC.IB","I","D",7,FILES[ALL],PARAMS$[ALL],OPTION$[ALL],V3
1430 IF V3=2 THEN GOTO 3900
1440 LET BEG_WHSE$=OPTION$[1],END_WHSE$=OPTION$[2],BEG_PROD$=OPTION$[3]
1450 LET END_PROD$=OPTION$[4],BEG_ITEM$=OPTION$[5],END_ITEM$=OPTION$[6]
1460 LET ITEM_TYPE$=OPTION$[7]
1470 IF V3=4 THEN GOTO 4000
1480 GOTO 3900
1600 REM " --- Open/Closed/Both"
1610 LET V0$="S",V1$="C",V2$=OCB$,V3$="OCB",V4$="O=Open Only   C=Closed Only   B=Both",V0=1,V1=40,V2=14
1620 GOSUB 7000
1640 PRINT @(V1+V0+1,V2),OPEN_LIST$((POS(V$="OCB")-1)*6+1,6),'CL',
1660 LET OCB$=V$
1690 GOTO 3900
3900 REM " --- Next Field"
3910 IF V3=4 THEN GOTO 3990
3920 IF V3<>2 THEN GOTO 3950
3930 IF I0>0 THEN LET I0=I0-1
3940 GOTO 3960
3950 LET I0=I0+1
3960 ON I0 GOTO 1000,1100,1200,1300,1400,1600,3990
3990 GOSUB 5000
4000 REM " --- Correct?"
4010 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
4020 ON V3 GOTO 4030,4000,4000,4000,9900
4030 ON POS(V$="YN") GOTO 4000,4050,1000
4100 REM " --- Run report overlay"
4190 RUN "IVR.8B"
4800 REM " --- AP Not Installed"
4810 CALL "IVC.SB","A",STATUS
4890 GOTO 9900
4900 REM " --- Lotted/Serialized Inventory not enabled"
4910 CALL "IVC.SB","L",STATUS
4990 GOTO 9900
5000 REM " --- Display Screen"
5010 IF FNP$(BEG_DATE$)<>"" THEN PRINT @(40,5),FNB$(BEG_DATE$), ELSE PRINT @(40,5),"First",'CL',
5020 IF FNP$(END_DATE$)<>"" THEN PRINT @(40,6),FNB$(END_DATE$), ELSE PRINT @(40,6),"Last",'CL',
5030 CALL "IVC.IB","D","D",7,FILES[ALL],PARAMS$[ALL],OPTION$[ALL],V3
5050 PRINT @(40,14),OCB$," ",OPEN_LIST$((POS(OCB$="OCB")-1)*6+1,6),'CL',
5090 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9060 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9120 RETRY
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
