0010 REM "POR - Purchase Order Expediting Report (Print Overlay)
0020 REM "Program POR.KB 
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists
0210 APM01A: IOLIST C0$(1),C1$(1)
0230 APM10C: IOLIST D0$(1)
0240 ARM01A: IOLIST *,CUSTINFO$(1)
0250 ARM03A: IOLIST *,SHIPINFO$(1)
0260 IVM01A: IOLIST *,X1$(1)
0290 POE02A: IOLIST A0$(1),A1$(1),A2$,A3$,A[ALL]
0300 POE12A: IOLIST B0$(1),B1$(1),B2$(1),B3$(1),B4$(1),B5$,B6$,B[ALL]
0310 POM02A: IOLIST S0$(1),S1$(1)
0500 REM " --- Init Data
0510 PRECISION IVPRECISION
0520 DIM A0$(15),A1$(160),A[8]
0530 LET GRANDTOT=0
0600 REM " --- Headings and print positions
0610 LET HEADINGS=2
0620 DIM HEADINGS$[HEADINGS],O[11]
0630 LET WIDTH=132,PAGE=0,L9=59,L=L9+1
0640 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$
0650 GOSUB ASSIGNHEADS
0680 LET HEADINGS$[1]=HEADINGS$[1]+" Through "+FNB6$(DATETHRU$)
0760 POSITIONS: 
0770 LET O[1]=O[0]+4,O[2]=O[1]+3,O[3]=O[2]+ITEMLEN+1,O[4]=O[3]+28
0780 LET O[5]=O[4]+3,O[6]=O[5]+9,O[7]=O[6]+M2+1,O[8]=O[7]+M2+1
0790 LET O[9]=O[8]+M2+1,O[10]=O[9]+M2+1,O[11]=O[10]+M3+1
0810 IF O[11]+13<WIDTH THEN GOTO 0950
0820 LET O[11]=WIDTH-M1,O[10]=O[11]-M3,O[9]=O[10]-M2,O[8]=O[9]-M2
0830 LET O[7]=O[8]-M2,O[6]=O[7]-M2
0950 REM " --- Position files
0960 CALL "SYC.GA",7,1,"","",STATUS
0970 IF STATUS THEN GOTO 9900
0980 CALL "SYC.NB","Printing",14,COLUMN
1000 REM " --- Sort by Purchase Order
1040 READ (POE32_DEV,KEY=N0$+POFROM$+VENDFROM$,DOM=READSORT)
1100 REM " --- Read through sort file
1150 READSORT: 
1160 LET K32$=KEY(POE32_DEV,END=4000)
1170 LET K$=K32$(1,2)+K32$(10,6)+K32$(3,7)
1180 READ (POE32_DEV)
1640 IF K$(1,2)<>N0$ THEN GOTO 4000
1650 FIND (POE02_DEV,KEY=K$,DOM=NEXTHEADER)IOL=POE02A
1700 REM " --- Test Ranges
1710 LET PRINTIT$="N"
1720 IF POFROM$<>FILL(7) AND A0$(9,7)<POFROM$ THEN GOTO NEXTHEADER
1730 IF POTHRU$<>FILL(7) AND A0$(9,7)>POTHRU$ THEN GOTO NEXTHEADER
1740 IF VENDFROM$<>FILL(6) AND A0$(3,6)<VENDFROM$ THEN GOTO NEXTHEADER
1750 IF VENDTHRU$<>FILL(6) AND A0$(3,6)>VENDTHRU$ THEN GOTO NEXTHEADER
1760 IF WHSE$<>"" AND A1$(1,2)<>WHSE$ THEN GOTO NEXTHEADER
1790 IF DATETHRU$<>"" AND A1$(23,6)>DATETHRU$ THEN GOTO TESTDETAIL
2000 REM " --- If req'd date of any detail is w/in date range, print whole PO
2010 TESTDETAIL: 
2020 DIM B0$(18),B1$(48),B2$(32),B3$(22),B4$(40),B[12]
2030 READ (POE12_DEV,KEY=A0$(1,15),DOM=TESTPOE12)
2100 REM " --- Test PO Detail date range
2110 TESTPOE12: 
2120 LET K11$=KEY(POE12_DEV,END=DONETESTD)
2130 IF K11$(1,15)<>A0$ THEN GOTO DONETESTD
2140 READ (POE12_DEV,KEY=K11$)IOL=POE12A
2150 IF B1$(3,6)>DATETHRU$ THEN GOTO NEXTTESTD
2160 REM " --- Detail passed, so go print header & whole PO
2170 LET PRINTIT$="Y"
2180 GOTO DONETESTD
2200 REM " --- Loop up to test next detail record
2210 NEXTTESTD: 
2290 GOTO TESTPOE12
2300 REM " --- Done testing detail records
2310 DONETESTD: 
2320 IF PRINTIT$<>"Y" THEN GOTO NEXTHEADER
2330 GOSUB TESTBREAKS
2340 GOSUB PRINTDETAIL
2400 REM " --- Loop up for next header record via sort file
2410 NEXTHEADER: 
2420 GOTO READSORT
4000 REM " --- All Done
4020 IF L+2>L9 THEN GOSUB 5000
4030 GOSUB POTOTALS
4040 PRINT (7)@(O[11]-17),"Total For Report",@(O[11]),GRANDTOT:M1$
4050 GOTO 9900
4100 REM " --- Print Detail Subroutine
4105 PRINTDETAIL: 
4110 REM " --- Re-loop through detail & print whole PO
4115 PRINT @(COLUMN,11),FNF$(A0$(3,VENDLEN),VENDOMASK$)," ",A0$(9,7),
4120 READ (POE12_DEV,KEY=A0$,DOM=READ_DETAIL)
4130 READ_DETAIL: 
4140 LET K12$=KEY(POE12_DEV,END=DONEPRINTDETAIL)
4150 IF K12$(1,15)<>A0$ THEN GOTO DONEPRINTDETAIL
4160 READ (POE12_DEV,KEY=K12$)IOL=POE12A
4200 REM " --- Set up variables
4210 DIM DATEREQ$(8)
4220 LET WHSE_DETAIL$=B3$(1,2),ITEMNUM$=B3$(3,20),MEMO$=B4$,UNITMEAS$=B1$(22,2)
4230 IF B1$(3,6)<>FILL(6) THEN LET DATEREQ$=FNB6$(B1$(3,6))
4240 LET QTYORD$=STR(B[3]:M2$),QTYINQA$=STR(B[4]:M2$),QTYREC$=STR(B[7]:M2$)
4250 LET BALDUE$=STR(B[3]-B[7]:M2$),UNITCOST$=STR(B[1]:M3$)
4260 REM " --- Get Drop Ship flag & Line Type
4270 DIM S0$(4),S1$(32)
4280 LET LINETYPE$="N",DROPSHIP$="N"
4290 FIND (POM02_DEV,KEY=B0$(1,2)+B1$(1,2),DOM=4310)IOL=POM02A
4300 LET LINETYPE$=S1$(21,1),DROPSHIP$=S1$(22,1)
4310 REM " --- Get Item Desc for S and N type lines
4320 IF LINETYPE$="N" THEN LET ITEMDESC$=MEMO$; GOTO 4370
4330 DIM ITEMDESC$(60),X1$(60)
4340 LET ITEMDESC$(1)="Not On File"
4350 FIND (IVM01_DEV,KEY=N0$+B3$(3,20),DOM=4370)IOL=IVM01A
4360 LET ITEMDESC$(1)=FNITEM$(X1$,DESCLEN[1],DESCLEN[2],DESCLEN[3])
4370 REM " --- Get extension
4380 GOSUB CALC_EXTENSION
4400 REM " --- Format common part of print line
4410 DIM PLINE$(132)
4420 LET PLINE$(1)=B0$(16,3)+" "+WHSE_DETAIL$
4430 REM " --- Print Line Types 'M', 'O' & 'V'
4440 IF POS(LINETYPE$="MOV")=0 THEN GOTO NOT_MOV
4450 IF LINETYPE$="V" THEN LET PLINE$(O[2]+1)=MEMO$(1,20) ELSE LET PLINE$(O[2]+1)=MEMO$
4460 LET PLINE$(O[5]+1)=DATEREQ$
4470 IF LINETYPE$="O" THEN LET PLINE$(O[10]+1,M3)=UNITCOST$,PLINE$(O[11]+1)=EXTENSION$
4480 IF L+2>L9 THEN GOSUB 5000
4490 PRINT (7)PLINE$
4500 LET L=L+1
4510 GOTO NEXTPRINTDETAIL
4520 REM " --- Print Line Types 'S' & 'N'
4530 NOT_MOV: 
4540 IF POS(LINETYPE$="SN")=0 THEN GOTO NEXTPRINTDETAIL
4550 IF L+2>L9 THEN GOSUB 5000
4560 PRINT (7)PLINE$,@(O[2]),ITEMNUM$(1,ITEMLEN),@(O[3]),ITEMDESC$(1,27),@(O[4]),UNITMEAS$,@(O[5]),DATEREQ$,@(O[6]),QTYORD$,@(O[7]),QTYINQA$,@(O[8]),QTYREC$,@(O[9]),BALDUE$,@(O[10]),UNITCOST$,@(O[11]),EXTENSION$
4570 LET L=L+1
4600 REM " --- Print drop ship info if applicable
4605 DROPSHIP: 
4610 IF DROPSHIP$<>"Y" OR AR$="N" THEN GOTO NEXTPRINTDETAIL
4620 DIM CUSTINFO$(321),SHIPINFO$(173),CUSTADDR$(120),SHIPADDR$(120)
4630 LET CUSTNAME$="Not On File",SHIPNAME$="Not On File"
4640 FIND (ARM01_DEV,KEY=B0$(1,2)+B2$(11,6),DOM=4670)IOL=ARM01A
4650 LET CUSTNAME$=CUSTINFO$(1,30),CUSTADDR$=CUSTINFO$(31,72)+FILL(24)+CUSTINFO$(103,9)
4660 CALL "SYC.AA",CUSTADDR$,24,4,9,30
4670 FIND (ARM03_DEV,KEY=B0$(1,2)+B2$(11,6)+B2$(27,6),DOM=4695)IOL=ARM03A
4680 LET SHIPNAME$=SHIPINFO$(1,30),SHIPADDR$=SHIPINFO$(31,72)+FILL(24)+SHIPINFO$(103,9)
4690 CALL "SYC.AA",SHIPADDR$,24,4,9,30
4695 REM "Use Shipto address info if available else, use cust addr info
4700 LET DROPADDR$=CUSTADDR$,DROPNAME$=CUSTNAME$
4710 IF SHIPADDR$<>FILL(120) THEN LET DROPADDR$=SHIPADDR$,DROPNAME$=SHIPNAME$
4720 IF L+6>L9 THEN GOSUB 5000
4730 PRINT (7)@(O[2]),"Drop Ship To Customer",@(O[3]+1),FNF$(B2$(11,CUSTLEN),CUSTOMASK$),"    Order ",B2$(17,7)," ",B2$(24,3)
4740 PRINT (7)@(O[3]-4),"Name",@(O[3]+1),DROPNAME$
4750 PRINT (7)@(O[3]-7),"Address",@(O[3]+1),DROPADDR$(1,30)
4760 PRINT (7)@(O[3]+1),DROPADDR$(31,30)
4770 PRINT (7)@(O[3]+1),DROPADDR$(61,30)
4780 PRINT (7)@(O[3]+1),DROPADDR$(91,30)
4790 LET L=L+6
4800 REM " --- Get next detail record to print
4810 NEXTPRINTDETAIL: 
4820 LET POTOT=POTOT+EXTENSION
4830 LET GRANDTOT=GRANDTOT+EXTENSION
4840 LET EXTENSION=0,EXTENSION$=""
4890 GOTO READ_DETAIL
4900 REM " --- Done printing detail
4910 DONEPRINTDETAIL: 
4920 RETURN 
5000 REM " --- Heading
5010 LET L=HEADINGS+1
5030 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5040 IF STATUS>0 THEN EXITTO 9900
5110 PRINT (7)@(0),"From Vendor: ",VENDF$," ",VENDFNAME$(1,20),@(FNC(WHSEPAGEHEAD$,WIDTH)),WHSEPAGEHEAD$,@(104),"From Purchase Order: ",POF$
5120 PRINT (7)@(2),"To Vendor: ",VENDT$," ",VENDTNAME$(1,20),@(106),"To Purchase Order: ",POT$
5130 PRINT (7)""
5140 PRINT (7)@(O[5]),"Date",@(O[6]+M2-9),"Quantity",@(O[7]+M2-9),"Quantity",@(O[8]+M2-9),"Quantity",@(O[9]+M2-9),"Balance",@(O[10]+M3-5),"Unit"
5150 PRINT (7)@(O[0]),"Seq",@(O[1]),"Wh",@(O[2]),"Item",@(O[3]),"Description",@(O[4]),"UM",@(O[5]),"Required",@(O[6]+M2-9),"Ordered",@(O[7]+M2-9),"In QA",@(O[8]+M2-9),"Received",@(O[9]+M2-9),"Due",@(O[10]+M3-4),"Cost",@(O[11]+M1-10),"Extension"
5160 PRINT (7)""
5180 LET L=L+6
5190 RETURN 
5300 REM " --- Assign headings variables
5305 ASSIGNHEADS: 
5320 IF VENDFROM$=FILL(6) THEN LET VENDF$="First" ELSE LET VENDF$=FNF$(VENDFROM$(1,VENDLEN),VENDOMASK$)
5330 IF VENDTHRU$=FILL(6) THEN LET VENDT$="Last" ELSE LET VENDT$=FNF$(VENDTHRU$(1,VENDLEN),VENDOMASK$)
5340 IF POFROM$=FILL(7) THEN LET POF$="First" ELSE LET POF$=POFROM$
5350 IF POTHRU$=FILL(7) THEN LET POT$="Last" ELSE LET POT$=POTHRU$
5390 IF WHSE$="" THEN LET WHSEPAGEHEAD$="For All Warehouses" ELSE LET WHSEPAGEHEAD$="For Warehouse "+WHSE$+" "+CVS(WHSENAME$,2)
5395 RETURN 
6000 REM " --- Test for Breaks
6005 TESTBREAKS: 
6010 IF A0$(9,7)=PONUM$ THEN GOTO 6090
6020 IF PRINTPTOT$="Y" THEN GOSUB POTOTALS
6030 GOSUB NEWPO
6090 RETURN 
6200 REM " --- New PO
6205 NEWPO: 
6210 LET POTOT=0,PONUM$=A0$(9,7),PRINTPTOT$="Y",VENDOR$=A0$(3,6)
6215 LET TERMSDESC$="Not On File",VENDNAME$="Not On File"
6220 DIM C0$(8),C1$(195),D0$(26)
6230 FIND (APM01_DEV,KEY=N0$+VENDOR$,DOM=6250)IOL=APM01A
6240 LET VENDNAME$=C1$(1,30),CONTACT$=C1$(126,20),PHONE$=FNZ$(C1$(112,14))
6250 FIND (APM10_DEV,KEY=N0$+"C"+A1$(38,2),DOM=6410)IOL=APM10C
6260 LET TERMSDESC$=D0$(6,18)
6410 IF L+5>L9 THEN GOSUB 5000
6420 DIM DATEORD$(8),DATEPROM$(8)
6430 IF A1$(5,6)<>FILL(6) THEN LET DATEORD$=FNB6$(A1$(5,6))
6435 IF A1$(11,6)<>FILL(6) THEN LET DATEPROM$=FNB6$(A1$(11,6))
6440 PRINT (7)@(0),"PO#: ",PONUM$,@(14),"Ordered ",DATEORD$,@(33),"Vendor ",FNF$(VENDOR$(1,VENDLEN),VENDOMASK$)," ",VENDNAME$,@(74),"Contact ",CONTACT$,@(104),"Ack By ",A1$(74,20)
6450 PRINT (7)@(13),"Promised ",DATEPROM$,@(66),"Phone ",PHONE$,@(105),"Terms ",A1$(38,2)," ",TERMSDESC$
6460 PRINT (7)""
6470 LET L=L+3
6490 RETURN 
6600 REM " --- Print Purchase Order total
6610 POTOTALS: 
6620 IF L+2>L9 THEN GOSUB 5000
6630 PRINT (7)@(O[11]-23),"Total For PO # ",PONUM$,@(O[11]),POTOT:M1$
6640 PRINT (7)""
6650 LET L=L+2
6660 RETURN 
6900 REM " --- Calc extension for S, N and O types
6905 CALC_EXTENSION: 
6920 IF POS(LINETYPE$="SNO")=0 THEN GOTO 6990
6930 LET QTY=B[3]-B[7]
6940 IF LINETYPE$="O" THEN LET QTY=1
6950 PRECISION 2
6960 LET EXTENSION=B[1]*QTY,EXTENSION$=STR(EXTENSION:M1$)
6970 PRECISION IVPRECISION
6990 RETURN 
8000 REM " --- Functions
8025 DEF FNB6$(Q$)=Q$(3,2)+"/"+Q$(5,2)+"/"+FNYY21_YY$(Q$(1,2))
8035 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8085 DEF FNZ$(Q$)=FILL(10,CVS(Q$(1,3)+FILL(POS("9"<Q$(1,5))>0)+Q$(4,2)+FILL(ABS(POS("A">=Q$(1,6))>0)-POS("0">Q$(6,4))>0,"-")+Q$(6,4)+FILL(10),16))
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
