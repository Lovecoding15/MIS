0010 REM "OPC - Order Processing SpeedSearch (Customer Pricing)"
0020 REM "Program OPC.QE"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0045 REM "D_STATUS  : SpeedSearch Status (0=No Error)"
0050 REM "OPTION$[n]: Standard SpeedSearch Options Array"
0055 REM 
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER D_STATUS,OPTION$[ALL]
0100 REM " --- Open Files"
0110 LET FILES=9
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0130 LET FILES$[1]="ARM-01",FILES$[2]="ARM-02",FILES$[3]="ARM-10"
0135 LET FILES$[4]="IVM-01",FILES$[5]="IVM-02",FILES$[6]="IVM-03"
0140 LET FILES$[7]="IVM-06",FILES$[8]="IVM-10",FILES$[9]="IVM-14"
0150 CALL "SYC.DA",1,1,FILES,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS THEN GOTO 9900
0170 LET ARM01_DEV=CHANNELS[1],ARM02_DEV=CHANNELS[2],ARM10_DEV=CHANNELS[3]
0180 LET IVM01_DEV=CHANNELS[4],IVM02_DEV=CHANNELS[5],IVM03_DEV=CHANNELS[6]
0190 LET IVM06_DEV=CHANNELS[7],IVM10_DEV=CHANNELS[8],IVM14_DEV=CHANNELS[9]
0200 REM " --- IOLIST's"
0210 ARM01A: IOLIST A0$(1),A1$(1)
0220 IVM06A: IOLIST B0$(1),B1$(1),B[ALL]
0230 IVM10E: IOLIST C0$(1),C[ALL]
0240 IVM01A: IOLIST D0$(1),D1$(1),D2$(1),D3$,D4$,D5$,D6$,D[ALL]
0250 ARM02A: IOLIST R0$(1),R1$(1),R[ALL]
0260 SYS01T: IOLIST *,F0$
0270 ARS01A: IOLIST X$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0280 IVS01A: IOLIST X$,I1$,I2$,I3$,I4$,X$,M1$,M2$,M3$,M4$
0310 IVM02A: IOLIST W0$(1),W1$(1),W2$,W[ALL]
0320 IVM10C: IOLIST X0$(1)
0330 ARM10M: IOLIST Y0$(1)
0400 REM " --- Parameters"
0410 DIM P[1],I[5],X$(128)
0415 LET X$(1)=STBL("!SPEEDSEARCH",ERR=9900),N0$=X$(1,2),MAXPAGE=NUM(X$(66,2))
0420 LET TNAME$=FNP$(X$(3,8)),NAME$=FNP$(X$(11,8)),SNAME$=FNP$(X$(19,8))
0425 LET WIDTH=NUM(X$(39,2)),HEIGHT=NUM(X$(41,2)),SHEIGHT=NUM(X$(45,2))
0430 LET ONAME$=FNP$(X$(27,8)),MAXOPT=NUM(X$(57,2))
0435 LET PARAM$=FNU$(FNP$(OPTION$[2])),SUBPARAM$="",P=POS("/"=PARAM$)
0440 IF P>0 THEN LET SUBPARAM$=PARAM$(P+1),PARAM$=PARAM$(1,P-1)
0445 LET SYS01_DEV=NUM(STBL("!SYS01"))
0460 FIND (SYS01_DEV,KEY=N0$+"AR00",DOM=9900)IOL=ARS01A
0465 FIND (SYS01_DEV,KEY=N0$+"IV00",DOM=9900)IOL=IVS01A
0470 LET P[0]=NUM(P2$(1,2)),I[0]=NUM(I2$(1,2)),I[1]=NUM(I2$(3,2))
0475 LET I[3]=NUM(I2$(9,2)),I[4]=NUM(I2$(11,2)),I[5]=NUM(I2$(13,2))
0500 REM " --- Initializations"
0505 PRECISION NUM(I2$(5,1))
0510 DIM A0$(8),A1$(30),B0$(28),B1$(48),B[19],C0$(32),C[19],X0$(32),Y0$(32)
0515 DIM D0$(22),D1$(60),D2$(48),D[12],OPTLIST$[2,MAXOPT,6],METHODS$[3]
0520 DIM HEADING$(WIDTH-2),FOOTING$(WIDTH-2),FILES[14],PARAMS[10],ITEM$[7]
0525 DIM R0$(10),R1$(64),R[10],W0$(24),W1$(96),W[20]
0540 LET D_STATUS=0,MAX_ROW=HEIGHT-4,PAGE=1,PAGES=2,PGM$=PGM(-2)
0550 LET A0$(1)=N0$+OPTION$[3],H=INT((WIDTH-2)/2),TYPE=0,METHODS$[0]="None"
0560 LET METHODS$[1]="Mark Up Over Cost",METHODS$[2]="Mark Down From List"
0570 LET METHODS$[3]="Margin Over Cost",M9$="##0.00%",M9=LEN(M9$)
0575 LET FILES[1]=IVM01_DEV,FILES[14]=IVM14_DEV,PARAMS[0]=I[0]
0580 LET PARAMS[1]=I[3],PARAMS[2]=I[4],PARAMS[3]=I[5]
0600 REM " --- Option Window"
0610 CALL "SYC.QC",SYM01_DEV,SYM11_DEV,PGM$,SECURITY$,OPTION,OPTLIST$[ALL],TITLE$,OMAXROW,PREVMENU$,ONAME$
0620 LET V1=13,V2=13
0650 REM " --- Resize masks"
0660 LET V1=V1-1,V2=V2-1
0670 CALL "SYC.RM",M2$,M2,9,V1
0680 CALL "SYC.RM",M4$,M4,7,V2
0690 IF (M2*2)+(M4*2)+(M9*2)>WIDTH-2 THEN GOTO 0650
0700 REM " --- Background"
0710 GOSUB 5200
0800 REM " --- Position files"
0810 READ (IVM01_DEV,KEY=N0$,DOM=0820)
0820 READ (ARM10_DEV,KEY=N0$+"M",DOM=0830)
0900 REM " --- Position file"
0910 CALL "SYC.WB",SNAME$,0
0920 PRINT 'CF',
0930 CALL "SYC.WB",TNAME$,0
0940 PRINT @(0,1),'CL',@(0,2),'CL',@(0,3),'CL',
0950 READ (ARM01_DEV,KEY=A0$,DOM=0980)
0960 LET V$=A0$(3)
0970 GOTO 1300
0980 READ (ARM01_DEV,KEY=N0$,DOM=0990)
0990 LET K$=KEY(ARM01_DEV,END=1000)
0995 IF POS(N0$=K$)=1 THEN LET A0$(1)=K$
1000 REM " --- Clear/setup top window"
1010 GOSUB 6000
1020 CALL "SYC.WB",TNAME$,0
1030 ON TYPE GOTO 1040,1070
1040 PRINT @(1,0),'SB',"  Customer:",FILL(10),"<F1> To Enter Price Code",'SF','CL',
1050 GOTO 1100
1070 PRINT @(1,0),'SB',"Price Code:",FILL(10),"<F1> To Enter Customer",'SF','CL',
1090 GOTO 1400
1100 REM " --- Customer
1110 LET V2$="",V2$=KEY(ARM01_DEV,END=1140)
1120 IF POS(N0$=V2$)<>1 THEN LET V2$=""
1130 IF V2$<>"" THEN LET V2$=V2$(3,P[0])
1140 LET V0$="M",V1$="KE",V3$=M0$,V4$="",V0=6,V1=13,V2=0
1150 GOSUB 7000
1160 ON V3 GOTO 1300,1200,1100,1170,3800,3900,3800
1170 CALL "SYC.LC",V$
1190 GOTO 1300
1200 REM " --- Switch from contract pricing to pricing table"
1210 LET TYPE=1
1220 GOSUB 5400
1290 GOTO 1000
1300 REM " --- Retrieve customer master"
1310 DIM X$(WIDTH-2)
1320 IF V$="" THEN GOTO 1100
1330 LET A0$(3)=V$,R0$(1)=A0$
1340 READ (ARM01_DEV,KEY=A0$,DOM=1100)IOL=ARM01A
1350 FIND (ARM02_DEV,KEY=R0$,DOM=1110)IOL=ARM02A
1360 LET X$(1)='SB'+"   Customer: "+'SF'+FNF$(A0$(3,P[0]),M0$)+" "+A1$(1,30)
1370 LET X1$=A0$(3,6),X2$=PARAM$
1380 CALL "SYC.QB",X$,X1$,X3$
1390 GOTO 1700
1400 REM " --- Price Code"
1410 LET V2$="",V2$=KEY(ARM10_DEV,END=1140)
1420 IF POS(A0$(1,2)+"M"=V2$)<>1 THEN LET V2$=""
1430 IF V2$<>"" THEN LET V2$=V2$(4,4)
1440 LET V0$="S",V1$="KE",V3$="",V4$="",V0=4,V1=13,V2=0
1450 GOSUB 7000
1460 ON V3 GOTO 1600,1500,1400,1470,3800,3900,3800
1470 GOSUB 6200
1490 GOTO 1600
1500 REM " --- Switch from pricing table to contract pricing"
1510 LET TYPE=0
1520 GOSUB 5200
1590 GOTO 1000
1600 REM " --- Retrieve code definition"
1610 DIM X$(WIDTH-2)
1620 IF V$="" THEN GOTO 1400
1630 LET Y0$(1)=A0$(1,2)+"M"+V$
1640 READ (ARM10_DEV,KEY=Y0$(1,7),DOM=1400)IOL=ARM10M
1650 PRINT @(V1,V2),Y0$(4,4)," ",Y0$(8,20),'CL',
1700 REM " --- Item"
1710 PRINT @(7,1),'SB',"Item:",'SF',
1725 LET V2$="",V2$=KEY(IVM01_DEV,END=1040)
1730 IF POS(N0$=V2$)<>1 THEN LET V2$=""
1735 IF V2$<>"" THEN LET V2$=V2$(3,I[0])
1740 LET ACTION$="V",V1=13,V2=1,V4$=""
1745 CALL "IVC.IA",ACTION$,V1,V2,FILES[ALL],N0$,V2$,V4$,PARAMS[ALL],ITEM$[ALL],D[ALL],V3
1750 ON V3 GOTO 1760,1700,1000,1700,3800,3900,3800
1760 LET V$=FNP$(ITEM$[0])
1770 IF V$="" THEN GOTO 1700
1780 LET D0$(1)=N0$+V$
1800 REM " --- Retrieve item master"
1810 DIM X$((WIDTH-2)-(V1+I[0]+2))
1820 READ (IVM01_DEV,KEY=D0$,DOM=1700)IOL=IVM01A
1830 LET X$(1)=FNITEM$(D1$,I[3],I[4],I[5]),WHSE$=""
1840 PRINT @(7,1),'CL','SB',"Item: ",'SF',D0$(3,P[0])," ",X$,
1850 READ (IVM03_DEV,KEY=N0$+"G"+D0$(3),DOM=1860)
1860 LET K$=KEY(IVM03_DEV,END=1900)
1870 IF POS(N0$+"G"+D0$(3)=K$)<>1 THEN GOTO 1900
1890 LET WHSE$=K$(24,2)
1900 REM " --- Warehouse ID"
1905 PRINT @(2,2),'CL','SB',"Warehouse:",'SF','CL',
1910 LET V0$="S",V1$="KE",V2$=WHSE$,V3$="",V4$="",V0=2,V1=13,V2=2
1920 GOSUB 7000
1930 ON V3 GOTO 1950,1900,1700,1940,3800,3900,3800
1940 CALL "IVC.LK",3,V1,V2,V$
1950 LET WHSE$=V$+"  ",WHSE$=WHSE$(1,2),W0$(1)=N0$+WHSE$+D0$(3)
1960 FIND (IVM10_DEV,KEY=N0$+"C"+WHSE$,DOM=1900)IOL=IVM10C
1965 FIND (IVM02_DEV,KEY=W0$,DOM=1900)IOL=IVM02A
1970 PRINT @(V1,V2),WHSE$," ",X0$(6,24),
1980 LET PRICE=W[9],COST=W[11],LISTPRICE=W[9],MSRPRICE=D[2]
1990 ON TYPE GOTO 2000,3000
2000 REM " --- Contract Pricing from IVM-06"
2010 DIM B0$(28),B1$(48),B[19]
2020 GOSUB 5200
2030 LET B0$(1)=A0$(1,8)+D0$(3),X0=0
2040 FIND (IVM06_DEV,KEY=B0$,DOM=2300)IOL=IVM06A
2050 LET X0=1
2100 REM " --- Display data in middle window"
2110 CALL "SYC.WB",NAME$,0
2120 FOR X=0 TO 4
2130 IF B[X]<>0 THEN PRINT @(W1,X+2),B[X]:M2$,@(W2,X+2),B[X+10]:M3$,
2140 IF B[X+5]<>0 THEN PRINT @(W1+H,X+2),B[X+5]:M2$,@(W2+H,X+2),B[X+15]:M3$,
2150 NEXT X
2200 REM " --- Display data in bottom window"
2210 CALL "SYC.WB",SNAME$,0
2220 PRINT @(0,0),'SB',"     Comments ",'SF',B1$(1,20),'CL',
2230 PRINT @(0,1),'SB',"    From Date ",'SF',FNB$(B1$(21,3)),'CL',
2240 PRINT @(0,2),'SB'," Through Date ",'SF',FNB$(B1$(24,3)),'CL',
2290 GOTO 2400
2300 REM " --- No contract pricing"
2310 PRINT @(16,4),"No Contract Pricing Found",
2400 REM " --- Display pricing table?"
2410 CALL "SYC.WB",NAME$,0
2415 LET V0$="Y",V1$="",V2$="Y",V3$="",V0=1,V1=47,V2=8
2420 PRINT @(6,V2),"Display Pricing Table Information (Y/N)?"
2430 GOSUB 7000
2440 ON V3 GOTO 2450,2400,2400,2400,3800
2450 ON POS(V$="YN") GOTO 2400,2500,3500
2500 REM " --- Switch to price table display"
2510 GOSUB 5400
2520 LET Y0$(1)=N0$+"M"+R1$(24,4)
2530 FIND (ARM10_DEV,KEY=Y0$(1,7),DOM=3100)IOL=ARM10M
3000 REM " --- Pricing Table from IVM-10"
3010 LET C0$(1)=N0$+"E"+D2$(21,3)+Y0$(4,4)
3020 FIND (IVM10_DEV,KEY=C0$(1,10),DOM=3100)IOL=IVM10E
3090 GOTO 3200
3100 REM " --- No price table entry for this item class/price code"
3110 LET QUANTITY=1,PERCENT=0,PRICE1=LISTPRICE,METHOD=0
3120 PRINT @(W1,2),QUANTITY:M2$,@(W2),PERCENT:M9$,@(W3),PRICE1:M4$,
3190 GOTO 3400
3200 REM " --- Format output fields"
3210 LET METHOD=POS(C0$(31,1)="CLM")
3220 IF METHOD=0 THEN GOTO 3500
3300 REM " --- Display data in middle window"
3310 CALL "SYC.WB",NAME$,0
3320 FOR X=0 TO 4
3330 ON METHOD GOTO 3390,3340,3350,3360
3340 LET PRICE1=COST+(COST*FNP(C[X+10])),PRICE2=COST+(COST*FNP(C[X+15]))
3345 GOTO 3370
3350 LET PRICE1=PRICE*FNP(100-C[X+10]),PRICE2=PRICE*FNP(100-C[X+15])
3355 GOTO 3370
3360 LET PRICE1=COST/FNP(100-C[X+10]),PRICE2=COST/FNP(100-C[X+15])
3370 IF C[X]<>0 THEN PRINT @(W1,X+2),C[X]:M2$,@(W2),C[X+10]:M9$,@(W3),PRICE1:M4$,
3380 IF C[X+5]<>0 THEN PRINT @(W1+H,X+2),C[X+5]:M2$,@(W2+H),C[X+15]:M9$,@(W3+H),PRICE2:M4$,
3390 NEXT X
3400 REM " --- Display data in bottom window"
3410 CALL "SYC.WB",SNAME$,0
3420 PRINT @(0,0),'SB'," Pricing Method ",'SF',METHODS$[METHOD],'CL',
3430 PRINT @(0,1),'SB',"     List Price ",'SF',LISTPRICE:M4$,'CL',
3440 PRINT @(0,2),'SB',"      MSR Price ",'SF',MSRPRICE:M4$,'CL',
3500 REM " --- Process option window"
3510 DIM MORE$[1,MAXOPT,1],LLIST$[0,0,0]
3520 LET ACTION$="O",CHOICE1$=A0$(3),CHOICE2$=""
3530 GOSUB 5000
3540 IF CONTROL=1 THEN GOTO 1000
3590 GOTO 4000
3800 REM " --- Exit"
3810 LET OPTION$[1]="EXIT"
3890 GOTO 4000
3900 REM " --- Startover"
3910 LET OPTION$[1]="STARTOVER"
3990 GOTO 1000
4000 REM " --- All done"
4010 GOSUB 6000
4090 GOTO 9900
5000 REM " --- Standard window processing"
5010 DIM WININFO$[10],WININFO[10]
5020 LET WININFO$[1]=CHOICE1$,WININFO$[2]=CHOICE2$
5030 LET WININFO[1]=PAGE,WININFO[2]=PAGES,WININFO[3]=OMAXROW
5050 CALL "SYC.QW",ACTION$,OPTION$[ALL],OPTLIST$[ALL],LLIST$[ALL],MORE$[ALL],WININFO$[ALL],WININFO[ALL],FKEY
5060 LET ANSWER$=WININFO$[0],CONTROL=WININFO[0],PAGE=WININFO[1]
5080 LET DONE=OPTION$[1]="EXIT" OR OPTION$[1]="STARTOVER" OR OPTION$[1]="PRIOR"
5090 RETURN 
5200 REM " --- IVM-06 Contract Pricing"
5210 LET W1=1,W2=W1+M2+2,HEADING$(1)=""
5220 LET HEADING$(W1+M2-8)="Quantity",HEADING$(W2+M4-5)="Price"
5230 LET HEADING$(W1+M2-8+H)="Quantity",HEADING$(W2+M4-5+H)="Price"
5240 LET FOOTING$(2)=TITLE$+" Contract Pricing",FOOTING$(WIDTH-10)="F4=End"
5290 GOTO 5500
5400 REM " --- IVM-10 Pricing Table"
5410 LET W1=1,W2=W1+M2,W3=W2+M9,HEADING$(1)=""
5420 LET HEADING$(W1+M2-8)="Quantity",HEADING$(W2+1)="Percent"
5430 LET HEADING$(W3+M4-5)="Price",HEADING$(W1+M2-8+H)="Quantity"
5440 LET HEADING$(W2+1+H)="Percent",HEADING$(W3+M4-5+H)="Price"
5450 LET FOOTING$(2)=TITLE$+" Pricing Table",FOOTING$(WIDTH-10)="F4=End"
5500 REM " --- Display header/footer"
5510 CALL "SYC.WB",NAME$,0
5520 PRINT @(0,0),'CS','SB','BR',HEADING$,@(0,HEIGHT-3),FOOTING$,'ER','SF',
5590 RETURN 
6000 REM " --- Clear all windows"
6010 CALL "SYC.WB",TNAME$,0
6020 PRINT 'CF',
6030 CALL "SYC.WB",NAME$,0
6040 PRINT 'CF',
6050 CALL "SYC.WB",SNAME$,0
6060 PRINT 'CS',
6090 RETURN 
6200 REM " --- Price Code Lookup"
6210 DIM DESCRIPTION$[1],FIELD[1],POSITION[1],LENGTH[1]
6220 LET DESCRIPTION$[0]="Code",DESCRIPTION$[1]="Description"
6230 LET FIELD[0]=1,POSITION[0]=4,LENGTH[0]=4,T$="Price Code Lookup"
6240 LET FIELD[1]=1,POSITION[1]=8,LENGTH[1]=20
6250 LET COLUMN=79-LENGTH[0]-LENGTH[1]-2-NUMBER*4,V$="SKIP",ROW=V2+3
6260 CALL "SYC.LK",ARM10_DEV,"M",1,T$,DESCRIPTION$[ALL],FIELD[ALL],POSITION[ALL],LENGTH[ALL],COLUMN,ROW,V$
6290 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8075 DEF FNP(Q)=Q/100
8080 DEF FNP$(Q$)=CVS(Q$,2)
8085 DEF FNU$(Q$)=CVS(Q$,4)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to caller"
9910 FOR X=1 TO FILES
9920 CLOSE (CHANNELS[X],ERR=9930)
9930 NEXT X
9950 EXIT 
9999 END
