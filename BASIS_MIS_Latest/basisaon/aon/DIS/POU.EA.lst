0010 REM "POU - Purchase Order Invoice Entry Register Update"
0020 REM "Program POU.EA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0110 CLOSE (7,ERR=0120)
0200 REM " --- IOLIST's"
0210 POE05A: IOLIST A0$(1),A1$(1),A2$,A3$,A[ALL]
0220 POE15A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0230 POE25A: IOLIST C0$(1),C1$(1),C2$,C[ALL]
0240 POE35A: IOLIST D0$(1),D1$(1),D[ALL]
0250 POE12A: IOLIST L0$(1),L1$(1),L2$(1),L3$(1),L4$(1),L5$,L6$,L[ALL]
0260 IVM01A: IOLIST S0$(1),S1$(1),S2$(1),S3$(1),S4$(1),S5$,S6$(1),S[ALL]
0270 IVM02A: IOLIST U0$(1),U1$(1),U2$,U[ALL]
0280 POM02A: IOLIST Y0$(1),Y1$(1),Y2$(1)
0290 ARM10D: IOLIST Z0$(1),Z1$(1)
0300 POT05A: IOLIST HA$(1),A1$(1),A2$,A3$,A[ALL]
0310 POT15A: IOLIST HB$(1),B1$(1),B2$,B[ALL]
0320 POT25A: IOLIST HC$(1),C1$(1),C2$,C[ALL]
0325 POT35A: IOLIST HD$(1)
0330 POT14A: IOLIST W0$(1),W1$(1),W2$(1),W3$(1),W4$(1),W5$,W6$,W[ALL]
0340 APM01A: IOLIST H0$(1),H1$(1)
0350 APM02A: IOLIST U0$(1),U1$(1),U2$(1),U[ALL]
0355 APM10B: IOLIST X0$(1),X1$(1)
0360 APT01A: IOLIST H0$(1),H[ALL]
0370 APT02A: IOLIST T0$(1),T[ALL]
0375 APT03A: IOLIST XA$(24)
0380 APT03B: IOLIST XB$(31)
0385 APT03C: IOLIST XC$(21)
0390 APT11A: IOLIST L0$(1),L1$(1),L[ALL]
0395 POW17A: IOLIST U0$(1),U[ALL]
0500 REM " --- Initializations"
0505 PRECISION I[1]
0510 DIM A0$(20),A1$(64),A[8],B0$(23),B1$(32),B[4],C0$(23),C1$(64),C[4]
0520 DIM D0$(23),D1$(32),D[4],HA$(23),HB$(26),HC$(26),X0$(32),X1$(4*G[4])
0530 DIM Y0$(4),Y1$(32),Y2$(2*G[4]),XA$(24),XB$(31),XC$(21),HD$(40)
0540 DIM FILES[44],PARAMS[10],PARAMS$[10],ITEM$[6],REFS$[20],REFS[20]
0550 LET ITEM$[0]=N0$,PARAMS[0]=G[0],PARAMS$[0]=F0$(7,3),PARAMS$[1]=F0$(4,3)
0560 LET PARAMS$[2]=I2$,PARAMS$[3]=I3$,PARAMS$[4]=I4$
0570 LET FILES[0]=SYS01_DEV,FILES[1]=IVM01_DEV,FILES[2]=IVM02_DEV
0700 REM " --- Background"
0710 PRINT @(40,5),'CL',@(0,7),'CE',
0800 REM " --- Run Update?"
0810 LET V4$="Are You Ready To Update The "+F5$
0820 CALL "SYC.YN",0,V4$,0,V$,V3
0830 IF V$<>"YES" THEN GOTO 9900
0900 REM " --- Disallow 'M'enu option in Error Routine
0910 LET EXIT_CTRL=1
0950 REM " --- Position file"
0960 LET X=M0+11
0970 IF APTYPE THEN LET X=X+3
0975 PRINT @(40,5),"Purchase Order Invoice Update",
0980 CALL "SYC.NB","Updating",X,COLUMN
0990 READ (POE05_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Read next header"
1010 LET K$=KEY(POE05_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 READ (POE05_DEV)IOL=POE05A
1040 LET X$=FNF$(A0$(5,P[0]),M0$)+" "+A0$(11,10)
1050 IF APTYPE THEN LET X$=A0$(3,2)+" "+X$
1060 PRINT @(COLUMN,11),X$,
1100 REM " --- Additional reads"
1110 DIM H0$(8),H1$(30),X0$(32),X1$(4*G[4])
1120 LET X0$(1)=N0$+"B"+A1$(28,2),H0$(1)=N0$+A0$(5,6)
1130 FIND (APM01_DEV,KEY=H0$,DOM=1140)IOL=APM01A
1140 FIND (APM10_DEV,KEY=X0$(1,5),DOM=1150)IOL=APM10B
1150 LET APACCT$=X1$(1,G[4]),RETACCT$=X1$(3*G[4]+1,G[4]),APCODE$=A1$(28,2)
1160 LET GLDATE$=A1$(7,6),VENDOR$=H0$(3,P[0]),NAME$=H1$,TOTAL=0
1200 REM " --- Create APT-01 record"
1210 DIM H0$(71),H[2]
1220 LET H0$(1)=A0$+"00",H0$(23,2)=A1$(28,2),H0$(25,2)=A1$(30,2)
1230 LET H0$(27,2)=A1$(26,2),H0$(29,3)=FND$(FNN$(A1$(1,6)))
1240 LET H0$(32,3)=FND$(FNN$(A1$(7,6))),H0$(35,3)=FND$(FNN$(A1$(13,6)))
1250 LET H0$(38,3)=FND$(FNN$(A1$(19,6))),H0$(41,10)=A1$(32,10)
1260 LET H0$(51,16)=A1$(42,16),H[0]=A[0],H[1]=A[1],H[2]=A[2]
1270 WRITE (APT01_DEV,KEY=H0$(1,22),DOM=1400)IOL=APT01A
1300 REM " --- Generate APT-03 xrefs"
1310 LET XA$(1)=N0$+"A"+A0$(3,8)+FND$(FNN$(A1$(1,6)))+A0$(11)
1320 LET XB$(1)=N0$+"B"+A0$(3,8)+A1$(32,10)+A0$(11)
1330 LET XC$(1)=N0$+"C"+A0$(11,10)+A0$(3)
1340 WRITE (APT03_DEV,KEY=XA$)IOL=APT03A
1350 WRITE (APT03_DEV,KEY=XB$)IOL=APT03B
1360 WRITE (APT03_DEV,KEY=XC$)IOL=APT03C
1390 GOTO 1500
1400 REM " --- Adjustment to current invoice"
1410 DIM L0$(22),L1$(12),L[2]
1420 LET L0$(1)=H0$,L1$(1,1)="A",L1$(2,3)=H0$(32,3),L1$(5,7)=H0$(41,7)
1430 LET L[ALL]=H[ALL],CHANNEL=APT11_DEV,X$=L0$(1,20),K=20
1440 GOSUB 6800
1450 LET L0$(21,2)=STR(SEQ:"00")
1460 WRITE (APT11_DEV,KEY=L0$)IOL=APT11A
1500 REM " --- Update APM-02 vendor totals"
1510 DIM U0$(10),U1$(24),U2$(G[4]),U[13]
1520 LET U0$(1)=N0$+A0$(5,6)+A0$(3,2),X$=A1$(7,6)
1530 CALL "SYC.PB",N0$,SYS01_DEV,X$,PERIOD$,YEAR$
1540 FIND (APM02_DEV,KEY=U0$,DOM=1550)IOL=APM02A
1550 LET U1$(7,3)=FND$(FNN$(A1$(1,6))),U[0]=U[0]+A[0],U[1]=U[1]+A[2]
1560 IF YEAR$<=P4$(3,2) THEN LET U[2]=U[2]+A[0]
1570 IF YEAR$>P4$(3,2) THEN LET U[4]=U[4]+A[0]
1590 WRITE (APM02_DEV,KEY=U0$)IOL=APM02A
1900 REM " --- Generate POT-05 sequence number and position POE-15 PO Detail"
1910 LET HA$(1)=A0$,CHANNEL=POT05_DEV,X$=HA$,K=20
1920 GOSUB 6800
1930 LET HA$(21,3)=STR(SEQ:"000")
1990 READ (POE15_DEV,KEY=A0$,DOM=2000)
2000 REM " --- Read next PO record"
2010 LET K$=KEY(POE15_DEV,END=3300)
2020 IF POS(A0$=K$)<>1 THEN GOTO 3300
2030 READ (POE15_DEV)IOL=POE15A
2100 REM " --- Position line item file"
2190 READ (POE25_DEV,KEY=A0$,DOM=2200)
2200 REM " --- Read next line item"
2210 LET K$=KEY(POE25_DEV,END=3200)
2220 IF POS(A0$=K$)<>1 THEN GOTO 3200
2230 READ (POE25_DEV)IOL=POE25A
2240 IF C1$(1,7)<>B1$(1,7) THEN GOTO 2200
2250 IF FNP$(B1$(8,7))<>"" THEN IF C1$(11,7)<>B1$(8,7) THEN GOTO 2200
2300 REM " --- Update history detail record"
2310 DIM W0$(25),W1$(64),W2$(32),W3$(22),W4$(40),W[12]
2320 DIM H0$(4),H1$(32),H2$(2*G[4])
2330 LET W0$(1)=N0$+A0$(5,6)+C1$(1,7)+C1$(11,7)+C1$(8,3),FOUND=0
2340 FIND (POT14_DEV,KEY=W0$,DOM=2370)IOL=POT14A
2350 LET W[8]=W[8]+C[1],FOUND=1
2360 WRITE (POT14_DEV,KEY=W0$)IOL=POT14A
2370 LET Y0$(1)=N0$+C1$(18,2),Y1$(1)="",Y2$(1)=""
2380 FIND (POM02_DEV,KEY=Y0$,DOM=2390)IOL=POM02A
2390 LET H0$(1)=Y0$,H1$(1)=Y1$,H2$(1)=Y2$(1)
2400 REM " --- Update PO line item"
2410 DIM L0$(18),L1$(64),L2$(32),L3$(22),L4$(40),L[12]
2420 LET L0$(1)=N0$+A0$(5,6)+C1$(1,7)+C1$(8,3)
2430 FIND (POE12_DEV,KEY=L0$,DOM=2500)IOL=POE12A
2440 LET Y0$(1)=N0$+L1$(1,2)
2450 FIND (POM02_DEV,KEY=Y0$,DOM=2460)IOL=POM02A
2460 IF FOUND THEN IF Y1$(21,1)<>H1$(21,1) THEN GOTO 2500
2470 IF FOUND THEN IF W3$<>L3$ THEN GOTO 2500
2480 LET L[8]=L[8]+C[1]
2490 WRITE (POE12_DEV,KEY=L0$)IOL=POE12A
2500 REM " --- Calculate extension and retrieve line code"
2510 LET Y0$(1)=H0$,Y1$(1)=H1$,Y2$(1)=H2$
2520 PRECISION 2
2530 LET EXTENSION=C[0]*C[1],POEXTENSION=C[2]*C[1]
2540 PRECISION I[1]
2600 REM " --- Read inventory item and warehouse"
2610 DIM S0$(22),S1$(60),S2$(64),S3$(40),S4$(21),S6$(G[4]*9),S[12]
2620 DIM U0$(24),U1$(64),U[20]
2630 IF Y1$(21,1)<>"S" THEN GOTO 2700
2640 LET S0$(1)=N0$+W3$(3),U0$(1)=N0$+W3$
2650 FIND (IVM01_DEV,KEY=S0$,DOM=2660)IOL=IVM01A
2660 FIND (IVM02_DEV,KEY=U0$,DOM=2700)IOL=IVM02A
2800 REM " --- Generate GL Recap"
2810 IF GL$="N" THEN GOTO 2900
2820 LET ACTION$="",ACCOUNT$="",ITEM$[0]=S0$(3),ITEM$[1]=S1$,ITEM$[6]=S6$
2830 LET VALUES[0]=EXTENSION,VALUES[1]=POEXTENSION,VALUES[2]=C[1]
2840 LET VALUES[3]=U[0],ARCODE$=U1$(13,2),W$[0]=C0$,W$[1]=C1$
2850 LET Y$[0]=Y0$,Y$[1]=Y1$,Y$[2]=Y2$
2860 GOSUB 6900
3100 REM " --- Loop back for next line item"
3110 LET HC$(1)=HA$,HC$(24,3)=C0$(21,3)
3120 WRITE (POT25_DEV,KEY=HC$)IOL=POT25A
3130 REMOVE (POE25_DEV,KEY=C0$,DOM=3190)
3190 GOTO 2200
3200 REM " --- Loop back for next PO record"
3210 LET HB$(1)=HA$,HB$(24,3)=B0$(21,3)
3220 LET HD$(1)=N0$+A0$(5,6)+B1$(1,7)+B1$(8,7)+A0$(3,2)+A0$(11,10)+STR(SEQ:"000")+B0$(21,3)
3230 WRITE (POT15_DEV,KEY=HB$)IOL=POT15A
3240 WRITE (POT35_DEV,KEY=HD$)IOL=POT35A
3250 REMOVE (POE15_DEV,KEY=B0$,DOM=3260)
3290 GOTO 2000
3300 REM " --- Position GL distribution file"
3310 IF GL$<>"Y" THEN GOTO 3800
3320 DIM ITEM$[6],VALUES[4],W$[10],Y$[10]
3330 LET DISTRIBUTION=0
3390 READ (POE35_DEV,KEY=A0$,DOM=3400)
3400 REM " --- Read next GL distribution record"
3410 LET K$=KEY(POE35_DEV,END=3800)
3420 IF POS(A0$=K$)<>1 THEN GOTO 3800
3430 READ (POE35_DEV)IOL=POE35A
3500 REM " --- Generate GL recap postings and loop back for next record"
3510 LET ACCOUNT$=D1$(1,G[4]),AMOUNT=-D[0],VALUES[0]=AMOUNT,W$[0]=D0$,W$[1]=D1$
3520 LET ACTION$="D",TOTAL=TOTAL+D[0],DISTRIBUTION=DISTRIBUTION+AMOUNT
3530 GOSUB 6900
3600 REM " --- Generate APT-02 record"
3610 DIM T0$(34),T[1]
3620 LET T0$(1)=A0$(1,10)+"I"+A0$(11,10)+ACCOUNT$+FND$(FNN$(GLDATE$))
3630 LET T[0]=AMOUNT,T[1]=UNITS
3640 WRITE (APT02_DEV,KEY=T0$)IOL=APT02A
3700 REM " --- Loop back for next distribution record"
3710 REMOVE (POE35_DEV,KEY=K$,DOM=3720)
3790 GOTO 3400
3800 REM " --- Generate GL recap postings for the invoice"
3810 IF TOTAL=A[0] THEN GOTO 3900
3820 LET ACTION$="D",ACCOUNT$=APACCT$,VALUES[0]=-DISTRIBUTION,W$[0]=A0$
3830 IF VALUES[0] THEN GOSUB 6900
3900 REM " --- Loop back for next header"
3910 WRITE (POT05_DEV,KEY=HA$)IOL=POT05A
3920 REMOVE (POE05_DEV,KEY=A0$,DOM=3930)
3990 GOTO 1000
4000 REM " --- Update landed cost?"
4010 DIM U0$(24),U[1],ITEM$[3]
4020 IF POS(R3$(55,1)="QC")=0 THEN GOTO 4900
4030 PRINT @(40,5),"Inventory Item Landed Costs",'CL',@(0,7),'CE',
4040 CALL "SYC.NB","Updating",3+I[0],COLUMN
4090 READ (POW17_DEV,KEY=N0$,DOM=4100)
4100 REM " --- Read next landed cost record"
4110 LET K$=KEY(POW17_DEV,END=4900)
4120 IF POS(N0$=K$)<>1 THEN GOTO 4900
4130 READ (POW17_DEV)IOL=POW17A
4140 PRINT @(COLUMN,11),U0$(3,2)," ",U0$(5,I[0]),
4200 REM " --- Call standard inventory update program"
4210 LET ACTION$="PI",ITEM$[0]=N0$,ITEM$[1]=U0$(3,2)
4220 LET ITEM$[2]=U0$(5),REFS[4]=U[0]
4230 CALL "IVC.UA",ACTION$,FILES[ALL],PARAMS[ALL],PARAMS$[ALL],ITEM$[ALL],REFS$[ALL],REFS[ALL],STATUS
4290 GOTO 4100
4900 REM " --- All done"
4990 GOTO 9900
6800 REM " --- Find next sequence number"
6810 LET SEQ=0
6820 READ (CHANNEL,KEY=X$(1,K)+$FF$,DOM=6830)
6830 LET K$=KEYP(CHANNEL,END=6840)
6840 IF POS(X$(1,K)=K$)=1 THEN LET SEQ=NUM(X$(K+1))+1
6890 RETURN 
6900 REM " --- Call GL Posting Routine"
6910 LET GLFILES[1]=GLM01_DEV,GLFILES[2]=GLT04_DEV,GLFILES[3]=GLT05_DEV
6920 LET GLFILES[4]=APM10_DEV,GLFILES[5]=ARM10_DEV,GLPARAMS$[0]=N0$
6930 LET GLPARAMS$[1]=APCODE$,GLPARAMS$[2]=ARCODE$,GLPARAMS$[3]=DISTCODE$
6940 LET GLPARAMS$[4]=GLDATE$,GLPARAMS$[5]=VENDOR$,GLPARAMS$[6]=NAME$
6950 LET GLPARAMS$[7]=M0$,GLPARAMS$[8]=G4$,GLPARAMS$[9]=I3$(8,1)
6960 LET GLPARAMS$[10]=ACCOUNT$,GLPARAMS[0]=I[0],GLPARAMS[1]=I[1]
6970 LET GLPARAMS[2]=G[4],GLPARAMS[3]=I[3],GLPARAMS[4]=I[4],GLPARAMS[5]=I[5]
6980 CALL "POC.GB",ACTION$,GLFILES[ALL],GLPARAMS$[ALL],GLPARAMS[ALL],ITEM$[ALL],W$[ALL],Y$[ALL],VALUES[ALL],STATUS
6990 RETURN 
8000 REM " --- Functions"
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8070 DEF FNN$(Q$)=Q$(3,4)+Q$(1,2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 REM " --- Return to menu"
9950 RUN "SYS.AA"
9999 END
