0010 REM "POR - Purchase Requisition Register (Report Overlay)"
0020 REM "Program POR.AB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0200 REM " --- IOLIST's"
0210 POE01A: IOLIST A0$(1),A1$(1),A2$,A3$,A[ALL]
0220 APM01A: IOLIST B0$(1),B1$(1)
0230 IVM01A: IOLIST C0$(1),C1$(1)
0240 IVM02A: IOLIST D0$(1),D1$(1),D2$,D[ALL]
0310 POE11A: IOLIST W0$(1),W1$(1),W2$(1),W3$(1),W4$(1),W5$,W6$,W[ALL]
0320 POM02A: IOLIST Y0$(1),Y1$(1)
0330 ARM01A: IOLIST R0$(1),R1$(1)
0500 REM " --- Initializations"
0505 PRECISION I[1]
0510 DIM HEADINGS$[5],O[14],VENDOR[1],REQ[1],REPORT[1],TOTALS[1]
0515 DIM C0$(22),C1$(60),D0$(24),D1$(64),D[20],DESCRIPTION$(40),R0$(8),R1$(30)
0520 DIM W0$(18),W1$(48),W2$(32),W3$(22),W4$(40),W[12],Y0$(4),Y1$(32)
0525 DIM H1$(132),H2$(132)
0545 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$,WHEN$=F0$(7,3),CLOCK$="",NUMBER=0
0550 LET HEADINGS=5,WIDTH=132,PAGE=0,L9=59,L=L9+1,DONE=0,COST$="Avg"
0555 IF SEQUENCE$="A" THEN LET HEADINGS$[1]=F5$+" By Vendor Alternate Sequence"
0560 IF SEQUENCE$="V" THEN LET HEADINGS$[1]=F5$+" By Vendor"
0565 IF SEQUENCE$="R" THEN LET HEADINGS$[1]=F5$+" By Requisition Number"
0570 IF I3$(8,1)="S" THEN LET COST$="Std"
0575 IF I3$(8,1)="R" THEN LET COST$="Rep"
0600 REM " --- Print positions"
0610 CALL "SYC.RM",M1$,M1,12,15
0615 CALL "SYC.RM",M2$,M2,9,12
0620 CALL "SYC.RM",M3$,M3,7,12
0625 LET O[0]=0,O[1]=4,O[2]=7,O[3]=10,O[4]=O[3]+I[0]+1,O[5]=O[4]+9
0630 LET O[6]=O[5]+9,O[7]=O[6]+9,O[13]=WIDTH-6,O[12]=O[13]-M1,O[14]=O[3]+41
0635 LET O[11]=O[12]-M3,O[10]=O[11]-M1,O[9]=O[10]-M3,O[8]=O[9]-M2
0800 REM " --- Report headings"
0805 LET X1$="First",X2$="Last"
0810 IF BEGVEND$="" THEN GOTO 0830
0815 LET V$=BEGVEND$
0820 GOSUB 6500
0825 LET X1$=VENDOR$
0830 IF ENDVEND$="" THEN GOTO 0850
0835 LET V$=ENDVEND$
0840 GOSUB 6500
0845 LET X2$=VENDOR$
0850 LET H1$(1)="From Vendor: "+X1$,H2$(1)="  To Vendor: "+X2$
0855 LET X1$="First",X2$="Last"
0860 IF BEGREQ$<>"" THEN LET X1$=BEGREQ$
0865 IF ENDREQ$<>"" THEN LET X2$=ENDREQ$
0870 LET X1=18+MAX(5,MAX(LEN(X1$),LEN(X2$))),X2=INT((WIDTH-X1)/2)
0875 LET H1$(X2,X1)="From Requisition: "+X1$,X1$="First"
0880 LET H2$(X2,X1)="  To Requisition: "+X2$,X2$="Last"
0885 IF BEGDATE$<>"" THEN LET X1$=FNB6$(BEGDATE$)
0890 IF ENDDATE$<>"" THEN LET X2$=FNB6$(ENDDATE$)
0900 LET X1=MAX(LEN(X1$),LEN(X2$)),X2=WIDTH-X1-LEN(DATETITLE$)-6
0905 LET H1$(X2)="From "+DATETITLE$+": "+X1$
0910 LET H2$(X2)="  To "+DATETITLE$+": "+X2$
0915 LET HEADINGS$[3]=H1$,HEADINGS$[4]=H2$
0950 REM " --- Position files"
0990 READ (POW07_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Get next sort record"
1010 LET K$=KEY(POW07_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 READ (POW07_DEV)
1090 ON POS(SEQUENCE$="AVR") GOTO 3900,1100,1200,1300
1100 REM " --- Alpha sequence"
1110 LET A0$(1)=K$(1,2)+K$(13),X$=K$(3,10)+" "+K$(19,7)
1120 IF T0$<>K$(3,16) THEN GOSUB 6000
1130 IF T1$<>K$(19,7) THEN GOSUB 6200
1190 GOTO 1500
1200 REM " --- Vendor sequence"
1210 LET A0$(1)=K$(1,2)+K$(13),X$=FNF$(K$(13,VENDLEN),M0$)+" "+K$(19,7)
1220 IF T0$<>K$(13,6) THEN GOSUB 6000
1230 IF T1$<>K$(19,7) THEN GOSUB 6200
1290 GOTO 1500
1300 REM " --- Requisition sequence"
1310 LET A0$(1)=K$(1,2)+K$(20,6)+K$(13,7),X$=K$(19,7)
1320 IF T1$<>K$(13,7) THEN GOSUB 6400
1390 GOTO 1500
1500 REM " --- Read requisition and vendor"
1510 PRINT @(COLUMN,11),X$,
1520 LET B0$(1)=K$(1,2)+K$(13,6),B1$(1)=""
1530 FIND (POE01_DEV,KEY=A0$,DOM=3900)IOL=POE01A
1540 FIND (APM01_DEV,KEY=B0$,DOM=1550)IOL=APM01A
1600 REM " --- Requisition subheading"
1610 IF L+5>L9 THEN GOSUB 5000 ELSE GOSUB 5200
1900 REM " --- Position detail file"
1990 READ (POE11_DEV,KEY=A0$,DOM=2000)
2000 REM " --- Read next detail record"
2010 LET K$=KEY(POE11_DEV,END=3900)
2020 IF POS(A0$=K$)<>1 THEN GOTO 3900
2030 READ (POE11_DEV)IOL=POE11A
2040 IF Y0$(1,4)=N0$+W1$(1,2) THEN GOTO 2100
2050 LET Y0$(1,4)=N0$+W1$(1,2),Y1$(1)=""
2060 FIND (POM02_DEV,KEY=Y0$,DOM=2900)IOL=POM02A
2100 REM " --- Initialize detail line fields"
2110 LET NEEDED=2,SOURCE$="Entry",WO$=""
2120 LET BEFORE$=FNP$(A1$(17,6)),PROMISED$=FNP$(A1$(11,6))
2130 IF Y1$(22,1)="Y" THEN LET NEEDED=3
2140 IF W1$(34,1)="W" THEN LET SOURCE$="WO"
2150 IF W1$(34,1)="M" THEN LET SOURCE$="MRP"
2160 IF FNP$(W1$(9,6))<>"" THEN LET PROMISED$=W1$(9,6)
2170 IF FNP$(W1$(15,6))<>"" THEN LET BEFORE$=W1$(15,6)
2180 IF FNP$(BEFORE$)<>"" THEN LET BEFORE$=FNB6$(BEFORE$)
2190 IF FNP$(PROMISED$)<>"" THEN LET PROMISED$=FNB6$(PROMISED$)
2200 REM " --- Work order?"
2210 IF SF$="N" THEN GOTO 2300
2220 IF FNP$(W2$(1,10))="" THEN GOTO 2300
2230 LET WO$=" WO: "+W2$(1,7)
2240 IF FNP$(W2$(8,3))<>"" THEN LET WO$=WO$+"-"+W2$(8,3)
2300 REM " --- Retrieve inventory item for S lines"
2310 LET C0$(1)=N0$+W3$(3),C1$(1)="",DESCRIPTION$(1)="(Not On File)"
2320 LET D0$(1)=N0$+W3$,D1$(1)="",D[11]=0
2330 IF Y1$(21,1)<>"S" THEN GOTO 2400
2340 FIND (IVM01_DEV,KEY=C0$,DOM=2350)IOL=IVM01A
2350 FIND (IVM02_DEV,KEY=D0$,DOM=3800)IOL=IVM02A
2360 LET DESCRIPTION$(1)=FNITEM$(C1$,I[3],I[4],I[5])
2400 REM " --- Calculate extensions and branch based on line type"
2410 LET QTY=W[2],IV_EXTENSION=0
2420 IF Y1$(21,1)="O" THEN LET QTY=1
2430 PRECISION 2
2440 LET PO_EXTENSION=W[1]*QTY
2450 IF Y1$(21,1)="S" THEN LET IV_EXTENSION=D[11]*QTY
2460 PRECISION I[1]
2490 ON POS(Y1$(21,1)="SNVMO") GOTO 3800,2500,2600,2700,2800,2900
2500 REM " --- Standard line"
2510 IF L+NEEDED>L9 THEN GOSUB 5000
2520 PRINT (7)@(O[0]),W0$(16,3),@(O[1]),W1$(1,2),@(O[2]),W3$(1,2),@(O[3]),W3$(3,I[0]),@(O[4]),BEFORE$,@(O[5]),FNB6$(W1$(3,6)),@(O[6]),PROMISED$,@(O[7]),W1$(22,2),@(O[8]),W[2]:M2$,@(O[9]),D[11]:M3$,@(O[10]),IV_EXTENSION:M1$,@(O[11]),W[1]:M3$,@(O[12]),PO_EXTENSION:M1$,@(O[13]),SOURCE$
2530 PRINT (7)@(O[3]),DESCRIPTION$,@(O[14]),WO$
2540 LET L=L+NEEDED
2590 GOTO 3000
2600 REM " --- Non-stock line"
2610 IF L+NEEDED>L9 THEN GOSUB 5000
2620 PRINT (7)@(O[0]),W0$(16,3),@(O[1]),W1$(1,2),@(O[2]),W3$(1,2),@(O[4]),BEFORE$,@(O[5]),FNB6$(W1$(3,6)),@(O[6]),PROMISED$,@(O[7]),W1$(22,2),@(O[8]),W[2]:M2$,@(O[11]),W[1]:M3$,@(O[12]),PO_EXTENSION:M1$,@(O[13]),SOURCE$
2630 PRINT (7)@(O[3]),W4$,@(O[14]),WO$
2640 LET L=L+NEEDED
2690 GOTO 3000
2700 REM " --- Vendor part number line"
2710 IF L+NEEDED>L9 THEN GOSUB 5000
2720 PRINT (7)@(O[0]),W0$(16,3),@(O[1]),W1$(1,2),@(O[2]),W3$(1,2),@(O[3]),W3$(3),@(O[4]),BEFORE$,@(O[5]),FNB6$(W1$(3,6)),@(O[6]),PROMISED$,@(O[13]),SOURCE$
2730 PRINT (7)@(O[14]),WO$
2740 LET L=L+NEEDED
2790 GOTO 3000
2800 REM " --- Message line"
2810 IF L+NEEDED>L9 THEN GOSUB 5000
2820 PRINT (7)@(O[0]),W0$(16,3),@(O[1]),W1$(1,2),@(O[2]),W3$(1,2),@(O[4]),BEFORE$,@(O[5]),FNB6$(W1$(3,6)),@(O[6]),PROMISED$,@(O[13]),SOURCE$
2830 PRINT (7)@(O[3]),W4$,@(O[14]),WO$
2840 LET L=L+NEEDED
2890 GOTO 3000
2900 REM " --- Other type line"
2910 IF L+NEEDED>L9 THEN GOSUB 5000
2920 PRINT (7)@(O[0]),W0$(16,3),@(O[1]),W1$(1,2),@(O[2]),W3$(1,2),@(O[4]),BEFORE$,@(O[5]),FNB6$(W1$(3,6)),@(O[6]),PROMISED$,@(O[11]),W[1]:M3$,@(O[12]),PO_EXTENSION:M1$,@(O[13]),SOURCE$
2930 PRINT (7)@(O[3]),W4$,@(O[14]),WO$
2940 LET L=L+NEEDED
3000 REM " --- Drop ship?"
3010 IF Y1$(22,1)<>"Y" THEN GOTO 3500
3020 DIM CUSTOMER$(O[8]-O[3]+1)
3030 LET R0$(1)=N0$+W2$(11,6),R1$(1)="(Not On File)"
3040 FIND (ARM01_DEV,KEY=R0$,DOM=3040)IOL=ARM01A
3050 LET CUSTOMER$(1)="Customer "+FNF$(R0$(3,CUSTLEN),P7$)+" "+R1$
3060 IF FNP$(W2$(17,7))<>"" THEN LET CUSTOMER$(LEN(CUSTOMER$)-16)=" (Order "+W2$(17,7)+")"
3070 PRINT (7)@(O[3]),CUSTOMER$
3500 REM " --- Accumulate totals"
3510 LET REQ[0]=REQ[0]+IV_EXTENSION,REQ[1]=REQ[1]+PO_EXTENSION,NUMBER=NUMBER+1
3520 LET VENDOR[0]=VENDOR[0]+IV_EXTENSION,VENDOR[1]=VENDOR[1]+PO_EXTENSION
3530 LET REPORT[0]=REPORT[0]+IV_EXTENSION,REPORT[1]=REPORT[1]+PO_EXTENSION
3800 REM " --- Loop back for next header"
3890 GOTO 2000
3900 REM " --- Loop back for next header"
3990 GOTO 1000
4000 REM " --- All done"
4010 LET DONE=1
4020 IF SEQUENCE$="A" THEN GOSUB 6000
4030 IF SEQUENCE$="V" THEN GOSUB 6000
4040 IF SEQUENCE$="R" THEN GOSUB 6200
4050 LET TOTALS$="Total For Register",TOTALS[0]=REPORT[0],TOTALS[1]=REPORT[1]
4060 GOSUB 6900
4070 IF NUMBER=0 THEN GOTO 9900
4090 RUN "POU.AA"
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+3
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5050 PRINT (7)@(O[4]),"Not",@(O[5]),"Date",@(O[6]),"Date",@(O[9]+M3-5),COST$,@(O[10]+M1-10),COST$," Cost",@(O[11]+M3-5),"PO",@(O[12]+M1-10),"PO Cost"
5060 PRINT (7)@(O[0]),"Seq",@(O[1]),"Cd",@(O[2]),"Wh",@(O[3]),"Item",@(O[4]),"Before",@(O[5]),"Required",@(O[6]),"Promised",@(O[7]),"UM",@(O[8]+M2-9),"Quantity",@(O[9]+M3-5),"Cost",@(O[10]+M1-10),"Extension",@(O[11]+M3-5),"Cost",@(O[12]+M1-10),"Extension",@(O[13]),"Source"
5070 GOSUB 5200
5090 RETURN 
5200 REM " --- Requisition subheading"
5210 PRINT (7)""
5220 PRINT (7)@(O[0]),VENDOR$,@(55),"Requisition #: ",A0$(9,7),@(106),"Requisition Date: ",FNB6$(A1$(5,6))
5230 PRINT (7)""
5240 LET L=L+3
5290 RETURN 
6000 REM " --- Vendor break"
6010 IF T0$="" THEN GOTO 6100
6020 GOSUB 6200
6030 LET TOTALS$="Total For "+FNP$(VENDOR$)
6040 LET TOTALS[0]=VENDOR[0],TOTALS[1]=VENDOR[1]
6050 GOSUB 6900
6100 IF DONE THEN GOTO 6390
6110 DIM VENDOR[1]
6120 LET T0$=A0$(3,6),V$=T0$
6130 IF SEQUENCE$="A" THEN LET T0$=K$(3,16)
6140 GOSUB 6500
6150 IF PAGEBREAK$="Y" THEN LET L=L9+1
6190 RETURN 
6200 REM " --- Requisition break"
6210 IF T1$="" THEN GOTO 6300
6220 LET TOTALS$="Total For Requisition "+T1$
6230 LET TOTALS[0]=REQ[0],TOTALS[1]=REQ[1]
6240 GOSUB 6900
6300 IF DONE THEN GOTO 6390
6310 DIM REQ[1]
6320 LET T1$=A0$(9,7)
6330 IF SEQUENCE$="R" THEN IF PAGEBREAK$="Y" THEN LET L=L9+1
6390 RETURN 
6500 REM " --- Retrieve vendor"
6510 LET B0$(1)=N0$+V$,B1$(1)="(Not On File)"
6520 FIND (APM01_DEV,KEY=B0$,DOM=6530)IOL=APM01A
6530 LET VENDOR$=FNF$(B0$(3,VENDLEN),M0$)+" "+B1$(1,30)
6590 RETURN 
6900 REM " --- Print totals"
6910 IF L+1>L9 THEN GOSUB 5000
6920 PRINT (7)@(O[10]-LEN(TOTALS$)),TOTALS$,@(O[10]),TOTALS[0]:M1$,@(O[12]),TOTALS[1]:M1$
6930 LET L=L+1
6990 RETURN 
8000 REM " --- Functions"
8025 DEF FNB6$(Q$)=Q$(3,2)+"/"+Q$(5,2)+"/"+FNYY21_YY$(Q$(1,2))
8035 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8085 DEF FNS$(Q$)=CVS(Q$,1)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
