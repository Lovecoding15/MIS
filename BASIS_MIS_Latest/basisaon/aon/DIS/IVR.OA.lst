0010 REM "IVR - EOQ, Order Point & Safety Stock Report (Input Overlay)"
0020 REM "Program IVR.OA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=12
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="SYS-01",FILES$[2]="IVM-01",FILES$[3]="IVM-02"
0125 LET FILES$[4]="IVM-03",FILES$[5]="IVM-10",FILES$[6]="IVM-12"
0130 LET FILES$[7]="IVM-14",FILES$[8]="IVM-15",FILES$[9]="IVW-11"
0135 LET FILES$[10]="IVW-21",FILES$[11]="IVM-03",FILES$[12]="IVM-03"
0140 LET OPTIONS$[9]="C",OPTIONS$[10]="C"
0150 CALL "SYC.DA",1,1,FILES,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM01_DEV=CHANNELS[2],IVM02_DEV=CHANNELS[3]
0175 LET IVM03_DEV=CHANNELS[4],IVM10_DEV=CHANNELS[5],IVM12_DEV=CHANNELS[6]
0180 LET IVM14_DEV=CHANNELS[7],IVM15_DEV=CHANNELS[8],IVW11_DEV=CHANNELS[9]
0190 LET IVW21_DEV=CHANNELS[10],IVM03_DEV2=CHANNELS[11],IVM03_DEV3=CHANNELS[12]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$,A4$,A5$,A6$,A[ALL]
0230 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0240 IVW11A: IOLIST D0$(1),D1$(1),D2$(1),D[ALL]
0250 IVW21A: IOLIST W0$(1),W1$(1),W2$(1),W[ALL]
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0265 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0270 IVS01B: IOLIST I0$,I1$,I[ALL]
0275 IVS01C: IOLIST I0$,PERCENTS[ALL],FACTORS[ALL]
0280 GLS01A: IOLIST G0$,G1$,G2$,G3$(1),G4$
0400 REM " --- Parameters"
0405 DIM P[5],G[1],I[1],PERCENTS[25],FACTORS[25]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0440 FIND (SYS01_DEV,KEY=N0$+N2$+"01",DOM=9800)IOL=IVS01B
0450 FIND (SYS01_DEV,KEY=N0$+N2$+"02",DOM=9800)IOL=IVS01C
0460 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0470 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1)),G[0]=NUM(G2$(1,2))
0480 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0485 LET CARRY=I[0],SETUP=I[1]
0490 IF CARRY=0 THEN LET CARRY=1
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM FILES[15],PARAMS$[4],OPTIONS$[7],D0$(27),D1$(60),D2$(16),D[9]
0520 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],B0$(24),B1$(64),B[20]
0530 DIM W0$(27),W1$(60),W2$(16),W[9]
0550 LET LEVEL$="B",FILES[1]=IVM01_DEV,FILES[10]=IVM10_DEV
0555 LET FILES[14]=IVM14_DEV,FILES[15]=IVM15_DEV
0560 LET PARAMS$[0]=N0$,PARAMS$[1]=I1$,PARAMS$[2]=I2$,PARAMS$[3]=I3$
0565 LET DAY_OF_MTH=NUM(F0$(22,2)),BASEPERIOD$=I4$(1,4),CURPERIOD$=BASEPERIOD$
0700 REM " --- Background"
0710 PRINT 'SB',@(26,3),"Detail Level:",'SF',
0720 CALL "SYC.WC",1,0,80,0,0,4,0
0730 CALL "IVC.IB","BL","D",5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0750 GOSUB 5000
0800 REM " --- Detail level"
0810 LET V0$="S",V1$="C",V2$=LEVEL$,V3$="IWB",V0=1,V1=40,V2=3
0815 LET V4$="I=Report By Item (All Warehouses)  W=Report By Item Within Warehouse  B=Both"
0820 GOSUB 7000
0825 ON V3 GOTO 0830,0800,0800,0800,0895
0830 IF POS(V$="IWB")=0 THEN GOTO 0800
0835 LET LEVEL$=V$
0840 GOSUB 5400
0845 PRINT @(V1,V2),LEVEL$," ",V4$,'CL',
0850 REM " --- Process standard input"
0855 DIM OPTIONS$[7]
0860 LET ACTION$="BIL",EXCLUDE$="D"
0865 IF LEVEL$<>"I" THEN GOTO 0885
0870 LET EXCLUDE$="DW"
0875 PRINT 'CE'
0880 CALL "SYC.WC",1,0,80,0,0,4,0
0885 CALL "IVC.IB",ACTION$,EXCLUDE$,5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0890 ON V3 GOTO 0895,0860,0800,0860,0895
0895 GOSUB 5000
0900 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
0905 ON V3 GOTO 0910,0900,0900,0900,9900
0910 ON POS(V$="YN") GOTO 0900,0915,0800
0915 LET BEGWHSE$=OPTIONS$[1],ENDWHSE$=OPTIONS$[2],BEGPROD$=OPTIONS$[3]
0920 LET ENDPROD$=OPTIONS$[4],BEGITEM$=OPTIONS$[5],ENDITEM$=OPTIONS$[6]
0925 LET TYPE$=OPTIONS$[7]
0950 REM " --- Position files"
0955 DIM FILES[12],ITEM$[2]
0960 LET FILES[1]=IVM01_DEV,FILES[2]=IVM02_DEV,FILES[3]=IVM03_DEV2
0965 LET FILES[12]=IVM12_DEV,ACTION$="W",K$=N0$+BEGITEM$
0970 CALL "SYC.GA",7,1,"","",STATUS
0975 IF STATUS THEN GOTO 9900
0980 CALL "SYC.NB","Processing",7+P[0],COLUMN
0985 LET FIRST$=N0$+"A",K$=FIRST$+BEGPROD$
0990 READ (IVM03_DEV3,KEY=K$,DOM=1000)
1000 REM " --- Get next sort record"
1010 LET K$=KEY(IVM03_DEV3,END=4000)
1020 IF POS(FIRST$=K$)<>1 THEN GOTO 4000
1030 LET PRODUCT$=K$(4,3),ITEM$=K$(7)
1100 REM " --- Valid Product/Item?"
1110 IF ENDPROD$<>"" THEN IF K$(4,3)>ENDPROD$ THEN GOTO 4000
1120 IF BEGITEM$<>"" THEN IF K$(7)<BEGITEM$ THEN GOTO 1400
1130 IF ENDITEM$<>"" THEN IF K$(7)>ENDITEM$ THEN GOTO 1450
1140 LET X$=K$(4,3)+" "+K$(7,P[0])
1190 GOTO 1500
1400 REM " --- Skip to beginning item"
1410 READ (IVM03_DEV3,KEY=K$(1,6)+BEGITEM$(1,P[0]-1),DOM=3900)
1440 GOTO 3900
1450 REM " --- Skip to next product"
1460 READ (IVM03_DEV3,KEY=K$(1,6)+$FF$,DOM=3900)
1490 GOTO 3900
1500 REM " --- Level breaks?"
1510 PRINT @(COLUMN,11),X$,
1520 READ (IVM03_DEV3)
1600 REM " --- Retrieve item"
1610 LET A0$(1)=N0$+K$(7)
1620 FIND (IVM01_DEV,KEY=A0$,DOM=3900)IOL=IVM01A
1630 IF A2$(26,1)=" " THEN LET A2$(26,1)="D"
1640 IF A2$(27,1)=" " THEN LET A2$(27,1)="D"
1650 IF A2$(28,1)=" " THEN LET A2$(28,1)="D"
1900 REM " --- Position warehouse xref"
1910 DIM D[9],DESCRIPTION$(60)
1920 LET DESCRIPTION$(1)=FNITEM$(A1$,P[3],P[4],P[5]),X$=N0$+"G"+A0$(3)
1990 READ (IVM03_DEV,KEY=X$,DOM=2000)
2000 REM " --- Read next warehouse record"
2010 LET K$=KEY(IVM03_DEV,END=3000)
2020 IF POS(X$=K$)<>1 THEN GOTO 3000
2030 READ (IVM03_DEV)
2100 REM " --- Retrieve warehouse record"
2110 LET B0$(1)=N0$+K$(24)+A0$(3)
2120 FIND (IVM02_DEV,KEY=B0$,DOM=2900)IOL=IVM02A
2130 IF B1$(57,1)=" " THEN LET B1$(57,1)="D"
2140 IF B1$(58,1)=" " THEN LET B1$(58,1)="D"
2150 IF B1$(59,1)=" " THEN LET B1$(59,1)="D"
2200 REM " --- Calculate annual usage"
2210 LET ITEM$[0]=N0$,ITEM$[1]=B0$(3,2),ITEM$[2]=B0$(5),ACTION$="W"
2220 CALL "IVC.AU",ACTION$,FILES[ALL],ITEM$[ALL],FACTORS[ALL],DAY_OF_MTH,BASEPERIOD$,CURPERIOD$,G[0],P[1],ACTUAL,ESTIMATED,FLAG$,STATUS
2230 LET W[0]=B[7],W[1]=ACTUAL,W[2]=ESTIMATED,W[3]=B[5],W[4]=B[5]
2240 LET W[5]=B[4],W[6]=B[4],W[7]=B[6],W[8]=B[6],W[9]=B[11]
2250 LET SAFETY=W[4],ORDER=W[6],EOQ=W[8],CODES$=B1$(57,3),LEAD=W[0]
2400 REM " --- Calculate new safety stock, order point and EOQ"
2410 GOSUB 6000
2700 REM " --- Update totals for warehouse/item"
2710 DIM W0$(27),W1$(60),W2$(16)
2720 LET W0$(1)=B0$(1,4)+A2$(1,3)+B0$(5),W1$(1)=DESCRIPTION$
2730 LET W2$(1)=B1$(56,4)+A2$(24,1),W[4]=SAFETY,W[6]=ORDER,W[8]=EOQ
2790 WRITE (IVW21_DEV,KEY=W0$)IOL=IVW21A
2800 REM " --- Accumulate item totals"
2810 LET D[1]=D[1]+W[1],D[2]=D[2]+W[2],D[4]=D[4]+W[4]
2820 LET D[6]=D[6]+W[6],D[8]=D[8]+W[8]
2900 REM " --- Loop back for next warehouse"
2990 GOTO 2000
3000 REM " --- Done with warehouses - perform item calculations"
3010 IF A2$(24,1)<>"I" THEN GOTO 3100
3020 LET LEAD=A[7],ESTIMATED=D[2],SAFETY=A[5]
3030 LET ORDER=A[4],EOQ=A[6],CODES$=A2$(26,3)
3040 GOSUB 6000
3100 REM " --- Generate item record"
3110 DIM D0$(27),D1$(60),D2$(16)
3120 LET D0$(1)=A0$(1,2)+"  "+A2$(1,3)+A0$(3)
3130 LET D1$(1)=DESCRIPTION$,D2$(1)=A2$(25,4)+A2$(24,1),D[0]=LEAD
3140 LET D[3]=A[5],D[4]=SAFETY,D[5]=A[4]
3150 LET D[6]=ORDER,D[7]=A[6],D[8]=EOQ
3190 WRITE (IVW11_DEV,KEY=D0$)IOL=IVW11A
3900 REM " --- Loop back for next item"
3990 GOTO 1000
4000 REM " --- Run report overlay"
4090 RUN "IVR.OB"
5000 REM " --- Display"
5030 GOSUB 5400
5040 PRINT @(40,3),LEVEL$," ",V4$,'CL',
5050 LET ACTION$="BDL",EXCLUDE$="D"
5060 IF LEVEL$="I" THEN LET EXCLUDE$="DW"
5070 CALL "IVC.IB",ACTION$,EXCLUDE$,5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
5090 RETURN 
5400 REM " --- Detail level description"
5410 LET V4$="(Both Item And Warehouse)"
5420 IF LEVEL$="I" THEN LET V4$="(Item Level)"
5430 IF LEVEL$="W" THEN LET V4$="(Warehouse Level)"
5490 RETURN 
6000 REM " --- Calculate new safety stock, order point and EOQ"
6010 LET ADU=(ESTIMATED/G[0])/30
6020 IF CODES$(3,1)<>"N" THEN LET SAFETY=FNR(ADU*LEAD*.5)
6030 IF CODES$(2,1)<>"N" THEN LET ORDER=FNR(SAFETY+(ADU*LEAD))
6040 IF CODES$(1,1)="N" THEN GOTO 6090
6050 LET EOQ=((2*ESTIMATED*SETUP)/CARRY),S=SGN(EOQ),EOQ=ABS(EOQ)
6060 LET EOQ=FNR(SQR(EOQ)*S)
6090 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8080 DEF FNR(Q)=INT(Q+.5)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
