0010 REM "IVR - Inventory Activity Report (Report Overlay)"
0020 REM "Program IVR.EB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0110 CALL "SYC.GA",7,1,"","",STATUS
0120 IF STATUS THEN GOTO 9900
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$,A5$,A6$,A[ALL]
0230 IVM10A: IOLIST X0$(1)
0240 IVM10C: IOLIST X0$(1)
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12]
0520 DIM PERIOD$[1],HEADINGS$[6],O[8]
0550 LET FILES[2]=IVM12_DEV,FILES[3]=IVM03_DEV2
0555 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$,WHEN$=F0$(7,3),CLOCK$="",H9$=""
0560 LET WIDTH=132,PAGE=0,L9=59,L=L9+1,DW=P[3]+P[4]+P[5],SELECTION$="END"
0565 LET HEADINGS=6,IH$="Item",DH$="Description",M9$="00"
0570 LET BEGWHSE$=OPTIONS$[1],ENDWHSE$=OPTIONS$[2],BEGPROD$=OPTIONS$[3]
0575 LET ENDPROD$=OPTIONS$[4],BEGITEM$=OPTIONS$[5],ENDITEM$=OPTIONS$[6]
0580 LET TYPE$=OPTIONS$[7],LEVEL$=OPTIONS$[0],NUMBER=0
0585 LET PERIOD$[0]=BEGYEAR$+BEGPER$,PERIOD$[1]=ENDYEAR$+ENDPER$
0590 LET HEADINGS$[2]="From Period "+FNYY21_YY$(BEGPER$)+" "+BEGYEAR$+" Through Period "+ENDPER$+" "+FNYY21_YY$(ENDYEAR$)
0600 REM " --- Print positions"
0610 CALL "SYC.RM",M2$,M2,12,15
0615 LET O[8]=WIDTH-M2
0620 FOR X=7 TO 3 STEP -1
0625 LET O[X]=O[X+1]-M2
0630 NEXT X
0635 LET O[2]=O[3]-3,O[1]=P[0]+1,SPLIT=0,X=O[2]-O[1]
0640 IF X>DW THEN GOTO 0700
0645 LET O[1]=O[2]-1,DW=O[2]-3,SPLIT=1
0650 LET IH$="Item/Description",DH$=""
0700 REM " --- Background"
0710 CALL "SYC.NB","Printing",7+P[0],COLUMN
0800 REM " --- Report headings"
0805 DIM H1$(WIDTH),H2$(WIDTH)
0810 IF LEVEL$="I" THEN LET HEADINGS$[1]=HEADINGS$[1]+" By Item"
0815 IF LEVEL$="W" THEN LET HEADINGS$[1]=HEADINGS$[1]+" By Warehouse"
0820 LET X1$="First",X2$="First",X2=5
0825 IF BEGITEM$<>"" THEN LET X1$=BEGITEM$
0830 IF BEGPROD$<>"" THEN LET X2$=BEGPROD$,X2=3
0835 IF ENDPROD$="" THEN IF X2=3 THEN LET X2=4
0840 LET H1$(1)="From Item: "+X1$,H1$(WIDTH-X2-13)="From Product: "+X2$
0845 LET X1$="Last",X2$="Last",X3$="All Item Types"
0850 IF ENDITEM$<>"" THEN LET X1$=ENDITEM$
0855 IF ENDPROD$<>"" THEN LET X2$=ENDPROD$
0860 IF TYPE$<>"" THEN LET X3$="Item Type "+TYPE$
0865 LET H2$(1)="  To Item: "+X1$,H2$(FNC(X3$,WIDTH))=X3$
0870 LET H2$(WIDTH-X2-13)="  To Product: "+X2$
0875 LET HEADINGS$[4]=H1$,HEADINGS$[5]=H2$
0950 REM " --- Position files"
0980 LET FIRST$=N0$+"A",K$=FIRST$+BEGPROD$,P=0
0985 IF LEVEL$="W" THEN LET FIRST$=N0$+"C",K$=FIRST$+BEGWHSE$,P=2
0990 READ (IVM03_DEV,KEY=K$,DOM=1000)
1000 REM " --- Get next sort record"
1010 LET K$=KEY(IVM03_DEV,END=4000)
1020 IF POS(FIRST$=K$)<>1 THEN GOTO 4000
1030 LET WHSE$=K$(4,2),PRODUCT$=K$(4+P,3),ITEM$=K$(7+P)
1040 IF LEVEL$="W" THEN GOTO 1200
1100 REM " --- By Item: Valid Product/Item?"
1110 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 4000
1120 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 1400
1130 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 1450
1140 LET X$=PRODUCT$+" "+ITEM$(1,P[0])
1190 GOTO 1500
1200 REM " --- By Warehouse: Valid Warehouse/Product/Item?"
1210 IF ENDWHSE$<>"" THEN IF WHSE$>ENDWHSE$ THEN GOTO 4000
1220 IF BEGPROD$<>"" THEN IF PRODUCT$<BEGPROD$ THEN GOTO 1300
1230 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 1350
1240 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 1400
1250 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 1450
1260 LET X$=WHSE$+" "+PRODUCT$+" "+ITEM$(1,P[0])
1290 GOTO 1500
1300 REM " --- Skip to beginning product for this warehouse'
1310 READ (IVM03_DEV,KEY=K$(1,5)+BEGPROD$,DOM=3900)
1340 GOTO 3900
1350 REM " --- Skip to next warehouse"
1360 READ (IVM03_DEV,KEY=K$(1,5)+$FF$,DOM=3900)
1390 GOTO 3900
1400 REM " --- Skip to beginning item"
1410 READ (IVM03_DEV,KEY=K$(1,6+P)+BEGITEM$(1,P[0]-1),DOM=3900)
1440 GOTO 3900
1450 REM " --- Skip to next product"
1460 READ (IVM03_DEV,KEY=K$(1,6+P)+$FF$,DOM=3900)
1490 GOTO 3900
1500 REM " --- Level breaks?"
1510 PRINT @(COLUMN,11),X$,
1520 IF LEVEL$="W" THEN IF WHSE$<>T0$ THEN GOSUB 6000
1530 IF PRODUCT$<>T1$ THEN GOSUB 6200
1540 READ (IVM03_DEV)
2000 REM " --- Retrieve item and activity"
2010 DIM ITEM$[2],ACTIVITY[12],DESCRIPTION$(DW)
2020 LET A0$(1)=N0$+ITEM$
2030 FIND (IVM01_DEV,KEY=A0$,DOM=3900)IOL=IVM01A
2040 IF TYPE$<>"" THEN IF A2$(53,3)<>TYPE$ THEN GOTO 3900
2050 LET DESCRIPTION$(1)=FNITEM$(A1$,P[3],P[4],P[5])
2060 LET ACTION$="A",ITEM$[0]=N0$,ITEM$[2]=ITEM$
2070 IF LEVEL$="W" THEN LET ACTION$="",ITEM$[1]=WHSE$
2080 CALL "IVC.WB",ACTION$,FILES[ALL],ITEM$[ALL],PERIOD$[ALL],ACTIVITY[ALL],STATUS
2090 CALL "IVC.PA",SELECTION$,ACTIVITY[ALL],BALANCE
3000 REM " --- Print detail line"
3010 LET NEEDED=2,X$=""
3020 IF H9$<>"" THEN LET NEEDED=NEEDED+2
3030 IF L+NEEDED>L9 THEN GOSUB 5000
3040 IF H9$<>"" THEN GOSUB 5200
3050 IF SPLIT=0 THEN LET X$=DESCRIPTION$
3060 PRINT (7)@(O[0]),A0$(3,P[0]),@(O[1]),X$,@(O[2]),A2$(4,2),@(O[3]),ACTIVITY[0]:M2$,@(O[4]),ACTIVITY[1]:M2$,@(O[5]),ACTIVITY[3]:M2$,@(O[6]),ACTIVITY[5]:M2$,@(O[7]),ACTIVITY[7]:M2$,@(O[8]),BALANCE:M2$
3070 IF SPLIT>0 THEN LET X$=DESCRIPTION$ ELSE LET X$=""
3080 PRINT (7)@(O[0]+3),X$,@(O[4]),ACTIVITY[2]:M2$,@(O[5]),ACTIVITY[4]:M2$,@(O[6]),ACTIVITY[6]:M2$,@(O[7]),ACTIVITY[8]:M2$
3090 LET L=L+2,NUMBER=NUMBER+1
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4010 IF NUMBER>0 THEN GOTO 9900
4020 GOSUB 5000
4030 PRINT (7)"No Inventory Activity Found"
4090 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+4
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)@(O[3]+M2-10),"Beginning",@(O[4]+M2-9),"Received",@(O[5]+M2-7),"Sold &",@(O[6]+M2-11),"Adjustments",@(O[7]+M2-9),"Transfers",@(O[8]+M2-8),"Ending"
5050 PRINT (7)@(O[0]),IH$,@(O[1]),DH$,@(O[2]),"UM",@(O[3]+M2-10),"Balance",@(O[4]+M2-9),"& Built",@(O[5]+M2-7),"Issued",@(O[6]+M2-11),"& Returns",@(O[7]+M2-9),"In & Out",@(O[8]+M2-8),"Balance"
5060 PRINT (7)""
5090 RETURN 
5200 REM " --- Product subheading"
5210 IF L+2>L9 THEN GOSUB 5000
5220 PRINT (7)H9$
5230 PRINT (7)""
5240 LET L=L+2,H9$=""
5290 RETURN 
6000 REM " --- Warehouse Break"
6010 IF T0$="" THEN GOTO 6100
6020 GOSUB 6200
6100 DIM X0$(32)
6120 LET T0$=WHSE$,X0$(6,24)="(Not on File)",L=L9+1
6130 FIND (IVM10_DEV,KEY=N0$+"C"+T0$,DOM=6140)IOL=IVM10C
6140 LET X$="Warehouse "+T0$+" "+FNP$(X0$(6,24))
6150 LET HEADINGS$[4]=H1$,HEADINGS$[4](FNC(X$,WIDTH),LEN(X$))=X$
6190 RETURN 
6200 REM " --- Product break"
6210 DIM X0$(32)
6220 LET T1$=PRODUCT$,X0$(7,20)="(Not on File)"
6230 FIND (IVM10_DEV,KEY=N0$+"A"+T1$,DOM=6240)IOL=IVM10A
6240 LET H9$="Product Type "+T1$+" "+X0$(7,20)
6290 RETURN 
8000 REM " --- Functions"
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
