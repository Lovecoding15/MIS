0010 REM "IVR - Lot/Serial Number Status Report (Report Overlay)"
0020 REM "Program IVR.YB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0110 CALL "SYC.GA",7,1,"","",STATUS
0120 IF STATUS THEN GOTO 9900
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$,A5$,A6$,A[ALL]
0220 IVM07A: IOLIST B0$(1),B1$(1),B[ALL]
0240 IVM10C: IOLIST X0$(1)
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],HEADINGS$[9],O[12]
0520 DIM B0$(44),B1$(96),B[12],WAREHOUSE[4],ITEM[4],REPORT[4],TOTAL[4]
0560 LET P8$="Serial #",WHEN$=F0$(7,3),CLOCK$="",H9$=""
0565 LET WIDTH=132,PAGE=0,L9=59,L=L9+1,HEADINGS=9,DONE=0
0570 IF SEQUENCE$="L" THEN LET HEADINGS=8
0575 IF I3$(17,1)="L" THEN LET P8$="Lot #"
0600 REM " --- Resize masks"
0610 CALL "SYC.RM",M1$,M1,12,15
0620 CALL "SYC.RM",M2$,M2,10,15
0630 CALL "SYC.RM",M3$,M3,10,15
0700 REM " --- Background"
0710 CALL "SYC.NB","Printing",4+P[0]+P[2],COLUMN
0800 REM " --- Print positions"
0810 LET O[10]=WIDTH-M1,O[9]=O[10]-M3,O[8]=O[9]-M2,O[7]=O[8]-M2
0820 LET O[6]=O[7]-M2,O[5]=O[6]-5,O[1]=3
0830 IF SEQUENCE$="I" THEN LET X=17
0840 IF SEQUENCE$="L" THEN LET X=18
0850 LET O[2]=O[1]+MAX(P[2],X)+1,O[3]=O[2]+9,O[4]=O[3]+9
0860 LET AP=O[5]-O[4]+1
0870 IF SEQUENCE$="I" THEN LET DW=O[5]-(MAX(P[0],X)+2)+1
0880 IF SEQUENCE$="L" THEN LET DW=O[5]-(O[1]+4+P[0])+1
0890 GOSUB 5800
0900 REM " --- Position file"
0910 IF SEQUENCE$="L" THEN GOTO 0950
0920 LET K$=N0$+BEGWHSE$
0925 IF BEGITEM$<>"" THEN LET K$=K$+BEGITEM$+BEGLOT$
0930 READ (IVM07_DEV,KEY=K$,DOM=1000)IOL=IVM07A
0950 LET K$=N0$+BEGLOT$
0960 IF BEGWHSE$<>"" THEN LET K$=K$+BEGWHSE$+BEGITEM$
0980 READ (IVM08_DEV,KEY=K$,DOM=1000)
1000 REM " --- Next record"
1010 IF SEQUENCE$="L" THEN GOTO 1200
1020 LET K$=KEY(IVM07_DEV,END=4000)
1030 IF POS(N0$=K$)<>1 THEN GOTO 4000
1040 IF ENDWHSE$<>"" THEN IF K$(3,2)>ENDWHSE$ THEN GOTO 4000
1050 IF BEGITEM$<>"" THEN IF K$(5,20)<BEGITEM$ THEN GOTO 1100
1060 IF ENDITEM$<>"" THEN IF K$(5,20)>ENDITEM$ THEN GOTO 1120
1070 IF BEGLOT$<>"" THEN IF K$(25,20)<BEGLOT$ THEN GOTO 1140
1080 IF ENDLOT$<>"" THEN IF K$(25,20)>ENDLOT$ THEN GOTO 1160
1085 LET X$=K$(3,2)+" "+K$(5,P[0])+" "+K$(25,P[2])
1090 GOTO 1400
1100 REM " --- Skip to beginning item"
1105 READ (IVM07_DEV,KEY=K$(1,4)+BEGITEM$,DOM=3900)
1110 GOTO 3900
1120 REM " --- Skip to next warehouse"
1125 READ (IVM07_DEV,KEY=K$(1,4)+$FF$,DOM=3900)
1130 GOTO 3900
1140 REM " --- Skip to beginning lot/serial number"
1145 READ (IVM07_DEV,KEY=K$(1,24)+BEGLOT$,DOM=3900)
1150 GOTO 3900
1160 REM " --- Skip to next item"
1165 READ (IVM07_DEV,KEY=K$(1,24)+$FF$,DOM=3900)
1170 GOTO 3900
1200 REM " --- Next sort record"
1210 LET K$=KEY(IVM08_DEV,END=4000)
1220 IF POS(N0$=K$)<>1 THEN GOTO 4000
1230 IF ENDLOT$<>"" THEN IF K$(3,20)>ENDLOT$ THEN GOTO 4000
1240 IF BEGWHSE$<>"" THEN IF K$(23,2)<BEGWHSE$ THEN GOTO 1300
1250 IF ENDWHSE$<>"" THEN IF K$(23,2)>ENDWHSE$ THEN GOTO 1320
1260 IF BEGITEM$<>"" THEN IF K$(25,20)<BEGITEM$ THEN GOTO 1340
1270 IF ENDITEM$<>"" THEN IF K$(25,20)>ENDITEM$ THEN GOTO 1360
1275 READ (IVM08_DEV)
1280 LET K$=K$(1,2)+K$(23)+K$(3,20),X$=K$(25,P[2])+" "+K$(3,2)+" "+K$(5,P[0])
1290 GOTO 1400
1300 REM " --- Skip to beginning warehouse"
1305 READ (IVM08_DEV,KEY=K$(1,22)+BEGWHSE$,DOM=3900)
1310 GOTO 3900
1320 REM " --- Skip to next lot/serial number"
1325 READ (IVM08_DEV,KEY=K$(1,22)+$FF$,DOM=3900)
1330 GOTO 3900
1340 REM " --- Skip to beginning item number"
1345 READ (IVM08_DEV,KEY=K$(1,24)+BEGITEM$,DOM=3900)
1350 GOTO 3900
1360 REM " --- Skip to next warehouse"
1365 READ (IVM08_DEV,KEY=K$(1,24)+$FF$,DOM=3900)
1370 GOTO 3900
1400 REM " --- Read IVM-07 Lot/Serial Master"
1410 PRINT @(COLUMN,11),X$,
1420 READ (IVM07_DEV,KEY=K$,DOM=3900)IOL=IVM07A
1430 IF STATUS$="O" THEN IF B[0]=0 THEN GOTO 3900
1440 IF STATUS$="C" THEN IF B[0]<>0 THEN GOTO 3900
1500 REM " --- Format output fields"
1510 DIM AMOUNT[4]
1520 LET WHSE$=B0$(3,2),ITEM$=B0$(5,20),LOTSER$=B0$(25,20)
1530 LET AMOUNT[0]=B[0],AMOUNT[1]=B[1],AMOUNT[2]=B[0]-B[1]
1540 LET AMOUNT[3]=B[3],AMOUNT[4]=B[0]*B[3],RECEIVED$="",ISSUED$=""
1550 IF FNP$(B1$(64,6))<>"" THEN LET RECEIVED$=FNB$(FNLATEST$(B1$(64,3),B1$(67,3)))
1560 IF FNP$(B1$(70,6))<>"" THEN LET ISSUED$=FNB$(FNLATEST$(B1$(70,3),B1$(73,3)))
1570 LET COMMENT$=FNP$(B1$(14,40)),NEEDED=1
1580 IF COMMENT$<>"" THEN LET NEEDED=2
1900 REM " --- Branch based on sequence"
1990 IF SEQUENCE$="L" THEN GOTO 3000
2000 REM " --- Item Sequence"
2010 IF WHSE$<>T0$ THEN GOSUB 6000
2020 IF ITEM$<>T1$ THEN GOSUB 6200
2030 GOSUB 6400
2200 REM " --- Item subheading"
2210 IF H9$="" THEN GOTO 2300
2220 IF L+3>L9 THEN GOSUB 5000
2230 PRINT (7)H9$
2240 LET L=L+1,H9$=""
2500 REM " --- Print detail line"
2510 IF L+NEEDED>L9 THEN GOSUB 5000
2520 PRINT (7)@(O[1]),LOTSER$(1,P[2]),@(O[2]),RECEIVED$,@(O[3]),ISSUED$,@(O[4]),VENDOR$,@(O[6]),AMOUNT[0]:M2$,@(O[7]),AMOUNT[1]:M2$,@(O[8]),AMOUNT[2]:M2$,@(O[9]),AMOUNT[3]:M3$,@(O[10]),AMOUNT[4]:M1$
2530 IF COMMENT$<>"" THEN PRINT (7)@(O[2]),COMMENT$
2540 LET L=L+NEEDED
2990 GOTO 3900
3000 REM " --- Lot/Serial Sequence"
3010 IF ITEM$<>T1$ THEN GOSUB 6300
3020 GOSUB 6400
3500 REM " --- Print detail line"
3510 IF L+NEEDED>L9 THEN GOSUB 5000
3520 PRINT (7)@(O[0]),LOTSER$(1,P[2]),@(O[2]),RECEIVED$,@(O[3]),ISSUED$,@(O[4]),VENDOR$,@(O[6]),AMOUNT[0]:M2$,@(O[7]),AMOUNT[1]:M2$,@(O[8]),AMOUNT[2]:M2$,@(O[9]),AMOUNT[3]:M3$,@(O[10]),AMOUNT[4]:M1$
3530 PRINT (7)@(O[1]),H9$
3540 IF COMMENT$<>"" THEN PRINT (7)@(O[2]),COMMENT$
3550 LET L=L+1+NEEDED
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4010 LET DONE=1
4020 IF SEQUENCE$="I" THEN GOSUB 6000
4030 LET TOTAL$="Report",T=0
4040 FOR X=0 TO 4
4050 LET TOTAL[X]=REPORT[X]
4060 NEXT X
4080 GOSUB 6900
4090 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5090 RETURN 
5800 REM " --- Initialize HEADINGS$"
5810 DIM H1$(WIDTH),H2$(WIDTH),H6$(WIDTH),H7$(WIDTH)
5820 LET HEADINGS$[0]=F4$,X3$="All Item Types"
5825 IF TYPE$<>"" THEN LET X3$="Item Type "+TYPE$
5830 IF SEQUENCE$="I" THEN LET HEADINGS$[1]=F5$+" By Item For "+X3$
5835 IF SEQUENCE$="L" THEN LET HEADINGS$[1]=F5$+" By Lot/Serial Number For "+X3$
5840 IF STATUS$="O" THEN LET HEADINGS$[1]="Open "+HEADINGS$[1]
5845 IF STATUS$="C" THEN LET HEADINGS$[1]="Closed "+HEADINGS$[1]
5850 LET X1$="First",X2$="First",X3$="First",X4$="First",X2=5
5855 IF BEGITEM$<>"" THEN LET X1$=BEGITEM$
5860 IF BEGPROD$<>"" THEN LET X2$=BEGPROD$,X2=3
5865 IF ENDPROD$="" THEN IF X2=3 THEN LET X2=4
5870 IF BEGLOT$<>"" THEN LET X3$=BEGLOT$
5875 IF BEGWHSE$<>"" THEN LET X4$=BEGWHSE$
5880 LET H1$(1)="From Item: "+X1$,H1$(38)="From Lot/Serial Number: "+X3$
5885 IF SEQUENCE$="L" THEN LET H1$(89)="From Warehouse: "+X4$
5890 LET H1$(WIDTH-X2-13)="From Product: "+X2$
5895 LET X1$="Last",X2$="Last",X3$="Last",X4$="Last"
5900 IF ENDITEM$<>"" THEN LET X1$=ENDITEM$
5905 IF ENDPROD$<>"" THEN LET X2$=ENDPROD$
5910 IF ENDLOT$<>"" THEN LET X3$=ENDLOT$
5915 IF ENDWHSE$<>"" THEN LET X4$=ENDWHSE$
5920 LET H2$(1)="  To Item: "+X1$,H2$(38)="  To Lot/Serial Number: "+X3$
5925 IF SEQUENCE$="L" THEN LET H2$(89)="  To Warehouse: "+X4$
5930 LET H2$(WIDTH-X2-13)="  To Product: "+X2$
5935 LET H6$(O[3]+1)="Sold Or",H6$(O[6]+M2-8)="Quantity"
5940 LET H6$(O[7]+M2-9)="Committed",H6$(O[8]+M2-9)="Quantity"
5945 IF SEQUENCE$="I" THEN LET H7$(O[0]+1)="Item Lot/Serial #",X=4
5950 IF SEQUENCE$="L" THEN LET H7$(O[0]+1)=P8$+"/Whse/Item",X=3
5955 LET H7$(O[2]+1)="Received",H7$(O[3]+1)="Issued",H7$(O[4]+1)="Vendor"
5960 LET H7$(O[5]+1)="Prod",H7$(O[6]+M2-8)="On Hand",H7$(O[7]+M2-9)="Quantity"
5965 LET H7$(O[8]+M2-9)="Available",H7$(O[9]+M3-9)="Unit Cost"
5980 LET H7$(O[10]+M1-11)="Total Value",HEADINGS$[X]=H1$,HEADINGS$[X+1]=H2$
5985 LET HEADINGS$[X+3]=H6$,HEADINGS$[X+4]=H7$
5990 RETURN 
6000 REM " --- Warehouse Break"
6010 IF T0$="" THEN GOTO 6100
6020 IF SEQUENCE$="I" THEN GOSUB 6200
6030 LET TOTAL$="Warehouse "+T0$,T=0
6040 FOR X=0 TO 4
6050 LET TOTAL[X]=WAREHOUSE[X]
6060 NEXT X
6070 GOSUB 6900
6100 DIM X0$(32),WAREHOUSE[4]
6110 LET T0$=WHSE$,X0$(6,24)="(Not on File)",L=L9+1
6115 IF DONE=0 THEN LET L=L9+1
6120 FIND (IVM10_DEV,KEY=N0$+"C"+T0$,DOM=6130)IOL=IVM10C
6130 LET HEADINGS$[2]="Warehouse "+T0$+" "+FNP$(X0$(6,24))
6190 RETURN 
6200 REM " --- Item break"
6210 IF T1$="" THEN GOTO 6300
6220 LET TOTAL$="Item "+T1$,T=1
6230 FOR X=0 TO 4
6240 LET TOTAL[X]=ITEM[X]
6250 NEXT X
6290 GOSUB 6900
6300 DIM X0$(32),H9$(WIDTH-3),DESCRIPTION$(DW),ITEM[4]
6310 LET T1$=ITEM$,A0$(1)=N0$+ITEM$,A1$(1)="(Not on File)",A2$(1)=""
6320 FIND (IVM01_DEV,KEY=A0$,DOM=6330)IOL=IVM01A
6330 IF TYPE$<>"" THEN IF A2$(53,3)<>TYPE$ THEN GOTO 6380
6340 LET SKIP=0,DESCRIPTION$(1)=FNITEM$(A1$,P[3],P[4],P[5])
6350 IF SEQUENCE$="I" THEN LET H9$(O[0]+1)=A0$(3,P[0])+" "+DESCRIPTION$
6360 IF SEQUENCE$="L" THEN LET H9$(O[1]+1)=WHSE$+" "+A0$(3,P[0])+" "+DESCRIPTION$
6365 LET H9$(O[5]+1)=A2$(1,3)
6370 GOTO 6390
6380 LET SKIP=1
6390 RETURN 
6400 REM " --- Accumulate totals"
6410 FOR X=0 TO 4
6420 LET ITEM[X]=ITEM[X]+AMOUNT[X],WAREHOUSE[X]=WAREHOUSE[X]+AMOUNT[X]
6430 LET REPORT[X]=REPORT[X]+AMOUNT[X]
6440 NEXT X
6450 RETURN 
6900 REM " --- Print total line"
6910 IF L+2>L9 THEN GOSUB 5000
6920 LET TOTAL$="Total For "+FNP$(TOTAL$)
6930 IF T=0 THEN PRINT (7)@(O[5]-LEN(TOTAL$)),TOTAL$,@(O[10]),TOTAL[4]:M1$
6940 IF T>0 THEN PRINT (7)@(O[5]-LEN(TOTAL$)),TOTAL$,@(O[6]),TOTAL[0]:M2$,@(O[7]),TOTAL[1]:M2$,@(O[8]),TOTAL[2]:M2$,@(O[10]),TOTAL[4]:M1$
6950 PRINT (7)""
6960 LET L=L+2
6990 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8300 REM " --- Multi-Line Functions"
8310 DEF FNLATEST$(Q1$,Q2$)
8320 LET Q3$=""
8330 IF FNP$(Q1$)<>"" THEN LET Q3$=Q1$
8340 IF FNP$(Q2$)<>"" THEN IF Q2$>Q3$ THEN LET Q3$=Q2$
8350 RETURN Q3$
8390 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
