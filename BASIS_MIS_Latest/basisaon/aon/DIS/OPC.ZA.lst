0010 REM "OPE - Order Entry Serial Number Entry Window - BASIS"
0020 REM "Program OPC.ZA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "MAS * DCF * WA# 205
0040 REM 
0042 REM "SERIAL$: Serial number (returned)"
0044 REM "WHERE$ : Called from Header or Line (input)"
0046 REM "A0$    : Order header 1st string (input/returned)"
0048 REM "A[n]   : Order header numerics (input/returned)"
0054 REM "W0$    : Order line item 1st string (input/returned)"
0056 REM "W1$    : Order line item 2nd string (input/returned)"
0058 REM "W[n]   : Order line item numerics (input/returned)"
0060 REM "SNM01_DEV: Channel number for SNM-01"
0062 REM "CUSTLEN: Length of customer number"
0063 REM "CUSTMASK$: Customer mask"
0064 REM "ARM01_DEV: Channel number for ARM-01"
0070 REM 
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER SERIAL$,WHERE$,A0$,A[ALL],W0$,W1$,W[ALL],SNM01_DEV,CUSTLEN,CUSTMASK$,ARM01_DEV
0100 REM " --- Open/Lock Files"
0105 LET FILES=7
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0115 LET FILES$[1]="SYS-01"
0130 LET FILES$[2]="CSM-01",FILES$[3]="CSM-02",FILES$[4]="CSM-03"
0140 LET FILES$[5]="CSM-04",FILES$[6]="CSM-05",FILES$[7]="CSM-06"
0150 CALL "SYC.DA",1,1,7,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0155 IF STATUS>0 THEN GOTO 9900
0160 LET SYS01_DEV=CHANNELS[1]
0175 LET CSM01_DEV=CHANNELS[2],CSM02_DEV=CHANNELS[3],CSM03_DEV=CHANNELS[4]
0180 LET CSM04_DEV=CHANNELS[5],CSM05_DEV=CHANNELS[6],CSM06_DEV=CHANNELS[7]
0200 REM " --- Iolists"
0210 SNM01: IOLIST SN0$,SN1$,SN2$,SN3$,SN4$,SN[ALL]
0300 REM 
0310 DIM SERIAL$(20)
0320 DIM SN[2]
0330 LET N0$=A0$(1,2)
0400 REM " --- Initialize Data for serial number window"
0410 LET V4$="<F3>=Lookup"
0420 PRINT @(40-INT(LEN(V4$)/2)),V4$
0430 LET V4$=""
0450 LET QUES$="Enter the Serial Number: "
0460 LET WIDTH=LEN(QUES$)+20+5,HEIGHT=3,WIN_X=INT(40-INT(WIDTH/2)),HEADING$=""
0470 LET WIN_Y=11
0480 CALL "SYC.WA",MODE,WIDTH,HEIGHT,WIN_X,WIN_Y,HEADING$,NAME0$
0490 PRINT @(1,0),'SB',QUES$,
0500 REM " --- Enter serial number"
0510 LET V0$="S",V1$="E",V2$="",V3$="",V0=20,V1=LEN(QUES$)+2,V2=1
0530 GOSUB 7000
0535 IF V3=4 THEN GOTO 9900
0540 REM NEED LOOKUP HERE!@!!!!!!!!!!!!!!!!!!!!!
0550 LET SERIAL$(1)=V$
0560 FIND (SNM01_DEV,KEY=SERIAL$,DOM=0500)IOL=SNM01
0570 CALL "SYC.WD",ERR=0571,NAME0$
0580 PRINT @(0,22),'CL',
0600 REM " --- Initialize Data"
0640 LET WIDTH=78,HEIGHT=12,WIN_X=1,WIN_Y=11,HEADING$="Serial Number Information"
0700 REM 
0710 CALL "SYC.WA",MODE,WIDTH,HEIGHT,WIN_X,WIN_Y,HEADING$,NAME$
0720 PRINT 'SB',@(9,0),"Product: ",@(58),"Active: ",@(8,1),"Platform: ",@(45),"Original Sales Date: ",@(8,2),"OS Level: ",@(0,3),"Product Revision: ",@(42),"Purchasing Customer: ",@(4,4),"License Type: ",@(6,5),"Media Type: ",@(11,6),"Users: "
0740 PRINT 'SF'
1000 REM " --- Get descriptions"
1100 REM " --- Product ID"
1110 DIM PROD_DESC$(30)
1120 LET PROD_DESC$(1)="** Not on file **"
1130 FIND (CSM01_DEV,KEY=N0$+SN2$(1,3),DOM=1131)*,PROD_DESC$
1140 LET PROD_DESC$=PROD_DESC$(1,15)
1200 REM " --- Platform ID"
1210 DIM PLAT_DESC$(30)
1220 LET PLAT_DESC$(1)="** Not on file **"
1230 FIND (CSM02_DEV,KEY=N0$+SN2$(4,3),DOM=1231)*,PLAT_DESC$
1240 LET PLAT_DESC$=PLAT_DESC$(1,15)
1300 REM " --- OS Level"
1310 DIM OSL_DESC$(30)
1320 LET OSL_DESC$(1)="** Not on file **"
1330 FIND (CSM03_DEV,KEY=N0$+SN2$(7,3),DOM=1331)*,OSL_DESC$
1340 LET OSL_DESC$=OSL_DESC$(1,15)
1400 REM " --- Product Revision ID"
1410 DIM PREV_DESC$(30)
1420 LET PREV_DESC$(1)="** Not on file **"
1430 FIND (CSM04_DEV,KEY=N0$+SN2$(10,3),DOM=1431)*,PREV_DESC$
1440 LET PREV_DESC$=PREV_DESC$(1,15)
1500 REM " --- License Type ID"
1510 DIM LIC_DESC$(30)
1520 LET LIC_DESC$(1)="** Not on file **"
1530 FIND (CSM05_DEV,KEY=N0$+SN2$(13,3),DOM=1531)*,LIC_DESC$
1540 LET LIC_DESC$=LIC_DESC$(1,15)
1600 REM " --- Media Type ID"
1610 DIM MED_DESC$(30)
1620 LET MED_DESC$(1)="** Not on file **"
1630 FIND (CSM06_DEV,KEY=N0$+SN2$(16,3),DOM=1631)*,MED_DESC$
1640 LET MED_DESC$=MED_DESC$(1,15)
1700 REM " --- Customer Name & address"
1720 FIND (ARM01_DEV,KEY=N0$+SN3$(5,6),DOM=1721)CUST0$,CUST1$
1900 GOSUB 5000
4000 REM " --- Options"
4010 IF WHERE$="H" THEN LET V4$="Create an Order? " ELSE LET V4$="Create a Line? "
4020 LET V0$="Y",V1$="CE",V2$="",V3$="",V0=1,V1=FNV1(V4$,WIDTH),V2=HEIGHT-2
4040 GOSUB 7000
4050 IF V3=2 THEN GOTO 1000
4060 IF V$="N" THEN LET SERIAL$="" ELSE LET A0$(5,6)=SN3$(5,6)
4100 CALL "SYC.WD",NAME$
4190 GOTO 9900
5000 REM " --- Print Here"
5010 PRINT @(18,0),SN2$(1,3),@(22),PROD_DESC$,@(66),SN3$(1,1)
5020 PRINT @(18,1),SN2$(4,3),@(22),PLAT_DESC$,@(66),FNB$(SN3$(2,3))
5030 PRINT @(18,2),SN2$(7,3),@(22),OSL_DESC$,
5040 PRINT @(18,3),SN2$(10,3),@(22),PREV_DESC$,@(64),FNF$(SN3$(5,CUSTLEN),CUSTMASK$)
5050 PRINT @(18,4),SN2$(13,3),@(22),LIC_DESC$
5060 PRINT @(18,5),SN2$(16,3),@(22),MED_DESC$
5070 PRINT @(18,6),SN[0]:"###"
5080 GOSUB DISPLAY_ADDRESS
5090 RETURN 
5200 REM " --- Display Customer Address"
5205 DISPLAY_ADDRESS: 
5210 LET WIDTH_IN=24,LINES_IN=3,ZIP_LEN=9,WIDTH_OUT=24,ADDRESS$=CUST1$(31,WIDTH_IN*LINES_IN+ZIP_LEN)
5220 CALL "SYC.AA",ADDRESS$,WIDTH_IN,LINES_IN,ZIP_LEN,WIDTH_OUT
5230 PRINT @(44,4),CUST1$(1,30),@(44,5),ADDRESS$(1,WIDTH_OUT),@(44,6),ADDRESS$(1+WIDTH_OUT,WIDTH_OUT),@(44,7),ADDRESS$(1+WIDTH_OUT*2,WIDTH_OUT)+" ",FNP$(ADDRESS$(1+WIDTH_OUT*3))
5240 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8060 DEF FNV1(Q$,Q)=FNC(Q$,Q)+LEN(Q$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to Caller"
9910 CALL "SYC.WD",ERR=9911,NAME$
9915 CALL "SYC.WD",ERR=9916,NAME0$
9920 CALL "SYC.WB","0",1
9930 FOR I=1 TO 7
9940 CLOSE (CHANNELS[I],ERR=9941)
9950 NEXT I
9970 PRINT @(0,20),
9980 EXIT 
9999 END
