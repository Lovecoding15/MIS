0010 REM "IVX - Copy Warehouse Records to New Warehouse
0020 REM "Program IVX.DA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0060 BEGIN 
0080 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=6
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="IVM-01",FILES$[2]="IVM-02",FILES$[3]="IVM-02"
0130 LET FILES$[4]="IVM-03",FILES$[5]="IVM-10",FILES$[6]="SYS-01"
0160 CALL "SYC.DA",1,1,6,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0180 LET IVM01_DEV=CHANNELS[1],IVM02_DEV1=CHANNELS[2],IVM02_DEV2=CHANNELS[3]
0185 LET IVM03_DEV=CHANNELS[4],IVM10_DEV=CHANNELS[5],SYS01_DEV=CHANNELS[6]
0200 REM " --- IOLists
0210 IVM02A: IOLIST A0$,A1$,A2$,A[ALL]
0220 IVM10C: IOLIST X$
0230 IVM01A: IOLIST B0$,B1$,B2$,B3$,B4$,B5$,B6$,B[ALL]
0235 IVM03B: IOLIST C0$
0240 IVM03C: IOLIST C0$
0245 IVM03F: IOLIST C0$
0250 IVM03G: IOLIST C0$
0270 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0280 IVS01A: IOLIST X$,X$,P2$
0400 REM " --- Parameters"
0405 DIM P[1]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="IV",N4$=F5$
0440 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0450 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P2$(5,1))
0500 REM " --- Init Data"
0505 PRECISION P[1]
0510 DIM A[20],B[12]
0700 REM " --- Background"
0710 CALL "SYC.WC",1,0,80,0,0,4,0
0720 CALL "SYC.WC",1,0,80,0,0,6,0
0740 PRINT 'SB',@(24,3),"From Warehouse:",@(26,5),"To Warehouse:",'SF',
0750 DIM MESS$[8]
0760 LET MESS$[0]="This program will create warehouse records for those items that have not",MESS$[1]="already been set up in the new warehouse. The new records will zero out",MESS$[2]="the Physical Count, Landed Cost, Last Purchase Cost, On Hand, On Order",MESS$[3]="and Committed Quantity numeric fields. All other numeric fields from the",MESS$[4]="old warehouse will be copied. Of the remaining character fields, the",MESS$[5]="Cycle Code, Distribution Code, Buyer Code, Restocking Vendor, Price"
0770 LET MESS$[6]="Codes, ABC, EOQ, Order Point and Safety Stock Codes will be copied from",MESS$[7]="the old warehouse. All other character fields will be blanked out.",MESS$[8]="                <Enter> to continue."
0780 CALL "SYC.XA",3,MESS$[ALL],8,-1,-1,V$,V3
0790 PRINT 'SF',
1000 REM " --- From Warehouse"
1005 PRINT 'CF',
1020 LET V0$="S",V1$="CE",V2$=R0$,V3$="",V4$="Enter A Valid Warehouse To Copy From (<F3>=Lookup)",V0=2,V1=40,V2=3,I0=0
1030 GOSUB 7000
1040 IF V3=4 THEN GOTO 4000
1050 IF V3=3 THEN CALL "IVC.LK",3,V1,V2,V$
1055 LET V$=V$+"  ",V$=V$(1,2)
1060 FIND (IVM10_DEV,KEY=N0$+"C"+V$,DOM=1000)IOL=IVM10C
1070 PRINT @(40,3),V$," ",X$(6,24),
1080 LET R0$=V$
1090 GOTO 3900
1100 REM " --- To Warehouse"
1110 LET V0$="S",V1$="CE",V2$=R1$,V3$="",V4$="Enter A Valid Warehouse To Copy To (<F3>=Lookup)",V0=2,V1=40,V2=5
1120 GOSUB 7000
1125 IF V3=2 THEN GOTO 1000
1130 IF V3=4 THEN GOTO 4000
1135 IF V3=3 THEN CALL "IVC.LK",3,V1,V2,V$
1140 LET V$=V$+"  ",V$=V$(1,2)
1145 IF V$<>R0$ THEN GOTO 1175
1150 LET V4$="From And To Warehouse Cannot Be The Same (<Enter>=Continue)"
1155 LET V0$="S",V1$="CE",V2$="",V3$="",V0=1,V1=FNV(V4$),V2=22
1160 GOSUB 7000
1170 GOTO 1100
1175 FIND (IVM10_DEV,KEY=N0$+"C"+V$,DOM=1100)IOL=IVM10C
1180 PRINT @(40,5),V$," ",X$(6,24),
1185 LET R1$=V$
1190 GOTO 3900
1200 REM " --- Options"
1210 CALL "SYC.YN",1,"Is The Above Information Correct",1,V$,V3
1220 ON V3 GOTO 1230,1200,1200,1200,4000
1290 ON POS(V$="YN") GOTO 1200,1300,1000
2000 REM " --- Copy Loop"
2010 CALL "SYC.NB","Processing",P[0],COLUMN
2090 READ (IVM02_DEV1,KEY=N0$+R0$,DOM=2100)
2100 REM " --- Main Read"
2110 LET K$=KEY(IVM02_DEV1,END=4000)
2120 IF POS(N0$+R0$=K$)<>1 THEN GOTO 4000
2130 READ (IVM02_DEV1,KEY=K$)IOL=IVM02A
2140 PRINT @(COLUMN,11),A0$(5,P[0]),
2150 LET K1$=K$(1,2)+R1$+K$(5),A0$=A0$(1,2)+R1$+A0$(5)
2160 LET A1$(1,10)="",A1$(15,4)="N",A1$(28,24)=""
2170 LET A[0]=0,A[1]=0,A[2]=0,A[8]=0,A[15]=0,A[16]=0
2180 WRITE (IVM02_DEV2,KEY=K1$,DOM=2100)IOL=IVM02A
2200 READ (IVM01_DEV,KEY=A0$(1,2)+A0$(5),DOM=2100)IOL=IVM01A
2300 REM " --- X-Ref"
2310 LET C0$=A0$(1,2)+"B"+R1$+A1$(11,2)+A1$(1,10)+A0$(5,20)
2320 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03B
2330 LET C0$=A0$(1,2)+"C"+R1$+B2$(1,3)+A0$(5,20)
2340 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03C
2345 IF B2$(24,1)="I" THEN GOTO 2360
2350 LET C0$=A0$(1,2)+"F"+A1$(19,9)+B2$(1,3)+A0$(5,20)+R1$
2360 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03F
2370 LET C0$=A0$(1,2)+"G"+A0$(5,20)+R1$
2380 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03G
2390 GOTO 2100
3900 REM " --- Next Field"
3910 IF V3<>2 THEN GOTO 3940
3920 IF I0>0 THEN LET I0=I0-1
3930 GOTO 3950
3940 LET I0=I0+1
3960 ON I0 GOTO 1000,1100,1200,2000,3990
3990 LET I0=K0
4000 REM " --- End"
4090 GOTO 9900
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8095 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
