0010 REM "POR - Purchase Order Cash Requirements Report (Print Overlay)
0020 REM "Program POR.MB 
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists
0210 APM01A: IOLIST C0$(1),C1$(1)
0230 APM10C: IOLIST D0$(1),*,DUEDAYS
0290 POE02A: IOLIST A0$(1),A1$(1),A2$,A3$,A[ALL]
0300 POE12A: IOLIST B0$(1),B1$(1),B2$(1),B3$(1),B4$(1),B5$,B6$,B[ALL]
0310 POM02A: IOLIST S0$(1),S1$(1)
0500 REM " --- Init Data
0510 PRECISION IVPRECISION
0520 DIM A0$(15),A1$(160),A[8],POTOT[5],VENDTOT[5],GRANDTOT[5],VENDOR$(6)
0530 LET PRINTVTOT$="N"
0600 REM " --- Headings and print positions
0610 LET HEADINGS=5
0620 DIM HEADINGS$[HEADINGS],O[11]
0630 LET WIDTH=132,PAGE=0,L9=59,L=L9+1
0640 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$
0650 LET HEADINGS$[2]=SORD_DESC$+" Report Starting From "
0660 IF DATEFROM$=FILL(6) THEN LET HEADINGS$[2]=HEADINGS$[2]+"First Date" ELSE LET HEADINGS$[2]=HEADINGS$[2]+FNB6$(DATEFROM$)
0670 LET HEADINGS$[3]="For Warehouse "+WHSE$+" "+CVS(WHSENAME$,2)
0675 POSITIONS: 
0680 LET O[1]=O[0]+7,O[2]=O[1]+4,O[3]=O[2]+21,O[4]=O[3]+9
0690 LET O[5]=O[4]+9,O[6]=O[5]+9,O[7]=O[6]+M1+1,O[8]=O[7]+M1+1
0700 LET O[9]=O[8]+M1+1,O[10]=O[9]+M1+1,O[11]=O[10]+M1+1
0710 IF O[11]+12<WIDTH THEN GOTO 0950
0720 IF O[11]+12<WIDTH THEN GOTO 0950
0730 LET O[11]=WIDTH-M1,O[10]=O[11]-M1-1,O[9]=O[10]-M1,O[8]=O[9]-M1
0740 LET O[7]=O[8]-M1,O[6]=O[7]-M1
0950 REM " --- Position files
0960 CALL "SYC.GA",7,1,"","",STATUS
0970 IF STATUS THEN GOTO 9900
0980 CALL "SYC.NB","Printing",14,COLUMN
1000 REM " --- Init read
1010 READ (POE02_DEV,KEY=N0$,DOM=READHEADERS)
1100 REM " --- Read through PO headers
1110 READHEADERS: 
1120 LET K$=KEY(POE02_DEV,END=4000)
1130 IF K$(1,2)<>N0$ THEN GOTO 4000
1140 READ (POE02_DEV,KEY=K$)IOL=POE02A
1400 REM " --- Init detail file
1410 READDETAIL: 
1420 DIM B0$(18),B1$(48),B2$(32),B3$(22),B4$(40),B[12]
1430 LET HEADPRINTED$="N"
1440 READ (POE12_DEV,KEY=A0$(1,15),DOM=READ_POE12)
1500 REM " --- Read through detail records
1510 READ_POE12: 
1520 LET K11$=KEY(POE12_DEV,END=DONE_DETAIL)
1530 IF K11$(1,15)<>A0$ THEN GOTO DONE_DETAIL
1540 READ (POE12_DEV,KEY=K11$)IOL=POE12A
1550 REM " --- Test PO Detail for warehouse & line type 
1560 IF B3$(1,2)<>WHSE$ THEN GOTO NEXTDETAIL
1570 GOSUB GETLINETYPE
1580 IF POS(LINETYPE$="SON")=0 THEN GOTO NEXTDETAIL
1600 REM " --- Detail passed, so print header if nec & print detail
1610 PRINT @(COLUMN,11),FNF$(A0$(3,VENDLEN),VENDOMASK$)," ",A0$(9,7)
1615 REM " --- Header rec prints if at least one detail passes date & whse
1620 IF HEADPRINTED$="Y" THEN GOTO 1650
1630 GOSUB TESTBREAKS
1640 LET HEADPRINTED$="Y"
1650 GOSUB PRINTDETAIL
1700 REM " --- Accumulate totals; get next detail
1705 NEXTDETAIL: 
1730 LET POTOT[PRNTCOL]=POTOT[PRNTCOL]+AMOUNT,POTOT[5]=POTOT[5]+AMOUNT
1740 LET VENDTOT[PRNTCOL]=VENDTOT[PRNTCOL]+AMOUNT,VENDTOT[5]=VENDTOT[5]+AMOUNT
1750 LET GRANDTOT[PRNTCOL]=GRANDTOT[PRNTCOL]+AMOUNT,GRANDTOT[5]=GRANDTOT[5]+AMOUNT
1780 LET AMOUNT=0
1790 GOTO READ_POE12
1800 REM " --- Done w/detail for this PO
1810 DONE_DETAIL: 
1820 IF HEADPRINTED$="Y" THEN GOSUB POTOTALS
1900 REM " --- Loop up for next header record
1910 NEXTHEADER: 
1920 GOTO READHEADERS
4000 REM " --- All Done
4020 IF L+2>L9 THEN GOSUB 5000
4030 GOSUB VENDTOTALS
4040 PRINT (7)@(40),"Total For Report",
4050 FOR COL=0 TO 5
4060 PRINT (7)@(O[COL+6]),GRANDTOT[COL]:M1$,
4070 NEXT COL
4080 PRINT (7)""
4090 GOTO 9900
4100 REM " --- Print Detail Subroutine
4105 PRINTDETAIL: 
4110 REM " --- Set up variables
4120 DIM DATEREQ$(8),DATEPROM$(8),NOTB4DATE$(8)
4130 LET ITEMNUM$=B3$(3,20),MEMO$=B4$(1,20)
4140 IF B1$(3,6)<>FILL(6) THEN LET DATEREQ$=FNB6$(B1$(3,6))
4150 IF B1$(9,6)<>FILL(6) THEN LET DATEPROM$=FNB6$(B1$(9,6))
4160 IF B1$(15,6)<>FILL(6) THEN LET NOTB4DATE$=FNB6$(B1$(15,6))
4360 REM " --- Get the columns in which to print
4380 GOSUB WHICHCOLUMN
4400 REM " --- Figure amount to print
4420 LET QTY=B[3]-B[7],AMOUNT=QTY*B[1]
4500 REM " --- Print detail line
4510 IF SUMMORDET$<>"D" THEN GOTO DONE_PRINTDETAIL
4530 DIM PLINE$(132)
4540 LET PLINE$(O[1]+1)=B0$(16,3)+" "
4550 IF LINETYPE$="O" THEN LET PLINE$(O[2]+1)=MEMO$ ELSE LET PLINE$(O[2]+1)=ITEMNUM$(1,ITEMLEN)
4670 IF L+1>L9 THEN GOSUB 5000
4680 PRINT (7)PLINE$,@(O[3]),DATEREQ$,@(O[4]),DATEPROM$,@(O[5]),NOTB4DATE$,
4690 PRINT (7)@(O[PRNTCOL+6]),AMOUNT:M1$,@(O[11]),AMOUNT:M1$
4700 LET L=L+1
4990 DONE_PRINTDETAIL: 
4995 RETURN 
5000 REM " --- Heading
5010 LET L=HEADINGS+1
5030 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5040 IF STATUS>0 THEN EXITTO 9900
5060 GOSUB CALC_HEADS
5070 FOR COL=1 TO 4
5080 IF PERDATEF$[COL]<>FILL(6) THEN PRINT (7)@(O[COL+6]+M1-9),FNB6$(PERDATEF$[COL]),
5090 NEXT COL
5100 PRINT (7)""
5110 PRINT (7)@(O[0]),"Vendor",@(O[3]),"Date",@(O[4]),"Date",@(O[5]),"Not",@(O[7]+M1-7),"Thru",@(O[8]+M1-7),"Thru",@(O[9]+M1-7),"Thru",@(O[10]+M1-7),"Thru"
5115 PRINT (7)@(O[0]),"Number",@(O[1]),"Name",@(O[3]),"Required",@(O[4]),"Promised",@(O[5]),"Before",@(O[6]+M1-9),"Past Due",
5120 FOR COL=1 TO 4
5130 IF PERDATET$[COL]<>FILL(6) THEN PRINT (7)@(O[COL+6]+M1-9),FNB6$(PERDATET$[COL]),
5140 NEXT COL
5150 PRINT (7)@(O[11]+M1-6),"Total"
5160 PRINT (7)""
5180 LET L=L+4
5190 RETURN 
5200 REM " --- Calculate from/thru date column headings
5205 CALC_HEADS: 
5210 DIM PERDATEF$[4],PERDATET$[4]
5220 IF PERORDAYS$="D" THEN GOTO DAYSHEADINGS
5230 LET YEARFROM=FNYY_YEAR(DATEFROM$(1,2))
5240 FOR PERIODCNT=1 TO TOTALPERIODS
5250 IF DATEFROM$(3)>PERENDDATE$(PERIODCNT*4-3,4) THEN GOTO 5295
5260 IF PERIODCNT=1 THEN IF DATEFROM$(3)>PERENDDATE$(TOTALPERIODS*4-3,4) THEN EXITTO GETCURPER
5270 IF PERIODCNT>1 THEN IF DATEFROM$(3)>PERENDDATE$((PERIODCNT-1)*4-3,4) THEN EXITTO GETCURPER
5280 IF PERIODCNT=1 THEN IF PERENDDATE$(PERIODCNT*4-3,4)<PERENDDATE$(TOTALPERIODS*4-3,4) THEN EXITTO GETCURPER
5290 IF PERIODCNT>1 THEN IF PERENDDATE$(PERIODCNT*4-3,4)<PERENDDATE$((PERIODCNT-1)*4-3,4) THEN EXITTO GETCURPER
5295 NEXT PERIODCNT
5300 REM " --- Get Current Period
5305 GETCURPER: 
5310 IF DATEFROM$(3,2)<PERENDDATE$(1,2) THEN LET YEARFROM=YEARFROM-1
5320 LET V=PERIODCNT,V9=YEARFROM
5330 LET COL=1; REM "Date from/thru column heading count; one-based
5340 CALL "SYC.PA",SYS01_DEV,V,V9,V0$,V9$,STATUS
5350 LET PERDATEF$[COL]=FNYY_YY21$(FNM$(FNC$(V0$))),PERDATET$[COL]=FNYY_YY21$(FNM$(FNC$(V9$)))
5400 REM " --- Get Next Periods
5410 FOR Y=1 TO 3
5420 LET V=PERIODCNT+Y,V9=YEARFROM,COL=COL+1
5430 IF V>TOTALPERIODS THEN LET V=V-TOTALPERIODS,V9=V9+1
5440 CALL "SYC.PA",SYS01_DEV,V,V9,V0$,V9$,STATUS
5450 LET PERDATEF$[COL]=FNYY_YY21$(FNM$(FNC$(V0$))),PERDATET$[COL]=FNYY_YY21$(FNM$(FNC$(V9$)))
5460 IF PERDATEF$[COL]<PERDATEF$[COL-1] THEN LET PERDATEF$[COL](5,2)=STR(NUM(PERDATEF$[COL](5,2))+1)
5470 IF PERDATET$[COL]<PERDATET$[COL-1] THEN LET PERDATET$[COL](5,2)=STR(NUM(PERDATET$[COL](5,2))+1)
5480 NEXT Y
5490 GOTO 5680
5500 REM " --- Headings calculated w/user-entered days
5505 DAYSHEADINGS: 
5510 LET V$=DATEFROM$,V=NUM_DAYS,V1$=""
5520 FOR COL=1 TO 4
5530 CALL "SYC.CA",V$,V1$,V
5540 LET PERDATEF$[COL]=V$,PERDATET$[COL]=V1$
5550 LET V$=V1$,V1$=""
5555 REM "Get day after date thru for next column's date from
5560 CALL "SYC.CA",V$,V1$,1
5565 LET V$=V1$,V1$="",V=NUM_DAYS
5570 NEXT COL
5680 LET PERDATET$[4]="999999"
5690 RETURN 
6000 REM " --- Test for Breaks
6005 TESTBREAKS: 
6010 IF A0$(3,6)=VENDOR$ THEN GOTO TESTPO
6020 IF PRINTVTOT$="Y" THEN GOSUB VENDTOTALS
6030 GOSUB NEWVENDOR
6040 GOSUB NEWPO
6050 GOTO 6090
6060 TESTPO: 
6070 IF A0$(9,7)<>PONUM$ THEN GOSUB NEWPO
6090 RETURN 
6100 REM " --- New Vendor
6110 NEWVENDOR: 
6120 DIM C0$(8),C1$(195),VENDTOT[5]
6130 LET VENDNAME$="Not On File",VENDOR$=A0$(3,6)
6140 LET PRINTVTOT$="Y"
6150 FIND (APM01_DEV,KEY=N0$+VENDOR$,DOM=6170)IOL=APM01A
6160 LET VENDNAME$=C1$(1,30)
6170 IF L+2>L9 THEN GOSUB 5000
6180 PRINT (7)@(0),FNF$(VENDOR$(1,VENDLEN),VENDOMASK$),@(O[1]),VENDNAME$,
6200 RETURN 
6300 REM " --- New PO
6305 NEWPO: 
6310 DIM POTOT[5]
6320 LET PONUM$=A0$(9,7)
6330 LET TERMSDESC$="Not On File"
6340 DIM D0$(26),R0$(10),R1$(160),X0$(160)
6345 LET D0$(26,1)="D",DUEDAYS=0
6350 FIND (APM10_DEV,KEY=N0$+"C"+A1$(38,2),DOM=6370)IOL=APM10C
6360 LET TERMSDESC$=D0$(6,20)
6370 LET TYPE$=D0$(26,1)
6375 IF L+2>L9 THEN GOSUB 5000
6380 PRINT (7)@(O[4]-1),"PO #: ",PONUM$," Terms ",TERMSDESC$
6390 LET L=L+1
6400 RETURN 
6500 REM " --- Print Vendor total
6510 VENDTOTALS: 
6520 IF L+2>L9 THEN GOSUB 5000
6530 PRINT (7)@(33),"Total For Vendor ",FNF$(VENDOR$(1,VENDLEN),VENDOMASK$),
6540 FOR COL=0 TO 5
6550 PRINT (7)@(O[COL+6]),VENDTOT[COL]:M1$,
6560 NEXT COL
6570 PRINT (7)""
6580 LET L=L+2
6590 RETURN 
6600 REM " --- Print Purchase Order total
6610 POTOTALS: 
6620 IF L+2>L9 THEN GOSUB 5000
6630 PRINT (7)@(34),"Total For PO # ",PONUM$,
6640 FOR COL=0 TO 5
6650 PRINT (7)@(O[COL+6]),POTOT[COL]:M1$,
6660 NEXT COL
6670 IF SUMMORDET$="D" THEN PRINT (7)'LF'; LET L=L+2
6680 IF SUMMORDET$="S" THEN PRINT (7)""; LET L=L+1
6690 RETURN 
6700 REM " --- Get Line Type
6705 GETLINETYPE: 
6710 DIM S0$(4),S1$(32)
6720 LET LINETYPE$="N"
6730 FIND (POM02_DEV,KEY=B0$(1,2)+B1$(1,2),DOM=6790)IOL=POM02A
6740 LET LINETYPE$=S1$(21,1)
6790 RETURN 
6800 REM " --- Determine which column to print amt in
6802 REM "     PRNTCOL=0=>Past Due....PRNTCOL=4=>Last from/thru date column
6805 WHICHCOLUMN: 
6807 REM " --- Calc date based on terms' due days
6810 LET FROM$=B1$(3,6),DAYS=DUEDAYS,CALCD_DATE$=""
6815 IF TYPE$<>"D" THEN LET FROM$=FND$(FNN$(FROM$))
6820 CALL "SYC.CD",TYPE$,FROM$,DAYS,CALCD_DATE$,STATUS
6825 IF LEN(CALCD_DATE$)=3 THEN LET CALCD_DATE$=FNYY_YY21$(FNM$(FNC$(CALCD_DATE$)))
6830 LET PRNTCOL=0
6840 IF CALCD_DATE$=FILL(6) OR CALCD_DATE$<PERDATEF$[1] THEN GOTO 6890
6850 FOR PRNTCOL=1 TO 4
6860 IF CALCD_DATE$<=PERDATET$[PRNTCOL] THEN EXITTO 6890
6870 NEXT PRNTCOL
6890 RETURN 
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8025 DEF FNB6$(Q$)=Q$(3,2)+"/"+Q$(5,2)+"/"+FNYY21_YY$(Q$(1,2))
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8060 DEF FNM$(Q$)=Q$(5,2)+Q$(1,4)
8070 DEF FNN$(Q$)=Q$(3,4)+Q$(1,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8095 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
