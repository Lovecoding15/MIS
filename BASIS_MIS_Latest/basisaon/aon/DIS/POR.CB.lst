0010 REM "POR - Quality Assurance Receipt Register (Report Overlay)"
0020 REM "Program POR.CB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0170 CALL "SYC.GA",7,1,"","",STATUS
0180 IF STATUS THEN GOTO 9900
0200 REM " --- IOLIST's"
0210 POE03A: IOLIST A0$(1),A1$(1),A2$,A3$,A[ALL]
0220 APM01A: IOLIST B0$(1),B1$(1)
0230 IVM01A: IOLIST C0$(1),C1$(1),C2$(1)
0240 POE63A: IOLIST D0$(1),D1$(1),D2$,D[ALL]
0310 POE13A: IOLIST W0$(1),W1$(1),W2$(1),W3$(1),W4$(1),W5$,W6$,W[ALL]
0315 POE23A: IOLIST L0$(1),L1$(1),L2$,L[ALL]
0320 POM02A: IOLIST Y0$(1),Y1$(1),Y2$(1)
0330 POM03A: IOLIST R0$(1),R1$(1)
0390 POW13A: IOLIST X0$(1)
0500 REM " --- Initializations"
0505 PRECISION I[1]
0510 DIM A0$(22),A1$(160),A[8],O[14],C0$(22),C1$(60),C2$(64),X0$(25)
0520 DIM W0$(25),W1$(48),W2$(32),W3$(22),W4$(40),W[12],DESCRIPTION$(40)
0525 DIM HEADINGS$[5],TOTALS[4],RECEIPT[4],VENDOR[4],REPORT[4]
0530 DIM Y0$(4),Y1$(32),R0$(5),R1$(32),L0$(28),L1$(20),L[1],LINE[4]
0540 DIM D0$(28),D1$(32),D[6],DIFQTY[99],DIFTYPE$[99],DIFKEY$[99]
0560 LET M1$=I6$,M2$=I7$,M3$=I8$,M1=LEN(M1$),M2=LEN(M2$),M3=LEN(M3$),WIDTH=132
0565 LET PAGE=0,L9=59,L=L9+1,CLOCK$="",WHEN$=F0$(7,3),HEADINGS=5,DONE=0
0570 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$,NF$="(Not On File)",NUMBER=0
0580 LET LSDESC$="Serial Nbr",DIF=0,X1=15,X2=12,X3=12,MS$="000-"
0590 IF I3$(17,1)="L" THEN LET LSDESC$="Lot Nbr"
0600 REM " --- Resize masks"
0610 LET X=M1+(M2*4)+M3+I[0]+52
0620 IF X<=WIDTH THEN GOTO 0700
0630 CALL "SYC.RM",M1$,M1,10,X1
0640 CALL "SYC.RM",M2$,M2,9,X2
0650 CALL "SYC.RM",M3$,M3,6,X3
0660 LET X1=X1-1,X2=X2-1,X3=X3-1
0690 GOTO 0600
0700 REM " --- Background"
0710 CALL "SYC.NB","Printing",M0+8,COLUMN
0800 REM " --- Print positions"
0810 DIM H1$(WIDTH),H2$(WIDTH),QH$(M2*4,"-")
0820 LET O[14]=WIDTH-M1,O[13]=O[14]-M3,O[12]=O[13]-M2,O[11]=O[12]-M2
0830 LET O[10]=O[11]-M2,O[9]=O[10]-M2,O[8]=O[9]-3,O[7]=O[8]-11,O[6]=O[7]-9
0840 LET O[5]=O[6]-9,O[4]=O[5]-9,O[1]=4,O[2]=7,O[3]=10
0850 LET QH$(FNC(M2*4,10),10)=" Quantity ",X1$="First",X2$="Last"
0860 IF BEGVEND$<>"" THEN LET X1$=FVENDOR$
0865 IF ENDVEND$<>"" THEN LET X2$=TVENDOR$
0870 LET H1$(1)="From Vendor: "+X1$,H2$(1)="  To Vendor: "+X2$
0875 LET X1$="First",X2$="Last"
0880 IF BEGREC$<>"" THEN LET X1$=BEGREC$
0885 IF ENDREC$<>"" THEN LET X2$=ENDREC$
0890 LET X1$="From Receiver: "+X1$,X2$="  To Receiver: "+X2$
0895 LET X=MAX(LEN(X1$),LEN(X2$)),H1$(FNC(WIDTH,X))=X1$,H2$(FNC(WIDTH,X))=X2$
0900 LET X1$="First",X2$="Last"
0905 IF BEGDATE$<>"" THEN LET X1$=FNB6$(BEGDATE$)
0910 IF ENDDATE$<>"" THEN LET X2$=FNB6$(ENDDATE$)
0915 LET X=MAX(LEN(X1$),LEN(X2$))+18,H1$(WIDTH-X)="From Receipt Date: "+X1$
0920 LET H2$(WIDTH-X)="  To Receipt Date: "+X2$
0925 LET HEADINGS$[3]=H1$,HEADINGS$[4]=H2$
0950 REM " --- Position file"
0980 LET START$=N0$+BEGVEND$
0990 READ (POE03_DEV,KEY=START$,DOM=1000)
1000 REM " --- Read next header"
1010 LET K$=KEY(POE03_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 READ (POE03_DEV)IOL=POE03A
1100 REM " --- Range tests"
1110 IF ENDVEND$<>"" THEN IF A0$(3,6)>ENDVEND$ THEN GOTO 4000
1120 IF BEGDATE$<>"" THEN IF A1$(29,6)<BEGDATE$ THEN GOTO 3950
1130 IF ENDDATE$<>"" THEN IF A1$(29,6)>ENDDATE$ THEN GOTO 3950
1140 IF BEGREC$<>"" THEN IF A0$(9,7)<BEGREC$ THEN GOTO 3950
1150 IF ENDREC$<>"" THEN IF A0$(9,7)>ENDREC$ THEN GOTO 3950
1160 LET LINES=0,STATUS=11
1190 READ (POE13_DEV,KEY=A0$,DOM=1200)
1200 REM " --- See if any line items should be updated"
1210 LET K$=KEY(POE13_DEV,END=1300)
1220 IF POS(A0$=K$)<>1 THEN GOTO 1300
1230 READ (POE13_DEV)IOL=POE13A
1240 LET LINES=LINES+1
1250 IF W1$(41,1)<>"Y" THEN GOTO 1200
1260 LET STATUS=0
1300 REM " --- Any line items to be updated?"
1310 IF LINES=0 THEN GOTO 1400
1320 IF STATUS=0 THEN GOTO 1400
1390 GOTO 3950
1500 REM " --- Header fields"
1510 DIM RECEIPT[4]
1520 PRINT @(COLUMN,11),FNF$(A0$(3,VENDLEN),M0$)," ",A0$(9,7),
1530 LET PACKLIST$="",NUMBER=NUMBER+1
1540 IF FNP$(A1$(119,15))<>"" THEN LET PACKLIST$="Packing List: "+A1$(119,15)
1700 REM " --- Level break?"
1710 IF T0$<>A0$(3,6) THEN GOSUB 6000
1800 REM " --- Print header information"
1810 IF L+5>L9 THEN GOSUB 5000 ELSE GOSUB 5200
1900 REM " --- Position detail file"
1990 READ (POE13_DEV,KEY=A0$,DOM=2000)
2000 REM " --- Read next detail record"
2010 DIM LINE[4]
2020 LET K$=KEY(POE13_DEV,END=3900)
2030 IF POS(A0$=K$)<>1 THEN GOTO 3900
2040 READ (POE13_DEV)IOL=POE13A
2050 IF W1$(41,1)<>"Y" THEN GOTO 3800
2100 REM " --- Read line code"
2110 IF Y0$(1,4)=N0$+W1$(1,2) THEN GOTO 2200
2120 LET Y0$(1,4)=N0$+W1$(1,2),Y1$(1)=""
2130 FIND (POM02_DEV,KEY=Y0$,DOM=3800)IOL=POM02A
2200 REM " --- Calculate extension"
2210 LET QTY=W[5],EXTENSION=0
2220 IF Y1$(21,1)="O" THEN LET QTY=1
2230 PRECISION 2
2240 LET EXTENSION=W[1]*QTY
2250 PRECISION I[1]
2260 LET LINE[0]=W[3],LINE[1]=W[4],LINE[2]=W[5],LINE[3]=W[6],LINE[4]=EXTENSION
2300 REM " --- Format remaining fields"
2310 LET BEFORE$="",REQUIRED$="",PROMISED$="",WO$=""
2320 IF FNP$(W1$(3,6))<>"" THEN LET REQUIRED$=FNB6$(W1$(3,6))
2330 IF FNP$(W1$(9,6))<>"" THEN LET PROMISED$=FNB6$(W1$(9,6))
2340 IF FNP$(W1$(15,6))<>"" THEN LET BEFORE$=FNB6$(W1$(15,6))
2350 IF FNP$(W2$(1,10))<>"" THEN LET WO$=W2$(1,7)+"-"+W2$(8,3)
2360 LET X0$(1)=W0$
2390 WRITE (POW13_DEV,KEY=X0$)IOL=POW13A
2400 REM " --- Branch based on line code"
2490 ON POS(Y1$(21,1)="SNVMO") GOTO 3800,2500,2600,2700,2800,2900
2500 REM " --- Standard line"
2510 LET C0$(1)=N0$+W3$(3),C1$(1)="",DESCRIPTION$(1)=NF$
2520 FIND (IVM01_DEV,KEY=C0$,DOM=2530)IOL=IVM01A
2530 LET DESCRIPTION$(1)=FNITEM$(C1$,I[3],I[4],I[5])
2540 IF L+2>L9 THEN GOSUB 5000
2550 PRINT (7)@(O[0]),W0$(23,3),@(O[1]),W1$(1,2),@(O[2]),W3$(1,2),@(O[3]),W3$(3,I[0]),@(O[4]),BEFORE$,@(O[5]),REQUIRED$,@(O[6]),PROMISED$,@(O[7]),WO$,@(O[8]),W1$(22,2),@(O[9]),W[3]:M2$,@(O[10]),W[4]:M2$,@(O[11]),W[5]:M2$,@(O[12]),W[6]:M2$,@(O[13]),W[1]:M3$,@(O[14]),EXTENSION:M1$
2560 PRINT (7)@(O[3]),DESCRIPTION$
2570 LET L=L+2
2590 GOTO 3000
2600 REM " --- Non-stock line"
2610 IF L+2>L9 THEN GOSUB 5000
2620 PRINT (7)@(O[0]),W0$(23,3),@(O[1]),W1$(1,2),@(O[2]),W3$(1,2),@(O[3]),W3$(3,I[0]),@(O[4]),CODE$,@(O[8]),W1$(22,2),@(O[9]),W[3]:M2$,@(O[10]),W[4]:M2$,@(O[11]),W[5]:M2$,@(O[12]),W[6]:M2$,@(O[13]),W[1]:M3$,@(O[14]),EXTENSION:M1$
2630 PRINT (7)@(O[3]),W4$
2640 LET L=L+2
2690 GOTO 3000
2700 REM " --- Vendor part number line"
2710 IF L+1>L9 THEN GOSUB 5000
2720 PRINT (7)@(O[0]),W0$(23,3),@(O[1]),W1$(1,2),@(O[2]),W3$(1,2),@(O[3]),W3$(3)
2740 LET L=L+1
2790 GOTO 3000
2800 REM " --- Message line"
2810 IF L+1>L9 THEN GOSUB 5000
2820 PRINT (7)@(O[0]),W0$(23,3),@(O[1]),W1$(1,2),@(O[2]),W3$(1,2),@(O[3]),W4$
2840 LET L=L+1
2890 GOTO 3000
2900 REM " --- Other type line"
2910 IF L+2>L9 THEN GOSUB 5000
2920 PRINT (7)@(O[0]),W0$(23,3),@(O[1]),W1$(1,2),@(O[2]),W3$(1,2),@(O[13]),W[1]:M3$,@(O[14]),EXTENSION:M1$
2930 PRINT (7)@(O[3]),W4$
2940 LET L=L+2
3000 REM " --- Lotted/Serialized?"
3010 IF LS$="N" THEN GOTO 3400
3020 IF Y1$(21,1)<>"S" THEN GOTO 3400
3030 IF C2$(19,2)<>"YY" THEN GOTO 3400
3040 LET NEEDED=0,LASTSEQ=0
3090 READ (POE23_DEV,KEY=W0$,DOM=3100)
3100 REM " --- Read next lot/serial detail record"
3110 LET K$=KEY(POE23_DEV,END=3300)
3120 IF POS(W0$=K$)<>1 THEN GOTO 3300
3130 READ (POE23_DEV)IOL=POE23A
3140 PRECISION 2
3150 LET EXTENSION=L[0]*L[1]
3160 PRECISION I[1]
3200 REM " --- Print detail line"
3210 IF L+1>L9 THEN GOSUB 5000
3220 PRINT (7)@(O[3]),LSDESC$," ",L0$(26,3)," ",L1$(1,I[2]),@(O[10]),L[0]:M2$,@(O[11]),L[0]:M2$,@(O[13]),L[1]:M3$,@(O[14]),EXTENSION:M1$
3230 LET L=L+1,NEEDED=NEEDED+L[0],LASTSEQ=NUM(L0$(26))
3290 GOTO 3100
3300 REM " --- Enough lot/serial numbers?"
3310 IF NEEDED=W[5] THEN GOTO 3400
3320 LET TYPE$="L",QTY=W[5]-NEEDED
3330 IF NEEDED<W[5] THEN LET XLIMIT=QTY
3340 IF I3$(17,1)="L" THEN LET XLIMIT=1
3350 IF NEEDED>W[5] THEN LET XLIMIT=0
3360 GOSUB 6800
3400 REM " --- Position rejection detail file"
3410 LET NEEDED=0,LASTSEQ=0
3420 IF W[6]=0 THEN GOTO 3800
3490 READ (POE63_DEV,KEY=W0$,DOM=3500)
3500 REM " --- Read next rejection detail"
3510 LET K$=KEY(POE63_DEV,END=3700)
3520 IF POS(W0$=K$)<>1 THEN GOTO 3700
3530 READ (POE63_DEV)IOL=POE63A
3540 LET R0$(1)=N0$+D1$(1,3),R1$(1)=NF$,LASTSEQ=NUM(D0$(26,3))
3550 FIND (POM03_DEV,KEY=R0$,DOM=3560)IOL=POM03A
3570 PRECISION 2
3580 LET EXTENSION=D[0]*W[1]
3590 PRECISION I[1]
3600 REM " --- Print rejection detail"
3610 DIM RA$(22),INSPECTOR$(9)
3620 IF FNP$(D1$(4,3))<>"" THEN LET INSPECTOR$(1)="Insp: "+D1$(4,3)
3630 IF FNP$(D1$(7,15))<>"" THEN LET RA$(1)="RA #: "+D1$(7,15)
3640 IF L+1>L9 THEN GOSUB 5000
3650 PRINT (7)@(O[3]),D0$(26,3)," ",R0$(3,3)," ",R1$(1,30)," ",RA$," ",INSPECTOR$,@(O[12]),D[0]:M2$,@(O[13]),W[1]:M3$,@(O[14]),EXTENSION:M1$
3660 LET L=L+1,NEEDED=NEEDED+D[0]
3690 GOTO 3500
3700 REM " --- Loop back for next detail record"
3710 IF NEEDED=W[6] THEN GOTO 3800
3720 LET TYPE$="R",QTY=1,XLIMIT=1
3730 IF NEEDED>W[6] THEN LET XLIMIT=0
3740 GOSUB 6800
3800 REM " --- Loop back for next detail"
3810 LET RECEIPT[ALL]=RECEIPT[ALL]+LINE[ALL]
3820 LET VENDOR[ALL]=VENDOR[ALL]+LINE[ALL]
3830 LET REPORT[ALL]=REPORT[ALL]+LINE[ALL]
3890 GOTO 2000
3900 REM " --- Print receiver totals"
3910 IF L+2>L9 THEN GOSUB 5000
3920 PRINT (7)""
3930 LET TOTALS$="Total For Receiver # "+A0$(9,7)
3935 LET TOTALS[ALL]=RECEIPT[ALL],L=L+1
3940 GOSUB 6900
3950 REM " --- Loop back for next header record"
3990 GOTO 1000
4000 REM " --- All done"
4010 LET DONE=1
4020 GOSUB 6000
4030 LET TOTALS$="Total For Register",TOTALS[ALL]=REPORT[ALL]
4040 GOSUB 6900
4200 REM " --- Any lot/serial number or rejection code differences?"
4210 IF DIF=0 THEN GOTO 4900
4220 IF L+4>L9 THEN GOSUB 5000
4230 PRINT (7)""
4240 PRINT (7)"Lot/Serial Number And Rejection Code Differences:"
4250 PRINT (7)""
4260 LET L=L+3
4400 REM " --- Print list of lines with lot/serial number differences"
4410 FOR X=1 TO DIF
4420 LET K$=DIFKEY$[X],QTY=DIFQTY[X],B0$(1)=K$(1,8),B1$(1)=NF$
4430 FIND (APM01_DEV,KEY=B0$,DOM=4440)IOL=APM01A
4440 LET X$="Is Missing "+STR(QTY),LSDESC$=" Lot/Serial Number(s)"
4450 IF QTY<0 THEN LET X$="Has "+STR(ABS(QTY))+" Too Many"
4455 IF DIFTYPE$[X]="R" THEN LET LSDESC$=" Rejection Code Entries"
4460 IF L+1>L9 THEN GOSUB 5000
4470 PRINT (7)"Vendor ",FNF$(B0$(3,VENDLEN),M0$)," ",B1$(1,30)," Receiver # ",K$(9,7),"/PO # ",K$(16,7),"-",K$(23,3)," ",X$,LSDESC$
4480 LET L=L+1
4490 NEXT X
4800 REM " --- Notify user of errors"
4810 DIM MESSAGE$[2]
4820 LET MESSAGE$[0]="Errors Were Reported During The Generation Of The QA Receipt"
4830 LET MESSAGE$[1]="Register. The Update Will Not Be Run. Review The Register,"
4840 LET MESSAGE$[2]="Correct The Errors And Reprint (<Enter>=Continue)"
4850 CALL "SYC.XA",2,MESSAGE$[ALL],2,22,-1,V$,V3
4890 IF V$<>"SPECIAL" THEN GOTO 9900
4900 REM " --- Run next overlay"
4910 IF NUMBER=0 THEN GOTO 9900
4990 RUN "POU.CA"
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+4
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS THEN EXITTO 9900
5050 PRINT (7)@(O[4]),"Not",@(O[5]),"Date",@(O[6]),"Date",@(O[9]+M2-9),QH$,@(O[13]+M3-5),"Unit"
5060 PRINT (7)@(O[0]),"Seq",@(O[1]),"Cd",@(O[2]),"Wh",@(O[3]),"Item",@(O[4]),"Before",@(O[5]),"Required",@(O[6]),"Promised",@(O[7]),"Work Order",@(O[8]),"UM",@(O[9]+M2-9),"Ordered",@(O[10]+M2-9),"Received",@(O[11]+M2-9),"Approved",@(O[12]+M2-9),"Rejected",@(O[13]+M3-5),"Cost",@(O[14]+M1-10),"Extension"
5070 IF DONE=0 THEN GOSUB 5200
5090 RETURN 
5200 REM " --- Receipt subheading"
5210 PRINT (7)""
5220 PRINT (7)"Vendor: ",VENDOR$,@(48),"Rec #: ",A0$(9,7),"  PO #: ",A0$(16,7),@(78),PACKLIST$,@(100),"Receipt Date: ",FNB6$(A1$(29,6))
5230 PRINT (7)""
5240 LET L=L+3
5290 RETURN 
6000 REM " --- Vendor break"
6010 IF T0$="" THEN GOTO 6100
6020 LET TOTALS$="Total For "+VENDOR$,TOTALS[ALL]=VENDOR[ALL]
6030 GOSUB 6900
6100 IF DONE THEN GOTO 6190
6110 DIM VENDOR[4]
6120 LET T0$=A0$(3,6),B0$(1)=N0$+T0$,B1$(1)=NF$
6130 FIND (APM01_DEV,KEY=B0$,DOM=6140)IOL=APM01A
6140 LET VENDOR$=FNF$(B0$(3,VENDLEN),M0$)+" "+FNP$(B1$(1,30))
6150 IF PAGEBREAK$="Y" THEN LET L=L9+1
6190 RETURN 
6800 REM " --- Store lot/serial or rejection code difference"
6810 LET DIF=DIF+1
6820 IF DIF>99 THEN GOTO 6890
6830 LET DIFKEY$[DIF]=W0$,DIFTYPE$[DIF]=TYPE$,DIFQTY[DIF]=QTY
6835 IF XLIMIT=0 THEN GOTO 6890
6840 FOR X=1 TO XLIMIT
6850 IF L+1>L9 THEN GOSUB 5000
6860 LET L=L+1,LASTSEQ=LASTSEQ+1
6870 IF TYPE$="L" THEN PRINT (7)@(O[3]),LSDESC$," ",LASTSEQ:MS$,FILL(I[2],"_")
6875 IF TYPE$="R" THEN PRINT (7)@(O[3]),LASTSEQ:MS$,"___ ",FILL(30,"_")
6880 NEXT X
6890 RETURN 
6900 REM " --- Print totals"
6910 IF L+1>L9 THEN GOSUB 5000
6920 IF LEN(TOTALS$)>O[6] THEN LET TOTALS$=TOTALS$(1,O[6])
6930 PRINT (7)@(O[9]-LEN(TOTALS$)),TOTALS$,@(O[9]),TOTALS[0]:M2$,@(O[10]),TOTALS[1]:M2$,@(O[11]),TOTALS[2]:M2$,@(O[12]),TOTALS[3]:M2$,@(O[14]),TOTALS[4]:M1$
6940 LET L=L+1
6990 RETURN 
8000 REM " --- Function Definitions"
8025 DEF FNB6$(Q$)=Q$(3,2)+"/"+Q$(5,2)+"/"+FNYY21_YY$(Q$(1,2))
8035 DEF FNC(Q1,Q2)=INT((Q1-Q2)/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 REM " --- Return to menu"
9950 RUN "SYS.AA"
9999 END
