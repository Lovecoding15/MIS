0010 REM "IVE - Physical Inventory Count Entry"
0020 REM "Program IVE.RA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=7
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="SYS-01",FILES$[2]="IVM-01",FILES$[3]="IVM-02"
0130 LET FILES$[4]="IVM-10",FILES$[5]="IVM-14",FILES$[6]="IVE-03"
0140 LET FILES$[7]="IVM-07"
0150 CALL "SYC.DA",1,1,6,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM01_DEV=CHANNELS[2],IVM02_DEV=CHANNELS[3]
0180 LET IVM10_DEV=CHANNELS[4],IVM14_DEV=CHANNELS[5],IVE03_DEV=CHANNELS[6]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$,A5$,A6$,A[ALL]
0220 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0230 IVM10C: IOLIST X0$(1)
0240 IVM10P: IOLIST Y0$(1)
0250 IVE03A: IOLIST W0$(1),W1$(1),W[ALL]
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0280 IVM07A: IOLIST L0$(1),L1$(1),L[ALL]
0400 REM " --- Parameters"
0405 DIM P[5]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV",LS$="N"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0440 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1)),P[2]=NUM(I2$(7,2))
0450 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0460 LET DW=79-(19+P[0]+1),ROW=0,LSH$="",WHSE$=I3$(6,2)
0470 IF POS(I3$(17,1)="SL")>0 THEN LET LS$="Y",ROW=1,LSH$="Lot/Serial Number:"
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],X0$(32),Y0$(11)
0520 DIM B0$(24),B1$(64),B[20],W0$(56),W1$(60),W[2],MESSAGE$[1]
0530 DIM L0$(44),L1$(96),L[12],STATUS$[5],FILES[14],I[3],DESCRIPTION$(DW)
0550 LET WHSE$="",CYCLE$="",FILES[1]=IVM01_DEV,FILES[14]=IVM14_DEV
0555 LET I[0]=P[0],I[1]=P[3],I[2]=P[4],I[3]=P[5]
0560 LET STATUS$[0]="Not Selected",STATUS$[1]="Cycle Selected"
0565 LET STATUS$[2]="Count Sheets Printed",STATUS$[3]="Register Printed"
0570 LET STATUS$[4]="Update In Progress",STATUS$[5]="Cancel In Progress"
0600 REM " --- Additional file opens"
0610 IF LS$="N" THEN GOTO 0650
0620 CALL "SYC.DA",1,7,7,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0630 IF STATUS>0 THEN GOTO 9900
0640 LET IVM07_DEV=CHANNELS[7]
0650 GOSUB 6000
0700 REM " --- Background"
0710 PRINT 'SB',@(5,3),"Warehouse ID:",@(7,4),"Cycle Code:",@(6,5),"Cutoff Date:",'SF',
0720 CALL "SYC.WC",1,0,80,0,0,6,0
0730 PRINT 'SB',@(13,7),"Item:",@(0,7+ROW),LSH$,@(2,8+ROW),"System Quantity:",@(3,9+ROW),"Physical Count:",@(6,10+ROW),"Count Total:",'SF',
0800 REM " --- Warehouse ID"
0805 PRINT 'CF',
0810 LET V4$="Enter A Valid Warehouse ID (<F3>=Lookup)"
0815 LET V0$="S",V1$="C",V2$=WHSE$,V3$="",V0=2,V1=19,V2=3
0820 GOSUB 7000
0825 ON V3 GOTO 0835,0800,0800,0830,9900
0830 CALL "IVC.LK",3,V1,V2,V$
0835 LET V$=V$+"  ",V$=V$(1,2),WHSE$=V$
0840 FIND (IVM10_DEV,KEY=N0$+"C"+V$,DOM=0800)IOL=IVM10C
0845 PRINT @(V1,V2),X0$(4,2)," ",X0$(6,24),
0850 REM " --- Cycle Code"
0855 GOSUB 6000
0860 LET V4$="Enter A Valid Cycle Code For This Warehouse"
0865 LET V0$="S",V1$="C",V2$=CYCLE$,V3$="",V0=2,V1=19,V2=4
0870 GOSUB 7000
0875 ON V3 GOTO 0880,0850,0800,0850,9900
0880 LET V$=V$+"  ",V$=V$(1,2),CYCLE$=V$
0900 REM " --- Valid Warehouse/Cycle Combination"
0905 LET Y0$(1)=N0$+"P"+WHSE$+V$
0910 FIND (IVM10_DEV,KEY=Y0$(1,7),DOM=0850)IOL=IVM10P
0915 LET P=POS(Y0$(8,1)="12345")
0920 PRINT @(19,4),Y0$(6,2)," ",STATUS$[P],'CL',@(19,5),FNB$(Y0$(9,3))
0930 IF POS(Y0$(8,1)="123")>0 THEN GOTO 0950
0935 LET MESSAGE$[0]="Cycle Not Selected Or Cancel/Update In Process (<Enter>=Continue)"
0940 CALL "SYC.XA",2,MESSAGE$[ALL],0,22,-1,V$,V3
0945 IF V$<>"SPECIAL" THEN GOTO 0850
0950 REM " --- Position file"
0960 LET W0$(1)=N0$+WHSE$+CYCLE$
0990 READ (IVE03_DEV,KEY=W0$(1,6),DOM=1000)
1000 REM " --- Item Number"
1010 GOSUB 5400
1020 LET V2$="",V2$=KEY(IVE03_DEV,END=1050)
1030 IF V2$(1,6)<>W0$(1,6) THEN LET V2$=""
1040 IF V2$<>"" THEN LET V2$=V2$(17,20)
1050 DIM ITEM$[6],ITEM[12]
1060 LET V1=19,V2=7,ACTION$="",V4$="",I0=0
1070 CALL "IVC.IA",ACTION$,V1,V2,FILES[ALL],N0$,V2$,V4$,I[ALL],ITEM$[ALL],ITEM[ALL],V3
1080 ON V3 GOTO 1090,1000,0850,1000,0850
1090 LET V$=ITEM$[0]
1100 REM " --- Retrieve record(s)"
1110 LET A0$(1)=N0$+V$,B0$(1)=N0$+WHSE$+V$
1120 FIND (IVM01_DEV,KEY=A0$,DOM=1000)IOL=IVM01A
1130 FIND (IVM02_DEV,KEY=B0$,DOM=1000)IOL=IVM02A
1140 LET W0$(7)=B1$(1,10)+V$,K$=W0$
1145 LET DESCRIPTION$(1)=FNITEM$(A1$,P[3],P[4],P[5])
1150 IF LS$="N" THEN GOTO 1180
1155 IF A2$(19,2)<>"YY" THEN GOTO 1180
1160 READ (IVE03_DEV,KEY=W0$,DOM=1170)
1165 GOTO 1180
1170 LET K$=KEY(IVE03_DEV,END=1180)
1175 IF POS(W0$(1,36)=K$)<>1 THEN GOTO 1000
1180 READ (IVE03_DEV,KEY=K$,DOM=1000)IOL=IVE03A
1185 IF W1$(5,1)<>"Y" THEN GOTO 1900
1190 GOSUB 5000
1200 REM " --- Lot/Serial Number"
1205 IF LS$="N" THEN GOTO 1300
1210 LET V4$="Enter A Lot/Serial Number (<F3>=Lookup)"
1220 LET V0$="S",V1$="KC",V2$=W0$(37,P[2]),V3$="",V0=P[2],V1=19,V2=7+ROW
1225 GOSUB 7000
1230 ON V3 GOTO 1250,1200,1300,1235,1300
1235 LET L0$(1)=B0$
1240 CALL "SYC.LL","A",L0$,L1$,L[ALL]
1245 LET V$=L0$(25)
1250 IF FNP$(V$)="" THEN GOTO 1200
1260 LET W0$(37)=V$
1270 READ (IVE03_DEV,KEY=W0$,DOM=1400)IOL=IVE03A
1290 GOTO 1900
1300 REM " --- Position file to next item"
1310 READ (IVE03_DEV,KEY=W0$(1,36)+$FF$,DOM=1000)
1390 GOTO 1000
1400 REM " --- Does lot/serial number exist?"
1410 DIM L0$(44),L1$(96),L[12]
1420 LET L0$(1)=B0$,L0$(25)=W0$(37),NEW_SER$="N"
1430 FIND (IVM07_DEV,KEY=L0$,DOM=1500)IOL=IVM07A
1490 GOTO 1600
1500 REM " --- Add new lot/serial number?"
1510 CALL "SYC.YN",1,"Add This New Lot/Serial Number",1,V$,V3
1520 ON V3 GOTO 1530,1500,1500,1500,1200
1530 ON POS(V$="YN") GOTO 1500,1550,1200
1550 IF I3$(17,1)="S" THEN LET NEW_SER$="Y"
1600 REM " --- New record initializations"
1610 DIM W1$(60),W[2]
1620 LET W1$(1,3)=Y0$(9,3),W1$(4,2)="NY",W[1]=L[0]
1630 IF NEW_SER$="Y" THEN LET W[1]=1
1900 REM " --- Display"
1910 GOSUB 5000
1990 IF W1$(4,1)="Y" THEN GOTO 4000
2000 REM " --- Actual quantity"
2010 LET V4$="Enter The Actual Physical Count Quantities Separated By Commas (e.g. 7,6,57)"
2015 LET V0$="S",V1$="C",V2$=W1$(10,50),V0=50,V1=19,V2=9+ROW,I0=2
2020 IF FNP$(V2$)="" THEN LET V2$=STR(W[0])
2030 GOSUB 7000
2040 ON V3 GOTO 2050,2000,3900,2000,3900
2050 IF FNP$(V$)="" THEN GOTO 2000
2100 REM " --- Parse out quantities"
2110 LET P=POS(","=V$),QTY=0,X$=V$
2120 WHILE P>0
2130 LET V=NUM(X$(1,P-1),ERR=2000),QTY=QTY+V,X$=X$(1,P+1),P=POS(","=X$)
2140 WEND
2150 LET V=NUM(X$,ERR=2000),QTY=QTY+V
2200 REM " --- Serial number quantity cannot be greater than one"
2210 IF W1$(5,1)="N" THEN GOTO 2300
2220 IF I3$(17,1)<>"S" OR QTY=1 THEN GOTO 2300
2230 IF NEW_SER$="Y" THEN LET MESSAGE$[0]="Quantity Of One Required For A New Serial Number (<Enter>=Continue)"; GOTO 2250
2240 IF QTY=0 THEN GOTO 2300
2250 LET MESSAGE$[0]="Quantities For Serialized Items May Not Exceed One (<Enter>=Continue)"
2260 CALL "SYC.XA",2,MESSAGE$[ALL],0,22,-1,V$,V3
2270 IF V$<>"SPECIAL" THEN GOTO 2000
2300 REM " --- Store entered quantity"
2310 LET W1$(10,50)=V$,W[1]=QTY
2320 PRINT @(19,9+ROW),W1$(10,50),@(19,10+ROW),W[1]:M2$
2390 GOTO 3900
3900 REM " --- Next Field"
3905 IF V3=4 THEN GOTO 4000
3910 IF V3<>2 THEN GOTO 3940
3920 IF I0>0 THEN LET I0=I0-1
3930 GOTO 3950
3940 LET I0=I0+1
3960 ON I0 GOTO 1000,1200,2000,3990
3990 GOSUB 5000
4000 REM " --- Correct?"
4010 LET V4$="Is The Above Information Correct (Y/N/Delete)?"
4020 LET V0$="S",V1$="C",V2$="Y",V3$="",V0=6,V1=FNV(V4$),V2=22
4030 GOSUB 7000
4040 ON V3 GOTO 4050,4000,4000,4000,4100
4050 IF V$="DELETE" THEN GOTO 4200
4090 ON POS(V$="YN") GOTO 4000,4100,2000
4100 REM " --- Write"
4110 IF FNP$(W1$(10,40))<>"" THEN LET W1$(4,1)="Y"
4120 WRITE (IVE03_DEV,KEY=W0$)IOL=IVE03A
4190 GOTO 1000
4200 REM " --- Delete"
4210 REMOVE (IVE03_DEV,KEY=W0$,DOM=4220)
4290 GOTO 1000
5000 REM " --- Display"
5010 PRINT @(19,7),A0$(3,P[0])," ",DESCRIPTION$,@(19,ROW+7),W0$(37),@(19,ROW+8),W[0]:M2$,@(19,ROW+9),W1$(10,50),@(19,ROW+10),W[1]:M2$
5090 RETURN 
5400 REM " --- Clear Screen"
5410 FOR X=7 TO 11
5420 PRINT @(18,X),'CL',
5430 NEXT X
5490 RETURN 
6000 REM " --- Get default warehouse and cycle from entry file"
6010 READ (IVE03_DEV,KEY=N0$+WHSE$,DOM=6020)
6020 LET K$=KEY(IVE03_DEV,END=6080)
6030 IF POS(N0$+WHSE$=K$)<>1 THEN GOTO 6080
6040 LET WHSE$=K$(3,2),CYCLE$=K$(5,2)
6050 GOTO 6090
6080 LET WHSE$="",CYCLE$=""
6090 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8085 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
