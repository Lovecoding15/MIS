0010 REM "IVM - Item Maintenance (Purchase Order Inquiry)"
0020 REM "Program IVM.MG
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 SETERR 9000
0080 SETESC 9000
0090 PRECISION P[1]
0200 REM " --- IOLists
0210 APM01A: IOLIST B0$(1),B1$(1)
0220 POM02A: IOLIST S0$(1),S1$(1)
0240 POE12A: IOLIST C0$(1),C1$(1),*,C3$(1),*,*,*,C[ALL]
0290 IVM10C: IOLIST X0$(1)
0400 REM " --- Parameters"
0410 LET HEIGHT=18,MAXROW=10,SELECTION$=""
0450 IF PAGES<3 THEN GOTO 4000
0500 REM " --- Initializations
0510 DIM X0$(32),O[3],B0$(8),B1$(30),C0$(18),C1$(48),C3$(22),C[12]
0520 DIM LLIST$[PAGES,MAXROW,5],MORE$[PAGES,MAXROW,1]
0550 LET L=1,PAGE=1,X0=0,X1=1,SELECTION$="",NUMBER=1,ITEM$=A0$(3)
0565 LET HEADING$(1)=" PO #    Seq Required Drop UM",UNITMEAS$=A2$(4,2)
0570 LET HEADING$(H0-(3*M2)-10)="Unit Cost",HEADING$(H0-(2*M2)-8)="Ordered"
0575 LET HEADING$(H0-M2-9)="Received",HEADING$(H0-8)="Balance"
0615 REM " --- Footers & column variables
0620 LET FOOTING$(1)=" <F1>=Next Warehouse"
0625 LET FOOTING$(WIDTH-26)="PgUp  PgDn  F4=End"
0630 LET O[3]=H0-M2,O[2]=O[3]-M2,O[1]=O[2]-M2,O[0]=O[1]-M3,DW=O[1]-11
0700 REM " --- Background
0710 CALL "SYC.WA",0,WIDTH,HEIGHT,WIN_X,WIN_Y,TITLE$,NAME$
0720 PRINT 'CS','SB',@(1,0),"Warehouse ID:",'SF',
0730 CALL "SYC.WC",1,0,WIDTH-2,1,0,1,0
0740 PRINT @(0,2),'SB','BR',HEADING$,@(0,HEIGHT-3),FOOTING$,'ER','SF',
0900 REM " --- Position file
0990 READ (IVM03_DEV,KEY=A0$(1,2)+"G"+A0$(3),DOM=1000)
1000 REM " --- Warehouse ID
1005 PRINT 'CF',
1010 LET V2$="",V2$=KEY(IVM03_DEV,END=1040)
1020 IF POS(A0$(1,2)+"G"+A0$(3)=V2$)<>1 THEN LET V2$=""
1030 IF V2$<>"" THEN LET V2$=V2$(24)
1040 LET V0$="S",V1$="KE",V3$="",V4$="",V0=2,V1=15,V2=0
1050 GOSUB 7000
1055 ON V3 GOTO 1080,1000,1000,1060,4000
1060 CALL "IVC.LK",3,V1,V2,V$
1070 IF V$="" THEN GOTO 0900
1080 LET WHSE$=V$+"  ",WHSE$=WHSE$(1,2)
1100 REM " --- Retrieve record
1110 FIND (IVM10_DEV,KEY=N0$+"C"+WHSE$,DOM=1000)IOL=IVM10C
1120 LET K$=A0$(1,2)+"G"+A0$(3)+WHSE$
1130 READ (IVM03_DEV,KEY=K$,DOM=1140)
1140 PRINT @(15,0),WHSE$," ",X0$(6,17),
1500 REM " --- Get Data
1505 LET X0=0,LINE=1,PAGE=1,X1=1,L=1
1510 DIM LLIST$[PAGES,MAXROW,5],MORE$[PAGES,MAXROW,1]
1515 LET TOTQTYORD=0,TOTQTYREC=0,TOTBAL=0
1520 READ (POE42_DEV,KEY=N0$+ITEM$,DOM=READ_POE42)
1525 READ_POE42: 
1530 LET K42$=KEY(POE42_DEV,END=NOMORE)
1540 IF K42$(1,22)<>K$(1,2)+K$(4,20) THEN GOTO NOMORE
1550 READ (POE42_DEV)
1560 LET C0$(1)=K42$(1,2)+K42$(33,6)+K42$(23,10)
1600 FIND (POE12_DEV,KEY=C0$,DOM=NEXT_POE42)IOL=POE12A
1610 IF C3$(1,2)<>WHSE$ THEN GOTO NEXT_POE42
1620 DIM VENDOR$(DW),STATUS$(3)
1630 LET B0$(1)=C0$(1,8),B1$(1)="(Not On File)"
1640 FIND (APM01_DEV,KEY=B0$,DOM=1650)IOL=APM01A
1645 REM " --- Assign Data
1650 LET PONUM$=C0$(9,7),SEQNUM$=C0$(16,3),REQDDATE$=FNB6$(C1$(3,6))
1655 LET VENDOR$(1)=FNF$(B0$(3,VENDLEN),VENDMASK$)+" "+B1$
1660 IF C1$(3,6)=FILL(6) THEN LET REQDDATE$=FILL(8)
1670 GOSUB CALCNUMS
1700 REM " --- Get Drop Ship flag
1710 DIM S0$(4),S1$(32)
1720 LET DROPSHIP$="No "
1730 FIND (POM02_DEV,KEY=C0$(1,2)+C1$(1,2),DOM=1800)IOL=POM02A
1740 IF S1$(22,1)="Y" THEN LET DROPSHIP$="Yes"
1800 REM " --- Display page?
1810 IF L+1<=MAXROW THEN GOTO 1900
1820 GOSUB 5400
1830 IF FKEY=1 THEN GOTO 4000
1840 IF FKEY=4 THEN GOTO 4000
1850 IF SELECTION$<>"" THEN GOTO 4000
1860 LET L=1,X1=1
1900 REM " --- Store detail line
1910 DIM G1$(WIDTH-2)
1920 LET G1$(2)=PONUM$+" "+SEQNUM$+" "+REQDDATE$+" "+DROPSHIP$+"  "+UNITMEAS$
1930 LET G1$(O[0])=UNITCOST$,G1$(O[1])=QTYORD$,G1$(O[2])=QTYREC$,G1$(O[3])=BALANCE$
1940 LET LLIST$[PAGE,X1,1]=G1$,X1=X1+1,X0=X0+1,L=L+1
1970 LET G1$(1)="",G1$(10)=VENDOR$,LLIST$[PAGE,X1,1]=G1$,X1=X1+1,X0=X0+1,L=L+1
1980 REM " --- Loop back for more
1990 NEXT_POE42: 
1995 GOTO READ_POE42
2000 REM " --- No more transactions
2005 NOMORE: 
2010 IF X0>0 THEN GOTO 3000
2020 DIM MESSAGE$[1]
2030 LET MESSAGE$[0]="No transactions found (<Enter>=Continue)"
2040 CALL "SYC.XA",3,MESSAGE$[ALL],0,-1,-1,V$,V3
2090 GOTO 1000
3000 REM " --- Add totals to display page
3010 FOR X=0 TO NUMBER
3020 DIM G1$(WIDTH-2)
3200 REM " --- Display page?"
3210 IF L<MAXROW THEN GOTO 3300
3220 GOSUB 5400
3230 IF FKEY=1 THEN EXITTO 4000
3240 IF FKEY=4 THEN EXITTO 4000
3250 IF SELECTION$<>"" THEN EXITTO 4000
3290 LET L=1,X1=1
3300 REM " --- Insert bar
3310 IF X>0 THEN GOTO 3400
3320 DIM G1$(WIDTH-2,"-")
3390 GOTO 3600
3400 REM " --- Store totals element
3420 LET G1$(16)="Total"
3430 LET G1$(O[1])=STR(TOTQTYORD:M2$),G1$(O[2])=STR(TOTQTYREC:M2$)
3440 LET G1$(O[3])=STR(TOTBAL:M2$)
3600 REM " --- Store line"
3610 LET LLIST$[PAGE,X1,1]=G1$,X1=X1+1,X0=X0+1,L=L+1
3800 REM " --- Next totals element
3890 NEXT X
3900 REM " --- Display last page
3910 LET SELECTION$="|EOF"
3920 GOSUB 5400
3990 GOTO 1000
4000 REM " --- Run menu overlay
4010 IF SELECTION$="END" THEN LET FKEY=4,SELECTION$=""
4050 CALL "SYC.WD",NAME$
4090 RUN "IVM.MA"
5400 REM " --- Window processing"
5410 LET MODE=32
5420 CALL "SYC.SA",MODE,LLIST$[ALL],MORE$[ALL],SELECTION$,PAGE,MAXROW,NAME$,HEIGHT,WIDTH,FKEY
5460 IF FKEY=-16 OR SELECTION$="" THEN LET PAGE=PAGE+1
5470 IF PAGE>PAGES-1 THEN CALL "SYC.RB",LLIST$[ALL],MORE$[ALL],PAGES,PAGE,MAXROW,5,1
5485 IF PAGE>PAGES-1 THEN CALL "SYC.RB",LLIST$[ALL],MORE$[ALL],PAGES,PAGE,MAXROW,5,1
5490 RETURN 
6000 REM " --- Calculate numerics
6005 CALCNUMS: 
6010 LET CONVFACT=C[0]
6020 IF CONVFACT=0 THEN LET CONVFACT=1
6030 LET UNITCOST=C[1]/CONVFACT,UNITCOST$=STR(UNITCOST:M3$)
6040 LET QTYORD=C[3]*CONVFACT,QTYORD$=STR(QTYORD:M2$)
6050 LET QTYREC=C[7]*CONVFACT,QTYREC$=STR(QTYREC:M2$)
6060 LET BALANCE=QTYORD-QTYREC,BALANCE$=STR(BALANCE:M2$)
6070 LET TOTBAL=TOTBAL+BALANCE
6080 LET TOTQTYORD=TOTQTYORD+QTYORD,TOTQTYREC=TOTQTYREC+QTYREC
6090 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8025 DEF FNB6$(Q1$)=Q1$(3,2)+"/"+Q1$(5,2)+"/"+FNYY21_YY$(Q1$(1,2))
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to menu"
9910 CALL "SYC.WD",NAME$
9950 RUN "SYS.AA"
9999 END
