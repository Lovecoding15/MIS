0010 REM "OPR - Order Status Report By Item"
0020 REM "Program OPR.OB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0090 SETERR 9000
0095 SETESC 9000
0100 REM " --- Open/Lock Files "
0170 CALL "SYC.GA",7,1,"","",STATUS
0175 IF STATUS>0 THEN GOTO 9900
0200 REM " --- IOLISTS"
0210 ARE03A: IOLIST A0$(1),A[ALL]
0220 IVM10C: IOLIST X0$(1)
0230 IVM02A: IOLIST C0$,C1$,C2$,C[ALL]
0240 IVM01A: IOLIST D0$(1),D1$(1),D2$(1),D3$,D4$,D5$,D6$,D[ALL]
0250 ARM10E: IOLIST S0$(1),S1$(1)
0310 ARE13A: IOLIST W0$,W1$(1),W[ALL]
0500 REM " --- Initializations"
0505 LET HEADINGS=3
0510 DIM A0$(101),A[10],W1$(64),W[14],T[1],O[13],HEADINGS$[HEADINGS]
0520 DIM D0$(22),D1$(I[3]+I[4]+I[5]),D2$(48),D[8],C[16]
0550 LET M0=LEN(M0$),M1=LEN(M1$),X$="Detail ",L0=0,L1=0
0555 IF P9$="S" THEN LET X$="Summary "
0560 LET H1$=X$+H1$,CLOCK$="",WHEN$=F0$(7,3),NF$="(Not On File)"
0570 LET L9=59,L=L9+1,H=0,H0=132,TOTAL=0,SUBTOTAL=0,DONE=0
0580 CALL "SYC.RM",M2$,M2,11,11
0600 REM " --- Print positions"
0610 LET O[13]=H0-M2,O[12]=O[13]-M2,O[11]=O[12]-M2,O[10]=O[11]-4
0620 LET O[9]=O[10]-M2,O[8]=O[9]-M1,O[1]=21,O[2]=O[1]+4
0630 LET O[3]=O[2]+3,O[4]=O[3]+M0+1,O[5]=O[4]+9,O[6]=O[5]+9,O[7]=O[6]+9
0650 REM " --- Headings"
0660 DIM J$(H0-O[8],"-"),X$(H0)
0670 LET HEADINGS$[0]=N1$,HEADINGS$[1]=H1$,X$(1)=H4$
0680 LET X$(FNC(H3$,H0))=H3$,X$(H0-LEN(H5$))=H5$,HEADINGS$[2]=H5$
0700 REM " --- Background"
0710 CALL "SYC.NB","Printing",23,COLUMN
0900 REM " --- Position File"
0990 READ (ARE07_DEV,KEY=N0$+P6$,DOM=1000)
1000 REM " --- Next ARE-07 record"
1010 LET K$=KEY(ARE07_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 IF P6$<>"" AND K$(3,2)<>P6$ THEN GOTO 4000
1040 READ (ARE07_DEV)
1050 PRINT @(COLUMN,11),K$(3,2)," ",K$(5,20),
1200 REM " --- Level breaks"
1210 IF K$(3,2)<>T0$ THEN GOSUB 6000
1220 IF K$(5,20)<>T1$ THEN GOSUB 6200
1300 REM " --- Check product type"
1310 IF P8$<>"" THEN IF D2$(1,3)<>P8$ THEN GOTO 3900
1400 REM " --- Order header"
1410 LET A0$(1)=K$(1,2)+K$(25,2)+K$(37,6)+K$(27,7)+"000"
1420 LET W0$=A0$(1,17)+K$(34,3)
1430 FIND (ARE03_DEV,KEY=A0$(1,20),DOM=3900)IOL=ARE03A
1440 IF A0$(21,1)="V" THEN GOTO 3900
1450 IF A0$(22,1)="I" THEN GOTO 3900
1500 REM " --- Order line item"
1510 FIND (ARE13_DEV,KEY=W0$(1,20),DOM=3900)IOL=ARE13A
1513 GOSUB TEST_CODE
1515 IF IGNOREIT$="Y" THEN GOTO 3900
1517 LET AMOUNT=W[1]*W[2]
1520 IF POS("O"=P5$)>0 AND A0$(23,1)<>"B" AND A0$(101,1)<>"C" AND A0$(21,1)<>"P" THEN GOTO 2000
1530 IF POS("B"=P5$)>0 AND A0$(23,1)="B" THEN GOTO 2000
1540 IF POS("C"=P5$)>0 AND A0$(101,1)="C" THEN GOTO 2000
1550 IF POS("Q"=P5$)>0 AND A0$(21,1)="P" THEN GOTO 2000
1590 GOTO 3900
2000 REM " --- Detail or Summary?"
2010 IF P9$<>"D" THEN GOTO 3000
2100 REM " --- Order status"
2110 LET X$="Order",SHIP$=A0$(27,3)
2120 IF A0$(21,1)="P" THEN LET X$="*Quote" ELSE LET X$="Order"
2130 IF A0$(101,1)="C" THEN LET X$="Credit"
2140 IF A0$(101,1)="R" THEN LET X$="Released"
2150 IF A0$(23,1)="B" THEN LET X$="BackOrder"
2160 IF A0$(22,1)="I" THEN LET X$="Invoice"
2170 IF W1$(41,3)<>"   " THEN LET SHIP$=W1$(41,3)
2200 REM " --- Print item stuff?"
2210 IF ITEM$="" THEN GOTO 2300
2220 IF L+3>L9 THEN GOSUB 5000
2230 PRINT (7)@(O[0]),D0$(3),@(O[1]),D2$(1,3),@(O[2]),D2$(4,2)
2240 PRINT (7)@(O[0]+2),FNZ$(D1$,I[3],I[4],I[5])
2250 LET L=L+2,ITEM$=""
2300 REM " --- Print Description for Non-stocks"
2310 IF NONSTOCK$<>"Y" THEN GOTO 2500
2320 IF L+1>L9 THEN GOSUB 5000
2330 PRINT (7)@(O[3]-3),W1$(1,40)
2340 LET L=L+1
2500 REM " --- Print detail line"
2510 IF L>L9 THEN GOSUB 5000
2520 PRINT (7)@(O[3]),FNF$(K$(37,P[0]),M0$),@(O[4]),A0$(11,7),A0$(23,1),@(O[5]),FNB$(A0$(77,3)),@(O[6]),FNB$(SHIP$),@(O[7]),X$,@(O[8]),AMOUNT:M1$,@(O[9]),W[2]:M2$,@(O[10]+1),W1$(44,1)
2530 LET L=L+1
3000 REM " --- Accumulate totals"
3010 LET T[0]=T[0]+AMOUNT,T[1]=T[1]+W[2],L0=L0+1,L1=L1+1
3020 LET TOTAL=TOTAL+AMOUNT,SUBTOTAL=SUBTOTAL+AMOUNT
3900 REM 
3990 GOTO 1000
4000 REM " --- End "
4010 LET DONE=1
4020 GOSUB 6000
4030 IF L>L9 THEN GOSUB 5000
4040 LET X$="Total For Report"
4050 PRINT (7)@(O[8]),J$
4060 PRINT (7)@(O[8]-LEN(X$)),X$,@(O[8]),TOTAL:M1$
4090 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,H,H0,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)@(O[4]),"Order",@(O[5]+2),"Order",@(O[6]+2),"Ship",@(O[8]+M1-6),"Order",@(O[9]+M2-8),"Order",@(O[10]),"Com",@(O[11]+M2-9),"Quantity",@(O[12]+M2-10),"Quantity",@(O[13]+M2-10),"Quantity"
5050 PRINT (7)@(O[0]),"Item",@(O[1]),"Prd",@(O[2]),"UM",@(O[3]),"Cust",@(O[4]),"Number",@(O[5]+2),"Date",@(O[6]+2),"Date",@(O[7]),"Status",@(O[8]+M1-6),"Total",@(O[9]+M2-9),"Quantity",@(O[10])," ?",@(O[11]+M2-9),"On Hand",@(O[12]+M2-10),"Committed",@(O[13]+M2-10),"Available"
5060 PRINT (7)""
5080 LET L=L+3
5090 RETURN 
6000 REM " --- Warehouse break"
6010 IF T0$="" THEN GOTO 6100
6020 GOSUB 6200
6030 IF L0=0 THEN GOTO 6100
6040 LET L=L+2,X$="Total For "+H5$
6050 IF L>L9 THEN GOSUB 5000
6060 PRINT (7)@(O[8]),J$
6070 PRINT (7)@(O[8]-LEN(X$)),X$,@(O[8]),SUBTOTAL:M1$
6100 IF DONE>0 THEN GOTO 6190
6110 DIM X0$(32),X$(H0)
6120 LET X0$(6)=NF$,T0$=K$(3,2),L0=0,L=L9+1,SUBTOTAL=0
6130 FIND (IVM10_DEV,KEY=N0$+"C"+T0$,DOM=6140)IOL=IVM10C
6140 LET H5$="Warehouse: "+T0$+" "+FNP$(X0$(6,20)),X$(1)=H4$
6150 LET X$(FNC(H3$,H0))=H3$,X$(H0-LEN(H5$))=H5$,HEADINGS$[2]=X$
6190 RETURN 
6200 REM " --- Item break"
6210 IF T1$="" THEN GOTO 6300
6220 IF L1=0 THEN GOTO 6300
6230 LET AVAIL=C[0]-C[2],L=L+2,X$="Total For Item "+D0$(3)
6240 IF P9$<>"S" THEN GOTO 6280
6250 IF L+1>L9 THEN GOSUB 5000
6253 IF FNP$(D0$(3))="" THEN LET D1$(1)="Non-Stock Item(s)"
6255 PRINT (7)@(O[0]),D0$(3),@(O[1]),D2$(1,3),@(O[2]),D2$(4,2),@(O[8]),T[0]:M1$,@(O[9]),T[1]:M2$,@(O[11]),C[0]:M2$,@(O[12]),C[2]:M2$,@(O[13]),AVAIL:M2$
6260 PRINT (7)@(O[0]+2),FNZ$(D1$,I[3],I[4],I[5])
6265 PRINT (7)""
6270 LET L=L+1
6275 GOTO 6300
6280 IF L>L9 THEN GOSUB 5000
6285 PRINT (7)@(O[8]),J$
6290 PRINT (7)@(O[8]-LEN(X$)),X$,@(O[8]),T[0]:M1$,@(O[9]),T[1]:M2$,@(O[11]),C[0]:M2$,@(O[12]),C[2]:M2$,@(O[13]),AVAIL:M2$
6300 IF DONE>0 THEN GOTO 6390
6310 DIM D1$(I[3]+I[4]+I[5]),D2$(48),D[8],C[16],T[1]
6320 LET T1$=K$(5,20),D0$(1)=K$(1,2)+T1$,D1$(1)=NF$
6330 LET C0$=K$(1,24),ITEM$=T1$,L1=0
6340 FIND (IVM01_DEV,KEY=D0$,DOM=6350)IOL=IVM01A
6350 FIND (IVM02_DEV,KEY=C0$,DOM=6360)IOL=IVM02A
6390 RETURN 
6400 REM " --- Test line code to determine whether to print
6410 TEST_CODE: 
6420 LET IGNOREIT$="N",NONSTOCK$="N"
6430 DIM S0$(32),S1$(12)
6450 FIND (ARM10_DEV,KEY=N0$+"E"+W0$(21,1),DOM=6490)IOL=ARM10E
6460 IF S0$(25,1)="M" OR S0$(25,1)="O" THEN LET IGNOREIT$="Y"
6470 IF S0$(25,1)="N" THEN LET NONSTOCK$="Y"
6490 RETURN 
8000 REM " --- Functions "
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNZ$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
