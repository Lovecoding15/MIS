0010 REM "IVM - Item Maintenance (Copy Item)
0020 REM "Program IVM.MR"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 SETERR 9000
0080 SETESC 9000
0090 PRECISION P[1]
0200 REM " --- IOLists"
0210 IVM01A: IOLIST A0$(1),A1$,A2$,A3$,A4$,A5$,A6$,A[ALL]
0220 IVM02A: IOLIST B0$,B1$,B2$,B[ALL]
0230 IVM03A: IOLIST C0$
0231 IVM03B: IOLIST C0$
0232 IVM03C: IOLIST C0$
0233 IVM03D: IOLIST C0$
0234 IVM03E: IOLIST C0$
0235 IVM03F: IOLIST C0$
0236 IVM03G: IOLIST C0$
0237 IVM03H: IOLIST C0$
0238 IVM03I: IOLIST C0$
0239 IVM03U: IOLIST C0$
0240 IVM05A: IOLIST B0$,B1$,B2$,B[ALL]
0250 IVM14A: IOLIST C0$
0260 IVM24A: IOLIST B0$
0270 IVM09A: IOLIST B0$,B1$
0500 REM " --- Initializations"
0510 LET OLDITEM$=A0$(3)
0520 DIM A[12]
0700 REM " --- Background"
0710 PRINT 'SB',@(1,6),"Item Number:",'SF',
1000 REM " --- Item Number"
1010 LET V4$="Enter A New Item Number"
1020 LET V0$="S",V1$="C",V2$="",V3$="",V0=P[0],V1=14,V2=6
1030 GOSUB 7000
1040 ON V3 GOTO 1050,1000,1000,1000,5900
1050 LET NEWITEM$=V$+FILL(20-LEN(V$))
1060 FIND (IVM01_DEV,KEY=N0$+NEWITEM$,DOM=4000)
1100 REM " --- Item already exists"
1110 DIM MESSAGE$[1]
1120 LET MESSAGE$[0]="This Item Number Already Exists (<Enter>=Continue)"
1130 CALL "SYC.XA",2,MESSAGE$[ALL],0,-1,-1,V$,V3
1190 GOTO 1000
4000 REM " --- Options"
4010 LET V4$="OK To Copy Item "+$22$+FNP$(OLDITEM$)+$22$+" To New Item "+$22$+FNP$(NEWITEM$)+$22$
4020 CALL "SYC.YN",0,V4$,0,V$,V3
4030 IF V$="NO" THEN GOTO 1000
4040 IF V$<>"YES" THEN GOTO 4000
4050 READ (IVM01_DEV,KEY=A0$)IOL=IVM01A
4100 REM " --- Copy IVM-01"
4110 LET A[3]=0,A[4]=0,A[5]=0,A[6]=0
4120 LET A0$(3)=NEWITEM$,A2$(29,24)="",A3$(1,20)=""
4130 IF OLDITEM$=A3$(21,20) THEN LET A3$(21,20)=NEWITEM$ ELSE LET A3$(21,20)=""
4140 WRITE (IVM01_DEV,KEY=A0$)IOL=IVM01A
4150 LET C0$=A0$(1,2)+"A"+A2$(1,3)+A0$(3,20)
4160 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03A
4170 IF A2$(24,1)="W" THEN GOTO 4200
4180 LET C0$=A0$(1,2)+"E"+A1$(1,20)+A0$(3,20)
4190 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03E
4200 LET C0$=A0$(1,2)+"F"+A2$(9,9)+A2$(1,3)+A0$(3,20)+"  "
4210 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03F
4220 IF FNP$(A3$(21,20))="" THEN GOTO 4250
4230 LET C0$=A0$(1,2)+"I"+A3$(21,20)+A0$(3,20)
4240 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03I
4250 IF FNP$(A3$(1,20))="" THEN GOTO 4300
4260 LET C0$=A0$(1,2)+"U"+A3$(1,20)+A0$(3,20)
4270 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03U
4300 REM " --- Copy IVM-02 and IVM-03"
4310 LET WHSE_ID$=""
4320 READ (IVM03_DEV,KEY=A0$(1,2)+"G"+OLDITEM$,DOM=4321)
4330 LET K03$=KEY(IVM03_DEV,END=4400)
4340 IF POS(N0$+"G"+OLDITEM$=K03$)<>1 THEN GOTO 4400
4350 READ (IVM03_DEV)IOL=IVM03G
4360 LET WHSE_ID$=WHSE_ID$+K03$(24,2)
4370 GOTO 4330
4400 IF LEN(WHSE_ID$)=0 THEN GOTO 4600
4410 FOR X=1 TO LEN(WHSE_ID$) STEP 2
4420 DIM B[20]
4430 READ (IVM02_DEV,KEY=A0$(1,2)+WHSE_ID$(X,2)+OLDITEM$,DOM=4560)IOL=IVM02A
4440 LET B0$(5,20)=NEWITEM$,B1$(1,10)="",B1$(15,4)="N",B1$(28,24)=""
4450 LET B[0]=0,B[1]=0,B[2]=0,B[6]=0,B[8]=0,B[16]=0
4460 WRITE (IVM02_DEV,KEY=B0$)IOL=IVM02A
4470 LET C0$=A0$(1,2)+"B"+B0$(3,2)+B1$(11,2)+B1$(1,10)+A0$(3,20)
4480 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03B
4490 LET C0$=A0$(1,2)+"C"+B0$(3,2)+A2$(1,3)+A0$(3,20)
4500 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03C
4510 IF A2$(24,1)="I" THEN GOTO 4540
4520 LET C0$=A0$(1,2)+"F"+B1$(19,9)+A2$(1,3)+A0$(3,20)+B0$(3,2)
4530 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03F
4540 LET C0$=A0$(1,2)+"G"+A0$(3,20)+B0$(3,2)
4550 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03G
4560 NEXT X
4600 REM " --- Copy IVM-05 (Vendors)"
4610 DIM B[12]
4620 READ (IVM03_DEV,KEY=A0$(1,2)+"H"+OLDITEM$,DOM=4621)
4630 LET K03$=KEY(IVM03_DEV,END=4800)
4640 IF POS(A0$(1,2)+"H"+OLDITEM$=K03$)<>1 THEN GOTO 4800
4650 READ (IVM03_DEV,KEY=K03$)IOL=IVM03H
4660 LET KN03$=FILL(LEN(K03$),$FF$)
4670 LET KN03$=KEY(IVM03_DEV,END=4671)
4680 READ (IVM05_DEV,KEY=K03$(1,2)+K03$(24,6)+K03$(4,20),DOM=4790)IOL=IVM05A
4690 LET B0$(9,20)=NEWITEM$,B1$(2,3)="",B2$(1)="",B[6]=0,B[7]=0
4700 WRITE (IVM05_DEV,KEY=B0$)IOL=IVM05A
4710 LET C0$(4,20)=NEWITEM$
4720 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03H
4730 LET C0$=A0$(1,2)+"D"+B0$(3,6)+A0$(3,20)
4740 WRITE (IVM03_DEV,KEY=C0$)IOL=IVM03D
4750 LET K03$=KN03$
4790 GOTO 4630
4800 REM " --- Copy IVM-09 (Comments)"
4810 READ (IVM09_DEV,KEY=A0$(1,2)+OLDITEM$,DOM=4811)
4820 LET K09$=KEY(IVM09_DEV,END=4900)
4830 IF POS(A0$(1,2)+OLDITEM$=K09$)<>1 THEN GOTO 4900
4840 READ (IVM09_DEV,KEY=K09$)IOL=IVM09A
4850 LET KN09$=FILL(LEN(K09$),$FF$)
4860 LET KN09$=KEY(IVM09_DEV,END=4861)
4870 LET B0$(3,20)=NEWITEM$
4880 WRITE (IVM09_DEV,KEY=B0$)IOL=IVM09A
4885 LET K09$=KN09$
4890 GOTO 4830
4900 REM " --- Copy IVM-14 AND IVM-24 (Synonyms)"
4910 LET SYN$=""
4920 READ (IVM24_DEV,KEY=A0$(1,2)+OLDITEM$,DOM=4921)
4930 LET K24$=KEY(IVM24_DEV,END=5000)
4940 IF POS(A0$(1,2)+OLDITEM$=K24$)<>1 THEN GOTO 5000
4950 READ (IVM24_DEV)IOL=IVM24A
4960 LET SYN$=SYN$+B0$(23,20)
4970 GOTO 4930
5000 IF LEN(SYN$)=0 THEN GOTO 5100
5010 FOR X=1 TO LEN(SYN$) STEP 20
5020 LET B0$=A0$(1,2)+NEWITEM$+SYN$(X,20)
5030 WRITE (IVM24_DEV,KEY=B0$)IOL=IVM24A
5040 LET C0$=A0$(1,2)+SYN$(X,20)+NEWITEM$
5050 WRITE (IVM14_DEV,KEY=C0$)IOL=IVM14A
5060 NEXT X
5100 REM " --- Redisplay new item number"
5120 PRINT @(14,3),'SB',A0$(3,P[0]),'SF',
5900 REM " --- Run menu overlay"
5910 READ (IVM01_DEV,KEY=A0$,DOM=5920)IOL=IVM01A
5990 RUN "IVM.MA"
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8090 DEF FNP$(Q$)=CVS(Q$,2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
