0010 REM "OPU - Sales Register Update (Sales Analysis And History)"
0020 REM "Program OPU.CA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.4 - 15Dec97 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "10Jul96 JAL: Must update IVT-01/02/03 for dropships (550)"
0032 REM "19Sep96 WGH: Save correct Total Cost Amount in ART-05 (290,1360-1370)"
0033 REM "28Oct96 WGH: When sales analysis isn't kept for an item, exclude it from all sale analysis (2505,2705,2755)"
0034 REM "27Jan97 JWK: Not posting Nonstock to sales analysis (2440,2855)
0035 REM "16Apr97 JWK: Wrong length for SIC segment sizes (2820)
0036 REM "21May97 JWK: If NO to update question, reset Sales Register lock flag  (830,4500-4600)
0037 REM "3Jun97 JWK: Not collecting Vendor Sales Analysis for Alpha Vendors (2955)
0038 REM "04Dec98 KJS: Voids should update ART-53 (1175,1350,1360)
0039 REM "MAS * DCF * WA# 205
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Close Printer And Open/Lock Files "
0105 CLOSE (7,ERR=110)
0110 CLOSE (GLW11_DEV,ERR=115)
0115 LET FILES=61; REM WA# 205
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="ARE-07",FILES$[2]="ARE-33",FILES$[3]="ARE-43",FILES$[4]="ARM-02"
0130 LET FILES$[5]="ARM-06",FILES$[6]="ART-01",FILES$[7]="ART-02",FILES$[8]="ART-03"
0135 LET FILES$[9]="ART-05",FILES$[10]="ART-07",FILES$[11]="ART-11",FILES$[12]="ART-13"
0140 LET FILES$[13]="ART-33",FILES$[14]="ART-43",FILES$[15]="ART-53"
0145 LET FILES$[16]="IVM-12",FILES$[17]="IVT-04"
0160 CALL "SYC.DA",1,1,17,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0165 IF STATUS>0 THEN GOTO 9900
0170 LET ARE07_DEV=CHANNELS[1],ARE33_DEV=CHANNELS[2],ARE43_DEV=CHANNELS[3],ARM02_DEV=CHANNELS[4]
0175 LET ARM06_DEV=CHANNELS[5],ART01_DEV=CHANNELS[6],ART02_DEV=CHANNELS[7],ART03_DEV=CHANNELS[8]
0180 LET ART05_DEV=CHANNELS[9],ART07_DEV=CHANNELS[10],ART11_DEV=CHANNELS[11],ART13_DEV=CHANNELS[12]
0185 LET ART33_DEV=CHANNELS[13],ART43_DEV=CHANNELS[14],ART53_DEV=CHANNELS[15]
0190 LET IVM12_DEV=CHANNELS[16],IVT04_DEV=CHANNELS[17]
0200 REM " --- Templates, IOLIST's"
0210 call "templates.pgm::ARE03"
0220 call "templates.pgm::ARE13" 
0230 ARE20A: IOLIST D0$(1),D1$(1),D[ALL]
0240 ARE33A: IOLIST C0$,C1$
0250 ARM01A: IOLIST *,X4$(1)
0255 ARM02A: IOLIST *,X3$(1)
0260 ARM09A: IOLIST S0$,S1$,S[ALL]
0270 ARM10E: IOLIST Y0$
0280 call "templates.pgm::ART03" 
0300 ART07A: IOLIST DH$(1),D1$(1),D[ALL]
0310 call "templates.pgm::ART13" 
0320 ART33A: IOLIST H0$,C1$
0325 ART43A: IOLIST ART43_K$
0330 ART53A: IOLIST ART53_K$
0340 IVM01A: IOLIST *,*,X2$(1)
0350 IVM02A: IOLIST *,T1$(1)
0360 IVW05A: IOLIST *,W[0]
0370 SAM01A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0395 SAM21A: IOLIST X0$
0500 REM " --- Initializations"
0510 PRECISION I[2]
0520 DIM S[1],W[14]
0550 DIM IV_FILES[44],IV_INFO$[3],IV_INFO[0],IV_PARAMS$[4],IV_REFS$[20],IV_REFS[20]
0560 LET IV_FILES[0]=SYS01_DEV,IV_FILES[1]=IVM01_DEV,IV_FILES[2]=IVM02_DEV,IV_FILES[4]=IVM04_DEV,IV_FILES[40]=IVW04_DEV
0570 LET IV_INFO$[0]=N0$
0580 LET IV_INFO[0]=G[0]
0590 LET IV_PARAMS$[0]=F0$(7,3),IV_PARAMS$[1]=F0$(4,3),IV_PARAMS$[2]=I2$,IV_PARAMS$[3]=I3$,IV_PARAMS$[4]=I4$
0600 REM " --- Additional File Opens"
0605 IF BR$="Y" THEN LET FILES$[18]="APM-12"
0610 IF JN$="Y" THEN LET FILES$[19]="ARM-09"
0615 IF GL$="Y" THEN LET FILES$[20]="GLT-04",FILES$[21]="GLT-05"
0625 IF LS$="Y" THEN LET FILES$[22]="ART-23",FILES$[23]="IVM-07",FILES$[24]="IVM-08",FILES$[25]="IVM-17",FILES$[26]="IVT-01",FILES$[27]="IVT-02",FILES$[28]="IVT-03"
0630 IF SA$="Y" THEN LET FILES$[29]="SAM-01",FILES$[30]="SAM-02",FILES$[31]="SAM-03",FILES$[32]="SAM-04",FILES$[33]="SAM-05",FILES$[34]="SAM-06",FILES$[35]="SAM-07",FILES$[36]="SAM-08",FILES$[37]="SAM-09",FILES$[38]="SAM-10",FILES$[39]="SAM-11",FILES$[40]="SAM-21"
0650 CALL "SYC.DA",1,18,40,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0655 IF STATUS>0 THEN GOTO 9900
0660 LET APM12_DEV=CHANNELS[18],ARM09_DEV=CHANNELS[19],GLT04_DEV=CHANNELS[20],GLT05_DEV=CHANNELS[21]
0665 LET ART23_DEV=CHANNELS[22],IVM07_DEV=CHANNELS[23],IVM08_DEV=CHANNELS[24],IVM17_DEV=CHANNELS[25]
0670 LET IVT01_DEV=CHANNELS[26],IVT02_DEV=CHANNELS[27],IVT03_DEV=CHANNELS[28]
0675 LET SAM01_DEV=CHANNELS[29],SAM02_DEV=CHANNELS[30],SAM03_DEV=CHANNELS[31],SAM04_DEV=CHANNELS[32]
0680 LET SAM05_DEV=CHANNELS[33],SAM06_DEV=CHANNELS[34],SAM07_DEV=CHANNELS[35],SAM08_DEV=CHANNELS[36]
0685 LET SAM09_DEV=CHANNELS[37],SAM10_DEV=CHANNELS[38],SAM11_DEV=CHANNELS[39],SAM21_DEV=CHANNELS[40]
0690 LET IV_FILES[7]=IVM07_DEV,IV_FILES[8]=IVM08_DEV,IV_FILES[12]=IVM12_DEV,IV_FILES[17]=IVM17_DEV
0695 LET IV_FILES[41]=IVT01_DEV,IV_FILES[42]=IVT02_DEV,IV_FILES[43]=IVT03_DEV,IV_FILES[44]=IVT04_DEV
0698 GOSUB 10000; REM WA# 205
0700 REM " --- Background"
0710 PRINT @(0,7),'CE',
0800 REM " --- Continue?"
0810 LET V4$="Are You Ready To Update The Sales Register"
0820 CALL "SYC.YN",0,V4$,0,V$,V3
0830 IF V$<>"YES" THEN GOTO 4500
0840 CALL "SYC.NB","Updating",M0+8,COLUMN
0850 REM " --- Disallow 'M'enu Option In Error Routine"
0860 LET EXIT_CTRL=1
0890 PRINT @(40,5),"1 - Sales Analysis And History"
1000 REM " --- Position File"
1090 READ (ARE04_DEV,KEY=N0$+"I",DOM=main_read)
1100 main_read: REM " --- Main read"
1120 LET K0$=KEY(ARE04_DEV,END=4000)
1130 READ (ARE04_DEV)
1140 IF POS(N0$+"I"=K0$)<>1 THEN GOTO 4000
1150 EXTRACT record(ARE03_DEV,KEY=K0$(1,2)+K0$(4)+"000",DOM=main_read)ARE03$
1155 IF are03.ord_prt_flag$+are03.ord_lock$<>"YS" THEN GOTO main_read
1160 IF are03.ord_inv_flag$<>"I" THEN GOTO main_read
1165 LET are03.ord_lock$="1",SAM_RENEW$=CVS(are03.ar_po_number$,7),are03$=field(are03$)
1170 WRITE record(ARE03_DEV,KEY=are03$(1,20))ARE03$
1180 if pos("SAM RENEW"=sam_renew$) or pos("CREDIT SAM"=sam_renew$) then sam_renew$="Y" else sam_renew$="N"
1190 PRINT @(COLUMN,11),FNF$(are03.customer_nbr$,M0$)," ",are13.order_number$,
1200 REM " --- Addition Reads"
1210 DIM B[2],X3$(64),X4$(325)
1220 FIND (ARM01_DEV,KEY=N0$+are03.customer_nbr$,DOM=1230)IOL=ARM01A
1230 FIND (ARM02_DEV,KEY=N0$+are03.customer_nbr$+"  ",DOM=1240)IOL=ARM02A
1300 REM " --- Write Invoice History Header And Sorts"
1310 LET art03$=field(are03$),art03.ar_inv_nbr$=are03.ar_inv_nbr$,art03.order_number$=are13.order_number$,art03$=field(art03$)
1320 WRITE record(ART03_DEV,KEY=art03$(1,20))ART03$
1330 LET ART43_K$=art03$(1,4)+art03.ar_inv_nbr$+art03.customer_nbr$
1335 WRITE (ART43_DEV,KEY=ART43_K$)IOL=ART43A
1340 LET ART53_K$=Art03$(1,4)+art03.invoice_date$+art03.ar_inv_nbr$+art03.customer_nbr$
1345 WRITE (ART53_DEV,KEY=ART53_K$)IOL=ART53A
1350 REM " --- Check for voids and branch"
1360 IF are03.invoice_type$="V" THEN GOTO are63_rec
1400 REM " --- Write Manual Ship-To History"
1410 IF IH$<>"Y" THEN GOTO 1500
1420 IF X3$(38,1)<>"Y" THEN GOTO 1500
1430 FIND (ARE33_DEV,KEY=are03.firm_id$+are03.customer_nbr$+are03.order_number$,DOM=1500)IOL=ARE33A
1440 LET H0$=C0$,H0$(9,7)=are03.ar_inv_nbr$
1450 WRITE (ART33_DEV,KEY=H0$)IOL=ART33A
1500 REM " --- Copy Invoice Cash Receipts to History"
1510 IF are03.cash_sale$<>"Y" THEN GOTO are63_rec
1520 DIM DH$(56),D0$(56),D1$(30),D[1]
1530 FIND (ARE20_DEV,KEY=are03$(1,17),DOM=are63_rec)IOL=ARE20A
1540 LET DH$(1)=D0$,DH$(11,7)=D0$(50,7),DH$(50,7)=D0$(11,7)
1550 WRITE (ART07_DEV,KEY=DH$(1,17))IOL=ART07A
1600 are63_rec: REM " --- Write credit card transaction history, remove cc entry
1610 LET A63K$=are03.firm_id$+are03.customer_nbr$+are03.order_number$
1615 FINDrecord(ARE63_DEV,KEY=A63K$,DOM=are64_rec)are63$
1620 IF are03.invoice_type$="V" THEN GOTO remove_are63
1625 LET temp$=FATTR(are63$,"available"),temp=DEC(temp$(10,2)),are63.available$=FILL(temp)
1630 LET Art63$=Are63$,Art63.order_number$=Are63.order_number$,art63.ar_inv_nbr$=are03.ar_inv_nbr$
1635 LET art63$=field(art63$)
1640 WRITE record(ART63_DEV,KEY=Art63$(1,15))ART63$
1650 remove_are63: REMOVE (ARE63_DEV,KEY=A63K$,dom=*next)
1700 are64_rec: FIND record(ARE64_DEV,KEY=A63K$,DOM=cc_done)ARE64$
1705 IF are03.invoice_type$="V" THEN GOTO remove_are64
1710 LET Art64$=field(Are64$),Art64.ar_inv_nbr$=are03.ar_inv_nbr$
1720 LET temp$=FATTR(art64$,"cc_message"),temp=DEC(temp$(10,2)),temp$=art64.cc_message$+fill(temp)
1730 LET art64.cc_message$=temp$(1,temp), art64$=field(art64$)
1740 WRITE record(ART64_DEV,KEY=Art64$(1,15))ART64$
1750 remove_are64: REMOVE (ARE64_DEV,KEY=A63K$,dom=*next)
1800 cc_done:
1810 IF are03.invoice_type$="V" THEN GOTO main_read
1900 REM " --- Position Invoice Detail File"
1920 READ (ARE13_DEV,KEY=K0$(1,2)+K0$(4,15),DOM=2000)
2000 REM " --- Read next line item"
2010 LET K$=KEY(ARE13_DEV,END=3600)
2020 IF K$(1,17)<>K0$(1,2)+K0$(4,15) THEN GOTO 3600
2030 READ record(ARE13_DEV,key=k$)ARE13$
2035 SAM_FACTOR=1,UNEARNED_AMOUNT=0,SHIPPED=are13.qty_shipped,COST=shipped*are13.unit_cost,remaining=1,sales_2=0,unearned_2=0
2040 ITEM$=are13.item_number$,dist$=cvs(are13.dist_code$,3),ic_renew$=are13.sam_renew$; GOSUB GET_CONFIG
2045 IF LF$="Y" THEN FIND (IVW05_DEV,KEY=are13$(1,17)+item$+are13.line_number$,ERR=2050)IOL=IVW05A
2050 REM " --- Write Invoice History Detail"
2060 IF IH$<>"Y" THEN GOTO 2100
2070 IF X3$(38,1)<>"Y" THEN GOTO 2100
2080 LET art13$=field(are13$),art13.ar_inv_nbr$=are03.ar_inv_nbr$,art13$=field(art13$)
2090 WRITE record(ART13_DEV,KEY=art13$(1,20))ART13$
2095 GOSUB 10200; REM BASIS detail - WA# 205
2100 REM " --- Get Line Type"
2105 SALES=are13.ext_price*SAM_FACTOR,sales=sales/remaining,UNEARNED_AMT=are13.ext_price-SALES
2110 IF are13.commit_flag$="N" THEN GOTO 3500
2120 IF are13.line_code$=K2$ THEN GOTO 2200
2130 LET K2$=are13.line_code$
2140 DIM Y0$(32)
2150 FIND (ARM10_DEV,KEY=N0$+"E"+are13.line_code$,DOM=2200)IOL=ARM10E
2200 REM " --- Commission Detail"
2240 IF POS(Y0$(25,1)="SNP")<>0 THEN IF are13.ext_price>0 THEN LET B[0]=B[0]+are13.ext_price
2250 IF are13.ext_price<0 THEN LET B[1]=B[1]+are13.ext_price
2260 IF POS(Y0$(25,1)="OM")<>0 THEN LET B[2]=B[2]+are13.ext_price
2400 REM " --- Update Sales Analysis"
2405 IF SA$<>"Y" THEN GOTO 3500
2410 IF POS(Y0$(25,1)="SNPO")=0 THEN GOTO 3500
2420 IF POS(Y0$(25,1)="NPO") AND Y0$(32,1)="N" THEN GOTO 3500
2430 DIM X2$(62),T1$(64)
2440 IF Y0$(25,1)="N" THEN LET X2$(18,1)="P"
2450 ivm01_itm$=item$;gosub ivm01_itm
2460 FIND (IVM02_DEV,KEY=N0$+are13.warehouse_id$+ivm01_itm$,DOM=2470)IOL=IVM02A
2470 IF X2$(24,1)="W" THEN LET VENDOR$=T1$(22,6) ELSE LET VENDOR$=X2$(12,6)
2480 CALL "SYC.PB",N0$,SYS01_DEV,are03.invoice_date$,PERIOD$,YEAR$
2490 LET PERIOD=NUM(PERIOD$),sam_period=period,sam_year$=year$
2500 REM " --- Customer"
2505 IF SA1$(1,1)<>"Y" OR POS(X3$(11,1)="PI")=0 OR POS(X2$(18,1)="PI")=0 THEN GOTO 2600
2510 LET SEGS=3
2515 DIM SEG_END[SEGS],X0$(33)
2520 LET SEG_END[1]=11,SEG_END[2]=14,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2530 LET X0$(1)=N0$+YEAR$+are03.customer_nbr$+are13.product_type$+item$,SA_DEV=SAM01_DEV
2535 IF X3$(11,1)="P" OR SA2$(1,1)="P" THEN LET SEGS=2
2540 IF SA2$(1,1)="C" THEN LET SEGS=1
2545 GOSUB 6000
2550 REM " --- Product/Item/Customer Xref"
2560 LET X0$=N0$+YEAR$+are13.product_type$+item$+are03.customer_nbr$
2570 IF X3$(11,1)="P" OR SA2$(1,1)="P" THEN LET X0$(8,20)=""
2580 IF SA2$(1,1)="C" THEN LET X0$(5,23)=""
2590 WRITE (SAM21_DEV,KEY=X0$)IOL=SAM21A
2600 REM " --- Territory"
2605 IF SA1$(2,1)<>"Y" OR POS(X2$(18,1)="PI")=0 THEN GOTO 2650
2610 LET SEGS=3
2615 DIM SEG_END[SEGS],X0$(30)
2620 LET SEG_END[1]=8,SEG_END[2]=11,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2630 LET X0$(1)=N0$+YEAR$+Are03.territory$+are13.product_type$+item$,SA_DEV=SAM02_DEV
2635 IF X2$(18,1)="P" OR SA2$(2,1)="P" THEN LET SEGS=2
2640 IF SA2$(2,1)="T" THEN LET SEGS=1
2645 GOSUB 6000
2650 REM " --- Salesperson"
2655 IF SA1$(3,1)<>"Y" OR POS(X2$(18,1)="PI")=0 THEN GOTO 2700
2660 LET SEGS=3
2665 DIM SEG_END[SEGS],X0$(30)
2670 LET SEG_END[1]=8,SEG_END[2]=11,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2680 LET X0$(1)=N0$+YEAR$+Are03.slspsn_code$+are13.product_type$+item$,SA_DEV=SAM03_DEV
2685 IF X2$(18,1)="P" OR SA2$(3,1)="P" THEN LET SEGS=2
2690 IF SA2$(3,1)="S" THEN LET SEGS=1
2695 GOSUB 6000
2700 REM " --- Customer Type"
2705 IF SA1$(4,1)<>"Y" OR POS(X3$(11,1)="PI")=0 OR POS(X2$(18,1)="PI")=0 THEN GOTO 2750
2710 LET SEGS=3
2715 DIM SEG_END[SEGS],X0$(30)
2720 LET SEG_END[1]=8,SEG_END[2]=11,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2730 LET X0$(1)=N0$+YEAR$+X3$(34,3)+are13.product_type$+item$,SA_DEV=SAM04_DEV
2735 IF X2$(18,1)="P" OR SA2$(4,1)="P" THEN LET SEGS=2
2740 IF SA2$(4,1)="C" THEN LET SEGS=1
2745 GOSUB 6000
2750 REM " --- Ship-To"
2755 IF SA1$(5,1)<>"Y" OR POS(X3$(11,1)="PI")=0 OR POS(X2$(18,1)="PI")=0 THEN GOTO 2800
2760 LET SEGS=3
2765 DIM SEG_END[SEGS],X0$(36)
2770 LET SEG_END[1]=11,SEG_END[2]=17,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2780 LET X0$(1)=N0$+YEAR$+are03.customer_nbr$+are03.shipto_nbr$+item$,SA_DEV=SAM05_DEV
2785 IF X3$(11,1)="P" OR SA2$(5,1)="P" THEN LET SEGS=2
2790 IF SA2$(5,1)="C" THEN LET SEGS=1
2795 GOSUB 6000
2800 REM " --- Standard Industry Code"
2805 IF SA1$(6,1)<>"Y" OR POS(X2$(18,1)="PI")=0 OR FNP$(X4$(257,8))="" THEN GOTO 2850
2810 LET SEGS=3
2815 DIM SEG_END[SEGS],X0$(35)
2820 LET SEG_END[1]=13,SEG_END[2]=16,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2830 LET X0$(1)=N0$+YEAR$+X4$(257,8)+are13.product_type$+item$,SA_DEV=SAM06_DEV
2835 IF X2$(18,1)="P" OR SA2$(6,1)="P" THEN LET SEGS=2
2840 IF SA2$(6,1)="C" THEN LET SEGS=1
2845 GOSUB 6000
2850 REM " --- Product Type"
2860 IF SA1$(7,1)<>"Y" OR POS(X2$(18,1)="PI")=0 THEN GOTO warehouse
2870 LET SEGS=2
2880 DIM SEG_END[SEGS],X0$(27)
2890 LET SEG_END[1]=8,SEG_END[2]=LEN(X0$)+1; REM "End of segment + 1
2905 holdsales=sales
2910 if sales_2+unearned_2 then sales=sales_2*-1
2940 LET X0$(1)=N0$+YEAR$+are13.product_type$+item$,SA_DEV=SAM07_DEV
2950 IF X2$(18,1)="P" OR SA2$(7,1)="P" THEN LET SEGS=1
2960 GOSUB 6000
2990 sales=holdsales
3000 warehouse: REM " --- Warehouse"
3005 IF SA1$(8,1)<>"Y" OR POS(X2$(18,1)="PI")=0 THEN GOTO vendor
3010 LET SEGS=3
3015 DIM SEG_END[SEGS],X0$(29)
3020 LET SEG_END[1]=7,SEG_END[2]=10,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
3030 LET X0$(1)=N0$+YEAR$+are13.warehouse_id$+are13.product_type$+item$,SA_DEV=SAM08_DEV
3035 IF X2$(18,1)="P" OR SA2$(8,1)="P" THEN LET SEGS=2
3040 IF SA2$(8,1)="W" THEN LET SEGS=1
3045 GOSUB 6000
3050 vendor: REM " --- Stocking Vendor"
3055 IF SA1$(9,1)<>"Y" OR POS(X2$(18,1)="PI")=0 OR FNP$(VENDOR$)="" THEN GOTO dist_code
3060 LET SEGS=3
3065 DIM SEG_END[SEGS],X0$(33)
3070 LET SEG_END[1]=11,SEG_END[2]=14,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
3080 LET X0$(1)=N0$+YEAR$+VENDOR$+are13.product_type$+item$,SA_DEV=SAM09_DEV
3085 IF X2$(18,1)="P" OR SA2$(9,1)="P" THEN LET SEGS=2
3090 IF SA2$(9,1)="V" THEN LET SEGS=1
3095 GOSUB 6000
3100 dist_code: REM " --- Distribution Code"
3105 IF SA1$(10,1)<>"Y" OR POS(X2$(18,1)="PI")=0 THEN GOTO nonstock
3110 LET SEGS=3
3115 DIM SEG_END[SEGS],X0$(29)
3120 LET SEG_END[1]=7,SEG_END[2]=10,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
3130 LET X0$(1)=N0$+YEAR$+Are03.dist_code$+are13.product_type$+item$,SA_DEV=SAM10_DEV
3135 IF X2$(18,1)="P" OR SA2$(10,1)="P" THEN LET SEGS=2
3140 IF SA2$(10,1)="D" THEN LET SEGS=1
3145 GOSUB 6000
3150 nonstock: REM " --- Non-Stock"
3155 IF SA1$(11,1)<>"Y" OR Y0$(25,1)<>"N" THEN GOTO 3200
3160 LET SEGS=2
3165 DIM SEG_END[SEGS],X0$(47)
3170 LET SEG_END[1]=8,SEG_END[2]=LEN(X0$)+1; REM "End of segment + 1
3180 LET X0$(1)=N0$+YEAR$+are13.product_type$+are13.order_memo$,SA_DEV=SAM11_DEV
3185 IF SA2$(11,1)="P" THEN LET SEGS=1
3195 GOSUB 6000
3500 REM " --- Loop back for next line item"
3590 GOTO 2000
3600 REM " --- Job Numbers"
3610 IF JN$<>"Y" THEN GOTO 3900
3620 IF FNP$(are03.ar_job_nbr$)="" THEN GOTO 3900
3630 EXTRACT (ARM09_DEV,KEY=N0$+are03.customer_nbr$+are03.ar_job_nbr$,DOM=3690)IOL=ARM09A
3650 LET S0$(37,3)=are03.invoice_date$,S[1]=S[1]+B[0]-B[1]-are03.discount_amt+are03.freight_amt+B[2]+are03.tax_amount
3660 IF S0$(34,3)="   " THEN LET S0$(34,3)=are03.invoice_date$
3680 WRITE (ARM09_DEV,KEY=S0$(1,18))IOL=ARM09A
3900 REM " --- Loop back for next invoice"
3990 GOTO main_read
4000 REM " --- All done"
4010 READ (SMC02_DEV,key="",knum=0,err=*next);rem 'Position file at beginning before update routine
4020 GOSUB UPD_SAM_SA
4090 RUN "OPU.CB"
4500 REM " --- NO to Update: Clear On-Sales-Register Flags
4510 READ (ARE04_DEV,KEY=N0$+"I",DOM=4511)
4520 LET K0$=KEY(ARE04_DEV,END=4600)
4530 READ (ARE04_DEV)
4540 IF POS(N0$+"I"=K0$)<>1 THEN GOTO 4600
4550 EXTRACT record(ARE03_DEV,KEY=K0$(1,2)+K0$(4)+"000",DOM=4590)ARE03$
4560 IF are03.ord_lock$<>"S" THEN GOTO 4590
4570 LET are03.ord_lock$="N",are03$=field(are03$)
4580 WRITE record(ARE03_DEV,KEY=Are03$(1,20))ARE03$
4590 GOTO 4520
4600 GOTO 9900
6000 REM " --- Write Sales Analysis Records"
6005 LET X0$(SEG_END[SEGS])=""
6010 DIM X[12],Y[12],Z[12]
6020 FIND (SA_DEV,KEY=X0$,DOM=6030)IOL=SAM01A
6030 LET X[PERIOD-1]=X[PERIOD-1]+SHIPPED
6040 PRECISION 2
6050 LET Y[PERIOD-1]=Y[PERIOD-1]+COST
6060 PRECISION I[2]
6070 LET Z[PERIOD-1]=Z[PERIOD-1]+SALES
6080 WRITE (SA_DEV,KEY=X0$)IOL=SAM01A
6090 RETURN
8000 REM " --- Functions"
8095 DEF FNP$(Q$)=CVS(Q$,2)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9900 RUN "SYS.AA"
9999 END
10000 REM " --- Open files  - WA# 205
10005 rem 'ARE-73,SMC-01,SMC-02,CSM-10 are already open
10010 LET FILES$[41]="SNM-01",FILES$[42]="SNT-01",FILES$[43]="SNT-03"
10019 rem LET FILES$[44]="ARE-73"
10020 LET FILES$[45]="ARE-83",FILES$[46]="ART-73"
10025 LET FILES$[47]="ART-83",FILES$[48]="SNT-02",FILES$[49]="CSM-03"
10035 LET FILES$[50]="ARE-63",FILES$[51]="ARE-64",FILES$[52]="ART-63"
10039 rem LET FILES$[54]="SMC-01"
10040 LET FILES$[53]="ART-64",FILES$[55]="CSM-01"
10045 LET FILES$[56]="ARE-93",FILES$[57]="ART-93",FILES$[58]="SNT-04"
10047 rem LET FILES$[59]="SMC-02",FILES$[60]="CSM-10"
10048 LET FILES$[61]="SNM-02"
10050 CALL "SYC.DA",1,41,61,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
10060 IF STATUS>0 THEN GOTO 9900
10070 LET SNM01_DEV=CHANNELS[41],SNT01_DEV=CHANNELS[42],SNT03_DEV=CHANNELS[43]
10074 rem LET ARE73_DEV=CHANNELS[44],ARE83_DEV=CHANNELS[45],ART73_DEV=CHANNELS[46]
10075 LET ARE83_DEV=CHANNELS[45],ART73_DEV=CHANNELS[46]
10080 LET ART83_DEV=CHANNELS[47],SNT02_DEV=CHANNELS[48],CSM03_DEV=CHANNELS[49]
10085 LET ARE63_DEV=CHANNELS[50],ARE64_DEV=CHANNELS[51],ART63_DEV=CHANNELS[52]
10089 rem LET ART64_DEV=CHANNELS[53],SMC01_DEV=CHANNELS[54],CSM01_DEV=CHANNELS[55]
10090 LET ART64_DEV=CHANNELS[53],CSM01_DEV=CHANNELS[55]
10095 LET ARE93_DEV=CHANNELS[56],ART93_DEV=CHANNELS[57],SNT04_DEV=CHANNELS[58]
10097 rem LET SMC02_DEV=CHANNELS[59],CSM10_DEV=CHANNELS[60],SNM02_DEV=CHANNELS[61]
10098 LET SNM02_DEV=CHANNELS[61]
10100 REM " --- Templates (formerly Iolists)"
10110 call "templates.pgm::ARE73";dim art73$:fattr(are73$)
10120 call "templates.pgm::ARE83"; call "templates.pgm::ART83"
10130 call "templates.pgm::ARE63"; call "templates.pgm::ART63"
10140 call "templates.pgm::ARE64"; call "templates.pgm::ART64"
10150 call "templates.pgm::ARE93"; call "templates.pgm::ART93"
10160 call "templates.pgm::CSM10"
10170 call "templates.pgm::SMC01"
10180 call "templates.pgm::SMC02"
10190 RETURN
10200 REM " --- Write BASIS History files - WA# 205
10210 FIND record (ARE73_DEV,KEY=are13$(1,20),DOM=10250)are73$
10220 LET art73$=field(are73$),art73$(1,20)=art13$(1,20),art73$=field(art73$)
10230 WRITE record(ART73_DEV,KEY=art73$(1,20))art73$
10240 READ (ARE83_DEV,KEY=are13$(1,20),DOM=*next)
10250 while 1
10260   LET ARE83_K$=KEY(ARE83_DEV,END=*break)
10270   IF POS(are13$(1,20)=ARE83_K$)<>1 THEN break
10280   READ record(ARE83_DEV,KEY=ARE83_K$)ARE83$
10290   LET art83$=field(are83$),art83$(1,20)=art13$(1,20),art83$=field(art83$)
10300   WRITE record(ART83_DEV,KEY=art83$(1,26))art83$
10310   READ (ARE93_DEV,KEY=ARE83_K$(1,20),DOM=*next)
10315   while 2
10320     ARE93_k$=key(are93_dev,END=*break)
10330     IF POS(ARE83_K$(1,20)=ARE93_k$)<>1 THEN break
10335     READ record(ARE93_DEV,key=ARE93_k$)ARE93$
10340     LET art93$=field(are93$),ART93.ar_inv_nbr$=art83.ar_inv_nbr$
10345     kl=len(are93_k$),art93$=field(art93$)
10350     WRITE record(ART93_DEV,KEY=art93$(1,kl))ART93$
10360   wend
10380 wend
10390 RETURN
13000 GET_CONFIG:
13005 dim are73$:fattr(are73$)
13010 FIND RECORD(ARE73_DEV,KEY=K$,DOM=*next)ARE73$
13020 call "distribution_code.pgm",n0$,item$,are73.type_of_sale$,are73.lic_property1$,csm10_dev,ivm02_dev,arm10_dev,dist$
13060 IF CVS(ARE73.CONTRACT$,1+2)<>"" AND ARE73.TYPE_OF_SALE$(1,1)="S" THEN GOSUB GET_SAM
13070 CONFIG_RETURN:
13080 RETURN
13200 GET_SAM:
13210 FIND RECORD(SMC01_DEV,KEY=ARE73.CONTRACT$,DOM=SAM_RETURN)SMC01$
13220 IF SMC01.SAM_ACTIVE$="N" and are13.ext_price>0 THEN GOTO SAM_RETURN
13230 CONTRACT$=SMC01.CONTRACT$
13240 ANNUAL_JUL=JUL(NUM(SMC01.ANNUAL_DT$(1,4)),NUM(SMC01.ANNUAL_DT$(5,2)),NUM(SMC01.ANNUAL_DT$(7,2)))
13250 REMAINING=max(ANNUAL_JUL-TODAY,1),sam_factor=1
13260 IF SAM_RENEW$="Y" or ic_renew$="Y" THEN REMAINING=365;SAM_FACTOR=0;GOTO SAM_RETURN
13270 IF num(SMC01.DISB_METHOD$)>0 THEN REMAINING=NUM(SMC01.DISB_METHOD$)
13290 SAM_RETURN:
13300 while are13.ext_price<0
13310   smc2k$=cvs(are13.order_memo$,3)
13320   readrecord(smc02_dev,key=smc2k$,knum=0,dom=*break)SMC02$
13330   orig_amt=num(smc02.orig_amount$)
13340   if orig_amt+are13.ext_price then break;rem 'Check credit amt=original amt
13350   unearned_2=num(smc02.unearned_bal$)
13360   sales_2=orig_amt-unearned_2
13370   smc02.days_remaining$="0",smc02$=field(smc02$);rem 'Avoids further updates
13380   writerecord(smc02_dev,key=smc2k$)SMC02$
13390   break
13400 wend
13500 RETURN
14000 UPD_SAM_SA:
14010 READ RECORD(SMC02_DEV,END=UPD_DONE)SMC02$
14015 IF SMC02.FIRM_ID$<>N0$ THEN GOTO UPD_SAM_SA
14020 LAST_TRNS_DT=JUL(NUM(SMC02.LAST_TRANS_DT$(1,4)),NUM(SMC02.LAST_TRANS_DT$(5,2)),NUM(SMC02.LAST_TRANS_DT$(7,2)))
14030 REMAINING=NUM(SMC02.DAYS_REMAINING$)
14040 DAYS_PAST=TODAY-LAST_TRNS_DT,TOT_UNEARNED=NUM(SMC02.UNEARNED_BAL$)
14045 IF DAYS_PAST<=0 OR REMAINING<=0 THEN GOTO UPD_SAM_SA
14050 IF DAYS_PAST>REMAINING THEN DAYS_PAST=REMAINING
14060 PRECISION 4
14070 SAM_FACTOR=DAYS_PAST
14080 PRECISION 2
14090 SALES=SAM_FACTOR*TOT_UNEARNED,sales=sales/remaining,SHIPPED=1,COST=0
14100 REM " --- Product Type"
14110 LET SEGS=2,PERIOD=sam_period,YEAR$=sam_year$
14120 DIM SEG_END[SEGS],X0$(27)
14130 LET SEG_END[1]=8,SEG_END[2]=LEN(X0$)+1; REM "End of segment + 1
14140 LET X0$(1)=SMC02.FIRM_ID$+YEAR$+"SAM"+SMC02.ITEM_NUMBER$,SA_DEV=SAM07_DEV
14150 GOSUB 6000
14160 GOTO UPD_SAM_SA
14170 UPD_DONE:
14180 RETURN
15000 ivm01_itm:
15010 ivmok=0
15020 FIND (ivm01_dev,KEY=n0$+ivm01_itm$,ERR=*next)iol=ivm01a;ivmok=1
15030 if ivmok or len(cvs(ivm01_itm$,3))<15 then return
15040 ivm01_itm$(10,3)="CUR"
15050 if ivm01_itm$(13,3)<>"STD" and ivm01_itm$(1,3)="BAS" then ivm01_itm$(13,3)="EXP"
15060 FIND (ivm01_dev,KEY=n0$+ivm01_itm$,ERR=*next)iol=ivm01a;ivmok=1
15090 return
