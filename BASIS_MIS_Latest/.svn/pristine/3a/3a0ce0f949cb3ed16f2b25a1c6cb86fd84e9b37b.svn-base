0010 REM "APR - Disbursements Journal"
0020 REM "Program APR.MB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0165 CALL "BPS.01",3,PRTR$,STATUS; IF STATUS THEN GOTO 9900
0170 CALL "SYC.GA",7,1,"",PRTR$,STATUS
0175 IF STATUS THEN GOTO 9900
0200 REM " --- IOLIST's"
0210 APM01A: IOLIST A0$(1),A1$(1)
0240 APM10A: IOLIST H0$(1)
0250 APE05A: IOLIST B0$(1),B1$(1),B[ALL]
0260 APT02A: IOLIST C0$(1),C[0],C[1]
0270 APW05A: IOLIST K$
0280 GLM01A: IOLIST D0$(1),D1$(1)
0290 GLW04A: IOLIST W0$(1),W[0]
0400 REM " --- Parameters"
0440 CALL "SYC.RM",M1$,M1,9,15
0450 LET M0=LEN(M0$),M1=LEN(M1$),G5=LEN(G5$),HEADINGS=4
0460 IF P3$(1,1)<>"Y" THEN LET HEADINGS=3
0500 REM " --- Initializations"
0510 DIM A0$(8),A1$(30),B0$(33),B1$(30),B[2],C0$(34),C[1],O[9],H[9]
0520 DIM HEADINGS$[HEADINGS],W0$(2+G[4]),W[1],J$(M1*3,"-"),J1$(40)
0530 DIM AT[2],CT[2],VT[2],RT[2],T[2]
0545 LET HEADINGS$[0]=N1$,HEADINGS$[2]=H3$,NF$="(Not On File)"
0550 IF SEQUENCE$="C" THEN LET HEADINGS$[1]=N3$+" By Check Number"
0555 IF SEQUENCE$="N" THEN LET HEADINGS$[1]=N3$+" By Vendor"
0560 IF SEQUENCE$="A" THEN LET HEADINGS$[1]=N3$+" By Alternate Sequence"
0565 LET WHEN$=F0$(7,3),CLOCK$="",PAGE=0,WIDTH=132,L9=59,L=L9+1
0570 LET VM=MAX(M0,8),GM=MAX(G5,9),DONE=0,NUMBER=0,ALTSEQ$=""
0575 LET T0$="",T1$="    ",T2$="",T3$="",AH$="Account",PRINTED$="N"
0580 IF GL$="Y" THEN GOTO 0600
0585 LET AH$="",GM=0,G5=0
0600 REM " --- Initialize Print Positions"
0610 LET O[0]=0,O[9]=WIDTH-M1,O[8]=O[9]-M1,O[7]=O[8]-M1,O[6]=O[7]-G5
0615 LET O[5]=O[6]-12,W=3+MAX(M0,10),VH$="Vendor",NH$="Name",H[5]=O[5]
0620 LET H[7]=O[7]+M1-8,H[8]=O[8]+M1-9,H[9]=O[9]+M1-7
0625 ON POS(SEQUENCE$="CNA") GOTO 9900,0630,0650,0670
0630 LET O[1]=8,O[2]=O[1]+10,O[3]=O[2]+10,O[4]=O[3]+VM,X=30
0635 LET DW=MIN(30,O[5]-O[4]-1)
0640 GOTO 0680
0650 LET O[3]=0,O[4]=O[3]+VM,O[2]=O[5]-10,O[1]=O[2]-10,O[0]=O[1]-8,X=30
0655 LET DW=MIN(30,O[0]-O[4]-1)
0660 GOTO 0680
0670 LET O[3]=0,O[4]=11,O[2]=O[5]-10,O[1]=O[2]-10,O[0]=O[1]-9
0675 LET VH$="Alt Seq",NH$="Vendor",DW=MIN(31+M0,O[0]-O[4]-1)
0680 FOR X=0 TO 6
0685 LET H[X]=O[X]
0690 NEXT X
0800 REM " --- Sort if printing in distribution sequence"
0810 IF SEQUENCE$<>"C" THEN GOSUB 5500
0900 REM " --- Position File"
0910 CALL "SYC.NB","Printing",W,COLUMN
0980 READ (APW05_DEV,KEY=N0$,DOM=0990)
0990 READ (APE05_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Get next APW-05 key"
1010 IF SEQUENCE$="C" THEN GOTO 1100
1020 LET K$=KEY(APW05_DEV,END=4000)
1030 READ (APW05_DEV)
1080 LET K$=K$(1,4)+K$(21,7)+K$(15,6)+K$(28,10)
1090 GOTO 1200
1100 REM " --- Get next APE-05 key"
1110 LET K$=KEY(APE05_DEV,END=4000)
1200 REM " --- Read next APE-05 record"
1210 IF POS(N0$=K$)<>1 THEN GOTO 4000
1220 READ (APE05_DEV,KEY=K$)IOL=APE05A
1230 IF B0$(28,3)<BEGDATE$ THEN GOTO 3900
1240 IF B0$(28,3)>ENDDATE$ THEN GOTO 3900
1300 REM " --- Level breaks"
1310 IF T0$<>B0$(3,2) THEN GOSUB 6000
1315 IF T1$(1,4)="TEMP" AND NAME$<>B1$ THEN GOSUB 6200; GOTO 1330
1320 IF T1$<>B0$(12,6) THEN GOSUB 6200
1330 IF T2$<>B0$(5,7) THEN GOSUB 6400
1400 REM " --- Voided check?"
1410 IF B0$(31,1)="V" THEN GOTO 2000
1500 REM " --- Accumulate invoice distribution"
1510 LET W$=B0$(1,4)+B0$(12,6)+"I"+B0$(18,10),NUMBER=0,PRINTED$="N"
1520 IF GL$<>"Y" THEN GOTO 1700
1530 GOSUB 6600
1540 IF NUMBER>0 THEN GOTO 1700
1550 LET W$=W$(1,10)+"C"+T2$+"   ",PRINTED$="Y"
1560 GOSUB 6600
1700 REM " --- Pro-rate"
1710 IF NUMBER<1 THEN GOTO 2000
1720 DIM R[NUMBER]
1725 LET W0=0
1730 FOR X=1 TO NUMBER
1740 IF B[0]<>0 AND TOTAL<>0 THEN LET R[X]=B[0]*AMOUNTS[X]/TOTAL,W0=W0+R[X]
1750 NEXT X
1760 IF W0<>B[0] THEN LET R[1]=R[1]+B[0]-W0
1770 FOR X=1 TO NUMBER
1780 LET AMOUNTS[X]=R[X]
1790 NEXT X
2000 REM " --- Print initializations"
2010 DIM X[2]
2020 LET INVOICE$=B0$(18,10),ACCOUNT$=""
2030 LET X[0]=B[0],X[1]=B[1]+B[2],X[2]=B[0]-B[1]-B[2]
2040 IF NUMBER>0 THEN LET ACCOUNT$=FNF$(ACCOUNTS$[1](1,G[3]),G5$)
2050 IF NUMBER>0 THEN LET X[0]=AMOUNTS[1]
2400 REM " --- Print void check"
2410 IF B0$(31,1)<>"V" THEN GOTO 2500
2420 IF L+2>L9 THEN GOSUB 5000
2430 PRINT (7)""
2440 PRINT (7)@(O[0]),CHECK$,@(O[1]),TYPE$,@(O[2]),PAID$
2450 LET L=L+2
2490 GOTO 3900
2500 REM " --- Print check header"
2520 IF SEQUENCE$="A" THEN LET NAME$(1)=VENDOR$+" "+NAME$,VENDOR$=ALTSEQ$
2530 IF CHECK$="" THEN GOTO 2550
2535 IF L+1>L9 THEN GOSUB 5000
2540 PRINT (7)""
2545 LET L=L+1
2550 IF L+1>L9 THEN GOSUB 5000
2555 PRINT (7)@(O[0]),CHECK$,@(O[1]),TYPE$,@(O[2]),PAID$,@(O[3]),VENDOR$,@(O[4]),NAME$,@(O[5]),INVOICE$,@(O[6]),ACCOUNT$,@(O[7]),X[0]:M1$
2560 LET L=L+1,L1=L1+1
2590 GOSUB 5400
2600 REM " --- G/L Distribution"
2610 IF NUMBER<1 THEN GOTO 3000
2620 LET ACCOUNT$=ACCOUNTS$[1],AMOUNT=AMOUNTS[1],FIRST=2
2630 GOSUB 6900
2690 IF NUMBER>1 THEN GOSUB 5200
3000 REM 
3050 LET CHECK$="",TYPE$="",PAID$="",VENDOR$="",NAME$="",ALTSEQ$=""
3900 REM " --- Loop back for next APE-05 record"
3990 GOTO 1000
4000 REM " --- All Done"
4020 LET DONE=1
4030 GOSUB 6000
4070 LET TOTAL$="Total For Report",T[0]=RT[0],T[1]=RT[1],T[2]=RT[2]
4080 GOSUB 6800
4100 REM " --- Run next overlay"
4110 IF GL$<>"Y" THEN GOTO 9900
4180 PRINT @(COLUMN,11),J1$(1,W),
4190 RUN "GLR.XB"
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)@(H[0]),"Check",@(H[1]),"Check",@(H[2]),"  Check",@(H[5]),"Invoice",@(H[7]),"Distrib",@(H[8]),"Discount",@(H[9])," Check"
5050 PRINT (7)@(H[0]),"Number",@(H[1]),"Type",@(H[2]),"  Date",@(H[3]),VH$,@(H[4]),NH$,@(H[5]),"Number",@(H[6]),AH$,@(H[7])," Amount",@(H[8])," Amount",@(H[9]),"Amount"
5060 LET L=L+2
5090 RETURN 
5200 REM " --- Print G/L distribution"
5210 DIM X[2]
5220 FOR N=FIRST TO NUMBER
5230 IF L+1>L9 THEN GOSUB 5000
5240 LET ACCOUNT$=ACCOUNTS$[N],AMOUNT=AMOUNTS[N],L=L+1,X[0]=AMOUNT
5250 PRINT (7)@(O[6]),FNF$(ACCOUNT$(1,G[3]),G5$),@(O[7]),AMOUNT:M1$
5260 GOSUB 5400
5270 GOSUB 6900
5280 NEXT N
5290 RETURN 
5400 REM " --- Accumulate totals"
5410 FOR X=0 TO 2
5420 LET AT[X]=AT[X]+X[X],CT[X]=CT[X]+X[X]
5430 LET VT[X]=VT[X]+X[X],RT[X]=RT[X]+X[X]
5440 NEXT X
5490 RETURN 
5500 REM " --- Sort APE-05 by vendor number or alternate sequence"
5510 CALL "SYC.NB","Sorting",3+M0,COLUMN
5590 READ (APE05_DEV,KEY=N0$,DOM=5600)
5600 REM " --- Read next APE-05 record"
5605 DIM VENDOR$(M0),ALTSEQ$(10)
5610 LET K$=KEY(APE05_DEV,END=5900)
5620 IF POS(N0$=K$)<>1 THEN GOTO 5900
5630 READ (APE05_DEV)IOL=APE05A
5640 IF B0$(28,3)<BEGDATE$ THEN GOTO 5600
5650 IF B0$(28,3)>ENDDATE$ THEN GOTO 5600
5660 LET X$="",VENDOR$(1)=B0$(12,6)
5665 IF P3$(1,1)="Y" THEN LET X$=B0$(3,2)+" "
5670 IF VENDOR$(1,4)<>"TEMP" THEN LET VENDOR$(1)=FNF$(VENDOR$(1,P[0]),M0$)
5675 PRINT @(COLUMN,11),X$,VENDOR$,
5700 REM " --- By alternate sequence"
5710 IF SEQUENCE$="N" THEN GOTO 5800
5720 DIM A0$(8),A1$(196)
5730 LET A0$(1)=B0$(1,2)+B0$(12,6)
5740 FIND (APM01_DEV,KEY=A0$,DOM=5750)IOL=APM01A
5750 LET ALTSEQ$(1)=A1$(146,10)
5800 REM " --- Write sort record"
5810 LET K$=B0$(1,4)+ALTSEQ$+B0$(12,6)+B0$(5,7)+B0$(18,10)
5820 WRITE (APW05_DEV,KEY=K$)IOL=APW05A
5890 GOTO 5600
5900 REM " --- Sort completed"
5910 PRINT @(0,10),'CL',@(0,11),'CL',@(0,12),'CL',
5920 LET VENDOR$="",ALTSEQ$=""
5990 RETURN 
6000 REM " --- AP Type Break"
6010 IF T0$="" THEN GOTO 6100
6020 IF SEQUENCE$="C" THEN GOSUB 6400 ELSE GOSUB 6200
6040 IF P3$(1,1)<>"Y" THEN GOTO 6190
6050 LET TOTAL$="Total For "+H4$,T[0]=AT[0],T[1]=AT[1],T[2]=AT[2]
6060 GOSUB 6800
6100 REM 
6110 IF DONE>0 THEN GOTO 6190
6120 DIM H0$(32),AT[2]
6130 LET L=L9+1,T0$=B0$(3,2),H0$(6)=NF$
6140 FIND (APM10_DEV,KEY=N0$+"A"+T0$,DOM=6150)IOL=APM10A
6150 LET H4$="AP Type "+T0$+" "+FNP$(H0$(6,20)),HEADINGS$[3]=H4$
6190 RETURN 
6200 REM " --- Vendor Break"
6210 IF T1$="" THEN GOTO 6300
6220 GOSUB 6400
6230 IF SEQUENCE$="C" THEN GOTO 6300
6240 IF L1=0 THEN GOTO 6300
6250 LET X$=T1$(1,4),T[0]=VT[0],T[1]=VT[1],T[2]=VT[2]
6260 IF X$<>"TEMP" THEN LET X$=FNF$(T1$(1,P[0]),M0$)
6270 LET TOTAL$="Total For Vendor "+X$
6280 GOSUB 6800
6300 REM 
6310 IF DONE>0 THEN GOTO 6390
6315 DIM VT[2],VENDOR$(M0),NAME$(DW),ALTSEQ$(10),A0$(8),A1$(198)
6320 LET X$="",T1$=B0$(12,6)
6325 IF P3$(1,1)="Y" THEN LET X$=B0$(3,2)
6330 IF T1$(1,4)="TEMP" THEN GOTO 6370
6333 IF FNP$(T1$)="" THEN GOTO 6380
6335 LET A0$(1)=N0$+T1$,A1$(1)=NF$,VENDOR$(1)=FNF$(A0$(3,P[0]),M0$)
6340 FIND (APM01_DEV,KEY=A0$,DOM=6345)IOL=APM01A
6345 LET NAME$(1)=A1$,ALTSEQ$(1)=A1$(146,10),OLDNAME$=NAME$,OLDVEND$=VENDOR$
6350 GOTO 6380
6370 LET VENDOR$(1)=T1$,NAME$(1)=B1$
6380 IF SEQUENCE$="N" THEN PRINT @(COLUMN,11),X$,VENDOR$,
6385 IF SEQUENCE$="A" THEN PRINT @(COLUMN,11),X$,ALTSEQ$,
6390 RETURN 
6400 REM " --- Check Break"
6410 IF T2$="" THEN GOTO 6500
6415 IF FNP$(W$)="" THEN GOTO 6470
6417 IF PRINTED$="Y" THEN GOTO 6470
6420 LET W$=W$(1,10)+"C"+T2$+"   ",FIRST=1
6430 GOSUB 6600
6440 IF NUMBER>0 THEN GOSUB 5200
6470 IF L1=0 THEN GOTO 6500
6480 LET TOTAL$="Totals For Check "+T2$,T[0]=CT[0],T[1]=CT[1],T[2]=CT[2]
6490 GOSUB 6800
6500 REM 
6510 IF DONE>0 THEN GOTO 6590
6515 DIM CT[2]
6520 LET T2$=B0$(5,7),X$="",CHECK$=T2$,TYPE$="Computer",L1=0
6530 LET PAID$=FNB$(B0$(28,3))
6540 IF B0$(31,1)="M" THEN LET TYPE$="Manual"
6550 IF B0$(31,1)="R" THEN LET TYPE$="Reversal"
6560 IF B0$(31,1)="V" THEN LET TYPE$="Void"
6570 IF P3$(1,1)="Y" THEN LET X$=B0$(3,2)
6575 IF SEQUENCE$<>"C" THEN GOTO 6590
6580 PRINT @(COLUMN,11),X$,CHECK$,
6585 LET VENDOR$=OLDVEND$,NAME$=OLDNAME$
6590 RETURN 
6600 REM " --- Accumulate G/L distribution"
6610 DIM ACCOUNTS$[100],AMOUNTS[100]
6620 LET NUMBER=0,TOTAL=0
6690 READ (APT02_DEV,KEY=W$,DOM=6700)
6700 REM " --- Read next APT-02 record"
6710 LET K$=KEY(APT02_DEV,END=6790)
6715 IF POS(W$=K$)<>1 THEN GOTO 6790
6720 READ (APT02_DEV)IOL=APT02A
6723 IF NUMBER<1 THEN GOTO 6750
6725 FOR X=1 TO NUMBER
6730 LET P=X
6735 IF C0$(22,G[4])=ACCOUNTS$[X] THEN EXITTO 6760
6740 NEXT X
6750 LET NUMBER=NUMBER+1,P=NUMBER,ACCOUNTS$[P]=C0$(22,G[4])
6760 LET AMOUNTS[P]=AMOUNTS[P]+C[0],TOTAL=TOTAL+C[0]
6780 GOTO 6700
6790 RETURN 
6800 REM " --- Print subtotals/totals"
6810 IF L+2>L9 THEN GOSUB 5000
6820 PRINT (7)@(O[7]),J$
6830 PRINT (7)@(O[7]-LEN(TOTAL$)),TOTAL$,@(O[7]),T[0]:M1$,@(O[8]),T[1]:M1$,@(O[9]),T[2]:M1$
6840 LET L=L+2
6850 DIM T[2]
6890 RETURN 
6900 REM " --- Update G/L Summary"
6910 IF GL$<>"Y" THEN GOTO 6990
6920 IF AMOUNT=0 THEN GOTO 6990
6930 DIM W0$(2+G[4]),W[1]
6950 LET W0$(1)=N0$+ACCOUNT$
6960 FIND (GLW04_DEV,KEY=W0$,DOM=6970)IOL=GLW04A
6970 LET W[0]=W[0]+AMOUNT
6980 WRITE (GLW04_DEV,KEY=W0$)IOL=GLW04A
6990 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 REM " --- Return To Menu"
9950 RUN "SYS.AA"
9999 END
