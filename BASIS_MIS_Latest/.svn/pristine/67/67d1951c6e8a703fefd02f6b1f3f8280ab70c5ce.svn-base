0010 REM "GLU - Financial Statement Update"
0020 REM "Program GLU.EA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LOCK (GLM22_DEV)
0120 LOCK (GLE06_DEV)
0200 REM " --- IOLIST's"
0210 GLM01A: IOLIST A0$(1),A1$(1)
0220 GLM11A: IOLIST X0$,A2$(1)
0230 GLM21A: IOLIST X0$,A2$(1)
0240 GLM02A: IOLIST B0$,A[ALL],U[ALL]
0270 GLE06A: IOLIST Y0$(1),Y[ALL]
0280 GLM22A: IOLIST C0$(1),C1$(1),C2$,C3$
0290 GLE07A: IOLIST D0$(1),D[ALL]
0400 REM " --- Parameters"
0450 LET MX=8,MY=1,MZ=1,MT=3,YEAR=FNYY_YEAR(BEGYEAR$)
0500 REM " --- Initializations"
0510 DIM A0$(2+P[4]),A1$(40),A2$(6),A[MP],C0$(8),C1$(50),D0$(9),D[MT],U[MP],Y0$(10),Y[MT]
0520 DIM F[MX],I[MX,MY,MZ],J[MX,MY,MZ],T[MX,MY,MZ],S[MX,MY,MZ]
0521 REM " --- Array definition for I[X,Y,Z],J[X,Y,Z],T[X,Y,Z],S[X,Y,Z]"
0522 REM " --- X: 0=C-PERIOD, 1=C-QTR, 2=C-YEAR
0523 REM " ---    3=P-PERIOD, 4=P-QTR, 5=P-YEAR
0524 REM " ---    6=N-PERIOD, 7=N-QTR, 8=N-YEAR"
0525 REM " --- Y: 0=Actual, 1=Budget"
0526 REM " --- Z: 0=Amount, 1=Units"
0540 LET CPN$="CPN",PQY$="PQY",RECORDS$=""
0550 IF P4$(6,1)="Y" THEN GOTO 0600
0560 IF YEAR=P[2] THEN LET RECORDS$="4501"
0570 IF YEAR=P[2]-1 THEN LET RECORDS$="0123"
0580 IF YEAR=P[2]-2 THEN LET RECORDS$="23"
0590 GOTO 0650
0600 IF YEAR=P[2] THEN LET RECORDS$="0123"
0610 IF YEAR=P[2]-1 THEN LET RECORDS$="23"
0620 IF YEAR=P[2]+1 THEN LET RECORDS$="4501"
0650 REM " --- Determine starting period for quarter"
0670 LET BEGQTR=MOD(PERIOD,3)
0680 IF BEGQTR=0 THEN LET BEGQTR=3
0690 LET BEGQTR=PERIOD-BEGQTR+1
0700 REM " --- Background"
0710 CALL "SYC.NB","Updating",M0+3,COLUMN
0900 REM " --- Disallow 'M'enu option in Error Routine
0910 LET EXIT_CTRL=1
0950 REM " --- Position GLM-01"
0980 READ (GLM01_DEV,KEY=N0$,DOM=0990)
0990 IF N0$="99" THEN READ (GLM01_DEV,KEY="",DOM=1000)
1000 REM " --- Read next GLM-01 record"
1010 LET K$=KEY(GLM01_DEV,END=4000)
1020 IF N0$="99" THEN GOTO 1040
1030 IF POS(N0$=K$)<>1 THEN GOTO 4000
1040 READ (GLM01_DEV)IOL=GLM01A
1050 IF FNP$(A1$)="" THEN GOTO 3990
1060 LET FIRM$=""
1070 IF N0$="99" THEN LET FIRM$=A0$(1,2)+" "
1080 PRINT @(COLUMN,11),FIRM$,FNF$(A0$(3,P[3]),M0$),
1100 REM " --- Read GLM-02 records"
1105 DIM X[MX,MY,MP]
1110 FOR R=1 TO LEN(RECORDS$)
1120 IF P4$(2,1)<>"Y" THEN IF POS(RECORDS$(R,1)="135")>0 THEN GOTO 1190
1130 DIM B0$(3+P[4]),A[MP],U[MP]
1140 LET B0$(1)=A0$,B0$(3+P[4],1)=RECORDS$(R,1)
1150 FIND (GLM02_DEV,KEY=B0$,DOM=1160)IOL=GLM02A
1160 FOR X=0 TO MP
1170 LET X[R-1,0,X]=A[X],X[R-1,1,X]=U[X]
1180 NEXT X
1190 NEXT R
1800 REM " --- Set normal sign based on account type"
1810 LET SIGN=1
1820 IF POS(A1$(36,1)="LCI")<>0 THEN LET SIGN=-1
2000 REM " --- Determine beginning balance for quarter"
2010 DIM F[MX],I[MX,MY,MZ],J[MX,MY,MZ],T[MX,MY,MZ]
2020 LET F[0]=X[0,0,0]*SIGN,F[1]=X[2,0,0]*SIGN
2100 REM " --- Accumulate totals"
2110 FOR X=0 TO 1
2120 FOR Y=0 TO 1
2130 LET T[0,X,Y]=X[X,Y,PERIOD]*SIGN,T[3,X,Y]=X[X+2,Y,PERIOD]*SIGN
2190 FOR Z=0 TO PERIOD
2200 REM " --- Quarter"
2210 IF Z<BEGQTR THEN GOTO 2250
2220 LET T[1,X,Y]=T[1,X,Y]+X[X,Y,Z]*SIGN
2230 LET T[4,X,Y]=T[4,X,Y]+X[X+2,Y,Z]*SIGN
2300 REM " --- YTD"
2310 LET T[2,X,Y]=T[2,X,Y]+X[X,Y,Z]*SIGN,T[5,X,Y]=T[5,X,Y]+X[X+2,Y,Z]*SIGN
2320 IF Z>=PERIOD THEN GOTO 2400
2330 IF X<>0 THEN GOTO 2400
2340 IF Y<>0 THEN GOTO 2400
2350 LET F[4]=F[4]+X[X,Y,Z]*SIGN,F[5]=F[5]+X[2,Y,Z]*SIGN
2400 REM " --- End of totals loop"
2470 NEXT Z
2480 NEXT Y
2490 NEXT X
2500 REM " --- Grand totals"
2510 FOR X=0 TO MX
2520 FOR Y=0 TO MY
2530 FOR Z=0 TO MZ
2540 LET I[X,Y,Z]=T[X,Y,Z],J[X,Y,Z]=T[X,Y,Z]
2570 NEXT Z
2580 NEXT Y
2590 NEXT X
2600 REM 
2610 LET I[2,0,0]=F[0],I[5,0,0]=F[1],I[1,0,0]=F[2]
2620 LET I[4,0,0]=F[3],I[0,0,0]=F[4],I[3,0,0]=F[5]
2630 LET J[2,0,0]=T[2,0,0]-F[0],J[5,0,0]=T[5,0,0]-F[1]
2640 LET J[1,0,0]=T[1,0,0]-F[2],J[4,0,0]=T[4,0,0]-F[3]
2650 LET J[0,0,0]=T[0,0,0],J[3,0,0]=T[3,0,0]
3000 REM " --- Update GLE-06 & GLE-07"
3010 IF N0$="99" THEN READ (GLM21_DEV,KEY=A0$,DOM=3020) ELSE READ (GLM11_DEV,KEY=A0$,DOM=3020)
3020 IF N0$="99" THEN LET K1$=KEY(GLM21_DEV,END=3990) ELSE LET K1$=KEY(GLM11_DEV,END=3990)
3030 IF POS(A0$=K1$)<>1 THEN GOTO 3990
3040 IF N0$="99" THEN READ (GLM21_DEV,KEY=K1$)IOL=GLM21A ELSE READ (GLM11_DEV,KEY=K1$)IOL=GLM11A
3050 LET X$=A2$,GLREPORT$=X$(1,2),LINE$=X$(3,4)
3060 IF GLREPORT$="00" THEN GOTO 3900
3070 IF FNP$(GLREPORT$)="" THEN GOTO 3900
3080 IF LINE$="0000" THEN GOTO 3900
3090 IF FNP$(LINE$)="" THEN GOTO 3900
3100 REM " --- Retrieve GLM-22 & GLE-06 Record"
3110 GOSUB 6000
3120 IF FNP$(C0$)="" THEN GOTO 3900
3400 REM " --- Xfer to IOLIST variables"
3410 LET Y0$(1,8)=C0$
3420 FOR X=0 TO MX
3430 LET N=0,Y0$(9,1)=CPN$(INT(X/MT)+1,1),Y0$(10,1)=PQY$(MOD(X,MT)+1,1)
3440 FOR Y=0 TO MY
3450 FOR Z=0 TO MZ
3460 LET Y[N]=S[X,Y,Z],N=N+1
3470 NEXT Z
3480 NEXT Y
3490 WRITE (GLE06_DEV,KEY=Y0$)IOL=GLE06A
3495 NEXT X
3500 REM " --- Accumulate Percent?"
3510 IF C1$(48,3)="000" THEN GOTO 3900
3520 IF C1$(51,1)<>"Y" THEN GOTO 3900
3600 REM " --- Write GLE-07 Percent Totals"
3610 DIM D0$(9),D[MT]
3620 LET D0$(1)=N0$+"P"+C1$(48,3)
3630 READ (GLE07_DEV,KEY=D0$(1,6),DOM=3640)
3640 LET K07$=KEY(GLE07_DEV,END=3750)
3650 IF K07$(1,6)<>N0$+"P"+C1$(48,3) THEN GOTO 3750
3660 READ (GLE07_DEV,KEY=K07$)IOL=GLE07A
3670 LET N=0,X=(POS(D0$(7,1)=CPN$)*MT-MT)+(POS(D0$(8,1)=PQY$)-1)
3680 FOR Y=0 TO MY
3690 FOR Z=0 TO MZ
3700 LET S[X,Y,Z]=D[N],N=N+1
3710 NEXT Z
3720 NEXT Y
3730 GOTO 3640
3750 REM " --- Initialize totals array"
3760 IF D0$(9,1)=SEQUENCE$ THEN GOTO 3800
3770 DIM S[MX,MY,MZ]
3780 LET D0$(9,1)=SEQUENCE$
3800 REM " --- Accumulate totals and xfer to IOLIST variables"
3805 GOSUB 6300
3810 LET LAST$=""
3820 FOR X=0 TO MX
3830 LET N=0,D0$(7,1)=CPN$(INT(X/MT)+1,1),D0$(8,1)=PQY$(MOD(X,MT)+1,1)
3840 FOR Y=0 TO MY
3850 FOR Z=0 TO MZ
3860 LET D[N]=S[X,Y,Z],N=N+1
3870 NEXT Z
3880 NEXT Y
3890 WRITE (GLE07_DEV,KEY=D0$(1,8))IOL=GLE07A
3895 NEXT X
3900 REM " --- End of report update loop"
3910 GOTO 3020
3990 GOTO 1000
4000 REM " --- Run report overlay"
4090 RUN "GLR.FA",ERR=9900
6000 REM " --- Total array"
6010 IF X$=LAST$ THEN GOTO 6300
6020 DIM C0$(8),C1$(56),Y0$(10),Y[MT]
6030 LET LAST$=X$,N=0
6040 FIND (GLM22_DEV,KEY=N0$+X$,DOM=6390)IOL=GLM22A
6050 REM " --- Xfer IOLIST variables to working array"
6060 IF C1$(52,1)<>SEQUENCE$ THEN GOTO 6200
6080 DIM S[MX,MY,MZ]
6090 READ (GLE06_DEV,KEY=C0$,DOM=6100)
6100 LET K06$=KEY(GLE06_DEV,END=6300)
6110 IF POS(C0$=K06$)<>1 THEN GOTO 6300
6120 READ (GLE06_DEV,KEY=K06$)IOL=GLE06A
6130 LET N=0,X=(POS(Y0$(9,1)=CPN$)*MT-MT)+(POS(Y0$(10,1)=PQY$)-1)
6140 FOR Y=0 TO MY
6150 FOR Z=0 TO MZ
6160 LET S[X,Y,Z]=Y[N],N=N+1
6170 NEXT Z
6180 NEXT Y
6190 GOTO 6100
6200 REM " --- Array definition for S[X,Y,Z]"
6210 REM " --- X: 0=C-PERIOD, 1=C-QTR, 2=C-YEAR
6220 REM " ---    3=P-PERIOD, 4=P-QTR, 5=P-YEAR
6225 REM " ---    6=N-PERIOD, 7=N-QTR, 8=N-YEAR"
6230 REM " --- Y: 0=Actual, 1=Budget"
6240 REM " --- Z: 0=Amount, 1=Units"
6250 DIM S[MX,MY,MZ]
6260 LET C1$(52,1)=SEQUENCE$
6270 WRITE (GLM22_DEV,KEY=C0$)IOL=GLM22A
6300 REM " --- Sum array before writing record"
6310 FOR X=0 TO MX
6315 FOR Y=0 TO MY
6320 FOR Z=0 TO MZ
6325 ON POS(C1$(1,1)="BC") GOTO 6330,6340,6350
6330 LET S[X,Y,Z]=S[X,Y,Z]+T[X,Y,Z]
6335 GOTO 6370
6340 LET S[X,Y,Z]=S[X,Y,Z]+I[X,Y,Z]
6345 GOTO 6370
6350 LET S[X,Y,Z]=S[X,Y,Z]+J[X,Y,Z]
6370 NEXT Z
6375 NEXT Y
6380 NEXT X
6390 RETURN 
8000 REM " --- Functions"
8080 DEF FNP$(Q$)=CVS(Q$,2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
