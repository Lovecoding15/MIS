0010 REM "OPC - Price and Availability Display"
0020 REM "Program:  OPC.PA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "13Nov96 WGH: Calculate price via margin over cost at full precision and display with price mask (290,450,610,650,720,750-760,1070,1215,1225,1310,1480)"
0040 REM 
0050 REM "CHANNELS[n] : [0] = SYS-01"
0051 REM "            : [1] = IVM-01"
0052 REM "            : [2] = IVM-02"
0053 REM "            : [3] = IVM-03"
0054 REM "            : [6] = IVM-06"
0055 REM "            : [10] = IVM-10"
0056 REM "N0$         : Current Firm"
0057 REM "CUST$       : Customer Number"
0058 REM "WHS$        : Warehouse ID"
0059 REM "ITEM$       : Inventory Item Number"
0060 REM "PRICCD$     : Pricing Code"
0061 REM "LISTCD$     : List Price Code"
0062 REM "DATE$       : Date Ordered"
0063 REM "STATUS      : 0=No Error (Returned)"
0070 REM 
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER CHANNELS[ALL],N0$,CUST$,WHS$,ITEM$,PRICCD$,LISTCD$,DATE$,STATUS
0100 REM " --- Open Files"
0110 LET SYS01_DEV=CHANNELS[0],IVM01_DEV=CHANNELS[1],IVM02_DEV=CHANNELS[2],IVM03_DEV=CHANNELS[3]
0120 LET IVM06_DEV=CHANNELS[6],IVM10_DEV=CHANNELS[10]
0200 REM " --- IOLists"
0210 IVM01A: IOLIST B0$,B1$,B2$,B3$,B4$,B5$,B6$,B[ALL]
0220 IVM02A: IOLIST C0$,C1$,C2$,C[ALL]
0230 IVM06A: IOLIST X$,CONDATA$,CONBRK[ALL],CONPRC[ALL]
0240 IVM10E: IOLIST TABL$,TABLBRK[ALL],TABLDISC[ALL]
0290 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,I5$,I6$,I7$,I8$,I9$
0400 REM " --- Parameters"
0440 FIND (SYS01_DEV,KEY=N0$+"IV00",DOM=9800)IOL=IVS01A
0450 LET I7=LEN(I7$),I9=LEN(I9$)
0500 REM " --- Initialize Data"
0510 LET DIGITS=NUM(I2$(5,1)),STATUS=0
0520 PRECISION DIGITS
0530 DIM B[12],C[20],TABLBRK[9],TABLDISC[9]
0540 LET DISCMSK$="##.00-",DISC=LEN(DISCMSK$),BREAKS=10
0600 REM " --- Resize masks, if necessary, to insure windows fit on screen"
0610 LET MAXWDTH=80,AVAIL=MAXWDTH-12-DISC,NEEDED=4*I7+2*I9
0620 IF NEEDED<AVAIL THEN GOTO 0700
0630 LET MAXMASK=INT(AVAIL/6)
0640 CALL "SYC.RM",I7$,I7,5,MAXMASK
0650 CALL "SYC.RM",I9$,I9,5,MAXMASK
0700 REM " --- Display Pricing Window"
0720 LET WIDTH=I9*2+I7*2+13,HEIGHT=BREAKS+4,WIN_X=79-WIDTH,WIN_Y=6
0730 LET TITLE$="Available Prices"
0735 CALL "SYC.WA",MODE,WIDTH,HEIGHT,WIN_X,WIN_Y,TITLE$,OPWIN$
0740 DIM HEADING$(WIDTH-2)
0750 LET HEADING$(1,5)="Table",HEADING$(5+I9-5,5)="Price",HEADING$(5+I9+I7-3,3)="Qty",HEADING$(5+I9+I7+DISC-5,5)="Disc%",HEADING$(5+I9*2+I7*2+DISC-5,5)="Price"
0760 IF I7>=9 THEN LET HEADING$(WIDTH-1-I9-9,8)="Contract" ELSE LET HEADING$(WIDTH-1-I9-5,4)="Cont"; IF I9>=11 THEN LET HEADING$(WIDTH-1-I9-1,4)="ract"
0770 PRINT 'BR',@(0,0),HEADING$,'ER'
1000 REM " --- Pricing Window"
1020 FIND (IVM01_DEV,KEY=N0$+ITEM$,DOM=2000)IOL=IVM01A
1040 LET CLASS$=B2$(21,3)
1050 FIND (IVM02_DEV,KEY=N0$+WHS$+ITEM$,DOM=2000)IOL=IVM02A
1060 LET PRICE=C[9],COST=C[11]
1070 PRINT @(0,1),"List",@(5,1),PRICE:I9$,0:I7$,0:DISCMSK$,
1100 REM " --- Get Pricing Table"
1105 LET L=2
1110 READ (IVM10_DEV,KEY=N0$+"E"+CLASS$+PRICCD$,DOM=1400)IOL=IVM10E
1120 FOR X=0 TO BREAKS-1
1130 IF TABLBRK[X]=0 AND TABLDISC[X]=0 THEN GOTO 1390
1140 ON POS(TABL$(31,1)="CML") GOTO 1390,1150,1200,1250
1150 REM " --- Mark-Up From Cost"
1155 PRECISION DIGITS+2
1160 LET PERCENT=TABLDISC[X]/100
1170 PRECISION DIGITS
1180 LET DISPRC=COST+COST*PERCENT
1190 GOTO 1300
1200 REM " --- Margin Over Cost"
1210 IF TABLDISC[X]>=1000 THEN GOTO 1390; REM "No such thing as 100% margin unless cost=0
1215 PRECISION DIGITS+2
1220 LET FACTOR=100/(100-TABLDISC[X])
1225 PRECISION DIGITS
1230 LET DISPRC=COST*FACTOR
1240 GOTO 1300
1250 REM " --- Mark-Down List Price"
1255 PRECISION DIGITS+2
1260 LET PERCENT=TABLDISC[X]/100
1270 PRECISION DIGITS
1280 LET DISPRC=PRICE-PRICE*PERCENT
1300 REM " --- Display Pricing Table"
1310 PRINT @(0,L),TABL$(7,4),@(5,L),DISPRC:I9$,TABLBRK[X]:I7$,TABLDISC[X]:DISCMSK$,TABL$(31,1),
1320 LET L=L+1
1390 NEXT X
1400 REM " --- Get Contract Pricing"
1405 LET L=2
1410 DIM CONBRK[9],CONPRC[9]
1420 IF IVM06_DEV=0 THEN GOTO 2000
1430 FIND (IVM06_DEV,KEY=N0$+CUST$+ITEM$,DOM=2000)IOL=IVM06A
1440 IF CONDATA$(21,3)<>"   " AND DATE$<CONDATA$(21,3) THEN GOTO 2000
1450 IF CONDATA$(24,3)<>"   " AND DATE$>CONDATA$(24,3) THEN GOTO 2000
1460 FOR X=0 TO BREAKS-1
1470 IF CONBRK[X]=0 THEN GOTO 1490
1480 PRINT @(WIDTH-1-I7-I9,L),CONBRK[X]:I7$,CONPRC[X]:I9$,
1485 LET L=L+1
1490 NEXT X
2000 REM " --- Warehouse Window"
2010 GOSUB 6000
2020 LET COUNT=0,L=1,DONE=0
2030 READ (IVM03_DEV,KEY=N0$+"G"+ITEM$,DOM=2040)
2040 LET K$=KEY(IVM03_DEV,END=2300)
2050 IF POS(N0$+"G"+ITEM$=K$)<>1 THEN GOTO 2300
2060 READ (IVM03_DEV)
2080 READ (IVM02_DEV,KEY=N0$+K$(24,2)+ITEM$,DOM=2040)IOL=IVM02A
2100 REM " --- Display Warehouse Data"
2120 IF L>HEIGHT2-3 THEN GOTO 2200
2140 PRINT @(0,L),C0$(3,2),
2160 PRINT @(3,L),C[0]-C[2]:I7$,C[1]:I7$,
2180 LET COUNT=COUNT+1,L=L+1
2190 GOTO 2040
2200 REM " --- Overflow"
2210 LET L=0
2220 LET V0$="S",V1$="C",V2$="",V3$="",V4$="<Enter>=Continue",V0=1,V1=FNC(V4$,WIDTH2)+LEN(V4$),V2=HEIGHT2
2240 GOSUB 7000
2250 IF DONE OR V3=4 THEN GOTO 4000
2280 PRINT @(0,1),'CE',
2290 GOTO 2100
2300 REM " --- Now More Warehouses For This Item"
2310 LET DONE=1
2320 IF COUNT>0 THEN GOTO 2200
2340 LET X$="(Item not assigned to a warehouse.)"
2360 PRINT @(FNC(X$,WIDTH2),INT((HEIGHT2)/2)),X$,
2380 GOTO 2200
4000 REM " --- All done"
4090 GOTO 9900
6000 REM " --- Display Warehouse Window"
6020 LET WIDTH2=5+I7*2,WIN_X2=78-WIDTH-WIDTH2+1
6040 LET HEIGHT2=HEIGHT,WIN_Y2=WIN_Y,TITLE$="Whse Avail"
6050 CALL "SYC.WA",MODE,WIDTH2,HEIGHT2,WIN_X2,WIN_Y2,TITLE$,OPWIN2$
6060 DIM HEADING2$(WIDTH2-2)
6070 LET HEADING2$(1,3)="Whs",HEADING2$(WIDTH2-I7-6)="Avail",HEADING2$(WIDTH2-7,6)="On Ord"
6080 PRINT 'BR',@(0,0),HEADING2$,'ER'
6100 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9800
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Return STATUS = ERR"
9810 LET STATUS=ERR
9820 IF STATUS=0 THEN LET STATUS=999
9900 REM " --- Return To Caller"
9910 CALL "SYC.WD",OPWIN$
9920 CALL "SYC.WD",OPWIN2$
9950 EXIT 
9999 END
