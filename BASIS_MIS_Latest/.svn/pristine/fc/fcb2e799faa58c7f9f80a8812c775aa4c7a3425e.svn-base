0010 REM "IVR - Physical Inventory Register"
0020 REM "Program IVR.VA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=15
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="SYS-01",FILES$[2]="IVM-10",FILES$[3]="IVW-10"
0125 LET FILES$[4]="IVM-02",FILES$[5]="IVE-03",FILES$[6]="IVM-01"
0130 LET FILES$[7]="IVM-07"
0135 LET FILES$[8]="IVM-04",FILES$[9]="IVM-12",FILES$[10]="IVT-04"
0140 LET FILES$[11]="IVM-08",FILES$[12]="IVM-17",FILES$[13]="IVT-01"
0145 LET FILES$[14]="IVT-02",FILES$[15]="IVT-03",OPTIONS$[3]="C"
0150 CALL "SYC.DA",1,1,6,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM10_DEV=CHANNELS[2],IVW10_DEV=CHANNELS[3]
0180 LET IVM02_DEV=CHANNELS[4],IVE03_DEV=CHANNELS[5],IVM01_DEV=CHANNELS[6]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$(1),A5$,A6$,A[ALL]
0220 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0230 IVM10C: IOLIST X0$(1)
0240 IVM10P: IOLIST Y0$(1)
0250 IVE03A: IOLIST W0$(1),W1$(1),W[ALL]
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0280 IVM07A: IOLIST D0$(1),D1$(1)
0400 REM " --- Parameters"
0405 DIM P[5]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV",LS$="N"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0440 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1)),P[2]=NUM(I2$(7,2))
0450 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0460 LET DW=P[3]+P[4]+P[5]
0470 IF POS(I3$(17,1)="SL")>0 THEN LET LS$="Y"
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],HEADINGS$[3]
0520 DIM B0$(24),B1$(64),B[20],W0$(56),W1$(60),W[2],X0$(32),Y0$(11),O[10]
0530 DIM ITEM[6],CYCLE[6],REPORT[6]
0550 LET CLOCK$="",WHEN$=F0$(7,3),L9=55,L=L9+1,WIDTH=132,HEADINGS=2
0560 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$,LSH$="",DONE=0
0565 LET QH$="Quantity",TH$="Total Value"
0570 IF LS$="Y" THEN LET LSH$="Lot/Serial Number"
0600 REM " --- Additional file opens"
0610 IF LS$<>"Y" THEN GOTO 0650
0620 CALL "SYC.DA",1,7,7,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0630 IF STATUS>0 THEN GOTO 9900
0640 LET IVM07_DEV=CHANNELS[7]
0650 REM " --- Resize masks"
0655 CALL "SYC.RM",M1$,M1,12,15
0660 CALL "SYC.RM",M2$,M2,9,12
0665 LET X=M1+M2
0670 DIM PH$(X,"-"),SH$(X,"-"),VH$(X,"-")
0675 LET PH$(FNC(X,10),10)=" Physical ",SH$(FNC(X,8),8)=" System "
0680 LET VH$(FNC(X,10),10)=" Variance "
0800 REM " --- Process input"
0810 LET ACTION$="R",WHSE$=I3$(6,2),CUTOFF$="",QUANTITY$="N"
0820 CALL "IVC.IC",ACTION$,CHANNELS[ALL],WHSE$,CUTOFF$,QUANTITY$,FKEY,STATUS
0830 IF FKEY<>0 THEN GOTO 9900
0840 IF STATUS<>0 THEN GOTO 9900
0850 REM " --- Retrieve warehouse and build HEADINGS$"
0860 FIND (IVM10_DEV,KEY=N0$+"C"+WHSE$,DOM=9900)IOL=IVM10C
0870 LET HEADINGS$[1]=F5$+" For Warehouse "+X0$(4,2)+" "+FNP$(X0$(6,24))
0880 IF QUANTITY$="Y" THEN LET SQH$="Quantity"
0900 REM " --- Print positions"
0910 LET O[10]=WIDTH-M1,O[9]=O[10]-M2,O[8]=O[9]-M1-1,O[7]=O[8]-M2
0920 LET O[6]=O[7]-M1-1,O[5]=O[6]-M2,O[4]=O[5]-11,O[3]=O[4]-3,O[1]=3
0930 LET DW=O[4]-O[1],O[2]=O[3]-MAX(P[2],18)
0950 REM " --- Position file"
0960 CALL "SYC.GA",7,1,"","",STATUS
0970 IF STATUS THEN GOTO 9900
0980 CALL "SYC.NB","Printing",17+P[0],COLUMN
0990 READ (IVW10_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Read next entry record"
1010 LET K$=KEY(IVW10_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 READ (IVW10_DEV)
1900 REM " --- Position physical inventory record"
1980 LET FIRST$=K$(1,2)+WHSE$+K$(3)
1990 READ (IVE03_DEV,KEY=FIRST$,DOM=2000)
2000 REM " --- Read next physical inventory record"
2010 LET K$=KEY(IVE03_DEV,END=3900)
2020 IF POS(FIRST$=K$)<>1 THEN GOTO 3900
2030 READ (IVE03_DEV)IOL=IVE03A
2040 PRINT @(COLUMN,11),W0$(3,2)," ",W0$(5,2)," ",K$(7,10)," ",K$(17,P[0]),
2100 REM " --- Level breaks"
2110 IF W0$(5,2)<>T0$ THEN GOSUB 6000
2120 IF W0$(17,P[0])<>T1$ THEN GOSUB 6200
2200 REM " --- Retrieve lot/serial master"
2210 IF LS$<>"Y" THEN GOTO 2300
2215 IF A2$(19,2)<>"YY" THEN GOTO 2300
2220 DIM D0$(44),D1$(96),D[12]
2230 LET D0$(1)=W0$(1,4)+W0$(17),D1$(1)=".......",D[3]=COST
2240 IF W[0]=0 THEN LET W0$(37)="None"
2250 IF W[0]>0 THEN IF FNP$(W0$(37))="" THEN LET W0$(37)="Missing"
2290 FIND (IVM07_DEV,KEY=D0$,DOM=2300)IOL=IVM07A
2300 REM " --- Calculate total value and variance"
2310 DIM T[6]
2320 LET T[0]=W[1],T[1]=T[0]*COST,T[2]=W[0],T[3]=T[2]*COST
2330 LET T[4]=T[0]-T[2],T[5]=T[1]-T[3],MARK$=""
2340 IF W1$(4,1)<>"Y" THEN LET T[6]=1,MARK$="*"
2400 REM " --- Print non-lotted/serialized item"
2410 IF LS$="Y" THEN IF A2$(19,2)="YY" THEN GOTO 2500
2420 IF L+2>L9 THEN GOSUB 5000
2430 PRINT (7)@(O[0]),A0$(3,P[0]),MARK$,@(O[3]),A2$(4,2),@(O[4]),W0$(7,10),@(O[5]),T[0]:M2$,@(O[6]),T[1]:M1$,@(O[7]),T[2]:M2$,@(O[8]),T[3]:M1$,@(O[9]),T[4]:M2$,@(O[10]),T[5]:M1$
2440 PRINT (7)@(O[1]),DESCRIPTION$
2450 LET L=L+2
2490 GOTO 2900
2500 REM " --- Print lotted/serialized item"
2510 IF W0$(1,36)<>LAST$ THEN GOSUB 5200
2520 IF L+1>L9 THEN LET L=L9+1; GOSUB 5200
2530 PRINT (7)@(O[2]),W0$(37,P[2]),MARK$,@(O[4]),D1$(1,7),@(O[5]),T[0]:M2$,@(O[6]),T[1]:M1$,@(O[7]),T[2]:M2$,@(O[8]),T[3]:M1$,@(O[9]),T[4]:M2$,@(O[10]),T[5]:M1$
2540 LET L=L+1,L1=L1+1
2900 REM " --- Loop back for next physical inventory record"
2910 FOR X=0 TO 6
2920 LET ITEM[X]=ITEM[X]+T[X],CYCLE[X]=CYCLE[X]+T[X],REPORT[X]=REPORT[X]+T[X]
2930 NEXT X
2990 GOTO 2000
3900 REM " --- Loop back for next entry record"
3990 GOTO 1000
4000 REM " --- All done"
4010 LET DONE=1
4020 GOSUB 6000
4030 DIM TOTALS$[5]
4040 LET TOTAL$="Register ",TOTALS$[1]=STR(REPORT[1]:M1$),NL=1
4050 LET TOTALS$[3]=STR(REPORT[3]:M1$),TOTALS$[5]=STR(REPORT[5]:M1$)
4060 LET WARNING=REPORT[6]
4070 GOSUB 6900
4090 RUN "IVU.VA"
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+4,NL=0
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)@(O[5]),PH$,@(O[7]),SH$,@(O[9]),VH$
5050 PRINT (7)@(O[0]),"Item",@(O[2]),LSH$,@(O[3]),"UM",@(O[4]),"Location",@(O[5]+M2-9),QH$,@(O[6]+M1-12),TH$,@(O[7]+M2-9),QH$,@(O[8]+M1-12),TH$,@(O[9]+M2-9),QH$,@(O[10]+M1-12),TH$
5060 PRINT (7)""
5090 RETURN 
5200 REM " --- Item subheading (lotted/serialized)"
5210 IF L+3>L9 THEN GOSUB 5000
5250 PRINT (7)@(O[0]),W0$(17,P[0]),@(O[3]),A2$(4,2),@(O[4]),W0$(7,10)," ",CONTINUED$
5270 PRINT (7)@(O[1]),DESCRIPTION$
5280 LET L=L+2,CONTINUED$="(Continued)",LAST$=W0$(1,36)
5290 RETURN 
6000 REM " --- Cycle Break"
6010 IF T0$="" THEN GOTO 6100
6020 GOSUB 6200
6030 DIM TOTALS$[5]
6040 LET TOTAL$="Cycle Code "+T0$,TOTALS$[1]=STR(CYCLE[1]:M1$),NL=1
6050 LET TOTALS$[3]=STR(CYCLE[3]:M1$),TOTALS$[5]=STR(CYCLE[5]:M1$)
6060 LET WARNING=CYCLE[6]
6070 GOSUB 6900
6100 IF DONE THEN GOTO 6190
6110 DIM Y0$(11),CYCLE[6]
6120 LET T0$=W0$(5,2),Y0$(1)=N0$+"P"+WHSE$+T0$,Y0$(9,3)=F0$(7,3)
6130 FIND (IVM10_DEV,KEY=Y0$(1,7),DOM=6130)IOL=IVM10P
6140 LET Y0$(8,1)="3",L=L9+1,HEADINGS=3
6150 LET HEADINGS$[2]="Cycle Code "+T0$+" - Cutoff Date "+FNB$(Y0$(9,3))
6160 WRITE (IVM10_DEV,KEY=Y0$(1,7))IOL=IVM10P
6190 RETURN 
6200 REM " --- Item Break"
6210 IF T1$="" THEN GOTO 6300
6215 IF L1<1 THEN GOTO 6300
6220 DIM TOTALS$[5]
6230 LET TOTAL$="Item "+T1$,NL=0,WARNING=0
6240 LET TOTALS$[0]=STR(ITEM[0]:M2$),TOTALS$[1]=STR(ITEM[1]:M1$)
6250 LET TOTALS$[2]=STR(ITEM[2]:M2$),TOTALS$[3]=STR(ITEM[3]:M1$)
6260 LET TOTALS$[4]=STR(ITEM[4]:M2$),TOTALS$[5]=STR(ITEM[5]:M1$)
6270 GOSUB 6900
6300 IF DONE THEN GOTO 6390
6310 DIM DESCRIPTION$(DW),ITEM[6]
6320 LET A0$(1)=N0$+W0$(17),A1$(1)="(Not On File)",A2$(1)="",T1$=W0$(17,P[0])
6330 LET B0$(1)=N0$+W0$(3,2)+W0$(17),B1$(1)="",B[11]=0,L1=0
6340 FIND (IVM01_DEV,KEY=A0$,DOM=6350)IOL=IVM01A
6350 FIND (IVM02_DEV,KEY=B0$,DOM=6360)IOL=IVM02A
6360 LET DESCRIPTION$(1)=FNITEM$(A1$,P[3],P[4],P[5]),CONTINUED$="",COST=B[11]
6390 RETURN 
6900 REM " --- Print total line"
6910 LET NEEDED=1
6915 IF WARNING>0 THEN LET NEEDED=3
6920 IF NL>0 THEN LET NEEDED=NEEDED+1
6925 IF L+NEEDED>L9 THEN GOSUB 5000
6930 IF NL>0 THEN PRINT (7)""
6940 PRINT (7)@(O[1]),"Totals For ",TOTAL$,@(O[5]),TOTALS$[0],@(O[6]),TOTALS$[1],@(O[7]),TOTALS$[2],@(O[8]),TOTALS$[3],@(O[9]),TOTALS$[4],@(O[10]),TOTALS$[5]
6950 IF WARNING=0 THEN GOTO 6980
6960 PRINT (7)""
6970 PRINT (7)@(O[1]),"WARNING:",WARNING," Item(s) Not Entered For "+TOTAL$
6980 LET L=L+NEEDED,NL=0
6990 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8030 DEF FNC(Q1,Q2)=INT((Q1-Q2)/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
