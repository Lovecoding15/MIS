[Program]
Creation Date=2006-01-11
Creation Time=14:59:55
Event Set=LEGACY
Generator Program=gb_func
Last Build Date=2015-05-13
Last Build Time=15:18:47
Precision=99
Program Name=ccLogView
Remarks=Yes
Resource File=ccLogView.arc
Show Forms=All

[Init]
ourAPI!=BBjAPI()
ourSysGui!=ourAPI!.getSysGui()
ourSystemMetrics!=ourSysGui!.getSystemMetrics()
scrDimension!=ourSystemMetrics!.getScreenSize()
ourContext=ourSysGui!.getContext()
ourWindow!=ourSysGui!.getWindow(ourContext)
topLevelWindow!=cast(BBjTopLevelWindow, ourSysGui!.getWindow(ourContext))

ourWindow!.setCursor(3)

localHost! = InetAddress.getLocalHost()
if localHost!.getHostName() = "Hendrix" then
    directory1$="C:/eclipse/workspace/paypro"
    directory2$=""
    pdfdirectory$="C:/temp/basis/"
else
    directory1$="/mnt/data/ec/ccLogs"
    directory2$="/mnt/data/ec/ccLogsOpus"
    pdfdirectory$="/mnt/data/ec/ccPDFs/"
fi
amexRate$="0.035"
vmcRate$="0.022"
vmcPerItem$="0.30"

gosub center_window
gosub get_objects
gosub openCustMast
gosub loadSpinners
gosub loadAvailableDays
gosub summarizeDay
gosub convertReportParamToText

sqlProps! = new SQLProperties()
sqlConnect$ = sqlProps!.getDBConnect()
rem ' open sql channel 
sqlchan = sqlunt
sqlopen(sqlchan)sqlConnect$

ourWindow!.setCursor(0)


[Event Win=101 ID=0 Code=X <WIN_CLOSE> (W101_C0_WIN_CLOSE)]
rem ' Window Closed
rem ' gb__event! = cast(BBjCloseEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__window! = gb__event!.getControl()

goto gb__eoj

[Event Win=101 ID=100 Code=e <EDIT_CHANGE> (W101_C100_EDIT_CHANGE)]
rem ' Text control was modified
rem ' gb__event! = cast(BBjEditModifyEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

ourWindow!.setCursor(3)
gosub loadAvailableDays
gosub summarizeDay
gosub convertReportParamToText
ourWindow!.setCursor(0)

[Event Win=101 ID=102 Code=e <EDIT_CHANGE> (W101_C102_EDIT_CHANGE)]
rem ' Text control was modified
rem ' gb__event! = cast(BBjEditModifyEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

ourWindow!.setCursor(3)
gosub loadAvailableDays
gosub summarizeDay
gosub convertReportParamToText
ourWindow!.setCursor(0)

[Event Win=101 ID=104 Code=N2:19 <LIST_SELECT> (W101_C104_LIST_SELECT)]
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

ourWindow!.setCursor(3)
gosub summarizeDay
gosub convertReportParamToText
ourWindow!.setCursor(0)

[Event Win=101 ID=131 Code=N1:113 <NAV_FIRST> (W101_C131_NAV_FIRST)]
rem ' Notify Event - Navigator - First Record [|<]
rem '
rem ' Retrieve the recordset associated with this navigator:
rem '
rem ' gb__navigator!=bbjapi().getSysGui().getLastEvent().getControl()
rem ' gb__recordset!=gb__navigator!.getTargetRecordSet(err=*return)
rem '
rem ' Retrieve the current record:
rem ' gb__recorddata!=gb__recordset!.getCurrentRecordData()
rem '
rem ' Update the current record:
rem ' gb__recordset!.update(gb__recorddata!)
rem '
rem ' Move the record pointer to the first record:
rem  ' gb__recordset!.first(err=*next)

entryNumber = 1
gosub loadEntryBrowser

[Event Win=101 ID=131 Code=N2:113 <NAV_PREVIOUS> (W101_C131_NAV_PREVIOUS)]
rem ' Notify Event - Navigator - Previous Record [<]
rem '
rem ' gb__navigator!=bbjapi().getSysGui().getLastEvent().getControl()
rem ' gb__recordset!=gb__navigator!.getTargetRecordSet(err=*return)
rem '
rem ' Retrieve the current record:
rem ' gb__recorddata!=gb__recordset!.getCurrentRecordData()
rem '
rem ' Update the current record:
rem ' gb__recordset!.update(gb__recorddata!)
rem '
rem ' Move the record pointer to the first record:
rem ' gb__recordset!.previous(err=*next)

entryNumber = entryNumber - 1
if entryNumber < 1 then entryNumber = 1
gosub loadEntryBrowser

[Event Win=101 ID=131 Code=N3:113 <NAV_NEXT> (W101_C131_NAV_NEXT)]
rem ' Notify Event - Navigator - Next Record [>]
rem '
rem ' gb__navigator!=bbjapi().getSysGui().getLastEvent().getControl()
rem ' gb__recordset!=gb__navigator!.getTargetRecordSet(err=*return)
rem '
rem ' Retrieve the current record:
rem ' gb__recorddata!=gb__recordset!.getCurrentRecordData()
rem ' 
rem ' Update the current record:
rem ' gb__recordset!.update(gb__recorddata!)
rem '
rem ' Move the record pointer to the next record:
rem ' gb__recordset!.next(err=*next)

entryNumber = entryNumber + 1
if entryNumber > totalEntries then entryNumber = totalEntries
gosub loadEntryBrowser

[Event Win=101 ID=131 Code=N4:113 <NAV_LAST> (W101_C131_NAV_LAST)]
rem ' Notify Event - Navigator - Last Record [>|]
rem '
rem ' gb__navigator!=bbjapi().getSysGui().getLastEvent().getControl()
rem ' gb__recordset!=gb__navigator!.getTargetRecordSet(err=*return)
rem '
rem ' Retrieve the current record:
rem ' gb__recorddata!=gb__recordset!.getCurrentRecordData()
rem '
rem ' Update the current record:
rem ' gb__recordset!.update(gb__recorddata!)
rem '
rem ' Move the record pointer to the last record:
rem ' gb__recordset!.last(err=*next)

entryNumber = totalEntries
gosub loadEntryBrowser

[Event Win=101 ID=141 Code=B <PUSH_BUTTON> (W101_C141_PUSH_BUTTON)]
rem ' Button was pushed
rem ' gb__event! = cast(BBjButtonPushEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub convertReportParamToText
if availLogs!.getItemCount() > 0 then 
    if numOfDays!.getSelectedIndex() = 1 and hour!.getSelectedIndex() = 23 and minute!.getSelectedIndex() = 59 and startHour!.getSelectedIndex() = 0 and startMinute!.getSelectedIndex() = 0 then
        gosub printReport
    else
        rem ' either a multi day report of an odd cutoff time
        gosub buildReportEntries
    fi
else
    msg$="You must select a log date before running the report"
    title$="Select Log"
    resp = msgbox(msg$,16,title$)
fi

[Event Win=101 ID=142 Code=N2:19 <LIST_SELECT> (W101_C142_LIST_SELECT)]
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub convertReportParamToText

[Event Win=101 ID=144 Code=N2:19 <LIST_SELECT> (W101_C144_LIST_SELECT)]
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub updateStartTime
gosub convertReportParamToText

[Event Win=101 ID=145 Code=N2:19 <LIST_SELECT> (W101_C145_LIST_SELECT)]
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub updateStartTime
gosub convertReportParamToText

[Event Win=101 ID=149 Code=B <PUSH_BUTTON> (W101_C149_PUSH_BUTTON)]
rem ' Button was pushed
rem ' gb__event! = cast(BBjButtonPushEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub loadAvailableDays
gosub summarizeDay
gosub convertReportParamToText

[Event Win=101 ID=150 Code=N2:19 <LIST_SELECT> (W101_C150_LIST_SELECT)]
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub convertReportParamToText

[Event Win=101 ID=151 Code=N2:19 <LIST_SELECT> (W101_C151_LIST_SELECT)]
rem ' Notify Event - List Control - List Selection (2)
rem ' gb__event! = cast(BBjListSelectEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub convertReportParamToText


[Function (acummulateValues)]
rem ' -----------------------------------------------------------------
rem ' acummulateValues
rem ' -----------------------------------------------------------------

acummulateValues:

switch pos(cardType$="MVA")
    case 1
        if result$="Approved" then
            mcApproved = mcApproved + 1
            mcTotal = mcTotal + amount
        else
            mcDeclined = mcDeclined + 1
        fi
        break
    case 2
        if result$="Approved" then
            visaApproved = visaApproved + 1
            visaTotal = visaTotal + amount
        else
            visaDeclined = visaDeclined + 1
        fi
        break
    case 3
        if result$="Approved" then
            amexApproved = amexApproved + 1
            amexTotal = amexTotal + amount
        else
            amexDeclined = amexDeclined + 1
        fi
        break
swend

return

[Function (buildReportEntries)]
rem ' -----------------------------------------------------------------
rem ' buildReportEntries
rem ' -----------------------------------------------------------------

buildReportEntries:

rem ' build list of days to report
days! = OurAPI!.makeVector()
criteria!= OurAPI!.makeVector()

wrkJul = begJul
while wrkJul <= endJul
    days!.add(date(wrkJul:"%Y%Mz%Dz"))
    if wrkJul = begJul and begJul = endJul then
        criteriaStr! = "OD" + begHour$ + begMinute$ + endHour$ + endMinute$
    else
        if wrkJul = begJul then
            rem ' first day
            criteriaStr! = "FD" + begHour$ + begMinute$
        else
            if wrkJul = endJul then
                rem ' last day
                criteriaStr! = "LD" + endHour$ + endMinute$
            else
                rem ' middle day
                criteriaStr! = "MD"
            fi
        fi
    fi
    criteria!.add(criteriaStr!)
    wrkJul = wrkJul + 1
wend

reportEntries! = OurAPI!.makeVector()

for x = 0 to days!.size() - 1

    savedEntry$ = ""
    selDay$ = days!.get(x)
    wrk$ = criteria!.get(x)
    test$ = wrk$(1,2)
    if test$ = "FD" or test$ = "LD" or test$ = "OD" then
        value$ = wrk$(3)
    else
        value$ = ""
    fi
    filename$="ccTransLog." + selDay$

    rem ' open one or two log files
    log1 = unt, log1Opened = 0
    open(log1, err=*next)directory1$+"/"+filename$; log1Opened = 1
    if !log1Opened then log1=0
    log2 = unt, log2Opened = 0
    open(log2, err=*next)directory2$+"/"+filename$; log2Opened = 1
    if !log2Opened then log2 =0

    if log1Opened or log2Opened then

        workingRef! = ""

        while 1

            log = 0

            if log1Opened then
                log = log1
            else
                if log2Opened then
                    log = log2
                fi
            fi

            if log = 0 then break

            while 1
                read(log,end=*break)entry$

                rem ' do we include this entry

                if test$ = "FD" or test$ = "LD" or test$ = "OD" then
                    ppos = pos("~"=entry$)
                    wrk$ = entry$(1,ppos-1)
                    ppos = pos(":"=wrk$)
                    wrk$ = wrk$(ppos+1)
                    time$ = wrk$(9,4)

                    if test$ = "FD" then
                        rem ' first day
                        if time$ < value$ then 
                            continue
                        fi
                    else
                        if test$ = "LD" then
                            rem ' last day
                            if time$ > value$ then
                                continue
                            fi
                        else
                            if test$ = "OD" then
                                rem ' only day
                                low$ = value$(1,4)
                                high$ = value$(5,4)
                                if time$ < low$ or time$ > high$ then
                                    continue
                                fi
                            fi
                        fi
                    fi
                fi
                    
                currentEntry! = new StringTokenizer(entry$,"~")
                    
                while currentEntry!.hasMoreTokens()

                    token! = currentEntry!.nextToken()

                    rem ' uniqueID is always the first token in a row

                    if pos("uniqueID:"=token!) then
                        if workingRef! = "" then
                            workingRef! = token!
                            savedEntry$ = entry$
                            continue
                        else
                            if workingRef! <> token! then
                                rem ' change of working ref
                                reportEntries!.addItem(savedEntry$)
                                workingRef! = token!
                                result$=""
                                amount=0
                                cardType$=""
                                savedEntry$=entry$
                                continue
                            else
                                rem ' this is the second line for a given entry
                                savedEntry$ =   savedEntry$ +   "~" +   entry$
                                continue
                            fi
                        fi
                    fi
                wend

            wend

            if log = log1 then 
                close(log1)
                log1Opened = 0
            else
                if log = log2 then
                    close(log2)
                    log2Opened = 0
                fi
            fi

        wend
        reportEntries!.addItem(savedEntry$)
    fi

next x
holdEntries! = entries!
entries! = reportEntries!
gosub printReport
entries! = holdEntries!

return

[Function (center_window)]
rem ' -----------------------------------------------------------------
rem ' center_window
rem ' -----------------------------------------------------------------

center_window:

rem running as an applet
if info(3,6)="2" then
    topLevelWindow!.setTitleBarVisible(0)
    applet!=ourAPI!.getAppletProxy()
    applet!.setBounds(0,0,100,500)
else
    width = scrDimension!.width
    height = scrDimension!.height
    winWidth = ourWindow!.getWidth()
    winHeight = ourWindow!.getHeight()

    x = int((width-winWidth)/2)
    y = int((height-winHeight)/2)

    ourWindow!.setLocation(x,y)
fi


return

[Function (convertOrderNbrToInvoiceNbr)]
rem ' -----------------------------------------------------------------
rem ' convertOrderNbrToInvoiceNbr
rem ' -----------------------------------------------------------------

convertOrderNbrToInvoiceNbr:

rem ' if the comment contains an order number covert it to an invoice number
ordinvnbr$ = cvs(comment$(ppos + 1), 3)

while len(ordinvnbr$) < 7
    ordinvnbr$ = "0" + ordinvnbr$
wend

if len(ordinvnbr$) = 7 and ordinvnbr$(1,3) = "000" then
    rem ' we have an order number - find the invoice number
    if len(customerNbr$) = 8 then
        sql$ = "SELECT AR_INV_NBR FROM ART03 WHERE FIRM_ID = '" + customerNbr$(1,2) + "' "
        sql$ = sql$ + "AND CUSTOMER_NBR = '" + customerNbr$(3) + "' AND ORDER_NUMBER = '" + ordinvnbr$ + "'"
        sqlprep(sqlchan)sql$
        sqlexec(sqlchan)
        dim invRec$:sqltmpl(sqlchan)
        while 1
            invRec$ = sqlfetch(sqlchan, err = *break)
            if cvs(invRec.AR_INV_NBR$, 3) <> "" then
                comment$ = comment$(1,ppos) + invRec.AR_INV_NBR$
            fi
        wend
    fi
fi

return

[Function (convertReportParamToText)]
rem ' -----------------------------------------------------------------
rem ' convertReportParamToText
rem ' -----------------------------------------------------------------

convertReportParamToText:

if availLogs!.getItemCount() = 0 then 
    reportParameters!.setText("")
else
    
    numDays = numOfDays!.getSelectedIndex()

    endHourSelected = hour!.getSelectedIndex()
    endHour$ = hourSpinList!.get(endHourSelected)

    endMinuteSelected = minute!.getSelectedIndex()
    endMinute$ = minuteSpinList!.get(endMinuteSelected)

    begHourSelected = startHour!.getSelectedIndex()
    begHour$ = hourSpinList!.get(begHourSelected)

    begMinuteSelected = startMinute!.getSelectedIndex()
    begMinute$ = minuteSpinList!.get(begMinuteSelected)

    if numDays = 0 and (begHour$ + begMinute$) >= (endHour$ + endMinute$) then
        msg$ = "You have selected a less than one day report period and in that case"
        msg$ = msg$ + " the start time must be less than the cutoff time."
        title$ = "Time Range Problem"
        resp = msgbox(msg$, 16, title$)
    else

        dateStr$ = availLogs!.getText()

        selection = availLogs!.getSelectedIndex()
        selections$ = logSelections$
        while selection
            ppos = pos($0A$ = selections$)
            selections$ = selections$(ppos+1)
            selection = selection - 1
        wend
        ppos = pos($0A$=selections$)
        selDay$ = selections$(1,ppos-1)

        endYear = num(selDay$(7))
        endMonth = num(selDay$(1,2))
        endDay = num(selDay$(4,2))
        endJul = jul(endYear, endMonth, endDay)

        if numDays > 0 then
            begJul = endJul - numDays
            if endHour$ = "23" and endMinute$ = "59" then begJul = begJul + 1
        else
            begJul = endJul
        fi

        text$ = date(begJul:"%Mz/%Dz/%Y") + " " 
        text$ = text$ + begHour$ + ":"+begMinute$ + " through "
        text$ = text$ + date(endJul:"%Mz/%Dz/%Y") + " "
        text$ = text$ + endHour$ + ":" + endMinute$ + "."

        reportParameters!.setText(text$)
    
    fi
fi

return

[Function (dayChange)]
rem ' -----------------------------------------------------------------
rem ' dayChange
rem ' -----------------------------------------------------------------

dayChange:

if curDay$ <> "" then

    curDay! = str(curDay$)
    totalDates!.addItem(curDay!)

    vmc! = num(str(vmc))
    totalvmc!.addItem(vmc!)

    vmcPosted! = num(str(vmcPosted))
    totalvmcPosted!.addItem(vmcPosted!)

    vmcItems! = num(str(vmcItems))
    totalvmcItems!.addItem(vmcItems!)

    amex! = num(str(amex))
    totalamex!.addItem(amex!)

    amexPosted! = num(str(amexPosted))
    totalamexPosted!.addItem(amexPosted!)

fi

vmc = 0
vmcPosted = 0
vmcItems = 0
amex = 0
amexPosted = 0
curDay$ = tranID$(1,8)

return

[Function (declarations)]
rem ' -----------------------------------------------------------------
rem ' declarations
rem ' -----------------------------------------------------------------

declarations:

USE java.awt.Dimension
USE java.util.StringTokenizer
USE java.net.InetAddress

USE javax.print.attribute.standard.OrientationRequested
USE javax.print.attribute.HashPrintRequestAttributeSet
USE java.text.AttributedString

USE ::ClientServerFileMover.src::ClientServerFileMover
USE ::SQLProperties.bbj::SQLProperties

DECLARE BBjAPI ourAPI!
DECLARE BBjSysGui ourSysGui!
DECLARE BBjSystemMetrics ourSystemMetrics!
DECLARE Dimension scrDimension!
DECLARE BBjWindow ourWindow!
DECLARE BBjTopLevelWindow topLevelWindow!
DECLARE InetAddress localHost!

DECLARE BBjVector ourControlVector!
DECLARE BBjInputNSpinner month!
DECLARE BBjInputNSpinner year!
DECLARE BBjListButton availLogs!
DECLARE BBjEditBox visaApproved!
DECLARE BBjEditBox visaDeclined!
DECLARE BBjEditBox visaTotal!
DECLARE BBjEditBox masterCardApproved!
DECLARE BBjEditBox masterCardDeclined!
DECLARE BBjEditBox masterCardTotal!
DECLARE BBjEditBox amexApproved!
DECLARE BBjEditBox amexDeclined!
DECLARE BBjEditBox amexTotal!
DECLARE BBjEditBox overallApproved!
DECLARE BBjEditBox overallDeclined!
DECLARE BBjEditBox overallTotal!
DECLARE BBjNavigator browserNavigator!
DECLARE BBjCEdit entryBrowser!
DECLARE BBjEditBox status!
DECLARE BBjEditBox amount!
DECLARE BBjEditBox customer!
DECLARE BBjEditBox invOrOrder!
DECLARE BBjListButton numOfDays!
DECLARE BBjVector numOfDaysSpinList!
DECLARE BBjListButton hour!
DECLARE BBjVector hourSpinList!
DECLARE BBjListButton minute!
DECLARE BBjListButton startHour!
DECLARE BBjListButton startMinute!
DECLARE BBjVector minuteSpinList!
DECLARE BBjString selection!
DECLARE BBjStaticText reportParameters!

DECLARE BBjVector entries!
DECLARE BBjString entry!
DECLARE StringTokenizer currentEntry!
DECLARE BBjString token!
DECLARE BBjString workingRef!

DECLARE HashPrintRequestAttributeSet attrs!
DECLARE BBjForm pdf!
DECLARE BBjFormPage page!
DECLARE BBjFormParagraph para!
DECLARE BBjFormLine line!
DECLARE BBjString responseStr!
DECLARE StringTokenizer response!
DECLARE BBjString responsePart!
DECLARE ClientServerFileMover clientServerFileMover!

DECLARE BBjVector days!
DECLARE BBjVector criteria!
DECLARE BBjString criteriaStr!
DECLARE BBjVector reportEntries!
DECLARE BBjVector holdEntries!

DECLARE BBjVector totalDates!
DECLARE BBjVector totalvmc!
DECLARE BBjVector totalvmcPosted!
DECLARE BBjVector totalamex!
DECLARE BBjVector totalamexPosted!

DECLARE BBjString curDay!
DECLARE BBjNumber vmc!
DECLARE BBjNumber vmcPosted!
DECLARE BBjNumber amex!
DECLARE BBjNumber amexPosted!

DECLARE SQLProperties sqlProps!

return

[Function (getDisplayDate)]
rem ' -----------------------------------------------------------------
rem ' getDisplayDate
rem ' -----------------------------------------------------------------

getDisplayDate:

rem ' date must be in selDay$ in the form of MM-DD-YYYY"
theDay = num(selDay$(4,2))
theMonth = num(selDay$(1,2))
theYear = num(selDay$(7,4))
julian = jul(theYear, theMonth, theDay)

displayDate$ = date(julian,"%Dl, %Ml %D, %Y")

return

[Function (get_objects)]
rem ' -----------------------------------------------------------------
rem ' get_objects
rem ' -----------------------------------------------------------------

get_objects:

ourControlVector! = ourWindow!.getAllControls()

for i=0 to ourControlVector!.size() - 1
    control!= cast(BBjControl, ourControlVector!.getItem(i))

    if control!.getName().equals("month") then month!=cast(BBjInputNSpinner, control!)
    if control!.getName().equals("year") then year!=cast(BBjInputNSpinner, control!)
    if control!.getName().equals("availableLogs") then availLogs!=cast(BBjListButton, control!)

    if control!.getName().equals("visaApproved") then visaApproved!=cast(BBjEditBox, control!)
    if control!.getName().equals("visaDeclined") then visaDeclined!=cast(BBjEditBox, control!)
    if control!.getName().equals("visaTotal") then visaTotal!=cast(BBjEditBox, control!)

    if control!.getName().equals("masterCardApproved") then masterCardApproved!=cast(BBjEditBox, control!)
    if control!.getName().equals("masterCardDeclined") then masterCardDeclined!=cast(BBjEditBox, control!)
    if control!.getName().equals("masterCardTotal") then masterCardTotal!=cast(BBjEditBox, control!)

    if control!.getName().equals("amexApproved") then amexApproved!=cast(BBjEditBox, control!)
    if control!.getName().equals("amexDeclined") then amexDeclined!=cast(BBjEditBox, control!)
    if control!.getName().equals("amexTotal") then amexTotal!=cast(BBjEditBox, control!)

    if control!.getName().equals("overallApproved") then overallApproved!=cast(BBjEditBox, control!)
    if control!.getName().equals("overallDeclined") then overallDeclined!=cast(BBjEditBox, control!)
    if control!.getName().equals("overallTotal") then overallTotal!=cast(BBjEditBox, control!)

    if control!.getName().equals("browserNavigator") then browserNavigator!=cast(BBjNavigator, control!)
    if control!.getName().equals("entryBrowser") then entryBrowser!=cast(BBjCEdit, control!)

    if control!.getName().equals("customer") then customer!=cast(BBjEditBox, control!)
    if control!.getName().equals("invOrOrder") then invOrOrder!=cast(BBjEditBox, control!)
    if control!.getName().equals("status") then status!=cast(BBjEditBox, control!)
    if control!.getName().equals("amount") then amount!=cast(BBjEditBox, control!)

    if control!.getName().equals("numOfDays") then numOfDays!=cast(BBjListButton, control!)
    if control!.getName().equals("hour") then hour!=cast(BBjListButton, control!)
    if control!.getName().equals("minute") then minute!=cast(BBjListButton, control!)
    if control!.getName().equals("startHour") then startHour!=cast(BBjListButton, control!)
    if control!.getName().equals("startMinute") then startMinute!=cast(BBjListButton, control!)
    if control!.getName().equals("reportParameters") then reportParameters!=cast(BBjStaticText, control!)


next i

return

[Function (loadAvailableDays)]
rem ' -----------------------------------------------------------------
rem ' loadAvailableDays
rem ' -----------------------------------------------------------------

loadAvailableDays:

theMonth = month!.getValue()
theYear = year!.getValue()

dateTarget$ = str(theYear) + str(theMonth:"00")

files = unt
open(files)directory1$

logSelections$=""
logSelectionCount = 0
doneWithOne = 0

while 1
    while 1
        read record(files,end=*break)filename$

        if pos("ccTransLog" = filename$)=0 then continue

        if pos(dateTarget$ = filename$)=0 then continue

        delim = pos("." = filename$)
        datestr$ = filename$(delim+1)
        datestr$ = datestr$(5,2) + "/" + dateStr$(7,2) + "/" + dateStr$(1,4)

        rem ' place the datestr in the proper location in the selection string
        newDay$=dateStr$(4,2)
        if len(logSelections$)=0 then
            logSelections$ = logSelections$ + dateStr$ + $0A$
            logSelectionCount = logSelectionCount + 1
        else
            wrk$=logSelections$
            logSelections$=""
            while len(wrk$)
                ppos = pos($0A$=wrk$)
                target$=wrk$(1,ppos-1), wrk$=wrk$(ppos+1)
                targetDay$=target$(4,2)
                if targetDay$ > newDay$ then
                    logSelections$ = logSelections$ + dateStr$ + $0A$ + target$ + $0A$ + wrk$
                    logSelectionCount = logSelectionCount + 1            
                    wrk$=""
                else 
                    if targetDay$=newDay$ then
                        logSelections$ = logSelections$ + target$ + $0A$ + wrk$
                        wrk$=""
                    else
                        rem targetDay less than newDay
                        logSelections$=logSelections$ + target$ + $0A$
                        if wrk$="" then
                            logSelections$ = logSelections$ + dateStr$ + $0A$
                            logSelectionCount = logSelectionCount + 1                    
                        fi
                    fi
                fi
            wend
        fi
    wend
    
    if !(doneWithOne) AND directory2$<>"" then
        doneWithOne = 1
        close(files)
        open(files,err=*break)directory2$
    else
        break
    fi
        
wend

availLogs!.removeAllItems()

if logSelectionCount > 0 then
    availLogs!.insertItems(0, logSelections$)
    availLogs!.selectIndex(logSelectionCount - 1)
fi

close(files)

return

[Function (loadEntryBrowser)]
rem ' -----------------------------------------------------------------
rem ' loadEntryBrowser
rem ' -----------------------------------------------------------------

loadEntryBrowser:

rem ' set Navigator
browserNavigator!.setText(str(entryNumber))

rem ' find entry
text$=""
status!.setText("")
amount!.setText("")
customer!.setText("")
invOrOrder!.setText("")

    
entry! = cast(BBjString, entries!.getItem(entryNumber - 1))

currentEntry! = new StringTokenizer(entry!,"~")

secondEntry = 0
while currentEntry!.hasMoreTokens()
        
    token! = currentEntry!.nextToken()
            
    if len(text$)<>0 and pos("uniqueID:"=token!) then
        text$=text$ + $0A$
        secondEntry = 1
    fi
    
    if pos("uniqueID:"=token!) then
        ppos = pos(":"=token!)
        wrk$ = token!.substring(ppos)
        if wrk$(len(wrk$),1) = "B" then
            wrk$="Cust: " + wrk$(len(wrk$)-6,6)
        else
            wrk$="Order: " + wrk$(len(wrk$)-5 ,6)
        fi
        customer!.setText(wrk$)
    fi

    if pos("comment:"=token!) then
        ppos = pos(":"=token!)
        wrk$=token!.substring(ppos)
        ppos = pos("/"=wrk$)
        if ppos > 0 then
            customerNbr$=wrk$(1,ppos-1)
            invOrOrder!.setText(wrk$(ppos+1))
            found = 0
            read record(ARM01,key=customerNbr$,dom=*next)ARM01$; found = 1
            if found then
                customer!.setText(customerNbr$ + " " + ARM01.cust_name$)
            else
                customer!.setText(customerNbr$)
            fi
        else
            customer!.setText(wrk$)
        fi
    fi

    if pos("result:"=token!) then
        ppos = pos(":"=token!)
        status!.setText(token!.substring(ppos))
    fi

    if secondEntry and pos("amount:"=token!) then
        ppos = pos(":"=token!)
        amount!.setText(str(num(token!.substring(ppos)):"$###,##0.00"))
    fi

    text$ = text$ + token! + $0A$
    
wend

entryBrowser!.setText(text$)

return

[Function (loadSpinners)]
rem ' -----------------------------------------------------------------
rem ' loadSpinners
rem ' -----------------------------------------------------------------

loadSpinners:

month!.setMinimum(1)
month!.setMaximum(12)
month!.setStepSize(1)
month!.setValue(num(date(0,"%M")))

year!.setMinimum(2008)
year!.setMaximum(2025)
year!.setStepSize(1)
year!.setValue(num(date(0:"%Y")))

numOfDaysSpinList! = OurAPI!.makeVector()
for x = 0 to 31
    selection! = str(x:"#0")
    numOfDaysSpinList!.add(selection!)
next x
numOfDays!.removeAllItems()
numOfDays!.insertItems(0, numOfDaysSpinList!)
numOfDays!.selectIndex(1)

hourSpinList! = OurAPI!.makeVector()
for x = 0 to 23
    selection!=str(x:"00")
    hourSpinList!.add(selection!)
next x
hour!.removeAllItems()
hour!.insertItems(0, hourSpinList!)
hour!.selectIndex(23)

minuteSpinList! = OurAPI!.makeVector()
for x = 0 to 59
    selection!=str(x:"00")
    minuteSpinList!.add(selection!)
next x
minute!.removeAllItems()
minute!.insertItems(0, minuteSpinList!)
minute!.selectIndex(59)

startHour!.removeAllItems()
startHour!.insertItems(0, hourSpinList!)
startHour!.selectIndex(0)

startMinute!.removeAllItems()
startMinute!.insertItems(0, minuteSpinList!)
startMinute!.selectIndex(0)

return

[Function (loadSummaryBoxes)]
rem ' -----------------------------------------------------------------
rem ' loadSummaryBoxes
rem ' -----------------------------------------------------------------

loadSummaryBoxes:

rem ' visa
if visaApproved <> 0 then
    visaApproved!.setText(str(visaApproved))
else
    visaApproved!.setText("")
fi

if visaDeclined <> 0 then
    visaDeclined!.setText(str(visaDeclined))
else
    visaDeclined!.setText("")
fi

if visaTotal <> 0 then
    visaTotal!.setText(str(visaTotal:"$###,##0.00"))
else
    visaTotal!.setText("")
fi

rem ' masterCard
if mcApproved <> 0 then
    masterCardApproved!.setText(str(mcApproved))
else
    masterCardApproved!.setText("")
fi

if mcDeclined <> 0 then
    masterCardDeclined!.setText(str(mcDeclined))
else
    masterCardDeclined!.setText("")
fi

if mcTotal <> 0 then
    masterCardTotal!.setText(str(mcTotal:"$###,##0.00"))
else
    masterCardTotal!.setText("")
fi

rem ' amex
if amexApproved <> 0 then
    amexApproved!.setText(str(amexApproved))
else
    amexApproved!.setText("")
fi

if amexDeclined <> 0 then
    amexDeclined!.setText(str(amexDeclined))
else
    amexDeclined!.setText("")
fi

if amexTotal <> 0 then
    amexTotal!.setText(str(amexTotal:"$###,##0.00"))
else
    amexTotal!.setText("")
fi

overallApproved = visaApproved + mcApproved + amexApproved
overallDeclined = visaDeclined + mcDeclined + amexDeclined
overallTotal = visaTotal + mcTotal + amexTotal

rem ' overall
if overallApproved <> 0 then
    overallApproved!.setText(str(overallApproved))
else
    overallApproved!.setText("")
fi

if overallDeclined <> 0 then
    overallDeclined!.setText(str(overallDeclined))
else
    overallDeclined!.setText("")
fi

if overallTotal <> 0 then
    overallTotal!.setText(str(overallTotal:"$###,##0.00"))
else
    overallTotal!.setText("")
fi

return

[Function (openCustMast)]
rem ' -----------------------------------------------------------------
rem ' openCustMast
rem ' -----------------------------------------------------------------

openCustMast:

call "templates.pgm::ARM01"
ARM01 = unt
OPEN(ARM01)"ARM-01"

return

[Function (printReport)]
rem ' -----------------------------------------------------------------
rem ' printReport
rem ' -----------------------------------------------------------------

printReport:

selection = availLogs!.getSelectedIndex()
rem ' is there a day
if availLogs!.getItemCount() = 0 or selection < 0 then
    response = msgbox("A day has not been selected.", 0+64, "No Day Selected") 
else
    selections$ = logSelections$
    while selection
        ppos = pos($0A$ = selections$)
        selections$ = selections$(ppos+1)
        selection = selection - 1
    wend
    ppos = pos($0A$=selections$)
    selDay$ = selections$(1,ppos-1)

    pdfFilename$ = "ccDailyReport_" + selDay$(7,4) + selDay$(1,2) + selDay$(4,2) + ".pdf"
    erase pdfdirectory$ + pdfFilename$, err=*next

    attrs! = new HashPrintRequestAttributeSet()
    attrs!.add(OrientationRequested.LANDSCAPE)

    formWidth = 720
    lineHeight = 12

    pdf! = ourAPI!.getBBjPDFForm(pdfdirectory$ + pdfFilename$, attrs!)

    page = 0
    vmc = 0
    vmcPosted = 0
    amex = 0
    amexPosted = 0
    curDay$ = ""

    totalDates! = OurAPI!.makeVector()
    totalvmc! = OurAPI!.makeVector()
    totalvmcPosted! = OurAPI!.makeVector()
    totalvmcItems! = OurAPI!.makeVector()
    totalamex! = OurAPI!.makeVector()
    totalamexPosted! = OurAPI!.makeVector()

    gosub newPage

    count = entries!.size()
    for entryNum = 1 to count
        
        entry! = cast(BBjString, entries!.getItem(entryNum - 1))
        currentEntry! = new StringTokenizer(entry!,"~")

        tranID$ = "", tranType$ = "", result$ = "", name$ = "", amount$ = ""
        cardType$ = "", comment$ = "", customerName$="", refID$="", authCode$=""
        while currentEntry!.hasMoreTokens()

            token! = currentEntry!.nextToken()

            if pos("uniqueID:"=token!) then
                ppos = pos(":"=token!)
                tranID$ = token!.substring(ppos)
                if tranID$(1,8) <> curDay$ gosub dayChange
                continue
            fi

            if pos("tranType:"=token!) then
                ppos = pos(":"=token!)
                tranType$ = token!.substring(ppos)
                continue
            fi

            if pos("result:"=token!) then
                ppos = pos(":"=token!)
                result$ = token!.substring(ppos)
                continue
            fi

            if pos("name:"=token!) then
                ppos = pos(":"=token!)
                name$ = token!.substring(ppos)
                continue
            fi

            if pos("amount:"=token!) then
                ppos = pos(":"=token!)
                amount$ = token!.substring(ppos)
                continue
            fi

            if pos("cardType:"=token!) then
                ppos = pos(":"=token!)
                cardType$ = token!.substring(ppos)
                if cardType$ = "V" then
                    cardType$ = "Visa"
                else
                    if cardType$ = "M" then
                        cardType$ = "Master"
                    else
                        if cardType$ = "A" then
                            cardType$ = "Amex"
                        fi
                    fi
                fi
                continue
            fi

            if pos("comment:"=token!) then
                ppos = pos(":"=token!)
                comment$ = token!.substring(ppos)
                ppos = pos("/"=comment$)
                if ppos then
                    customerNbr$=comment$(1,ppos-1)
                    found=0
                    read record(ARM01,key=customerNbr$,dom=*next)ARM01$; found = 1
                    if found then
                        customerName$=ARM01.cust_name$
                    else
                        customerName$=""
                    fi
                    gosub convertOrderNbrToInvoiceNbr
                fi
                continue
            fi

            if pos("response:"=token!) then
                ppos = pos(":"=token!)
                responseStr!=token!.substring(ppos)
                response! = new StringTokenizer(responseStr!,"&")
                while response!.hasMoreTokens()
                    responsePart! = response!.nextToken()

                    if pos("PNREF="=responsePart!) then
                        ppos = pos("="=responsePart!)
                        refID$ = responsePart!.substring(ppos)
                        continue
                    fi

                    if pos("AUTHCODE="=responsePart!) then
                        ppos = pos("="=responsePart!)
                        authCode$ = responsePart!.substring(ppos)
                        continue
                    fi
                wend
                continue
            fi
        wend

        if result$ = "Approved" then
            
            rem ' do we have room on the page
            if len(comment$) = 0 then
                thisLineHeight = lineHeight
            else
                wrap = len(comment$)/48
                if mod(wrap, 1) <> 0 then 
                    wrap = wrap + 1
                fi
                wrap = int(wrap)
                thisLineHeight = lineHeight * wrap
            fi

            if (linePos + thisLineHeight + lineHeight + (lineHeight / 2) > 540) then gosub newPage

            para! = page!.newParagraph(0, linePos, 144, lineHeight)
            para!.setText(tranID$)
            page!.add(para!)

            para! = page!.newParagraph(160, linePos, 144, lineHeight) 
            para!.setText(name$)
            page!.add(para!)

            para! = page!.newParagraph(300, linePos, 72, lineHeight) 
            para!.setText(cardType$)
            page!.add(para!)

            para! = page!.newParagraph(390, linePos, 72, lineHeight) 
            para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
            para!.setText(STR(NUM(amount$):"($###,##0.00)"))
            page!.add(para!)

            para! = page!.newParagraph(480, linePos, 280, thisLineHeight) 
            para!.setText(comment$)
            page!.add(para!)

            linePos = linePos + thisLineHeight

            rem ' second line
            para! = page!.newParagraph(0.0, linePos, 144, lineHeight)
            para!.setText(refID$)
            page!.add(para!)

            para! = page!.newParagraph(160, linePos, 144, lineHeight) 
            para!.setText(authCode$)
            page!.add(para!)

            para! = page!.newParagraph(480, linePos, 280, lineHeight) 
            para!.setText(customerName$)
            page!.add(para!)

            linePos = linePos + lineHeight 

            linePos = linePos + int(lineHeight / 2)

            rem ' sum totals
            if cardType$="Visa" or cardType$="Master" then
                vmcItems = vmcItems + 1
                if tranID$(len(tranID$)) = "B" then
                    vmcPosted = vmcPosted + num(amount$)
                else
                    vmc = vmc + num(amount$)
                fi
            else
                if cardType$="Amex" then
                    if tranID$(len(tranID$)) = "B" then
                        amexPosted = amexPosted + num(amount$)
                    else
                        amex = amex + num(amount$)
                    fi
                fi
            fi
        fi

    next entryNum
    
    tranID$ = "All Done"
    gosub dayChange

    rem ' output report totals
    
    Tvmc = 0
    TvmcPosted = 0
    TvmcItems = 0
    Tamex = 0
    TamexPosted = 0

    if totalDates!.size() > 0 then
        for x = 0 to totalDates!.size() - 1

            curDay$ = totalDates!.getItem(x)
            rem ' for single days don't print Grand total, print the date
            rem ' if totalDates!.size() = 1 then
                rem ' curDay$ = "Grand"
            rem ' else
                curDay$ = curDay$(5,2) + "/" + curDay$(7,2) + "/" + curDay$(1,4)
            rem ' fi

            vmc = totalvmc!.getItem(x)
            vmcPosted = totalvmcPosted!.getItem(x)
            vmcItems = totalvmcItems!.getItem(x)
            amex = totalamex!.getItem(x)
            amexPosted = totalamexPosted!.getItem(x)

            gosub printTotallines

            Tvmc = Tvmc + vmc
            TvmcPosted = TvmcPosted + vmcPosted
            TvmcItems = TvmcItems + vmcItems
            Tamex = Tamex + amex
            TamexPosted = TamexPosted + amexPosted

        next x
    fi

    if totalDates!.size() = 0
        curDay$ = "Grand"
        vmc = 0
        vmcPosted = 0
        vmcItems = 0
        amex = 0
        amexPosted = 0
        gosub printTotallines
    fi

    if totalDates!.size() > 1 
        curDay$ = "Grand"
        vmc = Tvmc
        vmcPosted = TvmcPosted
        vmcItems = TvmcItems
        amex = Tamex
        amexPosted = TamexPosted
        gosub printTotallines
    fi

    pdf!.print()
    
    rem ' download to the client
    clientServerFileMover! = new ClientServerFileMover()
    success$ = clientServerFileMover!.downloadToClient("Save Report File", "", pdfFilename$, "", "", pdfdirectory$)
    if success$="::GOOD::" then
        msg$="The PDF report file download is complete."
        title$="Download Complete"
        resp=msgbox(msg$, 64, title$)
    else
        if success$="::BAD::" then
            msg$="The PDF report file download failed."
            title$="Download Failed"
            resp=msgbox(msg$, 16, title$)
        fi
    fi
    erase pdfdirectory$ + pdfFilename$, err=*next
fi

return

newPage:

    page! = pdf!.createPage()
    linePos = 0
    page = page + 1

    rem ' create header
    para! = page!.newParagraph(0.0, 0.0, 500, lineHeight)
    para!.setText("BASIS International, Ltd.")
    page!.add(para!)

    para! = page!.newParagraph(612, 0.0, 72, lineHeight)
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText("Page: " + str(page))
    page!.add(para!)

    linePos = linePos + lineHeight

    gosub getDisplayDate
    para! = page!.newParagraph(0.0, linePos, formWidth, lineHeight)
    para!.setText(reportParameters!.getText())
    page!.add(para!)
    linePos = linePos + lineHeight
    
    linePos = linePos + int(lineHeight / 4)
    line! = page!.newLine(0.0, linePos, formWidth, linePos)
    page!.add(line!)
    linePos = linePos + int(lineHeight / 4)

    rem ' create column headers
    para! = page!.newParagraph(0.0, linePos, 144, lineHeight)
    para!.setText("Transaction ID")
    page!.add(para!)

    para! = page!.newParagraph(160, linePos, 144, lineHeight) 
    para!.setText("Name on Card")
    page!.add(para!)

    para! = page!.newParagraph(300, linePos, 72, lineHeight) 
    para!.setText("Card Type")
    page!.add(para!)

    para! = page!.newParagraph(390, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText("Amount")
    page!.add(para!)

    para! = page!.newParagraph(480, linePos, 280, lineHeight) 
    para!.setText("Customer Number/Order or Invoice Nbr")
    page!.add(para!)

    linePos = linePos + lineHeight

    rem ' second line
    para! = page!.newParagraph(0.0, linePos, 144, lineHeight)
    para!.setText("Paypal Reference ID")
    page!.add(para!)

    para! = page!.newParagraph(160, linePos, 144, lineHeight) 
    para!.setText("Authorization Code")
    page!.add(para!)

    para! = page!.newParagraph(480, linePos, 280, lineHeight) 
    para!.setText("Customer Name")
    page!.add(para!)

    linePos = linePos + lineHeight 

    linePos = linePos + int(lineHeight / 4)
    line! = page!.newLine(0.0, linePos, formWidth, linePos)
    page!.add(line!)
    linePos = linePos + int(lineHeight / 4)

return

[Function (printTotalLines)]
rem ' -----------------------------------------------------------------
rem ' printTotalLines
rem ' -----------------------------------------------------------------

printTotalLines:

    rem ' do we have enough room for the totals
    if (linePos + (lineHeight * 7)) > 540 then gosub newPage

    linePos = linePos + lineHeight 

    para! = page!.newParagraph(0, linePos, 144, lineHeight) 
    para!.setText(curDay$ + " Totals")
    page!.add(para!)

    linePos = linePos + lineHeight 

    rem ' col 1
    para! = page!.newParagraph(0, linePos, 72, lineHeight) 
    para!.setText("VMC Posted:")
    page!.add(para!)

    para! = page!.newParagraph(90, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmcPosted:"($###,##0.00)"))
    page!.add(para!)

    rem ' col 2
    para! = page!.newParagraph(180, linePos, 72, lineHeight) 
    para!.setText("Amex Posted:")
    page!.add(para!)

    para! = page!.newParagraph(270, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(amexPosted:"$(###,##0.00)"))
    page!.add(para!)

    rem ' col 3
    postedTotal = vmcPosted + amexPosted

    para! = page!.newParagraph(360, linePos, 72, lineHeight) 
    para!.setText("Total Posted:")
    page!.add(para!)

    para! = page!.newParagraph(450, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(postedTotal:"($###,##0.00)"))
    page!.add(para!)

    linePos = linePos + lineHeight 
    
    rem ' col 1
    para! = page!.newParagraph(0, linePos, 72, lineHeight) 
    para!.setText("VMC Manual:")
    page!.add(para!)

    para! = page!.newParagraph(90, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmc:"($###,##0.00)"))
    page!.add(para!)

    rem ' col 2
    para! = page!.newParagraph(180, linePos, 80, lineHeight) 
    para!.setText("Amex Manual:")
    page!.add(para!)

    para! = page!.newParagraph(270, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(amex:"$(###,##0.00)"))
    page!.add(para!)

    rem ' col 3
    manualTotal = vmc + amex

    para! = page!.newParagraph(360, linePos, 72, lineHeight) 
    para!.setText("Total Manual:")
    page!.add(para!)

    para! = page!.newParagraph(450, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(manualTotal:"($###,##0.00)"))
    page!.add(para!)

    linePos = linePos + lineHeight 

    rem ' col 1
    para! = page!.newParagraph(0, linePos, 72, lineHeight) 
    para!.setText("VMC Total:")
    page!.add(para!)

    para! = page!.newParagraph(90, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmc + vmcPosted:"($###,##0.00)"))
    page!.add(para!)

    rem ' col 2
    para! = page!.newParagraph(180, linePos, 72, lineHeight) 
    para!.setText("Amex Total:")
    page!.add(para!)

    para! = page!.newParagraph(270, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(amex + amexPosted:"($###,##0.00)"))
    page!.add(para!)

    rem ' col 3
    para! = page!.newParagraph(360, linePos, 72, lineHeight) 
    para!.setText("Total:")
    page!.add(para!)

    para! = page!.newParagraph(450, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmc + vmcPosted + amex + amexPosted:"($###,##0.00)"))
    page!.add(para!)

    linePos = linePos + lineHeight 

    rem ' col 1
    rem ' calculate the vmc fees
    precision 3
    vmcFee = (vmc + vmcPosted) * num(vmcRate$)
    vmcFee = vmcFee + (vmcItems * num(vmcPerItem$))
    precision 2

    para! = page!.newParagraph(0, linePos, 72, lineHeight) 
    para!.setText("VMC Fee:")
    page!.add(para!)

    para! = page!.newParagraph(90, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR((vmcFee * (-1)):"($###,##0.00)"))
    page!.add(para!)

    rem ' col 2
    rem ' calculate the amex fees
    precision 3
    amexFee = (amex + amexPosted) * num(amexRate$)
    amexFee = round(amexFee, 2)
    precision 2

    para! = page!.newParagraph(180, linePos, 72, lineHeight) 
    para!.setText("Amex Fee:")
    page!.add(para!)

    para! = page!.newParagraph(270, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR((amexFee * (-1)):"($###,##0.00)"))
    page!.add(para!)

    rem ' col 3
    para! = page!.newParagraph(360, linePos, 72, lineHeight) 
    para!.setText("Total Fees:")
    page!.add(para!)

    para! = page!.newParagraph(450, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(((amexFee + vmcFee) * (-1)):"($###,##0.00)"))
    page!.add(para!)

    linePos = linePos + lineHeight 

    rem ' col 1 
    para! = page!.newParagraph(0, linePos, 72, lineHeight) 
    para!.setText("VMC Net:")
    page!.add(para!)

    para! = page!.newParagraph(90, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmc + vmcPosted - vmcFee:"($###,##0.00)"))
    page!.add(para!)


    rem ' col 2
    para! = page!.newParagraph(180, linePos, 72, lineHeight) 
    para!.setText("Amex Net:")
    page!.add(para!)

    para! = page!.newParagraph(270, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(amex + amexPosted - amexFee:"($###,##0.00)"))
    page!.add(para!)

    rem ' col 3
    para! = page!.newParagraph(360, linePos, 72, lineHeight) 
    para!.setText("Net Total:")
    page!.add(para!)

    para! = page!.newParagraph(450, linePos, 72, lineHeight) 
    para!.setHorizontalAlignment(para!.RIGHT_JUSTIFIED)
    para!.setText(STR(vmc + vmcPosted - vmcFee + amex + amexPosted - amexFee:"($###,##0.00)"))
    page!.add(para!)

    linePos = linePos + lineHeight

return

[Function (resetSummaryBoxes)]
rem ' -----------------------------------------------------------------
rem ' resetSummaryBoxes
rem ' -----------------------------------------------------------------

resetSummaryBoxes:

rem ' visa

    visaApproved!.setText("")
    visaDeclined!.setText("")
    visaTotal!.setText("")
    masterCardApproved!.setText("")
    masterCardDeclined!.setText("")
    masterCardTotal!.setText("")
    amexApproved!.setText("")
    amexDeclined!.setText("")
    amexTotal!.setText("")
    overallApproved!.setText("")
    overallDeclined!.setText("")
    overallTotal!.setText("")

return

[Function (summarizeDay)]
rem ' -----------------------------------------------------------------
rem ' summarizeDay
rem ' -----------------------------------------------------------------

summarizeDay:

entryBrowser!.setText("")
browserNavigator!.setText("")
customer!.setText("")
status!.setText("")
amount!.setText("")
invOrOrder!.setText("")
entryNumber = 0
totalEntries = 0

if availLogs!.getItemCount() = 0
    gosub resetSummaryBoxes
else
    selection = availLogs!.getSelectedIndex()
    if selection < 0 then
        gosub resetSummaryBoxes
    else
        selections$ = logSelections$
        while selection
            ppos = pos($0A$ = selections$)
            selections$ = selections$(ppos+1)
            selection = selection - 1
        wend
        ppos = pos($0A$=selections$)
        selDay$ = selections$(1,ppos-1)

        filename$="ccTransLog." + selDay$(7,4) + selDay$(1,2) + selDay$(4,2)
        
        rem ' open one or two log files
        log1 = unt, log1Opened = 0
        open(log1, err=*next)directory1$+"/"+filename$; log1Opened = 1
        if !log1Opened then log1=0
        log2 = unt, log2Opened = 0
        open(log2, err=*next)directory2$+"/"+filename$; log2Opened = 1

        if log1Opened or log2Opened then

            entries! = ourAPI!.makeVector()

            workingRef! = ""
            visaApproved = 0
            visaDeclined = 0
            visaTotal = 0
            mcApproved = 0
            mcDeclined = 0
            mcTotal = 0
            amexApproved = 0
            amexDeclined = 0
            amexTotal = 0

            while 1

                log = 0

                if log1Opened then
                    log = log1
                else
                    if log2Opened then
                        log = log2
                    fi
                fi
                
                if log = 0 then break

                while 1
                    read(log,end=*break)entry$

                    currentEntry! = new StringTokenizer(entry$,"~")

                    while currentEntry!.hasMoreTokens()

                        token! = currentEntry!.nextToken()

                        rem ' uniqueID is always the first token in a row
                        if pos("uniqueID:"=token!) then
                            if workingRef! = "" then
                                workingRef! = token!
                                savedEntry$ = entry$
                            else
                                if workingRef! <> token! then
                                    rem ' change of working ref
                                    gosub acummulateValues
                                    entries!.addItem(savedEntry$)
                                    totalEntries = totalEntries + 1                            
                                    workingRef! = token!
                                    result$=""
                                    amount=0
                                    cardType$=""
                                    savedEntry$=entry$
                                else
                                    rem ' this is the second line for a given entry
                                    savedEntry$ =   savedEntry$ +   "~" +   entry$
                                fi
                            fi
                        else
                            if pos("result:"=token!) then
                                ppos = pos(":"=token!) 
                                result$=token!.substring(ppos)
                            fi
                            if pos("amount:"=token!) then
                                ppos = pos(":"=token!)
                                amount = num(token!.substring(ppos))
                            fi
                            if pos("cardType:"=token!) then
                                ppos = pos(":"=token!)
                                cardType$ = token!.substring(ppos)
                            fi
                        fi
                    wend

                wend
                
                if log = log1 then 
                    close(log1)
                    log1Opened = 0
                else
                    if log = log2 then
                        close(log2)
                        log2Opened = 0
                    fi
                fi

            wend
            gosub acummulateValues
            entries!.addItem(savedEntry$)
            totalEntries = totalEntries + 1
            gosub loadSummaryBoxes
            entryNumber = 1
            gosub loadEntryBrowser
        else
            gosub resetSummaryBoxes
        fi
    fi
fi

return

[Function (updateStartTime)]
rem ' -----------------------------------------------------------------
rem ' updateStartTime
rem ' -----------------------------------------------------------------

updateStartTime:

if numOfDays!.getSelectedIndex() > 0 then
    endHourSelected = hour!.getSelectedIndex()
    endHour$ = hourSpinList!.get(endHourSelected)

    endMinuteSelected = minute!.getSelectedIndex()
    endMinute$ = minuteSpinList!.get(endMinuteSelected)

    begHour$=endHour$
    begMinute$=endMinute$

    begMinute$=str(num(begMinute$)+1:"00")
    if begMinute$="60" then
        begHour$=str(num(begHour$)+1:"00")
        begMinute$="00"
        if begHour$="24" then
            begHour$ = "00"
        fi
    fi
    begHour = num(begHour$)
    begMinute = num(begMinute$)
    startHour!.selectIndex(begHour)
    startMinute!.selectIndex(begMinute)
fi

return

