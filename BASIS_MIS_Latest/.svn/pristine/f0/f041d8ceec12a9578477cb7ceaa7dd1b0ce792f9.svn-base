0010 REM "WOR - Work Order Material Issues Register"
0020 REM "Program WOR.DA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.5 - 01Dec98 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "30Oct98 WGH: May report wrong cost when LIFO/FIFO cost is zero (6210)
0032 REM "18Mar99 KJS: Y2K year processing (444,448)
0040 REM 
0050 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=31
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0115 LET FILES$[1]="WOE-04",FILES$[2]="WOE-15",FILES$[3]="WOE-25"
0120 LET FILES$[4]="WOE-01",FILES$[5]="WOM-10",FILES$[6]="IVM-01"
0125 LET FILES$[7]="SYS-01",FILES$[8]="WOW-01",FILES$[9]="IVM-02"
0130 LET FILES$[10]="WOE-13",FILES$[11]="WOE-23",FILES$[12]="IVT-04"
0135 LET FILES$[29]="IVM-12",FILES$[30]="WOT-21",FILES$[31]="WOM-07"
0145 LET OPTIONS$[2]="L",OPTIONS$[3]="L"
0150 CALL "SYC.DA",1,1,31,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0155 IF STATUS THEN GOTO 9900
0160 LET WOE04_DEV=CHANNELS[1],WOE15_DEV=CHANNELS[2],WOE25_DEV=CHANNELS[3]
0165 LET WOE01_DEV=CHANNELS[4],WOM10_DEV=CHANNELS[5],IVM01_DEV=CHANNELS[6]
0170 LET SYS01_DEV=CHANNELS[7],WOW01_DEV=CHANNELS[8],IVM02_DEV=CHANNELS[9]
0175 LET WOE13_DEV=CHANNELS[10],WOE23_DEV=CHANNELS[11],IVT04_DEV=CHANNELS[12]
0180 LET IVM12_DEV=CHANNELS[29],WOT21_DEV=CHANNELS[30],WOM07_DEV=CHANNELS[31]
0200 REM " --- IOLISTs"
0210 WOE15A: IOLIST A0$,A1$
0220 WOE01A: IOLIST B0$,B1$,B[ALL]
0230 IVM02A: IOLIST C0$,C1$
0240 IVM01A: IOLIST D0$,D1$(1),D2$,D3$,D4$,D5$,D6$
0250 ARM01A: IOLIST *,CUSTNAME$(1)
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0280 WOS01A: IOLIST X$,I1$,I2$,I3$,X$,M0$,M1$,M2$,M3$
0290 ARS01A: IOLIST X$,X$,C1$,C3$,X$,C$
0300 GLS01A: IOLIST X$,X$,G2$,X$,X$,G5$
0310 WOM10A: IOLIST *,Z1$(1)
0315 WOM10A1: IOLIST X0$,X1$
0320 WOE25A: IOLIST W0$,W1$,W[ALL]
0330 WOE14A: IOLIST SER0$,SER1$,SER2$,F[ALL]
0340 IVW05A: IOLIST W9$,ICOST
0350 ARM10A: IOLIST *,Q8$(1)
0360 WOW01A: IOLIST T0$,T[0]
0400 REM " --- Parameters"
0405 DIM P[2],G[4],INFO$[20],DESC[3]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0415 LET N0$=F0$(16,2),N1$=F4$,N2$="WO",N3$=F5$,LF$="N",SOURCE$=PGM(-2)
0420 FIND (SYS01_DEV,KEY=N0$+"IV00",DOM=9800)IOL=IVS01A
0425 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=WOS01A
0430 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0435 LET P[0]=NUM(P2$(1,2)),IVS01_PRECISION=NUM(P2$(5,2)),P[1]=NUM(P2$(5,1)),P[2]=NUM(P2$(7,2))
0437 IF POS(P3$(3,1)="LF")>0 THEN LET LF$="Y"
0440 LET G0=NUM(G2$(7,2)),P9$=P3$(17,1),OP$=I3$(2,1),R9$="N"
0442 FOR X=0 TO 4
0444 LET G[X]=NUM(G2$(X*2+1,2),ERR=0445)
0446 NEXT X
0448 LET G[2]=FNYY_YEAR(G2$(5,2))
0450 CALL "SYC.VA","AR",INFO$[ALL]
0455 LET AR$=INFO$[20]
0460 IF AR$<>"Y" THEN GOTO 0480
0465 FIND (SYS01_DEV,KEY=N0$+"AR00",DOM=9800)IOL=ARS01A
0470 LET C0=NUM(C1$(1,2)),R9$=C3$(11,1)
0480 LET GL$="N",STATUS=0
0485 CALL "GLC.BA",ERR=0490,SOURCE$,N2$,GLW11$,GL$,STATUS
0490 IF STATUS<>0 THEN GOTO 9900
0495 FOR X=1 TO 3; LET DESC[X]=NUM(P2$((X-1)*2+9,2)),DESCLEN=DESCLEN+DESC[X]; NEXT X
0500 REM " --- Initialize Data "
0510 DIM HEADINGS$[2],J$(80,"-"),J1$(40),A[1],U[1]
0520 DIM B[11],D[3],W[4],S[1],T[1],D1$(DESC[1]+DESC[2]+DESC[3])
0530 LET H0=132,H=0,HEADINGS=2,WHEN$=F0$(7,3),CLOCK$="",L9=59,L=L9+1
0540 LET M1=LEN(M1$),M2=LEN(M2$),M3=LEN(M3$),G5=LEN(G5$)
0550 LET HEADINGS$[0]=N1$,HEADINGS$[1]=N3$,H2=H0-M2*4-M1-M3
0560 IF P9$="L" THEN LET P8$="Lot Number: " ELSE LET P8$="Serial Number: "
0600 REM " --- Additional File Opens"
0605 IF AR$<>"Y" THEN GOTO 0625
0610 LET FILES$[13]="ARM-01"
0615 IF R9$<>"Y" THEN GOTO 0625
0620 LET FILES$[14]="ARM-10"
0625 IF POS(P9$="LS")=0 THEN GOTO 0645
0630 LET FILES$[15]="WOE-14",FILES$[16]="IVM-07",FILES$[17]="IVT-01"
0635 LET FILES$[18]="WOT-11",FILES$[19]="IVM-17",FILES$[20]="IVT-02"
0640 LET FILES$[21]="IVT-03"
0645 IF LF$<>"Y" THEN GOTO 0660
0650 LET FILES$[22]="IVW-05",FILES$[23]="IVM-04"
0655 LET FILES$[24]="IVW-04",OPTIONS$[24]="CL"
0660 IF GL$<>"Y" THEN GOTO 0675
0665 LET FILES$[25]="GLM-01",FILES$[26]=GLW11$,OPTIONS$[26]="CL"
0670 LET FILES$[27]="GLT-04",FILES$[28]="GLT-05"
0675 CALL "SYC.DA",1,12,28,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0677 IF STATUS THEN GOTO 9900
0680 IF CHANNELS[13] THEN LET ARM01_DEV=CHANNELS[13]
0685 IF CHANNELS[14] THEN LET ARM10_DEV=CHANNELS[14]
0690 IF CHANNELS[15] THEN LET WOE14_DEV=CHANNELS[15],IVM07_DEV=CHANNELS[16],IVT01_DEV=CHANNELS[17],WOT11_DEV=CHANNELS[18],IVM17_DEV=CHANNELS[19],IVT02_DEV=CHANNELS[20],IVT03_DEV=CHANNELS[21]
0695 IF CHANNELS[22] THEN LET IVW05_DEV=CHANNELS[22],IVM04_DEV=CHANNELS[23],IVW04_DEV=CHANNELS[24]
0700 IF CHANNELS[25] THEN LET GLM01_DEV=CHANNELS[25],GLW11_DEV=CHANNELS[26],GLT04_DEV=CHANNELS[27],GLT05_DEV=CHANNELS[28]
0710 DIM LF_CHANNELS[10]
0720 LET LF_CHANNELS[0]=IVM04_DEV,LF_CHANNELS[1]=IVW04_DEV,LF_CHANNELS[2]=IVM02_DEV
0800 REM " --- Options"
0810 LET PROMPT$="Do You Want To Print The "+N3$
0820 CALL "SYC.YN",1,PROMPT$,2,V$,V3
0830 IF V$<>"Y" THEN GOTO 9900
0900 REM " --- Final Initializations"
0910 CALL "SYC.GA",7,1,"","",STATUS
0920 IF STATUS THEN GOTO 9900
0930 CALL "SYC.NB","Printing",7,COLUMN
0940 CALL "SYC.FA",WOW01_DEV
0950 IF LF$<>"Y" THEN GOTO 1000
0960 CALL "SYC.FA",IVW05_DEV
0970 CALL "SYC.FA",IVW04_DEV
1000 REM " --- Init Read"
1005 PRECISION IVS01_PRECISION
1010 READ (WOE04_DEV,KEY=N0$+"  D",DOM=1100)
1100 REM " --- Main Read"
1110 LET K$=KEY(WOE04_DEV,END=4000)
1120 IF K$(1,5)<>N0$+"  D" THEN GOTO 4000
1130 READ (WOE04_DEV)
1200 REM " --- WO Header
1210 DIM Z1$(G[4],"0")
1220 READ (WOE15_DEV,KEY=K$(1,4)+K$(6,7)+"000",DOM=1100)IOL=WOE15A
1230 READ (WOE25_DEV,KEY=K$(1,4)+K$(6,7),DOM=1240)
1240 FIND (WOE01_DEV,KEY=A0$(1,11),DOM=1100)IOL=WOE01A
1250 IF B0$(14,1)<>"I" THEN GOTO 1280
1260 FIND (IVM01_DEV,KEY=N0$+B0$(56),DOM=1280)IOL=IVM01A
1270 LET B1$(1)=D1$(1,MIN(DESC[1],30))
1280 PRINT @(COLUMN,11),K$(6,7),
1290 LET T0=0
1400 REM " --- Additional Reads
1410 FIND (WOM10_DEV,KEY=N0$+"A"+B0$(12,2),DOM=1420)IOL=WOM10A
1420 LET Z1$=Z1$(1,G[4])
1430 IF FNP$(B0$(34,6))="" THEN GOTO 1470
1440 DIM CUSTNAME$(30)
1450 LET CUSTNAME$(1)="Not On File"
1460 IF AR$="Y" THEN FIND (ARM01_DEV,KEY=N0$+B0$(34,6),DOM=1470)IOL=ARM01A
1470 GOSUB 5200
2000 REM " --- Process Details
2010 DIM W[4],D1$(DESC[1]+DESC[2]+DESC[3])
2020 LET K2$=KEY(WOE25_DEV,END=3000)
2030 IF K2$(1,11)<>A0$(1,11) THEN GOTO 3000
2040 READ (WOE25_DEV)IOL=WOE25A
2050 IF W[3]=0 THEN GOTO 2000
2060 IF LF$<>"Y" THEN GOTO 2090
2070 GOSUB 6200
2080 LET W[4]=ICOST
2090 LET D1$(1)="*** Not On File ***"
2100 FIND (IVM01_DEV,KEY=N0$+W1$(21,20),DOM=2120)IOL=IVM01A
2110 IF R9$="N" THEN LET Z0$=D6$(1,G[4])
2120 IF R9$<>"N" THEN GOSUB 6600
2130 GOSUB 5400
2140 LET T1=0,T2=0
2300 REM " --- Serialized ?
2310 IF POS(P9$="LS")=0 THEN GOTO 2800
2320 IF D2$(19,2)<>"YY" THEN GOTO 2800
2330 DIM F[1]
2340 READ (WOE14_DEV,KEY=W0$,DOM=2350)
2350 LET K1$=KEY(WOE14_DEV,END=2400)
2360 IF POS(W0$=K1$)<>1 THEN GOTO 2400
2370 READ (WOE14_DEV)IOL=WOE14A
2380 GOSUB 5500
2390 GOTO 2350
2400 LET ERROR$=""
2410 IF T1=W[3] THEN GOTO 2600
2420 LET T9=T9+1,ERROR$="* Missing"
2430 IF P9$="L" THEN LET I=3 ELSE LET I=W[3]-T1
2440 IF I<0 THEN LET I=ABS(I)
2450 IF L+I>L9 THEN LET L=L9+2; GOSUB 5400
2460 DIM SER1$(P[2],"_"),F[2]
2470 FOR X=1 TO I
2480 GOSUB 5500
2490 NEXT X
2600 REM " --- Finish The Totals
2620 IF L+2>L9 THEN GOSUB 5400
2640 PRINT (7)@(H2+M2*3),J$(1,M2-1)," ",J$(1,M3-1)," ",J$(1,M1-1),'LF',@(H2-10),"Total: ",
2650 LET L=L+1,W[3]=T1
2660 IF W[3]<>0 THEN LET W[4]=T2/W[3] ELSE LET W[4]=0
2670 GOSUB 5450
2800 REM " --- G/L Distribution"
2810 PRECISION 2
2820 LET ACCOUNT$=Z0$,GLDATE$=A1$(7,3),AMOUNT=(-W[3])*W[4],UNITS=0
2830 LET MEMO$=FNITEM$(D1$,DESC[1],DESC[2],DESC[3]),REF1$="WO "+B0$(5,7)
2840 LET REF2$="Step "+W1$(7,3),REF3$="Whse "+B0$(54,2)
2850 GOSUB GLRECAP
2860 LET ACCOUNT$=Z1$,AMOUNT=-AMOUNT,MEMO$=CVS(B1$(1,30),2)+" "+CVS(B1$(31,30),2)
2880 GOSUB GLRECAP
2900 REM 
2920 LET T0=T0+W[3]*W[4]
2930 PRECISION IVS01_PRECISION
2990 GOTO 2000
3000 REM " --- Work Order Totals
3020 IF L+2>L9 THEN GOSUB 5200
3040 PRINT (7)@(H2+M2*4+M3),J$(1,M1),'LF',@(H2),"Work Order Totals: ",@(H2+M2*4+M3),T0:M1$
3050 LET L=L+2
3060 LET S[0]=S[0]+T0
3100 LET T0$=N0$+A1$(1,2)
3120 DIM T[1]
3130 FIND (WOW01_DEV,KEY=T0$,DOM=3140)IOL=WOW01A
3140 LET T[0]=T[0]+T0
3160 WRITE (WOW01_DEV,KEY=T0$)IOL=WOW01A
3900 GOTO 1100
4000 REM " --- End"
4020 IF L+2>L9 THEN GOSUB 5000
4040 PRINT (7)@(H2+M2*4+M3),J$(1,M1),'LF',@(H2),"Report Totals: ",@(H2+M2*4+M3),S[0]:M1$
4100 REM " --- Totals By Type
4120 GOSUB 5000
4140 PRINT (7)"Totals By Work Order Type: ",'LF'
4150 LET L=L+2
4170 DIM S[1]
4180 READ (WOW01_DEV,KEY=N0$,DOM=4200)
4200 READ (WOW01_DEV,END=4400)IOL=WOW01A
4220 IF POS(N0$=T0$)<>1 THEN GOTO 4400
4230 DIM X0$(30),X1$(G0,"0"); LET X0$(6)="*** Not On File ***"
4240 FIND (WOM10_DEV,KEY=N0$+"A"+T0$(3),DOM=4250)IOL=WOM10A1
4250 IF L+1>L9 THEN GOSUB 5000
4260 PRINT (7)T0$(3),"  ",X0$(6,20),"  ",
4270 IF GL$="Y" THEN PRINT (7)FNF$(X1$(1,G0),G5$),
4280 PRINT (7)@(35+G0),T[0]:M1$
4290 LET L=L+1
4300 LET S[0]=S[0]+T[0]
4320 GOTO 4200
4400 IF L+2>L9 THEN GOSUB 5000
4420 PRINT (7)@(35+G0),J1$(1,M1),'LF',@(5),"Totals: ",@(35+G0),S[0]:M1$
4430 LET L=L+2
4520 IF T9=0 THEN GOTO 4900
4540 PRINT @(0,3),'CL',@(10,3),T9," Lines Are Missing Serial/Lot #'s, <Enter> To Correct: ",
4550 LET V0$="S",V1$="",V2$="",V3$="",V4$="",V0=1,V1=69+LEN(STR(T9)),V2=3
4560 GOSUB 7000
4580 GOTO 9900
4900 REM " --- Run next overlay"
4910 LET UPDATE$="WOU.AA",WIDTH=H0,PAGE=H
4980 IF GL$="Y" THEN RUN "GLR.XA"
4990 RUN UPDATE$
5000 REM " --- Heading"
5010 LET L=0
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,H,H0,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5190 RETURN 
5200 REM " --- WO Header
5210 IF L+8>L9 THEN GOSUB 5000
5220 PRINT (7)'LF',"WO Number: ",A0$(5,7),@(23),"Type: ",A1$(1,2),@(34),"Category: ",@(45),A1$(3,1),@(60),"Warehouse: ",A1$(49,2),@(83),"Issue Date: ",FNB$(A1$(7,3)),'LF'
5240 IF A1$(3,1)="I" THEN PRINT (7)@(1),"Bill No.: ",A1$(51),"       ",
5260 PRINT (7)"Description: ",B1$(1,30),@(83),"Ordered: ",FNB$(B0$(16,3)),'LF'
5280 IF OP$<>"Y" THEN GOTO 5300
5290 IF POS(" "<>B0$(34,6))>0 THEN PRINT (7)"Customer: ",FNF$(B0$(34,C0),C$),"  ",CUSTNAME$(1),@(60),"Sales Order: ",B0$(40,7),"-",B0$(47,3),'LF'; LET L=L+2
5300 PRINT (7)@(H2+M2*2-6),"Prior",@(H2+M2*4-5),"This",@(H2+M2*4+M3-5),"Unit"
5320 PRINT (7)"Step Item",@(P[0]+5),"Description",@(P[0]+36),"UM Required",@(H2+M2-6),"Order",@(H2+M2*2-6),"Issue",@(H2+M2*3-4),"Bal",@(H2+M2*4-6),"Issue",@(H2+M2*4+M3-5),"Cost",@(H2+M2*4+M3+M1-6),"Total",'LF'
5340 LET L=L+8
5399 RETURN 
5400 REM " --- Details ...
5420 IF L+2>L9 THEN GOSUB 5200
5430 LET DESC$=FNITEM$(D1$,DESC[1],DESC[2],DESC[3])
5440 PRINT (7)W0$(12,3)," ",W1$(21),@(P[0]+5),DESC$(1,MIN(LEN(DESC$),31)),@(P[0]+36),W1$(1,2)," ",FNB$(W1$(4,3)),
5445 IF P9$<>"N" THEN IF D2$(19,2)="YY" THEN PRINT (7)""; GOTO 5460
5450 PRINT (7)@(H2),W[0]:M2$,W[1]:M2$,W[0]-W[1]:M2$,W[3]:M2$,W[4]:M3$,W[3]*W[4]:M1$
5460 LET L=L+1
5490 RETURN 
5500 REM " --- Serialized Detail
5520 IF L+1>L9 THEN GOSUB 5400
5540 PRINT (7)@(0),ERROR$,@(P[0]+8),P8$,SER1$,@(H2+M2*3),F[0]:M2$,F[1]:M3$,F[0]*F[1]:M1$
5550 LET T1=T1+F[0],T2=T2+F[0]*F[1]
5560 LET L=L+1
5590 RETURN 
6200 REM " --- LIFO/FIFO"
6210 LET Q7=W[4],ICOST=0,LF_DATE$=A0$(7,3)
6220 LET LF_ACTION$=P3$(3,1)+"I"
6230 DIM LF_ITEM$[10]
6240 LET LF_ITEM$[0]=N0$,LF_ITEM$[1]=W1$(19,2),LF_ITEM$[2]=W1$(21,20)
6250 REM " --- Inquiry On Tier Cost For Returned Items"
6260 IF W[3]>=0 THEN GOTO 6300
6265 LET LF_ACTION$(2,1)="R"
6270 CALL "IVC.LF",LF_ACTION$,"I",LF_DATE$,LF_CHANNELS[ALL],LF_ITEM$[ALL],IVS01_PRECISION,ABS(W[3]),Q7,RET_COST,STATUS
6280 LET Q7=RET_COST
6300 REM " --- Report On Tier Cost For Sold Items"
6310 CALL "IVC.LF",LF_ACTION$,"R",LF_DATE$,LF_CHANNELS[ALL],LF_ITEM$[ALL],IVS01_PRECISION,ABS(W[3]),Q7,RET_COST,STATUS
6320 IF RET_COST<>0 THEN LET ICOST=RET_COST
6330 LET W9$=J1$(1,17)+W1$(21)+W0$(12,3)
6340 WRITE (IVW05_DEV,KEY=W9$)IOL=IVW05A
6390 RETURN 
6600 REM " --- Item Distribution Code"
6610 DIM Q8$(G[4]*8)
6620 FIND (IVM02_DEV,KEY=N0$+W1$(19,22),DOM=6660)IOL=IVM02A
6640 FIND (ARM10_DEV,KEY=N0$+"D"+C1$(13,2),DOM=6690)IOL=ARM10A
6660 LET Z0$=Q8$(6*G[4]+1,G[4])
6690 RETURN 
6900 REM " --- Standard G/L Recap Routine"
6910 GLRECAP: 
6920 IF GL$<>"Y" THEN GOTO 6990
6950 CALL "GLC.AA",GLM01_DEV,GLW11_DEV,GLT05_DEV,ACCOUNT$,GLDATE$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8070 DEF FNG$(Q$)=STR((ASC(Q$)-32)*POS(" "<>Q$):"000")
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
