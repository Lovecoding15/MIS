0010 REM "POC - Process Standard Ribbon Entry"
0020 REM "Program POC.RA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0042 REM "TYPE$      : Record type (Input)"
0044 REM "             R=Requisition/P=Purchase Order"
0046 REM "             Q=QA Receipt/C=PO Receipt"
0048 REM "ACTION$    : Action type (Input)"
0050 REM "             B=Display background/D=Display record/I=Process input"
0052 REM "PARAMS$[n] : String parameters (Input)"
0054 REM               [1] = Firm ID  [2]=GL Installed?"
0056 REM "PARAMS[n]  : Numeric parameters (Input)"
0058 REM               [1] = Key length   [2] = Row for 1st ribbon input"
0060 REM "CHANNELS[n]: Channel numbers (Input)"
0062 REM "             [1] = APM-05   [3] = IVM-10"
0064 REM "             [2] = APM-10   [4] = POM-04"
0066 REM "A$[n]      : Header strings (Input/Returned)"
0068 REM "A[n]       : Header numerics (Input/Returned)"
0070 REM "FKEY       : Function Key Value (Returned)"
0075 REM 
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER TYPE$,ACTION$,PARAMS$[ALL],PARAMS[ALL],CHANNELS[ALL],A$[ALL],A[ALL],FKEY
0100 REM " --- Open/Lock Files"
0110 LET APM05_DEV=CHANNELS[1],APM10_DEV=CHANNELS[2]
0120 LET IVM10_DEV=CHANNELS[3],POM04_DEV=CHANNELS[4]
0200 REM " --- IOLIST's"
0220 APM10C: IOLIST B0$(1)
0230 IVM10C: IOLIST C0$(1)
0240 POM04A: IOLIST D0$(1),D1$(1)
0320 APM05A: IOLIST X0$(1),X1$(1)
0400 REM " --- Parameters"
0410 LET NUMBER=1,KEYLEN=PARAMS[1],L0=PARAMS[2]
0420 LET EXISTS=PARAMS[3],N0$=PARAMS$[1],GL$=PARAMS$[2]
0500 REM " --- Initializations"
0510 DIM A0$(KEYLEN),A1$(160),B0$(32),C0$(160),D0$(5),D1$(32),X0$(10),X1$(160)
0520 DIM DESCRIPTION$[NUMBER],FIELD[NUMBER],POSITION[NUMBER],LENGTH[NUMBER]
0540 LET A0$(1)=A$[0],A1$(1)=A$[1],PM$="(###) 000-0000",PM=LEN(PM$)
0550 LET RECEIVED$="",HOLD$="",ORDERED$="    Date Ordered:",PACKING$=""
0555 LET FKEY=0,L1=L0+4,L2=L0
0560 IF TYPE$="P" THEN LET RECEIVED$="Last Receipt:",L1=L1+1
0570 IF TYPE$="R" THEN LET ORDERED$="Requisition Date:",HOLD$="Hold:"
0575 IF POS(TYPE$="RP") THEN GOTO 0700
0580 LET RECEIVED$="Date Received:",PACKING$="Packing List:",L1=L1+1,L2=L0+1
0700 REM " --- Background"
0710 CALL "SYC.WC",1,0,80,1,0,L0-3,0
0720 CALL "SYC.WC",1,0,80,1,0,L0-1,0
0730 PRINT 'SB',@(0,L0-2),"Contact:",@(35),"Phone:",@(61),"Fax:",@(0,L0),ORDERED$,@(3,L0+1),"Date Required:",@(3,L0+2),"Date Promised:",@(1,L0+3),"Not Before Date:",@(17-LEN(RECEIVED$),L0+4),RECEIVED$,@(8,L1),"Ship Via:",@(3,L1+1),"Freight Terms:",@(6,L1+2),"Terms Code:",@(10,L1+3),"F.O.B.:",@(1,L1+4),"Acknowledged By:",@(12,L1+5),HOLD$,@(46-LEN(PACKING$),L0),PACKING$,@(38,L2),"Message:",@(38,L2+1),"Ship To:",'SF',
0800 REM " --- Options"
0810 IF POS("D"=ACTION$) THEN GOSUB 5000
0820 IF POS("D"=ACTION$) THEN GOTO 9900
0830 IF POS("B"=ACTION$) THEN GOTO 9900
0900 REM " --- New record?"
0910 IF EXISTS THEN GOTO 4000
1000 REM " --- Purchase Address"
1010 LET V0$="Z",V1$="",V2$=A1$(3,2),V3$="",V0=2,V1=68,V2=3,V3=0,I0=0
1020 LET V4$="Enter A Valid Purchase Address Code (<F1>=None/<F3>=Lookup)"
1025 IF POS(TYPE$="QC") THEN GOTO 3900
1030 GOSUB 7000
1040 ON V3 GOTO 1100,1050,1090,1070,1090
1050 LET V$=""
1060 GOTO 1100
1070 CALL "SYC.LT","P",A0$(3,6),V$
1075 IF V$="" THEN GOTO 1000
1080 GOTO 1100
1090 LET V$=A1$(3,2)
1100 REM " --- Retrieve purchase address"
1110 GOSUB 5400
1120 IF STATUS THEN GOTO 1000
1150 LET A1$(3,2)=V$
1160 IF V3=2 THEN GOTO 4000
1190 GOTO 3900
1200 REM " --- Date Ordered"
1210 LET V4$="Enter The Date That This Order Was Placed"
1220 LET V0$="D",V1$="CR6N",V2$=A1$(5,6),V3$="",V0=6,V1=18,V2=L0
1230 GOSUB 7000
1240 ON V3 GOTO 1250,1200,3900,1200,3900
1250 LET A1$(5,6)=V$
1290 GOTO 3900
1400 REM " --- Date Required"
1410 LET V4$="Enter The Date That This Order Is Required By"
1420 LET V0$="D",V1$="CR6N",V2$=A1$(23,6),V3$="",V0=6,V1=18,V2=L0+1
1430 GOSUB 7000
1440 ON V3 GOTO 1450,1400,3900,1400,3900
1450 IF V$<A1$(5,6) THEN GOTO 1400
1460 LET A1$(23,6)=V$
1490 GOTO 3900
1600 REM " --- Date Promised"
1610 LET V4$="Enter The (Optional) Date That Delivery Was Promised By"
1620 LET V0$="D",V1$="C6N",V2$=A1$(11,6),V3$="",V0=6,V1=18,V2=L0+2
1630 GOSUB 7000
1640 ON V3 GOTO 1650,1600,3900,1600,3900
1650 IF FNP$(V$)<>"" THEN IF V$<A1$(11,6) THEN GOTO 1600
1660 LET A1$(11,6)=V$
1690 GOTO 3900
1800 REM " --- Not Before Date"
1810 LET V4$="Enter The (Optional) Date That Delivery Can Not Be Made Before"
1820 LET V0$="D",V1$="C6N",V2$=A1$(17,6),V3$="",V0=6,V1=18,V2=L0+3
1830 GOSUB 7000
1840 ON V3 GOTO 1850,1800,3900,1800,3900
1850 IF FNP$(V$)="" THEN GOTO 1880
1860 IF V$<A1$(5,6) THEN GOTO 1800
1865 IF V$>A1$(23,6) THEN GOTO 1800
1870 IF FNP$(A1$(11,6))<>"" THEN IF V$>A1$(11,6) THEN GOTO 1800
1880 LET A1$(17,6)=V$
1890 GOTO 3900
2000 REM " --- Date Received"
2005 IF POS(TYPE$="QC")=0 THEN GOTO 3900
2010 LET V4$="Enter The Date That This Purchase Order Was Received"
2020 LET V0$="D",V1$="C6N",V2$=A1$(29,6),V3$="",V0=6,V1=18,V2=L0+4
2030 GOSUB 7000
2040 ON V3 GOTO 2050,2000,3900,2000,3900
2050 IF V$<A1$(5,6) THEN GOTO 2000
2060 IF GL$="Y" THEN CALL "GLC.EA",V$,"Y",PERIOD$,YEAR$,STATUS
2070 IF STATUS>99 THEN GOTO 2000
2080 LET A1$(29,6)=V$,WARNED=1
2090 GOTO 3900
2200 REM " --- Ship Via"
2210 LET V4$="Enter The Shipping Method Or Carrier For This Order"
2220 LET V0$="S",V1$="C",V2$=A1$(59,15),V3$="",V0=15,V1=18,V2=L1
2230 GOSUB 7000
2240 ON V3 GOTO 2250,2200,3900,2200,3900
2250 LET A1$(59,15)=V$
2290 GOTO 3900
2400 REM " --- Freight Terms"
2410 LET V4$="Enter The Freight Terms For This Order"
2420 LET V0$="S",V1$="C",V2$=A1$(44,15),V3$="",V0=15,V1=18,V2=L1+1
2430 GOSUB 7000
2440 ON V3 GOTO 2450,2400,3900,2400,3900
2450 LET A1$(44,15)=V$
2490 GOTO 3900
2600 REM " --- Terms Code"
2610 LET V4$="Enter A Valid Terms Code (<F3>=Lookup)"
2620 LET V0$="S",V1$="CR",V2$=A1$(38,2),V3$="",V0=2,V1=18,V2=L1+2
2630 GOSUB 7000
2640 ON V3 GOTO 2660,2600,3900,2650,3900
2650 GOSUB 6000
2660 LET B0$(1)=N0$+"C"+V$
2665 FIND (APM10_DEV,KEY=B0$(1,5),DOM=2600)IOL=APM10C
2670 LET A1$(38,2)=B0$(4,2)
2675 PRINT @(V1,V2),A1$(38,2)," ",B0$(6,20),
2690 GOTO 3900
2800 REM " --- F.O.B."
2810 LET V4$="Enter Any Optional F.O.B. Information"
2820 LET V0$="S",V1$="C",V2$=A1$(94,15),V3$="",V0=15,V1=18,V2=L1+3
2830 GOSUB 7000
2840 ON V3 GOTO 2850,2800,3900,2800,3900
2850 LET A1$(94,15)=V$
2890 GOTO 3900
3000 REM " --- Acknowledged"
3010 LET V4$="Enter The Vendor's Acknowledgement For This Order"
3020 LET V0$="S",V1$="C",V2$=A1$(74,20),V3$="",V0=20,V1=18,V2=L1+4
3030 GOSUB 7000
3040 ON V3 GOTO 3050,3000,3900,3000,3900
3050 LET A1$(74,20)=V$
3090 GOTO 3900
3200 REM " --- Hold?"
3210 IF TYPE$<>"R" THEN GOTO 3900
3215 LET V4$="Hold This Requisition Until Manually Released (Y/N)?"
3220 LET V0$="Y",V1$="C",V2$=A1$(35,1),V3$="",V0=1,V1=18,V2=L1+5
3230 GOSUB 7000
3240 ON V3 GOTO 3250,3200,3900,3200,3900
3250 LET A1$(35,1)=V$
3290 GOTO 3900
3300 REM " --- Packing list"
3305 IF POS(TYPE$="QC")=0 THEN GOTO 3900
3310 LET V4$="Enter Any (Optional) Packing List Information"
3320 LET V0$="S",V1$="C",V2$=A1$(119,15),V3$="",V0=15,V1=47,V2=L0
3330 GOSUB 7000
3340 ON V3 GOTO 3350,3300,3900,3300,3900
3350 LET A1$(119,15)=V$
3390 GOTO 3900
3400 REM " --- Message"
3410 LET V4$="Enter The Standard Message To Be Printed For This Order (<F1>=None/<F3>=Lookup)"
3420 LET V0$="S",V1$="C",V2$=A1$(109,3),V3$="",V0=3,V1=47,V2=L2
3425 GOSUB 7000
3430 ON V3 GOTO 3450,3435,3900,3445,3900
3435 LET V$=""
3440 GOTO 3480
3445 CALL "POC.LK",2,V1,V2,V$
3450 IF V$="" THEN GOTO 3480
3455 LET D0$(1)=N0$+V$
3460 FIND (POM04_DEV,KEY=D0$,DOM=3400)IOL=POM04A
3465 PRINT @(V1,V2),D0$(3)," ",D1$(1,20),
3470 GOTO 3485
3480 PRINT @(V1,V2),'CL',
3485 LET A1$(109,3)=V$
3490 GOTO 3900
3600 REM " --- Ship To"
3610 LET V4$="Enter A Valid Warehouse ID (<F3>=Lookup)"
3620 LET V0$="S",V1$="CR",V2$=A1$(1,2),V3$="",V0=2,V1=47,V2=L2+1
3630 GOSUB 7000
3640 ON V3 GOTO 3660,3600,3900,3650,3900
3650 CALL "IVC.LK",3,V1,V2,V$
3660 LET C0$(1)=N0$+"C"+V$
3665 FIND (IVM10_DEV,KEY=C0$(1,5),DOM=3600)IOL=IVM10C
3670 LET X$=C0$(30,94)+FILL(24)+C0$(124,2)+C0$(136,9),A1$(1,2)=C0$(4,2)
3675 CALL "SYC.AA",X$,24,5,9,30
3680 PRINT @(V1,V2),A1$(1,2)," ",C0$(6,24),@(50,V2+1),X$(1,30),@(50,V2+2),X$(31,30),@(50,V2+3),X$(61,30),@(50,V2+4),X$(91,30),@(50,V2+5),X$(121,30),
3690 GOTO 3900
3900 REM " --- Next Field"
3905 IF V3=4 THEN GOTO 3990
3910 IF V3<>2 THEN GOTO 3940
3920 IF I0>0 THEN LET I0=I0-1
3930 GOTO 3950
3940 LET I0=I0+1
3960 IF POS(TYPE$="RP") THEN ON I0 GOTO 1000,1200,1400,1600,1800,2000,2200,2400,2600,2800,3000,3200,3300,3400,3600,3990
3970 IF POS(TYPE$="QC") THEN ON I0 GOTO 1000,2000,3300,3990
3990 GOSUB 5000
4000 REM " --- Return to caller"
4010 LET A$[0]=A0$,A$[1]=A1$
4090 GOTO 9900
5000 REM " --- Format ribbon information"
5010 DIM X$(150),PROMISED$(8),BEFORE$(8),RECEIPT$(8)
5020 DIM X0$(10),X1$(160),PHONE$(PM),FAX$(PM)
5030 LET PACKING$=""
5040 IF FNP$(A1$(11,6))<>"" THEN LET PROMISED$=FNB6$(A1$(11,6))
5050 IF FNP$(A1$(17,6))<>"" THEN LET BEFORE$=FNB6$(A1$(17,6))
5060 IF POS(TYPE$="PQC") THEN IF FNP$(A1$(29,6))<>"" THEN LET RECEIPT$=FNB6$(A1$(29,6))
5070 IF POS(TYPE$="QC") THEN LET PACKING$=A1$(119,15)
5100 REM " --- Retrieve code descriptions"
5110 LET B0$(1)=N0$+"C"+A1$(38,2),C0$(1)=N0$+"C"+A1$(1,2)
5120 FIND (APM10_DEV,KEY=B0$(1,5),DOM=5130)IOL=APM10C
5130 FIND (IVM10_DEV,KEY=C0$(1,5),DOM=5140)IOL=IVM10C
5140 LET W$=C0$(30,94)+FILL(24)+C0$(124,2)+C0$(136,9)
5150 CALL "SYC.AA",W$,24,5,9,30
5160 LET D0$(1)=N0$+A1$(109,3),D1$(1)=""
5170 FIND (POM04_DEV,KEY=D0$,DOM=5180)IOL=POM04A
5180 LET V$=A1$(3,2),V1=68,V2=3
5200 REM " --- Display ribbon information"
5210 GOSUB 5400
5250 PRINT @(18,L0),FNB6$(A1$(5,6)),@(18,L0+1),FNB6$(A1$(23,6)),@(18,L0+2),PROMISED$,@(18,L0+3),BEFORE$,@(18,L0+4),RECEIPT$,@(18,L1),A1$(59,15),@(18,L1+1),A1$(44,15),@(18,L1+2),A1$(38,2)," ",B0$(6,20),@(18,L1+3),A1$(94,15),@(18,L1+4),A1$(74,20),
5260 IF TYPE$="R" THEN PRINT @(18,L1+5),A1$(35,1),
5280 PRINT @(47,L0),PACKING$,@(47,L2),A1$(109,3)," ",D1$(1,20),@(47,L2+1),A1$(1,2)," ",C0$(6,24),@(50,L2+2),W$(1,30),@(50,L2+3),W$(31,30),@(50,L2+4),W$(61,30),@(50,L2+5),W$(91,30),@(50,L2+6),W$(121,30),
5290 RETURN 
5400 REM " --- No purchase address"
5410 IF FNP$(V$)<>"" THEN GOTO 5500
5420 PRINT @(V1,V2),'CL',"Same",@(50,V2+1),'CL',@(50,V2+2),'CL',@(50,V2+3),'CL',@(50,V2+4),'CL',@(50,V2+5),'CL',
5430 LET STATUS=0
5490 GOTO 5690
5500 REM " --- Retrieve and display purchase address"
5510 LET X0$(1)=N0$+A0$(3,6)+V$,X1$(1)="",PHONE$(1)="",FAX$(1)="",STATUS=11
5520 FIND (APM05_DEV,KEY=X0$,DOM=5600)IOL=APM05A
5530 LET X$=X1$(31,72)+FILL(24)+X1$(103,9),STATUS=0
5540 CALL "SYC.AA",X$,24,4,9,30
5550 IF FNP$(X1$(112,10))<>"" THEN LET PHONE$=FNF$(X1$(112,10),PM$)
5560 IF FNP$(X1$(146,10))<>"" THEN LET FAX$=FNF$(X1$(146,10),PM$)
5580 PRINT @(9,L0-2),X1$(126,20),@(42),PHONE$,@(66),FAX$,@(V1,V2),X0$(9,2),'CL',@(50,V2+1),X1$(1,30),@(50,V2+2),X$(1,30),@(50,V2+3),X$(31,30),@(50,V2+4),X$(61,30),@(50,V2+5),X$(91,30),
5590 GOTO 5690
5600 REM " --- Create new purchase address?"
5610 CALL "SYC.YN",1,"Create A New Purchase Address",2,V$,V3
5620 ON V3 GOTO 5630,5600,5690,5600,5690
5630 ON POS(V$="YN") GOTO 5600,5640,5690
5640 CALL "APC.PA","W",APM05_DEV,X0$,6,L0,0
5650 FIND (APM05_DEV,KEY=X0$,DOM=5690)IOL=APM05A
5660 LET V$=X0$(9)
5670 GOTO 5530
5690 RETURN 
6000 REM " --- Terms Code Lookup"
6010 LET CHANNEL=APM10_DEV,TITLE$="AP Terms Code Lookup",RECORD$="C"
6020 LET FIELD[0]=1,POSITION[0]=4,LENGTH[0]=2,DESCRIPTION$[0]="Code"
6030 LET FIELD[1]=1,POSITION[1]=6,LENGTH[1]=20,DESCRIPTION$[1]="Description"
6040 LET COLUMN=79-LENGTH[0]-LENGTH[1]-2-NUMBER*4,V$="SKIP",ROW=V2+2
6050 CALL "SYC.LK",CHANNEL,RECORD$,NUMBER,TITLE$,DESCRIPTION$[ALL],FIELD[ALL],POSITION[ALL],LENGTH[ALL],COLUMN,ROW,V$
6090 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Function Definitions"
8025 DEF FNB6$(Q$)=Q$(3,2)+"/"+Q$(5,2)+"/"+FNYY21_YY$(Q$(1,2))
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 LET FKEY=4
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to caller"
9910 IF FKEY=0 THEN LET FKEY=V3
9950 EXIT 
9999 END
