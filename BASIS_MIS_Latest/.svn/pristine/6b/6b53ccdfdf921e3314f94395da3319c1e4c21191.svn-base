0010 REM "POS - Replenishment Selection Update"
0020 REM "Program POU.BA
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists
0210 APM06A: IOLIST B0$,B1$,B[ALL]
0220 IVM01A: IOLIST R0$,R1$,R2$(1),R3$,R4$,R5$,R6$,R[ALL]
0230 IVM02A: IOLIST S0$,S1$(1),S2$(1),S[ALL]
0240 IVM05A: IOLIST T0$,T1$,T2$,T[ALL],T0
0250 IVM10F: IOLIST BUYER$,BUYDAYS
0260 POE07A: IOLIST C0$,C1$(1)
0270 POE06A: IOLIST A0$(1),A1$(1)
0280 POE16A: IOLIST D0$(1),D1$(1),WHSES$,D[ALL]
0500 REM " --- Initialization
0510 DIM C1$(75),A0$(14),A1$(40)
0530 LET CREATE$="N"; REM "Create Requisition?"
0540 LET DATEREQ$=F0$(18,6),DATEORD$=F0$(18,6)
0800 REM " --- Update Review Cycles?
0820 CALL "SYC.YN",0,"Update Review Cycle Dates for All Selected Buyers and Vendors",0,V$,V3
0860 IF V$="NO" OR V3=4 THEN GOTO 4000
0880 IF V$<>"YES" THEN GOTO 0800
0900 REM " --- Create Purchase Req?
0910 CALL "SYC.YN",0,"Create Purchase Requisitions",0,V$,V3
0920 IF V$="NO" THEN GOTO 0960
0930 IF V3=4 THEN GOTO 4000
0940 IF V$<>"YES" THEN GOTO 0900
0950 LET CREATE$="Y"
0960 CALL "SYC.NB","Updating: ",VENDLEN+4,COLUMN
0970 REM " --- Disallow 'M'enu option in Error Routine
0980 LET EXIT_CTRL=1
1000 REM " --- Init Read
1010 READ (POE06_DEV,KEY=N0$,DOM=1100)
1100 REM " --- Read Suggested Order File
1110 LET K$=KEY(POE06_DEV,END=1400)
1120 IF POS(N0$=K$)<>1 THEN GOTO 1400
1130 READ (POE06_DEV)IOL=POE06A
1140 IF A1$(6,1)="N" THEN GOTO 1260
1150 PRINT @(COLUMN,11),A0$(3,3),"  ",FNF$(A0$(6,VENDLEN),M0$)
1160 FIND (IVM10_DEV,KEY=N0$+"F"+A0$(3,3),DOM=1250)IOL=IVM10F
1170 LET B0$=N0$+A0$(6,6)+A0$(3,3)
1180 DIM B1$(24),B[11]
1190 EXTRACT (APM06_DEV,KEY=B0$,DOM=1250)IOL=APM06A
1200 LET DAYS=BUYDAYS
1210 IF B[0]<>0 THEN LET DAYS=B[0]
1220 CALL "SYC.CA",A1$(3,3),NEWDATE$,DAYS
1230 LET B1$(1,3)=A1$(3,3),B1$(4,3)=NEWDATE$
1240 WRITE (APM06_DEV,KEY=B0$)IOL=APM06A
1250 IF CREATE$="Y" THEN GOSUB CREATE_REQ
1260 REMOVE (POE06_DEV,KEY=K$)
1270 GOTO 1100
1400 REM " --- Purge Updated POE-07 Items Here
1410 READ (POE07_DEV,KEY=N0$,DOM=1420)
1420 LET K7$=KEY(POE07_DEV,END=4000)
1430 IF POS(N0$=K7$)<>1 THEN GOTO 4000
1440 READ (POE07_DEV)IOL=POE07A
1450 IF A1$(25,1)="Y" THEN REMOVE (POE07_DEV,KEY=K7$)
1460 GOTO 1420
4000 REM " --- Done
4010 GOTO 9900
6000 REM " --- Create Requisitions
6005 CREATE_REQ: 
6040 DIM D0$(34),D1$(20),D[16]
6050 READ (POE16_DEV,KEY=A0$(1,11),DOM=6070)
6060 REM 
6070 LET K16$=KEY(POE16_DEV,END=6390)
6080 IF K16$(1,11)<>A0$(1,11) THEN GOTO 6390
6090 READ (POE16_DEV)IOL=POE16A
6100 LET VENDOR$=D0$(6,6),ITEMNUM$=D0$(15,20)
6110 DIM R2$(62),R[12],UNITMEAS$(2)
6120 LET CONVFACT=0
6130 READ (IVM01_DEV,KEY=N0$+ITEMNUM$,DOM=6150)IOL=IVM01A
6140 LET UNITMEAS$=R2$(6,2),CONVFACT=R[0]
6150 FOR WHSECNT=1 TO LEN(WHSES$) STEP 2
6160 DIM S[16]
6170 LET ICOST=0,ONORD=0,ONHND=0,MAX=0,EOQ=0,REORD=0
6180 READ (IVM02_DEV,KEY=N0$+WHSES$(WHSECNT,2)+ITEMNUM$,DOM=6200)IOL=IVM02A
6190 LET ICOST=S[11],ONORD=S[1],ONHND=ONORD+S[0]-S[2],MAX=S[3],EOQ=S[6],REORD=S[4]
6200 GOSUB GET_COSTANDSUGG
6210 IF SUGG<=0 THEN GOTO 6360
6220 DIM CHANS[11],INFO$[15],INFO[2]
6230 LET CHANS[1]=APM02_DEV,CHANS[2]=POE01_DEV,CHANS[3]=POE02_DEV
6240 LET CHANS[4]=POE11_DEV,CHANS[5]=POE52_DEV,CHANS[6]=POM02_DEV
6250 LET CHANS[7]=POS10_DEV,CHANS[8]=POE21_DEV,CHANS[9]=POE31_DEV
6255 LET CHANS[10]=POE41_DEV,CHANS[11]=SYS01_DEV
6260 LET INFO$[0]=D0$(1,2),INFO$[1]=VENDOR$,INFO$[2]="S",INFO$[3]=WHSES$(WHSECNT,2)
6270 LET INFO$[4]=DATEORD$,INFO$[5]=DATEREQ$,INFO$[6]=UNITMEAS$,INFO$[7]="R"
6280 LET INFO$[8]=FILL(3),INFO$[9]=FILL(10),INFO$[10]=FILL(6)
6290 LET INFO$[11]=FILL(10),INFO$[12]=FILL(10),INFO$[13]=ITEMNUM$
6300 LET INFO$[14]=FILL(40)
6310 LET INFO[0]=CONVFACT,INFO[1]=COST,INFO[2]=SUGG
6320 CALL "POC.BA",CHANS[ALL],INFO$[ALL],INFO[ALL],DETAILKEY$,STATUS
6360 NEXT WHSECNT
6370 REMOVE (POE16_DEV,KEY=K16$)
6380 GOTO 6070
6390 RETURN 
6500 REM " --- Get INFO[] numerics, COST & SUGG
6505 GET_COSTANDSUGG: 
6520 IF R2$(24,1)="W" THEN GOTO WHSE_LEVEL
6530 LET SUGG=D[9]
6540 GOTO 6580
6550 WHSE_LEVEL: 
6560 GOSUB GET_USAGES
6570 GOSUB CALC_SUGGQTY
6580 GOSUB CALC_COST
6590 RETURN 
6600 REM " --- Get Average Usage
6605 GET_USAGES: 
6610 DIM CHANS[12],ITEM$[2]
6620 LET ACTION$="WA",CHANS[1]=IVM01_DEV,CHANS[2]=IVM02_DEV,CHANS[3]=IVM03_DEV
6630 LET CHANS[12]=IVM12_DEV,ITEM$[0]=N0$,ITEM$[1]=WHSES$(WHSECNT,2)
6640 LET ITEM$[2]=D0$(15,20),CUR_PERYR$=CURPER$+CURYR$,BASE_PERYR$=CUR_PERYR$
6650 CALL "IVC.AU",ACTION$,CHANS[ALL],ITEM$[ALL],FACTORS[ALL],DAYOFMONTH,BASE_PERYR$,CUR_PERYR$,TOT_PERS,IVPRECISION,ANNUALUSAGE,ESTIMATED,CALLFLAG$,STATUS
6660 IF CALLFLAG$="" THEN GOTO 6680
6670 LET ANNUALUSAGE=ESTIMATED
6680 LET AVGUSAGE=ANNUALUSAGE/TOT_PERS
6690 RETURN 
6700 REM " --- Calculate suggested qty
6705 CALC_SUGGQTY: 
6720 LET SUGG=0
6730 PRECISION 2
6740 IF MAX=0 THEN GOTO MAX_ISNT_SET
6750 LET SUGG=MAX-ONHND; REM "Buy MAX minus On Hand if max set
6760 MAX_ISNT_SET: 
6770 IF SUGG=0 AND EOQ<>0 AND ONHND<REORD THEN LET SUGG=EOQ; REM "Buy EOQ quantities if set
6780 IF SUGG=0 AND REORD<>0 AND ONHND<REORD THEN LET SUGG=REORD-ONHND; REM "Last of all, buy Reorder Point
6790 IF SUGG>0 AND SUGG>AVGUSAGE*12 THEN LET SUGG=AVGUSAGE*12; REM "Limit to yearly use
6800 IF SUGG>0 AND SUGG<AVGUSAGE*.5 THEN LET SUGG=AVGUSAGE*.5; REM "At least 1/2 mo supply
6810 LET SUGG=INT(SUGG+.5)
6820 IF EOQ<>0 THEN IF SUGG>0 THEN LET SUGG=INT((SUGG-1)/EOQ+1)*EOQ; REM "Round up to EOQ quantities if set
6830 PRECISION IVPRECISION
6840 RETURN 
6900 REM " --- How much does it cost?
6905 CALC_COST: 
6910 DIM T[1,2]
6920 LET COST=0
6930 READ (IVM05_DEV,KEY=N0$+VENDOR$+ITEMNUM$,DOM=6980)IOL=IVM05A
6940 FOR X=0 TO 2
6950 IF T[0,X]<=SUGG THEN LET COST=T[1,X]; REM "Quan breaks
6960 NEXT X
6970 IF COST=0 THEN LET COST=T0; REM "Last purchase cost
6980 IF COST=0 THEN LET COST=ICOST; REM "Last of all, IVM-02 cost
6990 RETURN 
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
