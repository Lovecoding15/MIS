0010 REM "MRP Generation-Generate Purch/Prod/Resource & Pegging data"
0020 REM "Program MPU.AC"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.5 - 01Dec98 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "08Oct96 JJD: Use correct Stocking Level information (item/whse).(2340,3220,3420,3480,5630,5640,5655,5665)"
0032 REM "08Oct96 JJD: Check correct calendar for lead time. (6416,6430)"
0033 REM "15Oct96 JJD: Use EOQ info when calculating order qty. (3062,3063,3064,3065,3066,3080,3105,3140)"
0034 REM "23Oct96 JJD: Use correct IOLIST for item required date. (5910)"
0035 REM "02Jan97 JJD: Calculate Projected Availability correclty (3080)"
0036 REM "02Oct98 WGH: Components on multiple BOMs may use wrong item data (1275,2450,2815,6805)
0037 REM "29Dec98 WGH: Projected Available may be wrong for components on multiple BOMs (3075,3100)
0038 REM "22Jan99 WGH: Gross Required may be wrong when component on multiple BOMs with WO Demand (5405,5702,5802,6002,6102)
0039 REM "23Jan99 WGH: Planned Releases may be wrong when component on multiple BOMs using Effective/Obsolete date (2830-2880)
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0095 PRECISION 4
0200 REM " --- IOLISTS"
0205 MPE01A: IOLIST A0$,A1$,A[ALL]
0210 MPE03A: IOLIST W0$,W1$,W[ALL]
0215 MPE04A: IOLIST X0$,X[ALL]
0220 MPE05A: IOLIST B0$,B1$,B2$,B3$,B[ALL]
0225 MPM01A: IOLIST R0$,R1$(1),R2$(1),R[ALL]
0230 MPW02A: IOLIST MWRK$,MCOM
0235 MPW06A: IOLIST PR0$(1),PR1$(1),PR[ALL]
0240 BMM01A: IOLIST BM0$,BM1$,BM2$,BM[ALL]
0245 BMM02A: IOLIST C0$,C1$,C2$,C[ALL]
0250 BMM03A: IOLIST D0$,D1$,D[ALL]
0255 IVM01A: IOLIST Y0$,Y1$,Y2$,Y3$,Y4$,Y5$,Y6$,Y[ALL]
0260 IVM02A: IOLIST IV0$,IV1$(1),IV2$(1),IV[ALL]
0265 ARE03A: IOLIST ORDH$
0270 ARE13A: IOLIST ORD$,ORD1$(1),FIL,FIL2,ORDQTY
0275 POE02A: IOLIST POHDR0$,POHDR1$
0280 POE12A: IOLIST PO0$,PO1$,PO2$,PO3$,PO4$,PO5$,PO6$,PO[ALL]
0285 WOE01A: IOLIST WOHDR$,WO1$,WO[ALL]
0500 REM " --- Initialize Data "
0510 DIM A[26],B[10],C[10],D[11],R[1],X[25],Y[9],PO[12],BM[11],IV[10],WO[11]
0520 REM "MATERIAL_STACK$=Is the stack of Material keys"
0530 REM "CURRENT_ITEM$=Is the key for the Current Item"
0540 REM "BILL_STACK$=Is the stack of Bill Number keys"
0570 REM "TRANS_TYPE$=Material Type, A=Raw Mat'l, B=Assembly"
0600 REM " --- Get Forecast Type and Open Files
0610 IF LEN(FORECAST_TYPE$)<3 THEN GOTO 4100
0620 LET TYPE$=FORECAST_TYPE$(1,3)
0630 IF LEN(FORECAST_TYPE$)<4 THEN LET FORECAST_TYPE$="" ELSE LET FORECAST_TYPE$=FORECAST_TYPE$(4)
0635 LET MPE03_DEV=0,MPE04_DEV=0,MPE05_DEV=0
0640 CALL "MPC.FA",MPE03_DEV,"MPE-03",N0$,TYPE$,FILENAME$,STATUS
0645 IF STATUS THEN GOTO 4100
0650 CALL "MPC.FA",MPE04_DEV,"MPE-04",N0$,TYPE$,FILENAME$,STATUS
0655 IF STATUS THEN GOTO 4100
0660 CALL "MPC.FA",MPE05_DEV,"MPE-05",N0$,TYPE$,FILENAME$,STATUS
0665 IF STATUS THEN GOTO 4100
0670 CALL "SYC.FA",MPE03_DEV
0680 CALL "SYC.FA",MPE04_DEV
0690 CALL "SYC.FA",MPE05_DEV
0695 DIM PODATES$[30],MPDATES$[30]; LET POSAV$="",MPSAV$=""
0700 REM " --- Background "
0720 PRINT @(0,5),'CL','SB',@(29,5),"Exploding:",'CL','SF',@(0,7),'CE',
0800 REM " --- Options "
1000 REM " --- Initialize Forecast "
1020 READ (MPE01_DEV,KEY=N0$+TYPE$,DOM=1100)
1100 REM " --- Main Read "
1120 LET K$=KEY(MPE01_DEV,END=3600)
1125 PRINT @(40,3),K$(3,3),'CL'
1200 REM " --- Breaks "
1210 IF POS(N0$+TYPE$=K$)<>1 THEN GOTO 3600
1220 READ (MPE01_DEV)IOL=MPE01A
1230 IF POS(S0$=A0$)<>1 THEN GOSUB 6200
1240 PRINT @(40,5),'CL',A0$(3,3)," ",A0$(6,2)," ",A0$(8,20)
1250 LET MATERIAL_STACK$=A0$(8,20)
1260 LET BILL_STACK$=""
1270 LET CURRENT_ITEM$=A0$(8,20)
1275 LET TRANS_PEGGED=0; REM "These transactions not pegged yet
1280 LET W0$=A0$,WH$=A0$(6,2),Z1=1
1290 DIM S[99],T[99],M[20,R[0]],T9[R[0]]
1300 DIM W0$(28),W[26,5],WOLD[26]
1310 LET TRANS_TYPE$="A",LOT=0
1320 DIM BM[11]
1330 FIND (BMM01_DEV,KEY=N0$+CURRENT_ITEM$,DOM=1350)IOL=BMM01A
1340 LET TRANS_TYPE$="B",LOT=BM[5]
1350 IF R9$="Y" THEN LET SALESPROC$="1ST"; GOSUB 5400; LET SALESPROC$=""
1360 LET T[1]=1
1370 FOR X=0 TO R[0]-1
1380 IF R9$="Y" AND T9[X]>A[X] THEN LET M[1,X]=T9[X] ELSE LET M[1,X]=A[X]
1390 LET TYPFLG$="D",WHEN$=R2$(X*6+1,6),GROSS=A[X]
1400 IF R9$="Y" THEN IF T9[X]>A[X] THEN GOTO 1420 ELSE LET GROSS=A[X]-T9[X]; REM "Demand after Sales Orders
1410 GOSUB 6800
1420 NEXT X
1430 GOSUB 2300
1600 REM " --- Get Materials "
1610 READ (BMM02_DEV,KEY=N0$+CURRENT_ITEM$,DOM=1620)
1620 LET K$=KEY(BMM02_DEV,END=2000)
1630 IF POS(N0$+CURRENT_ITEM$=K$)<>1 THEN GOTO 2000
1640 READ (BMM02_DEV)IOL=BMM02A
1650 IF C2$(4,1)="M" THEN GOTO 1620
1660 LET EFFECT$=FNYY_YY21$(FNM$(FNC$(C2$(5)))),OBSOLETE$=FNYY_YY21$(FNM$(FNC$(C2$(8)))),EFFECT=0,OBSOLETE=0
1670 GOSUB 6300
1680 IF OBSOLETE=1 THEN GOTO 1620
1690 IF C[1]=0 THEN LET C[1]=1
1700 IF C[3]=0 THEN LET C[3]=1
1710 LET CURRENT_ITEM$=C1$(1,20)
1720 LET Z1=LEN(MATERIAL_STACK$)/20+1
1730 LET T[Z1]=C[0]*C[1]/C[3]
1740 GOSUB 2300
1750 IF TRANS_TYPE$<>"B" THEN GOTO 1900
1760 LET MATERIAL_STACK$=MATERIAL_STACK$+C1$(1,20)
1770 LET BILL_STACK$=BILL_STACK$+C0$(3)
1780 GOTO 1600; REM "Move down the ladder
1900 REM " --- Get next material
1910 FOR X=0 TO R[0]-1
1920 LET M[Z1+1,X]=0
1930 NEXT X
1940 LET CURRENT_ITEM$=MATERIAL_STACK$(LEN(MATERIAL_STACK$)-20+1,20)
1950 GOTO 1620
2000 REM " --- End of Materials"
2010 IF LEN(BILL_STACK$)=0 THEN GOTO 1100
2020 LET RESET$=BILL_STACK$(LEN(BILL_STACK$)-20-2)
2030 LET MATERIAL_STACK$=MATERIAL_STACK$(1,LEN(MATERIAL_STACK$)-20)
2040 LET Z1=LEN(MATERIAL_STACK$)/20+1
2050 FOR X=0 TO R[0]-1
2060 LET M[Z1+1,X]=0
2070 NEXT X
2080 LET CURRENT_ITEM$=MATERIAL_STACK$(LEN(MATERIAL_STACK$)-20+1,20)
2090 LET BILL_STACK$=BILL_STACK$(1,LEN(BILL_STACK$)-20-3)
2100 READ (BMM02_DEV,KEY=N0$+RESET$,DOM=2110)
2110 GOTO 1620
2300 REM " --- Process Items here
2310 IF Z1>17 THEN EXITTO 6900
2320 LET TRANS_TYPE$="A"
2330 FIND (IVM01_DEV,KEY=N0$+CURRENT_ITEM$,DOM=3520)IOL=IVM01A
2340 LET S[Z1]=Y[7],LOT=0
2350 DIM BM[11]
2360 FIND (BMM01_DEV,KEY=N0$+CURRENT_ITEM$,DOM=2400)IOL=BMM01A
2370 LET TRANS_TYPE$="B",LOT=BM[5]
2400 REM " --- Create Transaction (MPE-03) Record"
2410 PRINT @(0,6+Z1),'CE',@(40+Z1,6+Z1),CURRENT_ITEM$,
2420 DIM W0$(28),W[26,5],WOLD[26],W5OLD[26]
2430 LET W0$(1)=S0$+WH$+CURRENT_ITEM$+TRANS_TYPE$,W1$=R2$
2440 FIND (MPE03_DEV,KEY=W0$,DOM=2460)IOL=MPE03A
2450 LET TRANS_PEGGED=1; REM "These transactions already pegged
2460 GOSUB 5600; REM "Get On-Hand's
2470 GOSUB 5800; REM "Get PO On Orders
2480 GOSUB 5700; REM "Get PO Requisitions
2490 IF WO$="Y" THEN GOSUB 6000; REM "Get WO On Orders
2500 IF WO$="Y" THEN GOSUB 6100; REM "Get WO Committed's
2510 IF R9$="Y" THEN GOSUB 5400; REM "Get SO Committed's
2800 REM " --- Build up gross required
2810 GOSUB 6400
2815 LET TRANS_PEGGED=0; REM "These transactions not pegged yet
2820 FOR V9=0 TO R[0]-1
2830 LET WOLD[V9]=W[V9,3]
2840 LET W5OLD[V9]=W[V9,5]; REM "Save what's already calculated"
2850 IF EFFECT<>0 THEN IF V9<EFFECT THEN GOTO 2960
2860 IF OBSOLETE<>0 THEN IF V9>OBSOLETE THEN GOTO 2960
2870 LET DEPEND=T[Z1]*M[Z1,V9]
2880 LET W[V9,2]=W[V9,2]+DEPEND
2890 IF CURRENT_ITEM$=A0$(8,20) THEN GOTO 2960; REM "NO DEPENDENT ON MAIN ITEM
2900 IF MATERIAL_STACK$<>"" THEN LET ITM$=MATERIAL_STACK$(LEN(MATERIAL_STACK$)-20+1,20)
2910 LET TYPFLG$="E"
2920 LET WHEN$=R2$(6*V9+1,6)
2930 LET COMBINE$="MATCH"
2940 LET GROSS=DEPEND
2950 GOSUB 6800
2960 NEXT V9
3000 REM " --- Calculate Net Required"
3010 REM "V9=Period, W(V9,0)=On Hand, W(V9,1)=On Order (PO & WO)
3020 REM "W(V9,2)=Gross Req'd, W(V9,3)=Net Req'd, W(V9,4)=Planned Release
3030 REM "W(V9,5)=Planned Receipt, M(Z1,V9)=Demand From Forecast
3040 FOR V9=0 TO R[0]-1
3050 REM " --- Net Req'd = Gross Demand - On Hand - On Order"
3060 LET W[V9,3]=W[V9,2]-W[V9,0]-W[V9,1],W[V9,5]=W[V9,3]
3062 REM " --- Determine EOQ quantity "
3063 IF Y2$(24,1)="I" THEN LET EOQ=Y[6] ELSE LET EOQ=IV[6]
3064 IF TRANS_TYPE$="B" OR EOQ=0 OR W[V9,3]=0 THEN GOTO 3070
3065 IF FPT(W[V9,3]/EOQ)=0 THEN GOTO 3070
3066 LET W[V9,5]=EOQ*(INT(W[V9,3]/EOQ)+1)
3070 REM " --- Carry any leftovers to next level"
3075 IF W[V9,3]=WOLD[V9] AND W[V9,5]=W5OLD[V9] THEN GOTO 3490
3080 IF W[V9,3]>=0 THEN LET W[V9+1,0]=0 ELSE LET W[V9+1,0]=-W[V9,3],W[V9,3]=0,W[V9,5]=0
3090 REM " --- No New Demand
3105 IF TRANS_TYPE$="A" THEN GOTO 3140
3110 IF LOT=0 OR W[V9,3]=0 OR MOD(W[V9,3],LOT)=0 THEN GOTO 3170
3120 REM " --- Round To Next Lot Size
3130 LET W[V9,5]=INT(W[V9,3]/LOT+1)*LOT
3140 REM " --- Projected Available "
3150 LET W[V9+1,0]=W[V9+1,0]+W[V9,5]-W[V9,3]
3160 REM " --- Net Demand - This Level"
3170 LET REQUIRED=W[V9,3]-WOLD[V9],RELQTY=W[V9,5]-W5OLD[V9]
3200 REM " --- Write Net Required (Planned Receipt)
3210 IF TRANS_TYPE$="A" THEN FIND (IVM02_DEV,KEY=N0$+WH$+CURRENT_ITEM$,DOM=3230)IOL=IVM02A
3220 IF TRANS_TYPE$="A" THEN LET REF3$=SL_VEND$
3230 IF TRANS_TYPE$="A" THEN LET TYPFLG$="K" ELSE LET TYPFLG$="J"
3240 LET WHEN$=R2$(6*V9+1,6),COMBINE$="Y"
3250 LET NETREQ=REQUIRED,NETREC=RELQTY,ONHND=W[V9+1,0]
3260 GOSUB 6800
3300 REM " --- Write Release Record
3310 LET V$=W1$(6*V9+1,6)
3320 IF V$=R2$(6*V9+1,6) THEN LET PERIOD=V9; GOTO 3410
3330 GOSUB 6700
3400 REM " --- Release Quantity "
3410 LET W[PERIOD,4]=W[PERIOD,4]+RELQTY
3420 IF TRANS_TYPE$="A" THEN LET TYPFLG$="I",REF3$=SL_VEND$ ELSE LET TYPFLG$="H"
3430 LET WHEN$=V$,COMBINE$="Y"
3440 LET NETREL=RELQTY
3450 LET DATEREQ$=R2$(V9*6+1,6)
3460 GOSUB 6800
3480 LET M[Z1+1,PERIOD]=M[Z1+1,PERIOD]+RELQTY; REM "Carry demand forward"
3490 NEXT V9
3500 WRITE (MPE03_DEV,KEY=W0$)IOL=MPE03A
3510 LET LOT=0
3520 RETURN 
3600 REM " --- Calculate Labor Requirements
3610 PRINT @(0,7),'CE',@(0,5),'CL','SB',@(17,5),"Calculating Resources:",'SF'
3620 READ (MPE03_DEV,KEY=N0$+TYPE$,DOM=3630)
3630 LET KEY3$=KEY(MPE03_DEV,END=4000)
3640 IF POS(N0$+TYPE$=KEY3$)<>1 THEN GOTO 4000
3650 READ (MPE03_DEV)IOL=MPE03A
3660 IF W0$(28,1)<>"B" THEN GOTO 3630
3670 LET CURRENT_ITEM$=W0$(8,20),WH$=W0$(6,2)
3680 PRINT @(40,5),'CL',W0$(3,3)," ",W0$(6,2)," ",W0$(8,P[0])
3690 READ (BMM03_DEV,KEY=N0$+CURRENT_ITEM$,DOM=3710)
3700 REM " --- Process All Operations
3710 LET KEYB$=KEY(BMM03_DEV,END=3880)
3720 IF POS(N0$+CURRENT_ITEM$=KEYB$)<>1 THEN GOTO 3880
3730 READ (BMM03_DEV)IOL=BMM03A
3740 IF D1$(4,1)<>"S" THEN GOTO 3700
3750 LET EFFECT$=FNYY_YY21$(FNM$(FNC$(D1$(65)))),OBSOLETE$=FNYY_YY21$(FNM$(FNC$(D1$(68)))),EFFECT=0,OBSOLETE=0
3760 GOSUB 6300
3770 IF OBSOLETE=1 THEN GOTO 3700
3780 IF D[1]=0 THEN LET D[1]=1
3790 LET SETUP=D[4],RUN=D[0]/D[1]
3800 DIM X0$(10),X[26]
3810 LET X0$(1)=N0$+TYPE$+WH$+D1$(1,3)
3820 FIND (MPE04_DEV,KEY=X0$,DOM=3830)IOL=MPE04A
3830 FOR V9=0 TO R[0]-1
3840 IF W[V9,3]>0 THEN LET X[V9]=X[V9]+RUN*W[V9,3]+SETUP
3850 NEXT V9
3860 WRITE (MPE04_DEV,KEY=X0$)IOL=MPE04A
3870 GOTO 3700
3880 GOTO 3630
4000 REM " --- Check For More Types
4020 IF LEN(FORECAST_TYPE$)>=3 THEN GOTO 0600
4100 GOTO 9900
5400 REM " --- Get Sales Order Commitments"
5405 IF TRANS_PEGGED THEN GOTO 5580
5410 IF AR$="N" OR R9$="N" THEN GOTO 5580
5420 IF CURRENT_ITEM$<>A0$(8,20) THEN READ (MPE01X_DEV,KEY=A0$(1,7)+CURRENT_ITEM$,DOM=5430); GOTO 5580; REM "Wait for the forecast if any"
5430 READ (ARE07_DEV,KEY=N0$+WH$+CURRENT_ITEM$,DOM=5440)
5440 LET K8$=KEY(ARE07_DEV,END=5580); READ (ARE07_DEV)
5450 IF POS(N0$+WH$+CURRENT_ITEM$=K8$)<>1 THEN GOTO 5580
5460 FIND (ARE03_DEV,KEY=K8$(1,2)+K8$(25,2)+K8$(37,6)+K8$(27,7)+"000",DOM=5440)IOL=ARE03A
5470 REM " --- Don't Process Quotes
5480 IF ORDH$(21,1)="P" THEN GOTO 5440
5490 LET SHPDT$=FNYY_YY21$(FNM$(FNC$(ORDH$(27))))
5500 DIM ORD1$(64)
5510 FIND (ARE13_DEV,KEY=ORDH$(1,17)+K8$(34,3),DOM=5440)IOL=ARE13A
5520 IF ORD1$(41,3)<>"   " THEN LET SHPDT$=FNYY_YY21$(FNM$(FNC$(ORD1$(41))))
5530 LET V$=SHPDT$; GOSUB 6700
5540 IF CURRENT_ITEM$=A0$(8,20) THEN LET T9[PERIOD]=T9[PERIOD]+ORDQTY; IF SALESPROC$="" THEN GOTO 5560 ELSE GOTO 5570
5550 LET W[PERIOD,2]=W[PERIOD,2]+ORDQTY
5560 LET TYPFLG$="F",WHEN$=SHPDT$,REF1$=ORDH$(11,7),REF2$=ORDH$(5,6),GROSS=ORDQTY; GOSUB 6800
5570 GOTO 5440
5580 RETURN 
5600 REM " --- Get On-Hand "
5610 DIM IV[16],IV1$(64)
5620 FIND (IVM02_DEV,KEY=N0$+WH$+CURRENT_ITEM$,DOM=5690)IOL=IVM02A
5630 LET PERIOD=0,W[PERIOD,0]=IV[0]
5640 IF Y2$(24,1)="I" THEN LET SSTOCK=Y[5],SL_VEND$=Y2$(12,6) ELSE LET SSTOCK=IV[5],SL_VEND$=IV1$(22,6),S[Z1]=IV[7]
5650 REM " --- Reduce for Safety Stock
5655 IF SAFETY_STOCK$="N" THEN GOTO 5670
5665 LET W[PERIOD,0]=W[PERIOD,0]-SSTOCK
5670 IF W[PERIOD,0]=0 THEN GOTO 5690
5680 LET TYPFLG$="A",WHEN$="",REF1$="ON HAND",ONHND=W[PERIOD,0]; GOSUB 6800
5690 RETURN 
5700 REM " --- Get PO Requisitions"
5702 IF TRANS_PEGGED THEN GOTO 5760
5705 DIM PR0$(30),PR1$(40),PR[2]
5710 READ (MPW06_DEV,KEY=N0$+WH$+CURRENT_ITEM$,DOM=5715)
5715 LET KEY23$=KEY(MPW06_DEV,END=5760)
5720 IF POS(N0$+WH$+CURRENT_ITEM$=KEY23$)<>1 THEN GOTO 5760
5725 READ (MPW06_DEV)IOL=MPW06A
5730 LET PRDATE$=PR0$(25,6)
5735 LET V$=PRDATE$; GOSUB 6700
5740 LET W[PERIOD,1]=W[PERIOD,1]+PR[0]
5745 LET TYPFLG$="L",WHEN$=PRDATE$,REF3$=PR1$(21,6),REF4$=PR1$(27,7),ONORD=PR[0]
5750 GOSUB 6800
5755 GOTO 5715
5760 RETURN 
5800 REM " --- Get Purchase Order Information "
5805 IF TRANS_PEGGED THEN GOTO 5980
5810 READ (POE42_DEV,KEY=N0$+CURRENT_ITEM$,DOM=5820)
5820 DIM PO[12]
5830 LET KEY14$=KEY(POE42_DEV,END=5980)
5840 READ (POE42_DEV)
5850 IF POS(N0$+CURRENT_ITEM$=KEY14$)<>1 THEN GOTO 5980
5860 FIND (POE12_DEV,KEY=KEY14$(1,2)+KEY14$(33,6)+KEY14$(23,10),DOM=5820)IOL=POE12A
5870 FIND (POE02_DEV,KEY=PO0$(1,15),DOM=5820)IOL=POE02A
5880 IF PO[0]=0 THEN LET PO[0]=1
5890 LET PODT$=POHDR1$(5,6),PO_ORD=(PO[3]-PO[7])*PO[0]
5900 IF PO_ORD<0 THEN LET PO_ORD=0
5910 IF PO1$(3,6)<>"      " THEN LET PODT$=PO1$(3,6)
5920 LET V$=PODT$
5930 GOSUB 6700
5940 LET W[PERIOD,1]=W[PERIOD,1]+PO_ORD
5950 LET TYPFLG$="B",WHEN$=PODT$,REF3$=POHDR0$(3,6),REF4$=POHDR0$(9,7),ONORD=PO_ORD
5960 GOSUB 6800
5970 GOTO 5820
5980 RETURN 
6000 REM " --- GET WO On Order"
6002 IF TRANS_PEGGED THEN GOTO 6085
6005 READ (WOE03_DEV,KEY=N0$+"C"+WH$+CURRENT_ITEM$+"  ",DOM=6010)
6010 DIM WO[11]
6015 LET K12$=KEY(WOE03_DEV,END=6085)
6020 IF POS(N0$+"C"+WH$+CURRENT_ITEM$=K12$)=0 THEN GOTO 6085
6025 READ (WOE03_DEV)
6030 READ (WOE01_DEV,KEY=K12$(1,2)+"  "+K12$(28,7),DOM=6010)IOL=WOE01A
6035 IF POS(WOHDR$(15,1)="CQ")>0 THEN GOTO 6015
6040 IF WOHDR$(22,3)="   " THEN LET WODT$=FNYY_YY21$(FNM$(FNC$(WOHDR$(19)))) ELSE LET WODT$=FNYY_YY21$(FNM$(FNC$(WOHDR$(22))))
6045 LET WOORD=WO[0]-WO[2]
6050 IF WOORD<0 THEN LET WOORD=0
6055 LET V$=WODT$; GOSUB 6700
6060 LET W[PERIOD,1]=W[PERIOD,1]+WOORD
6065 LET TYPFLG$="C",WHEN$=WODT$,REF1$=WOHDR$(40,7),REF2$=WOHDR$(34,6)
6070 LET REF5$=WOHDR$(5,7),REF6$=WOHDR$(12,2)+WOHDR$(15,1),ONORD=WOORD
6075 GOSUB 6800
6080 GOTO 6015
6085 RETURN 
6100 REM " --- GET WO Committed Materials"
6102 IF TRANS_PEGGED THEN GOTO 6180
6105 READ (MPW02_DEV,KEY=N0$+WH$+CURRENT_ITEM$,DOM=6110)
6110 LET MWRK$=KEY(MPW02_DEV,END=6180)
6115 IF POS(N0$+WH$+CURRENT_ITEM$=MWRK$)<>1 THEN GOTO 6180
6120 READ (MPW02_DEV,KEY=MWRK$)IOL=MPW02A
6125 LET WODT$=MWRK$(25,6)
6130 LET V$=WODT$
6135 GOSUB 6700
6140 LET W[PERIOD,2]=W[PERIOD,2]+MCOM
6145 DIM WOHDR$(75)
6150 FIND (WOE01_DEV,KEY=N0$+"  "+MWRK$(31,7),DOM=6155)IOL=WOE01A
6155 IF WOHDR$(14,1)="I" THEN LET ITM$=WOHDR$(56,20)
6160 LET TYPFLG$="G",WHEN$=WODT$,REF1$=WOHDR$(40,7),REF2$=WOHDR$(34,6)
6165 LET REF5$=WOHDR$(5,7),REF6$=WOHDR$(12,2)+WOHDR$(15,1),GROSS=MCOM
6170 GOSUB 6800
6175 GOTO 6110
6180 RETURN 
6200 REM " --- Get Forecast Type Info"
6210 LET S0$=A0$(1,5),R[0]=0
6220 DIM R2$(26*6),R1$(61)
6230 FIND (MPM01_DEV,KEY=S0$,DOM=6240)IOL=MPM01A
6240 LET R9$=R1$(61,1)
6250 IF POS(R9$="YN")=0 THEN LET R9$="Y"
6260 LET R2$=R2$(1,R[0]*6)
6270 RETURN 
6300 REM " --- Calculate Effective & Obsolete period #
6310 IF NUM(FNYY21_YY$(OBSOLETE$))=0 THEN GOTO 6350
6320 IF POS(OBSOLETE$<=R2$,6)=0 THEN GOTO 6350
6325 REM " --- Check Whether Item Is Obsolete!
6330 IF POS(OBSOLETE$<R2$,6)=1 THEN LET OBSOLETE=1; GOTO 6390
6340 LET V$=OBSOLETE$; GOSUB 6700; LET OBSOLETE=PERIOD
6350 IF NUM(FNYY21_YY$(EFFECT$))=0 THEN GOTO 6390
6360 IF POS(EFFECT$<=R2$,6)=1 THEN GOTO 6390
6370 LET V$=EFFECT$; GOSUB 6700; LET EFFECT=PERIOD
6390 RETURN 
6400 REM " --- Calculate Release dates from lead time"
6405 LET W1$="",DAYS=-S[Z1],DAZE$=STR(ABS(DAYS):"000")
6410 IF TRANS_TYPE$="A" AND POS(DAZE$=POSAV$,3)>0 THEN GOTO 6600
6415 IF TRANS_TYPE$="B" AND POS(DAZE$=MPSAV$,3)>0 THEN GOTO 6600
6416 IF TRANS_TYPE$="A" THEN LET CAL_DEV=POM01_DEV ELSE LET CAL_DEV=MPM02_DEV
6420 FOR V9=0 TO R[0]-1
6425 LET FROMDATE$=R2$(V9*6+1,6),NEWDATE$=""
6430 CALL "SYC.FC",CAL_DEV,N0$,FROMDATE$,NEWDATE$,DAYS,ERR$
6440 IF ERR$="" THEN IF LEN(NEWDATE$)=6 THEN GOTO 6455
6445 LET FROMDATE$=R2$(V9*6+1,6),NEWDATE$=""
6450 CALL "SYC.CA",FROMDATE$,NEWDATE$,DAYS
6455 LET W1$=W1$+NEWDATE$
6460 NEXT V9
6465 IF TRANS_TYPE$="A" AND LEN(POSAV$)>=90 THEN GOTO 6505
6470 IF TRANS_TYPE$="B" AND LEN(MPSAV$)>=90 THEN GOTO 6505
6475 IF TRANS_TYPE$="A" THEN LET POSAV$=POSAV$+DAZE$
6480 IF TRANS_TYPE$="B" THEN LET MPSAV$=MPSAV$+DAZE$
6485 IF TRANS_TYPE$="A" THEN LET NUMBER=INT(POS(DAZE$=POSAV$,3)/3)
6490 IF TRANS_TYPE$="A" THEN LET PODATES$[NUMBER]=W1$
6495 IF TRANS_TYPE$="B" THEN LET NUMBER=INT(POS(DAZE$=MPSAV$,3)/3)
6500 IF TRANS_TYPE$="B" THEN LET MPDATES$[NUMBER]=W1$
6505 GOTO 6690
6600 REM " --- Get previous dates
6610 IF TRANS_TYPE$="B" THEN GOTO 6660
6620 LET NUMBER=INT(POS(DAZE$=POSAV$,3)/3)
6630 LET W1$=PODATES$[NUMBER]
6640 GOTO 6690
6660 LET NUMBER=INT(POS(DAZE$=MPSAV$,3)/3)
6680 LET W1$=MPDATES$[NUMBER]
6690 RETURN 
6700 REM " --- Calculate Period number
6710 LET PERIOD=POS(V$<=R2$,6)
6720 IF PERIOD=0 THEN LET PERIOD=LEN(R2$)+1
6740 LET PERIOD=INT(PERIOD/6)
6760 RETURN 
6800 REM " --- Write Detailed Transaction
6805 IF TRANS_PEGGED OR (ONHND=0 AND GROSS=0 AND ONORD=0 AND NETREQ=0 AND NETREL=0 AND NETREC=0) THEN GOTO 6875
6810 DIM B0$(39)
6815 LET B0$(1)=S0$+WH$+CURRENT_ITEM$,B0$(28,6)=WHEN$,B0$(34)=TYPFLG$
6820 DIM B1$(20),B2$(63),B[12]
6825 LET B0$(35,5)=STR(NUM(B0$(35,5))+1:"00000")
6830 READ (MPE05_DEV,KEY=B0$,DOM=6845)IOL=MPE05A
6835 IF COMBINE$="MATCH" AND B1$=ITM$ THEN GOTO 6845
6840 IF COMBINE$<>"Y" THEN GOTO 6820
6845 LET B1$=ITM$,B2$(1,7)=REF1$,B2$(8,6)=REF2$,B2$(14,6)=REF3$,B2$(20,7)=REF4$
6850 LET B2$(27,7)=REF5$,B2$(34,3)=REF6$,B2$(37,1)=TRANS_TYPE$
6855 LET B2$(38,6)=DATEREQ$
6860 LET B[0]=B[0]+GROSS,B[1]=B[1]+ONORD,B[2]=B[2]+ONHND,B[3]=B[3]+NETREQ
6865 LET B[4]=B[4]+NETREL,B[5]=B[5]+NETREC
6870 WRITE (MPE05_DEV,KEY=B0$)IOL=MPE05A
6875 LET TYPFLG$="",WHEN$="",COMBINE$="",ITM$="",REF1$="",REF2$="",REF3$="",REF4$="",REF5$="",REF6$="",ONHND=0,GROSS=0,ONORD=0,NETREQ=0,NETREL=0,NETREC=0,DATEREQ$=""
6880 RETURN 
6900 REM " --- Circular Reference Error
6910 DIM MESSAGE$[2]
6920 LET MESSAGE$[0]="More Than 17 Levels Detected In This Bill"
6930 LET MESSAGE$[1]="Check For Possible Circular References"
6940 LET MESSAGE$[2]="    Press <Enter> To Continue"
6980 CALL "SYC.XA",2,MESSAGE$[ALL],2,22,-1,V$,V3
6990 GOTO 4000
8000 REM " --- Functions "
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8060 DEF FNM$(Q$)=Q$(5,2)+Q$(1,4)
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
