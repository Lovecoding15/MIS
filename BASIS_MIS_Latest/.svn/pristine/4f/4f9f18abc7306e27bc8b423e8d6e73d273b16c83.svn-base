[Program]
Creation Date=2006-01-11
Creation Time=14:59:55
Event Set=LEGACY
Generator Program=gb_func
Last Build Date=2022-06-21
Last Build Time=16:59:21
Precision=99
Program Name=forgotCreds
Remarks=Yes
Resource File=forgotCreds.arc
Show Forms=All

[EOJ]
gosub closeFiles

[Init]
rem ' open files
rem ' gosub openFiles

rem ' build object reference
gosub buildObjectReferences
gosub openFiles

rem ' lang$ is always passed
lang$ = gb__arg$(1,2); gb__arg$ = gb__arg$(3)

rem ' get the pass in customer number if any
if gb__arg$ <> "" then
    customerNbr$ = gb__arg$
    customerNumber!.setText(customerNbr$)
else
    customerNbr$ = ""
fi

if lang$ = "DE" then 
    gosub lang_substitution
fi

if lang$ = "MR" then
    rem ' marriott reset'
    forgotCredsForm!.setTitleBarVisible(1)
    header!.setVisible(0)
fi

forgotCredsForm!.setVisible(1)
forgotCredsForm!.focus()


[Event Win=101 ID=0 Code=X <WIN_CLOSE> (W101_C0_WIN_CLOSE)]
rem ' Window Closed
rem ' gb__event! = cast(BBjCloseEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__window! = gb__event!.getControl()

gosub closeFiles
goto gb__eoj

[Event Win=101 ID=102 Code=B <PUSH_BUTTON> (W101_C102_PUSH_BUTTON)]
rem ' Button was pushed
rem ' gb__event! = cast(BBjButtonPushEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()



gosub validCustomerNbr

if custNbrValid then
    gosub generateNewPassword
    gosub writeECM01
    gosub sendEmailWithPassword

    message$ = "A temporary password has been emailed to the address associated with this account. "
    message$ = message$ + "Please use it to log into B-commerce. You will be prompted then to reset "
    message$ = message$ + "it to a password of your choosing."
    statusMessage!.setText(message$)
fi

[Event Win=101 ID=106 Code=B <PUSH_BUTTON> (W101_C106_PUSH_BUTTON)]
rem ' Button was pushed
rem ' gb__event! = cast(BBjButtonPushEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

rem ' get the customer number associated with this email address

gosub lookupCustomerNbr

[Event Win=101 ID=109 Code=f1 <GOT_FOCUS> (W101_C109_GOT_FOCUS)]
rem ' Control got focus
rem ' gb__event! = cast(BBjGainedFocusEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

done!.focus()

[Event Win=101 ID=110 Code=B <PUSH_BUTTON> (W101_C110_PUSH_BUTTON)]
rem ' Button was pushed
rem ' gb__event! = cast(BBjButtonPushEvent,bbjapi().getSysGui().getLastEvent())
rem ' gb__control! = gb__event!.getControl()

gosub closeFiles
goto gb__eoj


[Function (buildDBURL)]
rem ' -----------------------------------------------------------------
rem ' buildDBURL
rem ' -----------------------------------------------------------------

buildDBURL:

USE java.io.File
USE java.io.FileInputStream
USE java.io.BufferedInputStream
USE java.util.Properties
USE java.lang.StringBuffer

DECLARE File file!
DECLARE FileInputStream fis!
DECLARE BufferedInputStream bis!
DECLARE Properties props!
DECLARE StringBuffer sqlBuilder!

rem ' locate the properties file
props=unt
open(props)"ec_sql.properties"
props$=fid(props), props$=props$(9)
close(props)

file!= new java.io.File(props$)
fis!=new java.io.FileInputStream(file!)
bis!=new java.io.BufferedInputStream(fis!)
props!=new java.util.Properties()
props!.load(bis!)

sqlBuilder!= new StringBuffer(props!.getProperty("sqlURL.urlprefix") + props!.getProperty("sqlURL.server")+":")
sqlBuilder!.append(props!.getProperty("sqlURL.port")+"?database=")
sqlBuilder!.append(props!.getProperty("sqlURL.database")+"&user="+props!.getProperty("sqlURL.user")+"&password=")
sqlBuilder!.append(props!.getProperty("sqlURL.password"))
ourDbUrl$ = sqlBuilder!.toString()


return

[Function (buildObjectReferences)]
rem ' -----------------------------------------------------------------
rem ' buildObjectReferences
rem ' -----------------------------------------------------------------

buildObjectReferences:

declare BBjAPI bbjapi!
declare BBjSysGui sysgui!

declare BBjTopLevelWindow forgotCredsForm!

declare BBjEditBox customerNumber!
declare BBjEditBox emailAddress!
declare BBjCEdit statusMessage!

declare BBjGroupBox forgotPasswordGroup!
declare BBjGroupBox forgotCustNbrGroup!

declare BBjStaticText customerNbrLabel!
declare BBjStaticText emailAddressLabel!

declare BBjButton getPassword!
declare BBjButton getCustomerNumber!

declare BBjStaticText header!

declare BBjButton done!

declare BBjRecordSet ecm01RecordSet!
declare BBjRecordData ecm01RecordData!


bbjapi! = BBjAPI()
sysgui! = bbjapi!.getSysGui()

rem ' forgot Creds Form
forgotCredsForm! = cast(BBjTopLevelWindow, sysgui!.getWindow("forgotCredsForm"))

customerNumber! = cast(BBjEditBox, forgotCredsForm!.getControl("customerNumber"))
emailAddress! = cast(BBjEditBox, forgotCredsForm!.getControl("emailAddress"))
statusMessage! = cast(BBjCEdit, forgotCredsForm!.getControl("statusMessage"))

forgotPasswordGroup! = cast(BBjGroupBox, forgotCredsForm!.getControl("forgotPasswordGroup"))
forgotCustNbrGroup! = cast(BBjGroupBox, forgotCredsForm!.getControl("forgotCustNbrGroup")) 

customerNbrLabel! = cast(BBjStaticText, forgotCredsForm!.getControl("customerNbrLabel"))
emailAddressLabel! = cast(BBjStaticText, forgotCredsForm!.getControl("emailAddressLabel"))

getPassword! = cast(BBjButton, forgotCredsForm!.getControl("getPassword"))
getCustomerNumber! = cast(BBjButton, forgotCredsForm!.getControl("getCustomerNumber"))

header! = cast(BBjStaticText, forgotCredsForm!.getControl("headertext"))

done! = cast(BBjButton, forgotCredsForm!.getControl("done"))

gosub buildDBURL

return

[Function (closeFiles)]
rem ' -----------------------------------------------------------------
rem ' closeFiles
rem ' -----------------------------------------------------------------

closeFiles:

close(ecm01, err=*next)
close(arm02, err=*next)
close(arm10f, err=*next)

return

[Function (generateNewPassword)]
rem ' -----------------------------------------------------------------
rem ' generateNewPassword
rem ' -----------------------------------------------------------------

generateNewPassword:

characters$ = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789~!@#$%^*()+="
start = num(date(0,"%D")) * num(date(0,"%M"))
interval = round(rnd(0) * len(characters$),0)

password$ = ""
nextpos = start
for x = 1 to 9
    nextpos = nextpos + interval
    while nextpos > len(characters$)
        nextpos = nextpos - len(characters$)
    wend
    password$ = password$ + characters$(nextpos, 1)
next x

return

[Function (lang_substitution)]
rem ' -----------------------------------------------------------------
rem ' lang_substitution
rem ' -----------------------------------------------------------------

lang_substitution:

rem ' locate the file
props=unt
open(props)"forgotCreds.DE.properties"
props$=fid(props), props$=props$(9)
close(props)

file! = new File(props$)
fis! = new FileInputStream(file!)
bis! = new BufferedInputStream(fis!)
langProps! = new Properties()
langProps!.load(bis!)
bis!.close()
fis!.close()


forgotCredsForm!.setTitle(langProps!.getProperty("title"))

forgotPasswordGroup!.setText(langProps!.getProperty("forgotPasswordGroup"))
forgotCustNbrGroup!.setText(langProps!.getProperty("forgotCustNbrGroup"))

customerNbrLabel!.setText(langProps!.getProperty("customerNbrLabel"))
emailAddressLabel!.setText(langProps!.getProperty("emailAddressLabel"))

getPassword!.setText(langProps!.getProperty("getPassword"))
getCustomerNumber!.setText(langProps!.getProperty("getCustomerNumber"))

done!.setText(langProps!.getProperty("done"))

return

[Function (lookupCustomerNbr)]
rem ' -----------------------------------------------------------------
rem ' lookupCustomerNbr
rem ' -----------------------------------------------------------------

lookupCustomerNbr:

custEmailAddress$ = cvs(emailAddress!.getText(), 3)

if custEmailAddress$ = "" then

    statusMessage!.setText("You must enter an email address.")
    emailAddress!.focus()

else
    atPos = pos("@" = custEmailAddress$)
    lengthEmailAddress = len(custEmailAddress$)
    lenBefore = atPos - 1
    lenAfter = lengthEmailAddress - atPos
    if atPos = 0 or lenBefore < 1 or lenAfter < 3 then

        statusMessage!.setText("The email address entered appears to be invalid.")
        emailAddress!.focus()

    else
    
        sql$ = "SELECT * FROM ECM01 WHERE E_MAIL LIKE ('%" + custEmailAddress$ + "%')"
        ecm01RecordSet! = bbjapi!.createSQLRecordSet(ourDbUrl$,"",sql$)

        acctCount = 0
        acctList$ = ""
        acctEmail$ = ""

        if ecm01RecordSet!.isEmpty() then
       
            gosub sendEmailWithCustNbr
       
        else
            
            ecm01RecordSet!.first()
            while 1
                ecm01RecordData! = ecm01RecordSet!.getCurrentRecordData()
                acctCount = acctCount + 1
                account$ = ecm01RecordData!.getFieldValue("FIRM_ID") + ecm01RecordData!.getFieldValue("CUSTOMER_NBR") + ecm01RecordData!.getFieldValue("USER_CODE")
                eaddr$ = cvs(ecm01RecordData!.getFieldValue("E_MAIL"), 3)
                
                acctList$ = acctList$ + account$ + $0A$
                acctEmail$ = acctEmail$ + eaddr$ + $0A$
    
                ecm01RecordSet!.next(err=*break)
            wend
            gosub sendEmailWithCustNbr

        fi

        ecm01RecordSet!.close()
    fi
 fi       

return

[Function (openFiles)]
rem ' -----------------------------------------------------------------
rem ' openFiles
rem ' -----------------------------------------------------------------

openFiles:

call "ec_open::ECM01"
call "ec_open::ARM02"
call "ec_open::ARM10F"

return

[Function (sendEmailWithCustNbr)]
rem ' -----------------------------------------------------------------
rem ' sendEmailWithCustNbr
rem ' -----------------------------------------------------------------

sendEmailWithCustNbr:

from$ = "customer-service@basis.cloud"
to$ = ""
cc$  = ""
bcc$ = ""

if acctCount < 1 then
    rem ' no account found
    to$ = custEmailAddress$
    cc$ = "customer-service@basis.cloud"
    bcc$ = "kw5121151@gmail.com"
    subject$ = "Email Address is not associated with a Basis B-comm Customer Number"

    msgtxt$ = "A request to find the BASIS B-comm customer number associated with the email address, " + custEmailAddress$ + ", "
    msgtxt$ = msgtxt$ + "was received and no customer number was found. " + $0A$ + $0A$
    msgtxt$ = msgtxt$ + "If you have any questions please contact a BASIS representative at 1.505.938.6120 in the U.S. "
    msgtxt$ = msgtxt$ + "or +49 681 968 14 0 in Europe." + $0A$ + $0A$ + $0A$
    msgtxt$ = msgtxt$ + "BASIS Customer Service Department" + $0A$ + "customer-service@basis.cloud" 
    
    rem ' un rem for debugging
    rem ' xresp = msgbox("From: " + from$ + " To: " + to$ + " CC: " + cc$ + " BCC: " + bcc$, 0, "debug")
    rem ' to$ = "kurt.e.williams@comcast.net"
    rem ' cc$ = "williams.kurt@comcast.net"
    rem ' xresp = msgbox("From: " + from$ + " To: " + to$ + " CC: " + cc$ + " BCC: " + bcc$, 0, "debug")
    rem ' escape

    file$ = ""

    call "sendEmail.src", from$, to$, cc$, bcc$, subject$, msgtxt$, file$

    statusMessage!.setText("This address is not associated with any customer numbers.")

else
    
    acctList2$ = acctList$

    while pos($0A$ = acctList$)
        
        lfpos = pos($0A$ = acctList$)
        account$ = acctList$(1, lfpos - 1)
        acctList$ = acctList$(lfpos + 1)

        lfpos = pos($0A$ = acctEmail$)
        eaddr$ = acctEmail$(1, lfpos - 1)
        acctEmail$ = acctEmail$(lfpos + 1)

        rem ' set to address
        while len(eaddr$) > 0
            cpos = pos("," = eaddr$)
            if cpos <> 0 then
                temp$ = eaddr$(1, cpos - 1)
                eaddr$ = eaddr$(cpos + 1)
            else
                temp$ = eaddr$
                eaddr$ = ""
            fi
            if pos(temp$ = to$) = 0 then
                if len(to$) > 0 then
                    to$ = to$ + "," + temp$
                else
                    to$ = temp$
                fi
            fi
        wend
        
        rem ' set cc address
        read record(arm02, key = account$(1,8) + "  ")arm02$
        dim arm10f$:fattr(arm10f$)
        if cvs(arm02.slspsn_code$, 3) <> "" then
            read record(arm10f, key = account$(1,2) + "F" + arm02.slspsn_code$)arm10f$
        fi
        if cvs(arm10f.e_mail$, 3) <> "" then
            if len(cc$) = 0 then
                cc$ = cvs(arm10f.e_mail$, 3)
            else
                cc$ = cc$ + ", " + cvs(arm10f.e_mail$, 3)
            fi
        fi

    wend

    if cc$ = "" then
        cc$ = "customer-service@basis.cloud"
    else
        cc$ = cc$ +  ", " + "customer-service@basis.cloud"
    fi

    bcc$ = "kw5121151@gmail.com"

    subject$ = "BASIS B-comm customer number associated with a specific email address"

    msgtxt$ = "A request to find the BASIS B-comm customer number(s) associated with the email address, " + custEmailAddress$ + ", "
    msgtxt$ = msgtxt$ + "was received and the following customer number(s) were found. " + $0A$ + $0A$

    while pos($0A$ = acctList2$)

        lfpos = pos($0A$ = acctList2$)
        account$ = acctList2$(1, lfpos - 1)
        acctList2$ = acctList2$(lfpos + 1)

        msgtxt$ = msgtxt$ + "Customer Number: " + account$ +$0A$
    
    wend
        
    msgtxt$ = msgtxt$ + $0A$ + "If you have any questions please contact a BASIS representative at 1.505.938.6120 in the U.S. "
    msgtxt$ = msgtxt$ + "or +49 681 968 14 0 in Europe." + $0A$ + $0A$ + $0A$
    msgtxt$ = msgtxt$ + "BASIS Customer Service Department" + $0A$ + "customer-service@basis.cloud" 

    rem ' un rem for debugging
    rem ' xresp = msgbox("From: " + from$ + " To: " + to$ + " CC: " + cc$ + " BCC: " + bcc$, 0, "debug")
    rem ' to$ = "kurt.e.williams@comcast.net"
    rem ' cc$ = "williams.kurt@comcast.net"
    rem ' xresp = msgbox("From: " + from$ + " To: " + to$ + " CC: " + cc$ + " BCC: " + bcc$, 0, "debug")
    rem ' escape

    file$ = ""

    call "sendEmail.src", from$, to$, cc$, bcc$, subject$, msgtxt$, file$

    statusMessage!.setText("An Account associated with this email address was found. An email with details has been sent to the appropriate email addresses.")

fi

return

[Function (sendEmailWithPassword)]
rem ' -----------------------------------------------------------------
rem ' sendEmailWithPassword
rem ' -----------------------------------------------------------------

sendEmailWithPassword:

read record(arm02, key = firm_id$ + cust_num$ + "  ")arm02$
dim arm10f$:fattr(arm10f$)
if cvs(arm02.slspsn_code$, 3) <> "" then
    read record(arm10f, key = firm_id$ + "F" + arm02.slspsn_code$)arm10f$
fi

haveCustomerEmail = 0

from$ = "customer-service@basis.cloud"

to$ = ""
if cvs(ecm01.e_mail$, 3) <> "" then
    to$ = cvs(ecm01.e_mail$, 3)
fi

rem ' if cvs(ecm01.e_mail2$, 3) <> "" then
rem '    if cvs(to$, 3) <> "" then
rem '        to$ = to$ + "," + cvs(ecm01.e_mail2$, 3)
rem '     else
rem '        to$ = cvs(ecm01.e_mail2$, 3)
rem '    fi
rem ' fi

if to$ = "" then
    to$ = "customer-service@basis.cloud"
else
    haveCustomerEmail = 1
fi

cc$ = ""
if cvs(arm10f.e_mail$, 3) <> "" then
    cc$ = cvs(arm10f.e_mail$, 3) + ",customer-service@basis.cloud"
fi
if cvs(cc$, 3) = "" then
    cc$ = "customer-service@basis.cloud"
fi

bcc$ = "kw5121151@gmail.com"

rem ' un rem for debugging
rem ' xresp = msgbox("From: " + from$ + " To: " + to$ + " CC: " + cc$ + " BCC: " + bcc$, 0, "debug")
rem ' to$ = "kurt.e.williams@comcast.net"
rem ' cc$ = "williams.kurt@comcast.net"
rem ' xresp = msgbox("From: " + from$ + " To: " + to$ + " CC: " + cc$ + " BCC: " + bcc$, 0, "debug")
rem ' escape

subject$ = "BASIS B-comm password reset to known value for " + firm_id$ + cust_num$ + user_code$

nametext$ = ""
if cvs(ecm01.first_name$,3) <> "" then nametext$ = cvs(ecm01.first_name$,3)
if cvs(ecm01.last_name$,3) <> "" then
    if nametext$ <> "" then
        nametext$ = nametext$ + " " + cvs(ecm01.last_name$,3)
    else
        nametext$ = cvs(ecm01.last_name$,3)
    fi
fi

msgtxt$ = "Someone requested a reset of the password for the BASIS B-comm account " + firm_id$ + cust_num$ + user_code$
if nametext$ <> "" then 
    msgtxt$ = msgtxt$ + ", " + nametext$ + ". "
else
    msgtxt$ = msgtxt$ + ". "
fi

msgtxt$ = msgtxt$ + $0A$ + $0A$ + "The password was reset to: " + password$ + $0A$ + $0A$
msgtxt$ = msgtxt$ + "If you requested this password reset, you may log into b-commerce using the above password. You will "
msgtxt$ = msgtxt$ + "be prompted to change it to a password of your own choosing. " + $0A$ + $0A$
msgtxt$ = msgtxt$ + "If this was an unauthorized request please log into b-commerce with the above password. You will be "
msgtxt$ = msgtxt$ + "prompted to change the password to one of your own choosing. This email is the only way that the temporary "
msgtxt$ = msgtxt$ + "password was communicated to anyone. The person requesting the reset was not given this password." + $0A$ + $0A$
msgtxt$ = msgtxt$ + "If you have any issues please contact a BASIS representative at 1.505.938.6120 in the U.S. "
msgtxt$ = msgtxt$ + "or +49 681 968 14 0 in Europe." + $0A$ + $0A$ + $0A$
msgtxt$ = msgtxt$ + "BASIS Customer Service Department" + $0A$ + "customer-service@basis.cloud" 

file$ = ""

call "sendEmail.src", from$, to$, cc$, bcc$, subject$, msgtxt$, file$

return

[Function (validCustomerNbr)]
rem ' -----------------------------------------------------------------
rem ' validCustomerNbr
rem ' -----------------------------------------------------------------

validCustomerNbr:

rem ' Format is FFCCCCCCUU
rem ' FF is a 2-digit Firm ID (usually 01 or 02)
rem ' CCCCCC is a 1-6 digit customer number, typically 4 digits
rem ' UU is an optional 1- or 2-letter user code

custNbrValid = 0

firm_id$ = "01"
cust_num$=""
user_code$=""
statusMessage!.setText("")
recordBusy = 0

while 1

    temp$ = cvs(customerNumber!.getText() ,3)
    
    basisSalesAccount = 1
    if pos("**" = temp$) <> 0 then break
    basisSalesAccount = 0

    x = len(temp$)
    if x < 3 or x > 10 then break

    x$ = temp$(1,2)
    if pos(x$ = "0102", 2) and x > 5 then 
        temp$ = temp$(3), firm_id$ = x$, x = x-2 
    else 
        x$=""
    fi

    for n = x - 1 to x
        if pos(temp$(n, 1) = "0123456789") = 0 then 
            user_code$ = user_code$ + temp$(n,1)
            temp$(n,1) = " "
        fi
    next n

    user_code$  =   pad(user_code$, 2)
    temp$ = cvs(temp$, 3)
    cust_num$ = str(num(temp$):"000000", err=*break)

    rem ' get customer ECM01 record
    tries=0
    get_ecm01:
    extract record (ecm01, KEY = firm_id$ + cust_num$ + user_code$, tim = 3, dom = ecm01_not_found, err = recordbusy)ecm01$
    custNbrValid = 1
    break

    recordbusy:
    firm_id$="",cust_num$="",user_code$=""    
    if err <> 0 then break
    recordBusy = 1
    break
    
    ecm01_not_found: 
    if x$ <> "" and pos("00" = cust_num$) = 1 then
        firm_id$ = "01"
        cust_num$(1, 2) = x$
        x$=""
        goto get_ecm01
    fi
    tries = tries + 1
    if tries < 3 then 
        firm_id$ = str(tries:"00")
        goto get_ecm01
    fi

    firm_id$="",cust_num$="",user_code$=""
    
    break
 
wend

if !custNbrValid then
    if basisSalesAccount then
        statusMessage!.setText("** Acount cannot be reached in this way.")
    else
        if recordBusy then
            statusMessage!.setText("Customer Number is already logged into B-commerce else where.")
        else
            statusMessage!.setText("Customer Number is invalid.")
        fi
    fi
else
    customerNumber!.setText(firm_id$ + cust_num$ + user_code$)
fi

return

[Function (writeECM01)]
rem ' -----------------------------------------------------------------
rem ' writeECM01
rem ' -----------------------------------------------------------------

writeECM01:

ecm01.password$ = password$
ecm01$ = field(ecm01$)
write record (ecm01, KEY = firm_id$ + cust_num$ + user_code$)ecm01$
extract record (ecm01, KEY = firm_id$ + cust_num$ + user_code$)ecm01$

return

