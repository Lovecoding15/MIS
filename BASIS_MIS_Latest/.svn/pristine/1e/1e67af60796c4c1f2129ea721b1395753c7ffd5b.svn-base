0010 REM "POR - Purchase Order Receipt History Report (Detail - Print Overlay)
0020 REM "Program POR.PC
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists
0210 APM01A: IOLIST C0$(1),C1$(1)
0220 APM05A: IOLIST R0$(1),R1$(1)
0230 APM10C: IOLIST D0$(1)
0240 ARM01A: IOLIST *,CUSTINFO$(1)
0250 ARM03A: IOLIST *,DROPINFO$(1)
0260 IVM01A: IOLIST *,X1$(1)
0270 IVM05A: IOLIST *,*,VPARTNUM$(1)
0280 IVM10C: IOLIST X0$
0290 POT04A: IOLIST A0$(1),A1$(1),A2$,A3$,A[ALL]
0300 POT14A: IOLIST B0$(1),B1$(1),B2$(1),B3$(1),B4$(1),B5$,B6$,B[ALL]
0310 POM02A: IOLIST S0$(1),S1$(1)
0500 REM " --- Init Data
0510 PRECISION IVPRECISION
0520 DIM A0$(22),A1$(160),A[8],VENDOR$(6)
0530 LET GRANDTOT=0,PRINTVTOT$="N"
0540 LET INITIALIZING$="Y"; REM "Init files 1st time through
0600 REM " --- Headings and print positions
0610 LET HEADINGS=4
0620 DIM HEADINGS$[HEADINGS],O[12]
0630 LET WIDTH=132,PAGE=0,L9=59,L=L9+1
0650 GOSUB ASSIGNHEADS
0760 POSITIONS: 
0770 LET O[1]=O[0]+9,O[2]=O[1]+4,O[3]=O[2]+3,O[4]=O[3]+3
0780 LET O[5]=O[4]+ITEMLEN+1,O[6]=O[5]+9,O[7]=O[6]+11,O[8]=O[7]+3
0790 LET O[9]=O[8]+M5+1,O[10]=O[9]+M2+1,O[11]=O[10]+M2+1,O[12]=O[11]+M3+1
0810 IF O[12]+15<WIDTH THEN GOTO 0950
0820 LET O[12]=WIDTH-M1,O[11]=O[12]-M3,O[10]=O[11]-M2,O[9]=O[10]-M2
0830 LET O[8]=O[9]-M5
0950 REM " --- Position files
0960 CALL "SYC.GA",7,1,"","",STATUS
0970 IF STATUS THEN GOTO 9900
0980 CALL "SYC.NB","Printing",22,COLUMN
1000 REM " --- Sorts
1010 SORTORDER: 
1020 ON POS(PRINTSEQ$="AN") GOTO 4000,SORTBYALT,SORTBYVEND
1200 REM " --- Sort by alternate sequence
1210 SORTBYALT: 
1220 IF INITIALIZING$="N" THEN GOTO KEYBYALT
1230 LET INITIALIZING$="N"
1260 READ (APM04_DEV,KEY=N0$+"A"+VENDFROM$,DOM=KEYBYALT)
1270 REM " --- Find a POT44 record using alt seq
1280 KEYBYALT: 
1290 LET K04A$=KEY(APM04_DEV,END=4000)
1300 IF K04A$(1,3)<>N0$+"A" THEN GOTO 4000
1310 LET K04B$=K04A$(1,2)+K04A$(14,6)
1320 READ (APM04_DEV); REM "Move ptr
1330 READ (POT44_DEV,KEY=K04B$,DOM=1340)
1340 LET K44$=KEY(POT44_DEV,END=NEXTALT)
1350 IF K44$(1,8)<>K04B$ THEN GOTO NEXTALT
1360 LET K$=K44$
1370 GOTO TESTKEY
1380 NEXTALT: 
1390 GOTO KEYBYALT
1500 REM " --- Sort by vendor
1510 SORTBYVEND: 
1520 IF INITIALIZING$="N" THEN GOTO KEYBYVEND
1530 LET INITIALIZING$="N"
1540 READ (POT44_DEV,KEY=N0$+VENDFROM$+DATEFROM$,DOM=KEYBYVEND)
1600 REM " --- Read through req headers
1610 KEYBYVEND: 
1620 LET K$=KEY(POT44_DEV,END=4000)
1630 TESTKEY: 
1640 IF K$(1,2)<>N0$ THEN GOTO 4000
1650 READ (POT44_DEV); REM "Move ptr
1670 FIND (POT04_DEV,KEY=K$(1,8)+K$(15,14),DOM=NEXTHEADER)IOL=POT04A
1680 DIM RCPTDATE$(8)
1690 IF A1$(29,6)<>FILL(6) THEN LET RCPTDATE$=FNB6$(A1$(29,6))
1700 REM " --- Test Ranges
1740 IF VENDFROM$<>FILL(6) AND A0$(3,6)<VENDFROM$ THEN GOTO NEXTHEADER
1750 IF VENDTHRU$<>FILL(6) AND A0$(3,6)>VENDTHRU$ THEN GOTO NEXTHEADER
1780 IF DATEFROM$<>"" AND A1$(29,6)<DATEFROM$ THEN GOTO NEXTHEADER
1790 IF DATETHRU$<>"" AND A1$(29,6)>DATETHRU$ THEN GOTO NEXTHEADER
1800 REM " --- Header passed tests
1810 GOSUB TESTBREAKS
1820 PRINT @(COLUMN,11),FNF$(A0$(3,VENDLEN),VENDOMASK$)," ",A0$(9,7)," ",A0$(16,7)
2000 REM " --- Get detail
2010 READDETAIL: 
2020 DIM B0$(25),B1$(48),B2$(32),B3$(22),B4$(40),B[12]
2040 READ (POT14_DEV,KEY=A0$,DOM=READ_POT14)
2100 REM " --- Read through POT-14 detail
2110 READ_POT14: 
2120 LET K14$=KEY(POT14_DEV,END=DONE_DETAIL)
2130 IF K14$(1,22)<>A0$ THEN GOTO DONE_DETAIL
2140 READ (POT14_DEV,KEY=K14$)IOL=POT14A
2180 REM " --- Print detail
2240 GOSUB PRINTDETAIL
2250 REM " --- Accumulate totals; then get next detail
2260 NEXTDETAIL: 
2265 DIM RCPTDATE$(8); REM "Only print Recpt date on 1st detail
2270 LET POTOT=POTOT+EXTENSION,VENDTOT=VENDTOT+EXTENSION
2280 LET GRANDTOT=GRANDTOT+EXTENSION
2285 LET EXTENSION=0,EXTENSION$=""
2290 GOTO READ_POT14
2300 REM " --- Done w/detail for this PO 
2310 DONE_DETAIL: 
2320 GOSUB POTOTALS
2330 READ (POT44_DEV,KEY=K$(1,28)+$FF$,DOM=2400); REM "Move ptr to next recpt
2400 REM " --- Loop up for next header record via sort files
2410 NEXTHEADER: 
2420 IF PRINTSEQ$<>"A" THEN GOTO 2460
2430 REM " --- See if there's another po for vend before getting next alt seq
2440 LET K$=KEY(POT44_DEV,END=2460)
2450 IF K$(3,6)=VENDOR$ THEN GOTO TESTKEY
2460 GOTO SORTORDER
4000 REM " --- All Done
4020 IF L+2>L9 THEN GOSUB 5000
4030 GOSUB VENDTOTALS
4040 PRINT (7)@(O[12]-17),"Total For Report",@(O[12]),GRANDTOT:M1$
4050 GOTO 9900
4100 REM " --- Print Detail Subroutine
4105 PRINTDETAIL: 
4110 REM " --- Set up variables
4115 DIM DATEREQ$(8)
4130 LET WHSE$=B3$(1,2),ITEMNUM$=B3$(3,20),MEMO$=B4$,UNITMEAS$=B1$(22,2)
4140 IF B1$(3,6)<>FILL(6) THEN LET DATEREQ$=FNB6$(B1$(3,6))
4160 LET CONVFACT$=STR(B[0]:M5$),QTYORD$=STR(B[3]:M2$)
4170 LET QTYREC=B[7],QTYREC$=STR(B[7]:M2$)
4180 LET LOCATION$=B1$(24,10),UNITCOST$=STR(B[1]:M3$)
4190 LET WONUM$=B2$(1,7),WOSEQ$=B2$(8,3),CUSTNUM$=B2$(11,6)
4200 REM " --- Get Drop Ship flag & Line Type
4210 DIM S0$(4),S1$(32)
4220 LET LINETYPE$="N",DROPSHIP$="N"
4230 FIND (POM02_DEV,KEY=B0$(1,2)+B1$(1,2),DOM=4300)IOL=POM02A
4240 LET LINETYPE$=S1$(21,1),DROPSHIP$=S1$(22,1)
4300 REM " --- Get Item Desc for S and N type lines
4310 IF LINETYPE$="N" THEN LET ITEMDESC$=MEMO$; GOTO 4360
4320 DIM ITEMDESC$(60),X1$(60)
4330 LET ITEMDESC$(1)="Not On File"
4340 FIND (IVM01_DEV,KEY=N0$+B3$(3,20),DOM=4360)IOL=IVM01A
4350 LET ITEMDESC$(1)=FNITEM$(X1$,DESCLEN[1],DESCLEN[2],DESCLEN[3])
4360 REM " --- Get extension
4370 GOSUB CALC_EXTENSION
4380 REM " --- Get Vendor's Part #
4390 DIM VPARTNUM$(20)
4400 FIND (IVM05_DEV,KEY=B0$(1,8)+ITEMNUM$,DOM=4500)IOL=IVM05A
4500 REM " --- Format common part of print line
4510 DIM PLINE$(132)
4520 LET PLINE$(1)=RCPTDATE$+" "+B0$(23,3)+" "+B1$(1,2)+" "+WHSE$
4530 REM " --- Print Line Types 'M', 'O' & 'V'
4540 IF POS(LINETYPE$="MOV")=0 THEN GOTO NOT_MOV
4550 IF LINETYPE$="V" THEN LET PLINE$(O[4]+1)=MEMO$(1,20) ELSE LET PLINE$(O[4]+1)=MEMO$
4560 IF LINETYPE$="O" THEN LET PLINE$(O[11]+1,M3)=UNITCOST$,PLINE$(O[12]+1)=EXTENSION$
4570 IF L+1>L9 THEN GOSUB 5000
4580 PRINT (7)PLINE$
4590 LET L=L+1
4600 GOTO DONE_PRINTDETAIL
4610 REM " --- Print Line Types 'S' & 'N'
4615 NOT_MOV: 
4620 IF POS(LINETYPE$="SN")=0 THEN GOTO DONE_PRINTDETAIL
4630 LET PLINE$(O[4]+1)=ITEMNUM$(1,ITEMLEN),PLINE$(O[5]+1)=DATEREQ$
4640 LET PLINE$(O[6]+1)=LOCATION$,PLINE$(O[7]+1)=UNITMEAS$
4650 IF LINETYPE$="S" THEN LET PLINE$(O[8]+1)=CONVFACT$
4660 IF L+2>L9 THEN GOSUB 5000
4670 PRINT (7)PLINE$,@(O[9]),QTYORD$,@(O[10]),QTYREC$,@(O[11]),UNITCOST$,@(O[12]),EXTENSION$
4680 PRINT (7)@(O[4]),ITEMDESC$(1,40),
4690 IF WONUM$<>FILL(7) THEN PRINT (7)@(O[7]),"WO: ",WONUM$,"-",WOSEQ$ ELSE PRINT (7)""
4700 LET L=L+2
4710 IF VPARTNUM$=FILL(20) THEN GOTO DROPSHIP
4720 IF L+1>L9 THEN GOSUB 5000
4730 PRINT (7)@(O[4]),"Vendor's Part Number ",VPARTNUM$
4740 LET L=L+1
4770 REM " --- Print drop ship info if applicable
4780 DROPSHIP: 
4790 IF DROPSHIP$<>"Y" OR AR$="N" THEN GOTO DONE_PRINTDETAIL
4800 DIM CUSTINFO$(321),DROPINFO$(173),CUSTADDR$(120),DROPADDR$(120)
4810 LET CUSTNAME$="Not On File",DROPNAME$="Not On File"
4820 FIND (ARM01_DEV,KEY=B0$(1,2)+B2$(11,6),DOM=4850)IOL=ARM01A
4830 LET CUSTNAME$=CUSTINFO$(1,30),CUSTADDR$=CUSTINFO$(31,72)+FILL(24)+CUSTINFO$(103,9)
4840 CALL "SYC.AA",CUSTADDR$,24,4,9,30
4850 FIND (ARM03_DEV,KEY=B0$(1,2)+B2$(11,6)+B2$(27,6),DOM=4880)IOL=ARM03A
4860 LET DROPNAME$=DROPINFO$(1,30),DROPADDR$=DROPINFO$(31,72)+FILL(24)+DROPINFO$(103,9)
4870 CALL "SYC.AA",DROPADDR$,24,4,9,30
4880 IF L+6>L9 THEN GOSUB 5000
4890 PRINT (7)@(O[4]),"Drop Ship Above Line To Customer",@(43),FNF$(B2$(11,CUSTLEN),CUSTOMASK$)," Order ",B2$(17,7)," ",B2$(24,3),@(81),"Ship To:",@(91),FNF$(B2$(27,CUSTLEN),CUSTOMASK$)
4900 PRINT (7)@(46),"Name",@(52),CUSTNAME$,@(91),DROPNAME$
4910 PRINT (7)@(43),"Address",@(52),CUSTADDR$(1,30),@(91),DROPADDR$(1,30)
4920 LET L=L+3
4930 IF CUSTADDR$(31,30)<>FILL(30) OR DROPADDR$(31,30)<>FILL(30) THEN PRINT (7)@(52),CUSTADDR$(31,30),@(91),DROPADDR$(31,30); LET L=L+1
4940 IF CUSTADDR$(61,30)<>FILL(30) OR DROPADDR$(61,30)<>FILL(30) THEN PRINT (7)@(52),CUSTADDR$(61,30),@(91),DROPADDR$(61,30); LET L=L+1
4950 IF CUSTADDR$(91,30)<>FILL(30) OR DROPADDR$(91,30)<>FILL(30) THEN PRINT (7)@(52),CUSTADDR$(91,30),@(91),DROPADDR$(91,30); LET L=L+1
4990 DONE_PRINTDETAIL: 
4995 RETURN 
5000 REM " --- Heading
5010 LET L=HEADINGS+1
5030 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5040 IF STATUS>0 THEN EXITTO 9900
5140 PRINT (7)@(O[0]),"PO Recpt",@(O[5]),"Date",@(O[8]+M5-7),"Conv",@(O[9]+M2-9),"Quantity",@(O[10]+M2-9),"Quantity",@(O[11]+M3-5),"Unit"
5150 PRINT (7)@(O[0]),"Date",@(O[1]),"Seq",@(O[2]),"Cd",@(O[3]),"Wh",@(O[4]),"Item",@(O[5]),"Required",@(O[6]),"Location",@(O[7]),"UM",@(O[8]+M5-7),"Factor",@(O[9]+M2-9),"Ordered",@(O[10]+M2-9),"Received",@(O[11]+M3-5),"Cost",@(O[12]+M1-10),"Extension"
5160 PRINT (7)""
5180 LET L=L+3
5190 RETURN 
5300 REM " --- Assign headings variables
5305 ASSIGNHEADS: 
5310 DIM TMPH3$(WIDTH),TMPH4$(WIDTH)
5320 IF VENDFROM$=FILL(6) THEN LET VENDF$="First" ELSE LET VENDF$=FNF$(VENDFROM$(1,VENDLEN),VENDOMASK$)
5330 IF VENDTHRU$=FILL(6) THEN LET VENDT$="Last" ELSE LET VENDT$=FNF$(VENDTHRU$(1,VENDLEN),VENDOMASK$)
5340 IF DATEFROM$="" THEN LET DATEF$="First" ELSE LET DATEF$=FNB6$(DATEFROM$)
5350 IF DATETHRU$="" THEN LET DATET$="Last" ELSE LET DATET$=FNB6$(DATETHRU$)
5360 LET MIDH3$=LEVELDESC$+" Sorted By "+SEQDESC$
5370 LET TMPH3$(1)="From Vendor: "+VENDF$,TMPH3$(FNC(MIDH3$,WIDTH))=MIDH3$
5380 LET TMPH3$(WIDTH-LEN(DATEF$)-18)="From Receipt Date: "+DATEF$
5390 LET TMPH4$(1)="  To Vendor: "+VENDT$
5400 LET TMPH4$(WIDTH-LEN(DATEF$)-18)="  To Receipt Date: "+DATET$
5410 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$
5420 LET HEADINGS$[2]=TMPH3$,HEADINGS$[3]=TMPH4$
5550 RETURN 
6000 REM " --- Test for Breaks
6005 TESTBREAKS: 
6010 IF A0$(3,6)=VENDOR$ THEN GOTO TESTPO
6020 IF PRINTVTOT$="Y" THEN GOSUB VENDTOTALS
6030 GOSUB NEWVENDOR
6070 TESTPO: 
6080 IF A0$(9,7)<>PONUM$ THEN GOSUB NEWPO
6090 RETURN 
6100 REM " --- New Vendor
6110 NEWVENDOR: 
6120 DIM C0$(8),C1$(195)
6130 LET VENDTOT=0,VENDNAME$="Not On File",VENDOR$=A0$(3,6)
6140 LET PRINTVTOT$="Y"
6150 FIND (APM01_DEV,KEY=N0$+VENDOR$,DOM=6170)IOL=APM01A
6160 LET VENDNAME$=C1$(1,30)
6170 IF L+2>L9 THEN GOSUB 5000
6180 PRINT (7)@(0),"Vendor ",FNF$(VENDOR$(1,VENDLEN),VENDOMASK$)," ",VENDNAME$
6200 LET L=L+1
6210 RETURN 
6300 REM " --- New PO
6310 NEWPO: 
6320 LET POTOT=0,PONUM$=A0$(9,7),RECEIVERNUM$=A0$(16,7)
6330 LET TERMSDESC$="Not On File",PADDRDESC$="",SHPWHSDESC$="Not On File"
6340 DIM D0$(26),R0$(10),R1$(160),X0$(160)
6350 FIND (APM10_DEV,KEY=N0$+"C"+A1$(38,2),DOM=6370)IOL=APM10C
6360 LET TERMSDESC$=D0$(6,20)
6370 FIND (APM05_DEV,KEY=N0$+VENDOR$+A1$(3,2),DOM=6390)IOL=APM05A
6380 LET PADDRDESC$=R1$(1,24)
6390 FIND (IVM10_DEV,KEY=N0$+"C"+A1$(1,2),DOM=6410)IOL=IVM10C
6400 LET SHPWHSDESC$=X0$(6,24)
6410 IF L+5>L9 THEN GOSUB 5000
6420 DIM DATEORD$(8)
6430 IF A1$(5,6)<>FILL(6) THEN LET DATEORD$=FNB6$(A1$(5,6))
6435 PRINT (7)""
6440 PRINT (7)@(0),"PO #: ",PONUM$,@(14),"Ordered ",DATEORD$,@(33),"Terms ",A1$(38,2)," ",TERMSDESC$,@(65),"Ship Via ",A1$(59,15),
6450 IF PADDRDESC$<>"" THEN PRINT (7)@(91),"Purchase From ",A1$(3,2)," ",PADDRDESC$ ELSE PRINT (7)""
6460 PRINT (7)@(0),"Rec#: ",RECEIVERNUM$,@(32),"Ack By ",A1$(74,20),@(67),"F.O.B. ",A1$(94,15),@(97),"Ship To ",A1$(1,2)," ",SHPWHSDESC$
6470 PRINT (7)""
6480 LET L=L+4
6490 RETURN 
6500 REM " --- Print Vendor total
6510 VENDTOTALS: 
6520 IF L+1>L9 THEN GOSUB 5000
6530 PRINT (7)@(O[12]-18-LEN(VENDOMASK$)),"Total For Vendor ",FNF$(VENDOR$(1,VENDLEN),VENDOMASK$),@(O[12]),VENDTOT:M1$
6550 LET L=L+1
6560 RETURN 
6600 REM " --- Print PO total
6610 POTOTALS: 
6620 IF L+1>L9 THEN GOSUB 5000
6630 PRINT (7)@(O[12]-24),"Total For PO # ",PONUM$,@(O[12]),POTOT:M1$
6650 LET L=L+1
6660 RETURN 
6900 REM " --- Calc extension for S, N and O types; init it for others
6905 CALC_EXTENSION: 
6920 IF POS(LINETYPE$="SNO")=0 THEN GOTO 6990
6930 LET QTY=QTYREC
6940 IF LINETYPE$="O" THEN LET QTY=1
6950 PRECISION 2
6960 LET EXTENSION=B[1]*QTY,EXTENSION$=STR(EXTENSION:M1$)
6970 PRECISION IVPRECISION
6990 RETURN 
8000 REM " --- Functions
8025 DEF FNB6$(Q$)=Q$(3,2)+"/"+Q$(5,2)+"/"+FNYY21_YY$(Q$(1,2))
8035 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
