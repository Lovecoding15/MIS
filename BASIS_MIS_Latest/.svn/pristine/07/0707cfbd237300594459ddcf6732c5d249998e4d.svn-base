0010 REM "IVC - Inventory Item Update (ATAMO Routine)"
0020 REM "Program IVC.UA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0041 REM "ACTION$    : Transaction Type (input)"
0042 REM "             BB       = Beginning Balance"
0043 REM "             BI/BO    = BOM Production Entry (BI=Issue/BO=Receipt)"
0044 REM "             IA/IC    = Inventory Transaction Adjustment/Commit"
0045 REM "             IR/II    = Inventory Transaction Receipt/Issue"
0046 REM "             PH       = Physical Inventory"
0047 REM "             PO/RC/PI = PO Entry/Receipt/Invoice"
0048 REM "             OE/OP    = OP Entry/Invoice"
0049 REM "             TI/TO/TA = Transfer In/Out/Tier Adjustment"
0050 REM "             WI/WO    = Work Orders (WI=Issue/WO=Receipt)"
0051 REM "             CO/UC/OO = Commit/Uncommit/Adjust On Order"
0052 REM "CHANNELS[n]: Channel Numbers (input)"
0053 REM "             [0] = SYS-01      [7] = IVM-07    [42] = IVT-02"
0054 REM "             [1] = IVM-01      [8] = IVM-08    [43] = IVT-03"
0055 REM "             [2] = IVM-02     [12] = IVM-12    [44] = IVT-04"
0056 REM "             [4] = IVM-04     [17] = IVM-17    [40] = IVW-04"
0057 REM "             [5] = IVM-05     [41] = IVT-01"
0058 REM "PARAMS[n]  : Numeric Parameters (input)"
0059 REM "             [0] = Total Periods"
0060 REM "PARAMS$[n] : String Parameters (input)"
0061 REM "             [0] = Terminal Date (YMD)"
0062 REM "             [1] = Operator ID"
0063 REM "             [2] = Inventory Parameter String (P2$)"
0064 REM "             [3] = Inventory Parameter String (P3$)"
0065 REM "             [4] = Inventory Parameter String (P4$)"
0066 REM "ITEMS$[n]  : Item Information (input)"
0067 REM "             [0] = Firm ID        [2] = Item Number"
0068 REM "             [1] = Warehouse ID   [3] = Lot/Serial Number"
0069 REM "REFS$[n]   : Reference Information (input)"
0070 REM "             [0] = Date (3 or 6)  [6] = Line Code (OP/PO)"
0071 REM "             [1] = Reference 1    [7] = GL Account Number"
0072 REM "             [2] = Reference 2    [8] = Transaction Comment"
0073 REM "             [3] = Reference 3    [9] = Finished Item (BI/WI/WO)"
0074 REM "             [4] = Reference 4   [10] = Lot/Serial Location"
0075 REM "             [5] = Sequence Nbr  [11] = Lot/Serial Comment"
0076 REM "REFS[n]    : Reference Information (input)"
0077 REM "             [0] = Quantity       [3] = Actual Lead Time"
0078 REM "             [1] = Unit Cost      [4] = Landed Cost"
0079 REM "             [2] = Unit Price     [5] = Physical Count"
0082 REM "STATUS     : Status Code (Returned)"
0083 REM 
0085 SETERR 9000
0087 SETESC 9000
0090 ENTER ACTION$,CHANNELS[ALL],PARAMS[ALL],PARAMS$[ALL],ITEMS$[ALL],REFS$[ALL],REFS[ALL],STATUS
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$(1),A5$,A6$(1),A[ALL]
0220 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0240 IVM04A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0250 IVM05A: IOLIST B0$(1),B1$(1),B2$(1),B[ALL]
0270 IVM07A: IOLIST B0$(1),B1$(1),B[ALL]
0280 IVM08A: IOLIST X0$(1)
0320 IVM12A: IOLIST B0$(1),B1$,B2$,B[ALL]
0330 IVM17A: IOLIST B0$(1),B1$,B2$,B[ALL]
0340 IVT01A: IOLIST B0$(1),B1$(1),B2$(1),B3$,B[ALL]
0350 IVT02A: IOLIST X0$(1)
0360 IVT03A: IOLIST X0$(1)
0370 IVT04A: IOLIST B0$(1),B1$(1),B2$(1),B3$,B[ALL]
0400 REM " --- Parameters"
0410 DIM P[5]
0420 LET P2$=PARAMS$[2],P3$=PARAMS$[3],P4$=PARAMS$[4]
0430 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P2$(5,1)),P[2]=NUM(P2$(7,2))
0440 LET LS=POS(P3$(17,1)="LS")>0,LF=POS(P3$(3,1)="LF")>0
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM WHSE$(2),ITEM$(20),LOTSER$(20)
0550 LET QTY=REFS[0],COST=REFS[1],N0$=ITEMS$[0],WHSE$(1)=ITEMS$[1]
0560 LET ITEM$(1)=ITEMS$[2],LOTSER$(1)=ITEMS$[3],STATUS=0,LAST=0
0570 LET TRANS$="BBBMBMIT  ITITPH    OPPOTITOWIWO        "
0600 REM " --- Channels"
0610 LET SYS01_DEV=CHANNELS[0],IVM01_DEV=CHANNELS[1],IVM02_DEV=CHANNELS[2]
0620 LET IVM04_DEV=CHANNELS[4],IVM05_DEV=CHANNELS[5],IVM07_DEV=CHANNELS[7]
0630 LET IVM08_DEV=CHANNELS[8],IVM12_DEV=CHANNELS[12],IVM17_DEV=CHANNELS[17]
0640 LET IVT01_DEV=CHANNELS[41],IVT02_DEV=CHANNELS[42],IVT03_DEV=CHANNELS[43]
0650 LET IVT04_DEV=CHANNELS[44]
0800 REM " --- Validate arguments"
0810 LET CODE=POS(ACTION$="BBBIBOIAICIIIRPHPOOEOPRCTITOWIWOCOUCTAOOPI",2)
0820 IF CODE=0 THEN GOTO 4900
0830 LET WHEN$=REFS$[0],CLOCK$=""
0840 IF LEN(WHEN$)=3 THEN LET YMD$=WHEN$
0850 IF LEN(WHEN$)=6 THEN LET YMD$=FND$(FNN$(WHEN$))
0860 IF POS(ACTION$="ICPOOECOUCTAOOPI",2) THEN GOTO 0900
0870 CALL "SYC.PB",N0$,SYS01_DEV,YMD$,PERIOD$,YEAR$
0880 IF PERIOD$="" THEN LET PERIOD$=P4$(1,2),YEAR$=P4$(3,2)
0890 LET CLOCK$=FNT$(CLOCK$)
0900 IF POS(ACTION$="IRRC",2) THEN LET LAST=1
0905 IF POS(ACTION$="BOWO",2) THEN LET LAST=2
0910 IF ACTION$="OP" THEN LET LAST=3
0915 IF POS(ACTION$="BIIIWI",2) THEN LET LAST=4
0920 IF POS(ACTION$="IAPH",2) THEN LET LAST=5
0925 IF ACTION$="TI" THEN LET LAST=6
0930 IF ACTION$="TO" THEN LET LAST=7
0940 IF ACTION$="OP" THEN IF QTY>0 THEN LET LAST=8
0950 LET ACTION=LAST
0960 IF LAST THEN LET LAST=(LAST-1)*3+1
1000 REM " --- Retrieve IVM-01 Item Master"
1010 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A6$(90),A[12]
1020 LET A0$(1)=N0$+ITEM$
1030 FIND (IVM01_DEV,KEY=A0$,DOM=4950)IOL=IVM01A
1040 IF LS THEN LET LS=A2$(19,2)="YY"
1100 REM " --- IVM-01 Item Master"
1110 IF LAST=0 THEN GOTO 1200
1120 LET A2$(LAST+28,3)=FNL$(A2$(LAST+28,3),YMD$)
1190 WRITE (IVM01_DEV,KEY=A0$)IOL=IVM01A
1200 REM " --- IVM-02 Warehouse"
1210 IF ACTION$="TA" THEN GOTO 1400
1220 DIM B0$(24),B1$(64),B[20]
1230 LET B0$(1)=A0$(1,2)+WHSE$+ITEM$
1240 FIND (IVM02_DEV,KEY=B0$,DOM=4950)IOL=IVM02A
1250 LET OFFSET=27,LASTPHYS=16,PHYSICAL=8,UNIT=11,AVG=12,REP=14,COMMIT=2
1260 GOSUB 6400
1270 IF ACTION THEN GOSUB 6500
1300 REM " --- Adjust remaining fields"
1310 LET LOCATION$=B1$(1,10)
1320 IF ACTION$="PI" THEN LET B[UNIT+4]=REFS[4]
1390 WRITE (IVM02_DEV,KEY=B0$)IOL=IVM02A
1400 REM " --- IVM-04 LIFO/FIFO"
1410 IF LF=0 THEN GOTO 1900
1420 IF POS(ACTION$="BBICPOOECOUCOOPI",2) THEN GOTO 1900
1430 DIM B0$(30),B1$(16),B[5],R$(16)
1440 LET B0$(1)=N0$+WHSE$+ITEM$,B0$(25)=YMD$,B2$=""
1450 LET R$(1,2)=ACTION$,R$(3,7)=REFS$[2],R$(10,3)=REFS$[5]
1460 IF POS(ACTION$="OPRC",2) THEN LET R$(3,7)=REFS$[3]
1480 IF QTY<0 THEN GOTO 1700
1490 READ (IVM04_DEV,KEY=B0$,DOM=1500)
1500 REM " --- For receipts, add to existing tier or create new one"
1510 LET K$=KEY(IVM04_DEV,END=1550)
1520 IF POS(B0$(1,27)=K$)<>1 THEN GOTO 1550
1530 READ (IVM04_DEV)IOL=IVM04A
1535 IF B[1]<>COST THEN GOTO 1500
1540 IF R$<>B1$ THEN GOTO 1500
1545 GOTO 1600
1550 REM " --- Create new tier"
1560 DIM B[5]
1570 LET B0$(28,3)=STR(NUM(B0$(28,3))+1:"000")
1580 LET B1$(1,2)=ACTION$,B1$(3,7)=REFS$[2],B1$(10,3)=REFS$[5]
1590 IF POS(ACTION$="OPRC",2) THEN LET B1$(3,7)=REFS$[3]
1600 REM " --- Update tier record"
1610 LET B[0]=B[0]+QTY,B[1]=COST
1620 IF B[0]<>0 THEN GOTO 1650
1630 REMOVE (IVM04_DEV,KEY=B0$,DOM=1900)
1640 GOTO 1900
1650 WRITE (IVM04_DEV,KEY=B0$)IOL=IVM04A
1690 GOTO 1900
1700 REM " --- For issues, decrement existing tier(s)"
1710 LET AMOUNT=ABS(QTY),X=POS(P3$(3,1)="FL"),B0$(25)="",AVG=0,NUMBER=0
1720 IF X=1 THEN READ (IVM04_DEV,KEY=B0$,DOM=1740)
1730 IF X=2 THEN READ (IVM04_DEV,KEY=B0$(1,24)+$FF$,DOM=1740)
1740 WHILE AMOUNT>0
1750 ON X GOTO 1880,1760,1780
1760 LET K$=KEY(IVM04_DEV,END=1880)
1765 IF POS(B0$(1,24)=K$)<>1 THEN GOTO 1880
1770 GOTO 1800
1780 LET K$=KEYP(IVM04_DEV,END=1880)
1785 IF POS(B0$(1,24)=K$)<>1 THEN GOTO 1880
1800 EXTRACT (IVM04_DEV,KEY=K$)IOL=IVM04A
1810 IF AMOUNT<=B[0] THEN GOTO 1850
1820 LET AMOUNT=AMOUNT-B[0],TOTAL=(AVG*NUMBER)+(B[0]*B[1])
1825 LET NUMBER=NUMBER+B[0],AVG=TOTAL/NUMBER,REFS[1]=AVG
1830 REMOVE (IVM04_DEV,KEY=B0$,DOM=1890)
1840 GOTO 1890
1850 LET B[0]=B[0]-AMOUNT,TOTAL=(AVG*NUMBER)+(AMOUNT*B[1])
1853 LET NUMBER=NUMBER+AMOUNT,AVG=TOTAL/NUMBER,REFS[1]=AVG
1855 IF B[0]=0 THEN GOTO 1870
1860 WRITE (IVM04_DEV,KEY=B0$)IOL=IVM04A
1865 GOTO 1880
1870 REMOVE (IVM04_DEV,KEY=B0$,DOM=1880)
1880 LET AMOUNT=0
1890 WEND
1900 REM " --- IVM-05 Vendor Information"
1910 IF ACTION$<>"RC" THEN GOTO 2000
1920 DIM B0$(28),B1$(32),B2$(20),B[8]
1930 LET B0$(1)=N0$+REFS$[1],B0$(9)=ITEM$,B1$(1)="S"+YMD$,B[8]=REFS[3]
1940 FIND (IVM05_DEV,KEY=B0$,DOM=1950)IOL=IVM05A
1950 LET B[6]=REFS[1],B[7]=REFS[3]
1990 WRITE (IVM05_DEV,KEY=B0$)IOL=IVM05A
2000 REM " --- IVM-12 Inventory Activity"
2010 IF POS(ACTION$="ICPOOECOUCTAOOPI",2) THEN GOTO 2200
2020 DIM B0$(28),B[12]
2030 LET B0$(1)=N0$+WHSE$+ITEM$+YEAR$+PERIOD$,B1$="",B2$="",AMOUNT=QTY
2040 IF POS(ACTION$="BIIIOPTOWI",2)>0 THEN LET AMOUNT=ABS(QTY)
2050 FIND (IVM12_DEV,KEY=B0$,DOM=2060)IOL=IVM12A
2060 IF ACTION=0 THEN IF FNP$(LOTSER$)="" THEN LET B[ACTION]=AMOUNT
2070 IF ACTION=0 THEN IF FNP$(LOTSER$)<>"" THEN LET B[ACTION]=B[ACTION]+AMOUNT
2080 IF ACTION>0 THEN LET B[ACTION]=B[ACTION]+AMOUNT
2090 WRITE (IVM12_DEV,KEY=B0$)IOL=IVM12A
2200 REM " --- IVT-04 Inventory Transactions"
2210 IF POS(ACTION$="ICPOOECOUCTAOOPI",2) THEN GOTO 3000
2215 DIM B0$(32),B1$(96),B2$(16),B[4],X$(96)
2220 LET B0$(1)=N0$+WHSE$+ITEM$+YMD$,X$(1,2)=TRANS$(CODE,2),X$(3,6)=REFS$[1]
2225 LET X$(9,7)=REFS$[2],X$(16,7)=REFS$[3],X$(23,2)=REFS$[4]
2230 LET X$(25,3)=REFS$[5],X$(28,1)=REFS$[6],X$(29,2)=A2$(4,2)
2235 IF POS(ACTION$="PORC") THEN LET X$(91,2)=REFS$[6]
2240 LET K$=KEYP(IVT04_DEV,END=2400)
2250 IF POS(B0$(1,27)=K$)<>1 THEN GOTO 2400
2260 READ (IVT04_DEV,KEY=K$,DOM=2400)IOL=IVT04A
2270 IF POS(X$=B1$)<>1 THEN GOTO 2400
2300 REM " --- Update existing IVT-04 record"
2320 LET B[0]=B[0]+QTY
2380 WRITE (IVT04_DEV,KEY=B0$)IOL=IVT04A
2390 GOTO 3000
2400 REM " --- Write new IVT-04 record"
2410 LET B0$(1)=N0$+WHSE$+ITEM$+YMD$,CHANNEL=IVT04_DEV,X=28
2420 GOSUB 6000
2490 WRITE (IVT04_DEV,KEY=B0$)IOL=IVT04A
3000 REM " --- IVM-07 Lot/Serial Number"
3010 IF LS=0 THEN GOTO 4000
3020 IF POS(ACTION$="BBOOPOTAPI",2) THEN GOTO 3600
3030 DIM B0$(44),B1$(96),B[8]
3040 LET B0$(1)=N0$+WHSE$+ITEM$+LOTSER$
3050 FIND (IVM07_DEV,KEY=B0$,DOM=3100)IOL=IVM07A
3090 GOTO 3500
3100 REM " --- Create IVM-07 Lot/Serial Master"
3110 IF POS(ACTION$="BOIAIRPHRCOPTIWO",2)=0 THEN GOTO 3600
3120 LET B1$(1,7)=REFS$[10],B1$(14,40)=REFS$[11],B[6]=COST
3130 IF P3$(8,1)="S" THEN LET B[5]=COST
3140 IF ACTION$="RC" THEN LET B1$(55,6)=REFS$[1]
3150 IF FNP$(B1$(1,7))="" THEN LET B1$(1,7)=LOCATION$
3160 IF FNP$(B1$(14,40))<>"" THEN GOTO 3400
3200 REM " --- Generate lot/serial comment"
3210 LET X$="Generated By "
3220 IF ACTION$="BO" THEN LET X$=X$+"Production Entry"
3230 IF ACTION$="IA" THEN LET X$=X$+"Inventory Adjustment"
3240 IF ACTION$="IR" THEN LET X$=X$+"Inventory Receipt"
3250 IF ACTION$="PH" THEN LET X$=X$+"Physical Inventory"
3260 IF ACTION$="RC" THEN LET X$="PO Number "+REFS$[2]+" - Line "+REFS$[5]
3265 IF ACTION$="OP" THEN LET X$="Sales Return"
3270 IF ACTION$="TI" THEN LET X$=X$+"Inventory Transfer"
3280 IF ACTION$="WO" THEN LET X$="Completed Work Order"
3290 LET B1$(14,40)=X$
3400 REM " --- Create IVM-08 Lot/Serial Xref"
3410 DIM X0$(44)
3420 LET X0$(1)=N0$+LOTSER$+WHSE$+ITEM$
3490 WRITE (IVM08_DEV,KEY=X0$)IOL=IVM08A
3500 REM " --- Update lot/serial master"
3510 LET OFFSET=63,LASTPHYS=61,COMMIT=1,PHYSICAL=2,UNIT=3,AVG=4,REP=6
3520 GOSUB 6400
3530 IF ACTION THEN GOSUB 6500
3580 IF B[0]=0 THEN LET B1$(54,1)="C"
3590 WRITE (IVM07_DEV,KEY=B0$)IOL=IVM07A
3600 REM " --- IVM-17 Lot/Serial Activity"
3610 IF POS(ACTION$="ICPHPOOEOOCOUCTAPI",2) THEN GOTO 3700
3620 DIM B0$(48),B[12]
3630 LET B0$(1)=N0$+WHSE$+ITEM$+LOTSER$+YEAR$+PERIOD$,B1$="",B2$="",AMOUNT=QTY
3640 IF POS(ACTION$="BIIIOPTOWI",2)>0 THEN LET AMOUNT=ABS(QTY)
3650 FIND (IVM17_DEV,KEY=B0$,DOM=3660)IOL=IVM17A
3660 IF ACTION=0 THEN LET B[ACTION]=AMOUNT
3670 IF ACTION>0 THEN LET B[ACTION]=B[ACTION]+AMOUNT
3690 WRITE (IVM17_DEV,KEY=B0$)IOL=IVM17A
3700 REM " --- IVT-01 Lot/Serial Transactions"
3710 IF POS(ACTION$="ICPOOECOUCTAOOPI",2) THEN GOTO 3800
3720 DIM B0$(52)
3730 LET B0$(1)=N0$+WHSE$+ITEM$+LOTSER$+YMD$,CHANNEL=IVT01_DEV,X=48
3740 GOSUB 6000
3750 WRITE (IVT01_DEV,KEY=B0$)IOL=IVT01A
3800 REM " --- IVT-02 Lot/Serial By Customer Xref"
3810 IF ACTION$<>"OP" THEN GOTO 3900
3850 GOSUB 6200
3890 WRITE (IVT02_DEV,KEY=X0$)IOL=IVT02A
3900 REM " --- IVT-03 Lot/Serial By Vendor Xref"
3910 IF POS(ACTION$="OPRC",2)=0 THEN GOTO 4000
3950 GOSUB 6200
3960 IF ACTION$="OP" THEN LET X0$(3,6)=VENDOR$
3990 WRITE (IVT03_DEV,KEY=X0$)IOL=IVT03A
4000 REM " --- All done"
4090 GOTO 9900
4900 REM " --- Argument errors"
4910 LET STATUS=917
4940 GOTO 9900
4950 REM " --- Missing record"
4960 LET STATUS=11
4990 GOTO 9900
6000 REM " --- Initialize IVT-01/IVT-04 Transaction History Record"
6010 DIM B1$(96),B2$(16),B[4]
6020 IF QTY=0 THEN IF ACTION$<>"BB" THEN GOTO 6190
6030 LET B1$(1,2)=TRANS$(CODE,2),B1$(3,6)=REFS$[1],B1$(9,7)=REFS$[2]
6040 LET B1$(16,7)=REFS$[3],B1$(23,2)=REFS$[4],B1$(25,3)=REFS$[5]
6050 LET B1$(28,1)=REFS$[6],B1$(29,2)=A2$(4,2),B1$(31,20)=REFS$[8]
6060 LET B1$(51,20)=REFS$[9],B1$(71,10)=REFS$[7],B1$(81,10)=LOCATION$
6065 IF POS(ACTION$="PORC") THEN LET B1$(91,2)=REFS$[6]
6070 LET B2$(1,3)=PARAMS$[1],B2$(4,3)=PARAMS$[0],B2$(7,3)=CLOCK$
6080 LET B2$(11,4)=FID(0),B[0]=QTY,B[1]=COST,B[2]=REFS[2]
6090 IF FNP$(REFS$[10])<>"" THEN LET B1$(81,10)=REFS$[10]
6100 REM " --- Find next available key"
6110 LET B0$(X)="00000"
6120 IF ACTION$="BB" THEN GOTO 6190
6130 READ (CHANNEL,KEY=B0$(1,X-1)+$FF$,DOM=6140)
6140 LET K$=KEYP(CHANNEL,END=6160)
6150 IF POS(B0$(1,X-1)=K$)=1 THEN LET B0$(X)=K$(X)
6160 LET B0$(X)=STR(NUM(B0$(X))+1:"00000")
6190 RETURN 
6200 REM " --- Initialize IVT-02/IVT-03 Transaction Xref Record"
6210 DIM X0$(61)
6220 LET X0$(1)=N0$+REFS$[1],X0$(9)=A2$(1,3),X0$(12)=LOTSER$
6230 LET X0$(32)=YMD$,X0$(35)=WHSE$+ITEM$,X0$(57)=B0$(47)
6290 RETURN 
6400 REM " --- Update IVM-02/IVM-07 committed, physical count and on order"
6410 IF POS(ACTION$="COICIIOEOPTOWI",2) THEN LET B[COMMIT]=B[COMMIT]+QTY
6420 IF POS(ACTION$="UC",2) THEN LET B[COMMIT]=B[COMMIT]-QTY
6430 IF ACTION$="PH" THEN LET B[PHYSICAL]=REFS[5]
6435 IF OFFSET=63 THEN GOTO 6490
6440 IF ACTION$="OO" THEN LET B[1]=B[1]+QTY
6450 IF ACTION$="PO" THEN LET B[1]=B[1]+QTY
6460 IF ACTION$="RC" THEN LET B[1]=B[1]-QTY
6490 RETURN 
6500 REM " --- IVM-02 Warehouse/IVM-07 Lot/Serial Number Updates"
6510 IF ACTION$="PH" THEN LET B1$(LASTPHYS,3)=YMD$,B1$(15,1)="N"
6520 IF LAST>0 THEN LET B1$(LAST+OFFSET,3)=FNL$(B1$(LAST+OFFSET,3),YMD$)
6600 REM " --- Recalculate average cost"
6610 LET AMOUNT=(B[0]*B[AVG])+(QTY*COST),NUMBER=B[0]+QTY,X=B[AVG]
6620 IF NUMBER>0 THEN LET B[AVG]=AMOUNT/NUMBER
6630 IF B[AVG]=0 THEN LET B[AVG]=X
6640 IF B[AVG]<0 THEN LET B[AVG]=COST
6650 IF B[0]<=0 THEN LET B[AVG]=COST
6700 REM " --- Set replacement cost"
6710 IF REFS[1]<>0 THEN LET B[REP]=REFS[1]
6800 REM " --- Set Last PO Cost"
6810 IF ACTION$="RC" THEN LET B[UNIT+5]=COST
6900 REM " --- Set unit cost and update quantity on hand/quantity committed"
6910 LET B[0]=B[0]+QTY,X=POS(P3$(8,1)="ASR")
6920 IF X>0 THEN LET B[UNIT]=B[UNIT+X]
6990 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8060 DEF FNN$(Q$)=Q$(3,4)+Q$(1,2)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8080 DEF FNT$(Q$)=DATE(0:"%Hz%mz")
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8300 REM " --- Multi-Line Functions"
8310 DEF FNL$(Q1$,Q2$)
8320 IF CVS(Q1$,2)="" THEN LET Q1$="ZZZ"
8330 IF CVS(Q2$,2)="" THEN LET Q2$="ZZZ"
8340 LET Q$=Q1$
8350 IF Q2$>Q1$ THEN LET Q$=Q2$
8360 IF Q$="ZZZ" THEN LET Q$="   "
8370 RETURN Q$
8380 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 LET STATUS=ERR
9220 IF STATUS=0 THEN LET STATUS=999
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to calling program"
9950 EXIT 
9999 END
