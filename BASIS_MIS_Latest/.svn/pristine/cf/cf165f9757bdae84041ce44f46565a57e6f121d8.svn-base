0010 REM "ARU - CASH RECEIPTS UPDATE"
0020 REM "Program ARU.AA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.4 - 15Dec97 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "23Sep96 Caj: MTD cash buckets (ARS-10C) weren't being updated (3220,3230,3235,3240,3280)
0032 REM "18Nov96 JWK: Ave Days to Pay calc- wrong Days-between-dates (2245)
0033 REM "24Jun97 WGH: On-Account invoices written incorrectly to ART-01 and ART-11 (290,330,530,1820,1870,1920-1930,2010,2080,2110,2140,2180-2190)"
0034 REM "09Sep97 WGH: Write new ARM-02 record if it is missing (3030-3040)"
0035 REM "26Aug98 KJS: Don't update Ave days to Pay if payment isn't positive (2232)"
0040 REM "Use ARW-14 (also used in OPR.ZA-Monthly Sales Reg) to track custs making pmts"
0045 seterr start1
0050 enter
0055 called=1;goto start2
0060 start1:
0070 BEGIN
0080 start2:
0085 SETESC 9000
0090 SETERR 9000
0095 USE ::OpenInvoice.src::OpenInvoice
0100 REM " --- Open/Lock Files"
0110 LET FILES=31
0112 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0114 LET FILES$[1]="ARE-01",FILES$[2]="ARE-11",FILES$[3]="ARE-21"
0116 LET FILES$[4]="ARE-31",FILES$[5]="ARM-01",FILES$[6]="ARM-02"
0118 LET FILES$[7]="ARM-06",FILES$[8]="ARM-10",FILES$[9]="ART-01"
0120 LET FILES$[10]="ART-11",FILES$[11]="ART-06",FILES$[12]="ART-16"
0122 LET FILES$[13]="ART-26",FILES$[14]="ARS-10",FILES$[15]="SYS-01"
0124 LET FILES$[16]="ARW-14",OPTIONS$[16]="CL",FILES$[17]="ART-03",FILES$[18]="SMC-01"
0126 LET FILES$[19]="SNM-01",FILES$[20]="ART-73",FILES$[21]="ART-83"
0128 LET FILES$[22]="CSM-01",files$[23]="SNM-01",files$[24]="SNT-03"
0130 let files$[25]="ARE-83"
0132 LET FILES$[28]="GLM-01",FILES$[29]="GLT-04",FILES$[30]="GLT-05",FILES$[31]="APM-12"
0134 LET OPTIONS$[1]="L",OPTIONS$[2]="L",OPTIONS$[3]="L",OPTIONS$[4]="L"
0136 CALL "SYC.DA",1,1,25,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0138 IF STATUS>0 THEN GOTO 9900
0140 LET ARE01_DEV=CHANNELS[1],ARE11_DEV=CHANNELS[2],ARE21_DEV=CHANNELS[3]
0142 LET ARE31_DEV=CHANNELS[4],ARM01_DEV=CHANNELS[5],ARM02_DEV=CHANNELS[6]
0144 LET ARM06_DEV=CHANNELS[7],ARM10_DEV=CHANNELS[8],ART01_DEV=CHANNELS[9]
0146 LET ART11_DEV=CHANNELS[10],ART06_DEV=CHANNELS[11],ART16_DEV=CHANNELS[12]
0148 LET ART26_DEV=CHANNELS[13],ARS10_DEV=CHANNELS[14],SYS01_DEV=CHANNELS[15]
0150 LET ARW14_DEV=CHANNELS[16],ART03_DEV=CHANNELS[17],SMC01_DEV=CHANNELS[18],SNM01_DEV=CHANNELS[19]
0152 LET ART73_DEV=CHANNELS[20],ART83_DEV=CHANNELS[21],CSM01_DEV=CHANNELS[22],snm01_dev1=channels[23]
0154 let snt03_dev=channels[24],are83_dev=channels[25]
0156 REM " --- IOLists
0158 ARE01A: IOLIST A0$,A[0]
0160 ARE11A: IOLIST W0$,W[ALL]
0162 ARE21A: IOLIST W0$,W[ALL]
0164 ARM01A: IOLIST *,H1$(1)
0166 ARM02A: IOLIST B0$,B1$,B[ALL]
0168 ARM06A: IOLIST D0$(1),D1$(1),D[ALL]
0170 ARM10C: IOLIST *,Z1$
0172 ARM10D: IOLIST *,Z0$
0174 ART01A: IOLIST C0$(1),C[ALL]
0176 ART06A: IOLIST S0$,A[0]
0178 ART16A: IOLIST S0$,W[ALL]
0180 ART26A: IOLIST S0$,W[ALL]
0182 ART11A: IOLIST C0$,C1$(1),C[ALL]
0184 APM12A: IOLIST X0$,X1$,X[ALL]
0186 ARS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0188 ARS01C: IOLIST X0$
0190 ARS10C: IOLIST X0$,X[ALL]
0192 ARW14: IOLIST ARW14$,ARW14AMT
0194 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0196 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0198 call "templates.pgm::ART03"
0200 call "templates.pgm::SMC01"
0202 call "templates.pgm::SNT03"
0204 call "templates.pgm::SNM01"
0206 call "templates.pgm::ART73"
0208 call "templates.pgm::ART83"
0210 call "templates.pgm::CSM01"
0214 call "templates.pgm::ARE83"
0218 call "templates.pgm::ARM02"
0220 call "templates.pgm::ARM10F"
0230 call "templates.pgm::ART01"
0240 call "ec_open::job_queue"
0250 call "ec_open::tmm01"
0260 call "ec_open::country"
0400 REM " --- Parameters
0405 DIM P[6],G[4],INFO$[20]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=no_param)IOL=SYS01T
0415 LET N0$=F0$(16,2),N1$=F4$,N2$="AR",N3$=F5$
0420 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=no_param)IOL=ARS01A
0425 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=no_param)IOL=GLS01A
0430 FOR X=0 TO 4
0435 LET G[X]=NUM(G2$(X*2+1,2),ERR=*next)
0440 NEXT X
0445 LET G[2]=FNYY_YEAR(G2$(5,2))
0450 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P2$(3,2))
0455 LET P[2]=NUM(P4$(1,2)),P[3]=FNYY_YEAR(P4$(3,2))
0490 CALL "SYC.VA",N2$,INFO$[ALL]
0495 LET GL$=INFO$[9]
0500 REM " --- Initializations"
0511 DIM D0$(24),D1$(24),D[21],ARW14$(30)
0530 DIM A[1],B[10],V[1],W[1],U[5],X[5]
0540 LET U0$=N0$,M0=LEN(M0$),ARW14AMT=0
0550 CALL "SYC.PA",SYS01_DEV,P[2],P[3],X$,G9$,STATUS
0600 REM " --- Other File Opens"
0610 IF GL$<>"Y" THEN LET P3$(14,1)="N";goto ptr_background
0625 CALL "SYC.DA",1,28,30,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0630 IF STATUS>0 THEN GOTO 9000
0635 LET GLM01_DEV=CHANNELS[28],GLT04_DEV=CHANNELS[29],GLT05_DEV=CHANNELS[30]
0640 IF P3$(14,1)<>"Y" THEN GOTO ptr_background
0655 CALL "SYC.DA",1,31,31,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0660 IF STATUS>0 THEN LET P3$(14,1)="N";goto ptr_background
0670 LET APM12_DEV=CHANNELS[31]
0700 REM " --- Background
0705 ptr_background:
0710 if called=0 then
0720   PRINT @(0,3),'CE',
0730   CALL "SYC.NB","Updating",M0+9,COLUMN
0800   REM " --- Options
0810   LET V4$="Are You Ready To Update The "+N3$
0820   CALL "SYC.YN",0,V4$,0,V$,V3
0830   IF V$<>"YES" THEN GOTO 9900
0850 fi
0940 REM " --- Disallow 'M'enu option in Error Routine
0950 LET EXIT_CTRL=1
1000 REM " --- Initial Read
1020 READ (ARE01_DEV,KEY=N0$,DOM=*next)
1100 REM " --- Main Read
1120 LET K0$=KEY(ARE01_DEV,END=finished)
1130 IF K0$(1,2)<>N0$ THEN GOTO finished
1180 READ (ARE01_DEV)IOL=ARE01A
1185 if called and a0$(25,1)<>"A" then goto 1100;rem 'Flag for Auto update
1190 LET A9$=A0$(15,3)
1200 GOSUB 6000
1210 LET T0=0,T1=0
1220 DIM U[5]
1230 IF P3$(14,1)="Y" THEN GOSUB 6200
1240 if called=0 then PRINT @(COLUMN,11),FNB$(A0$(6,3))," ",FNF$(A0$(9,P[0]),M0$),
1300 REM " --- Cash Receipt History - Heading
1330 DIM S0$(46)
1340 LET S0$(1)=A0$(1,5)+A0$(9,6)+A0$(6,3)+A0$(15)
1350 WRITE (ART06_DEV,KEY=S0$(1,25))IOL=ART06A
1400 REM " --- Retrieve customer"
1410 DIM H1$(30)
1420 LET H1$(1)="Customer Not On File"
1430 FIND (ARM01_DEV,KEY=N0$+A0$(9,6),DOM=2400)IOL=ARM01A
1600 REM " --- Invoice Detail
1610 READ (ARE11_DEV,KEY=K0$(1,24),DOM=*next)
1615 entry_detail:
1620 LET K11$=KEY(ARE11_DEV,END=gl_update)
1660 IF K11$(1,24)<>K0$(1,24) THEN GOTO gl_update
1680 READ (ARE11_DEV)IOL=ARE11A
1700 REM " --- Cash Receipt History - Detail
1720 LET X9=42,X8=32
1730 DIM S0$(X9)
1740 LET S0$(1)=W0$(1,5)+W0$(9,6)+W0$(6,3)+W0$(15)
1750 WRITE (ART16_DEV,KEY=S0$(1,X8))IOL=ART16A
1800 REM " --- AR
1820 DIM C0$(50),C[1],C1$(11)
1825 SAM_TOTAL_PAY=0
1830 LET C0$(1)=A0$(1,4)+A0$(9,6)+W0$(26,7)+"00",C0$(24,9)=A0$(6,3)+A0$(6,3)+A0$(6,3),C0$(33,1)="S",C[0]=(-W[0])-W[1],C1=0,C9$="  ",D2$="   "
1840 FIND (ART01_DEV,KEY=C0$(1,19),DOM=1880)IOL=ART01A
1850 LET D2$=C0$(24,3)
1860 LET C9$=C0$(20,2)
1870 GOTO 2000
1880 FIND (ARM02_DEV,KEY=C0$(1,2)+C0$(5,6)+C0$(3,2),DOM=1910)IOL=ARM02A
1890 LET C9$=B1$(8,2)
1900 LET C0$(20,2)=C9$
1910 WRITE (ART01_DEV,KEY=C0$(1,19))IOL=ART01A
1920 LET C1=1,C[0]=0,C[1]=0
1930 GOTO 2190
2000 REM " --- ART-11 Detail
2020 READ (ART11_DEV,KEY=C0$(1,17),DOM=*next)
2025 art11_loop:
2030 LET K$=KEY(ART11_DEV,END=2110)
2040 IF K$(1,17)<>C0$(1,17) THEN GOTO 2110
2050 READ (ART11_DEV)IOL=ART11A
2060 LET C1=NUM(C0$(18,2))
2080 IF C1$(1,1)=" " THEN GOTO 2180
2090 LET SAM_TOTAL_PAY=SAM_TOTAL_PAY+C[0]+C[1]
2100 GOTO art11_loop
2110 DIM C[1],C1$(11)
2120 LET C1=C1+1
2130 IF C1<=99 THEN GOTO 2180
2140 LET C0$=C0$(1,17)+"99"
2150 EXTRACT (ART11_DEV,KEY=C0$(1,19),DOM=*next)IOL=ART11A
2155 IF POS(C1$(1,1)=" C") THEN LET C1$(1,1)="C" ELSE LET C1$(1,1)="A"
2160 LET C1$(2)=A0$(6,3)+W0$(18,7)
2165 LET C[0]=C[0]-W[0],C[1]=C[1]-W[1]
2170 GOTO 2200
2180 LET C[0]=-W[0],C[1]=-W[1]
2190 LET C0$=C0$(1,17)+STR(C1:"00"),C1$(1,11)="C"+A0$(6,3)+W0$(18,7)
2200 WRITE (ART11_DEV,KEY=C0$(1,19))IOL=ART11A
2210 SAM_TOTAL_PAY=SAM_TOTAL_PAY+C[0]+C[1]
2220 chk_credit_hold=0
2230 FIND RECORD(ART03_DEV,KEY=C0$(1,17)+"000",DOM=UPDATE_CUST)ART03$
2240 if art03.total_sales+art03.tax_amount+sam_total_pay<>0 then goto update_cust
2250 gosub chk_art01
2260 IF POS("APPLY"=CVS(C1$(5,7),4)) OR POS("BAD"=CVS(C1$(5,7),4)) THEN GOTO UPDATE_CUST
2270 if cvs(art03.ar_po_number$,1+2+4)="RENTAL INV" or cvs(art03.ar_po_number$,1+2+4)="NFR RENEW" then
2280   gosub renew_rental 
2290 else 
2300   if POS("SAM RENEW"=CVS(ART03.AR_PO_NUMBER$,1+2+4)) or POS("DVK RENEW"=CVS(ART03.AR_PO_NUMBER$,1+2+4)) or POS("RNT RENEW"=CVS(ART03.AR_PO_NUMBER$,1+2+4)) then 
2310     gosub renew_sam
2320   endif
2330 endif
2340 UPDATE_CUST:
2350 REM " --- Update Customer Average Days to Pay
2360 REM "     D(6)=Avg Days to Pay
2370 REM "     D(7)=Total Number of Payments
2380 REM "     V0=Actual Days to Pay on this Invoice
2390 IF C0$(11,2)="OA" OR A[0]<=0 THEN GOTO dist_code
2400 DIM D0$(8),D1$(16),D[21]
2410 LET D0$=C0$(1,2)+C0$(5,6)
2420 LET V4$=FNYY_YY21$(FNM$(FNC$(D2$))),V5$=FNYY_YY21$(FNM$(FNC$(W0$(6,3)))),V0=0
2430 CALL "SYC.CA",V4$,V5$,V0
2440 EXTRACT (ARM06_DEV,KEY=D0$(1,8),DOM=*next)IOL=ARM06A;LET D1$(4,3)=W0$(6,3)
2460 IF D[7]=0 THEN LET D[6]=V0; GOTO 2480; REM "1st payment ever for cust"
2470 LET D[6]=(D[7]*D[6]+V0)/(D[7]+1)
2480 LET D[7]=D[7]+1
2490 PRECISION 0; LET D[6]=D[6]*1; PRECISION 2
2500 IF A0$(6,3)<=G9$ THEN LET X=10 ELSE LET X=16
2510 LET D[X]=(D[X]*D[X+1]+V0)/(D[X+1]+1),D[X+1]=D[X+1]+1
2520 IF A0$(6,3)>G9$ THEN GOTO write_arm06
2530 LET X=12,D[X]=(D[X]*D[X+1]+V0)/(D[X+1]+1),D[X+1]=D[X+1]+1
2540 write_arm06: WRITE (ARM06_DEV,KEY=D0$(1,8))IOL=ARM06A
2550 REM " --- Dist Code"
2555 dist_code:
2560 DIM Z0$(10*G[4])
2570 FIND (ARM10_DEV,KEY=N0$+"D"+C9$,DOM=*next)IOL=ARM10D;Z0$=Z0$(1,G[4])
2580 IF A0$(6,3)<=G9$ THEN LET U[0]=U[0]+W[0],U[1]=U[1]+W[1]
2590 IF A0$(6,3)>G9$ THEN LET U[3]=U[3]+W[0],U[4]=U[4]+W[1]
2600 LET T0=T0-W[0]-W[1],T1=T1-W[0]
2610 LET ACCOUNT$=Z0$,GLDATE$=A0$(6,3),MEMO$=H1$,AMOUNT=(-W[0])-W[1]
2620 LET REF1$=FNF$(A0$(9,P[0]),M0$),REF2$=W0$(18,7),REF3$=W0$(26,7)
2630 GOSUB GLPOST
2640 LET ACCOUNT$=Z1$,AMOUNT=W[0]
2650 GOSUB GLPOST
2660 LET ACCOUNT$=Z2$,AMOUNT=W[1]
2670 GOSUB GLPOST
2680 REM " --- Remove ARE-11 Detail
2690 REMOVE (ARE11_DEV,KEY=K11$)
2700 GOTO entry_detail
2710 REM " --- GL
2720 gl_update:
2730 READ (ARE21_DEV,KEY=K0$(1,24),DOM=*next)
2740 gl_loop:
2750 LET K21$=KEY(ARE21_DEV,END=upd_cust_info)
2760 IF K21$(1,24)<>K0$(1,24) THEN GOTO upd_cust_info
2770 READ (ARE21_DEV)IOL=ARE21A
2780 IF A0$(6,3)<=G9$ THEN LET U[2]=U[2]+W[0]
2790 IF A0$(6,3)>G9$ THEN LET U[5]=U[5]+W[0]
2800 LET ACCOUNT$=W0$(26,G[4]),GLDATE$=A0$(6,3),MEMO$=H1$,AMOUNT=W[0]
2810 LET REF1$=FNF$(A0$(9,P[0]),M0$),REF2$=W0$(18,7),REF3$=""
2820 GOSUB GLPOST
2830 LET ACCOUNT$=Z1$,AMOUNT=-W[0]
2840 GOSUB GLPOST
2850 REM " --- Cash Receipt History - GL Detail
2860 LET X9=45,X8=35
2870 DIM S0$(X9)
2880 LET S0$(1)=W0$(1,5)+W0$(9,6)+W0$(6,3)+W0$(15)
2890 WRITE (ART26_DEV,KEY=S0$(1,X8))IOL=ART26A
2900 REM " --- Remove ARE-21 Detail
2910 REMOVE (ARE21_DEV,KEY=K21$)
2920 GOTO gl_loop
3000 REM " --- Update Customer
3005 upd_cust_info:
3010 IF T0=0 THEN GOTO mtd_cash
3020 LET B0$=N0$+A0$(9,6)+A0$(3,2),customer_nbr$=a0$(9,6)
3030 DIM B1$(40),B[10]
3040 EXTRACT (ARM02_DEV,KEY=B0$,DOM=*next)IOL=ARM02A
3050 LET B[1]=B[1]+T0,B1$(17,3)=A0$(6,3)
3055 if chk_credit_hold or b1$(39,1)="Y" then gosub chk_cred_hold
3060 WRITE (ARM02_DEV,KEY=B0$)IOL=ARM02A
3070 REM " --- Add ARW-14 for Resellers in company 01
3080 IF B1$(34,1)<>"R" OR N0$<>"01" THEN GOTO mtd_cash
3090 LET ARW14$(1)=B0$(1,2)+B0$(9,2)+B0$(3,6)
3095 WRITE (ARW14_DEV,KEY=ARW14$)IOL=ARW14
3200 REM " --- Update MTD Cash
3205 mtd_cash:
3220 DIM X0$(3),X[6]
3230 LET X0$(1)=N0$+"C"
3240 EXTRACT (ARS10_DEV,KEY=X0$,DOM=*next)IOL=ARS10C
3250 FOR X=0 TO 5
3260 LET X[X]=X[X]+U[X]
3270 NEXT X
3280 WRITE (ARS10_DEV,KEY=X0$)IOL=ARS10C
3900 REM " --- Remove Heading
3920 REMOVE (ARE01_DEV,KEY=K0$)
3990 GOTO 1100
4000 REM " --- End
4002 finished:
4005 REM " --- Remove ARE-31 Detail
4010 READ (ARE31_DEV,KEY="",DOM=*next)
4015 are31_loop:
4020 LET K31$=KEY(ARE31_DEV,END=cont_finish)
4030 REMOVE (ARE31_DEV,KEY=K31$)
4040 GOTO are31_loop
4050 cont_finish:
4090 IF GL$="Y" THEN CALL "GLC.CA",STATUS
4100 CALL "SYC.BB",STATUS
4120 GOTO 9900
6000 REM " --- Trans Code
6040 DIM Z1$(2*G[4],"0")
6050 FIND (ARM10_DEV,KEY=N0$+"C"+A9$,DOM=6060)IOL=ARM10C
6060 LET Z2$=Z1$(G[4]+1,G[4]),Z1$=Z1$(1,G[4])
6090 RETURN
6200 REM " --- Bank Rec
6210 IF P3$(14,1)<>"Y" THEN GOTO 6290
6215 IF GL$<>"Y" THEN GOTO 6290
6220 DIM X1$(50),X[1]
6230 LET X0$=N0$+Z1$+"C"+FNYY_YY21$(FNM$(FNC$(A0$(6,3)))),X1$(1)="DO"+FNYY_YY21$(FNM$(FNC$(A0$(6,3)))),X1$(9,30)="Cash Receipts Register"
6250 FIND (APM12_DEV,KEY=X0$,DOM=6260)IOL=APM12A
6260 LET X[0]=X[0]+A[0]
6270 WRITE (APM12_DEV,KEY=X0$)IOL=APM12A
6290 RETURN
6900 REM " --- Standard G/L Posting Routine"
6910 GLPOST: 
6920 IF GL$<>"Y" THEN GOTO 6990
6930 LET UNITS=0
6950 CALL "GLC.AA",GLM01_DEV,GLT04_DEV,GLT05_DEV,ACCOUNT$,GLDATE$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8060 DEF FNM$(Q$)=Q$(5,2)+Q$(1,4)
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
8300 def fnlength(templ$,field_name$)
8310   dim dummy$:templ$
8320   length$ = fattr(dummy$,field_name$)
8330   length = dec(length$(10,2))
8340   return length
8350 fnend
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9805 no_param:
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 if called then exit
9909 rem ' link in the check for Canadian Exchange Rate update calculation
9910 run "calcCanadianExchRate.src"; rem ' RUN "SYS.AA"
9999 END
10000 RENEW_SAM:
10010 UPD_SERIAL=0,HOLD_CONTRACT$="",new_contracts$=""
10020 READ (ART73_DEV,KEY=C0$(1,17),DOM=*next)
10030 ART73_LOOP:
10040 READ RECORD(ART73_DEV,END=RENEW_DONE)ART73$
10050 IF ART73$(1,17)<>C0$(1,17) THEN GOTO RENEW_DONE
10060 EXTRACT RECORD(SMC01_DEV,KEY=ART73.CONTRACT$,DOM=ART73_LOOP)SMC01$
10070 SMC01$=FIELD(SMC01$)
10080 GOSUB GET_SERIAL_NBRS
10085 if serial_nbrs$="" then read(smc01_dev);goto art73_loop
10090 get_PROD_ID$=SERIAL_NBRS$(1,20)
10095 GOSUB UPDATE_SERIAL_SAM
10100 IF pos(smc01.contract$=HOLD_CONTRACT$,6) THEN READ(SMC01_DEV);GOTO ART73_LOOP
10110 EXPIRE_DT_YR$=STR(NUM(SMC01.ANNUAL_DT$(1,4))+1:"0000")
10115 expires=jul(num(smc01.annual_dt$(1,4)),num(smc01.annual_dt$(5,2)),num(smc01.annual_dt$(7,2)))
10120 today=jul(0,0,0)
10130 if expires-today>60 then read(smc01_dev);goto art73_loop
10160 SMC01.ANNUAL_DT$(1,4)=expire_dt_yr$
10170 smc01.expire_on_dt$=SMC01.ANNUAL_DT$ 
10180 SMC01.SAM_ACTIVE$="Y",smc01.invoiced_flag$=" "
10190 p0s=pos(smc01.contract$=new_contracts$,9)
10200 if p0s then new_contracts$=new_contracts$(1,p0s-1)+new_contracts$(p0s+9)
10210 HOLD_CONTRACT$=hold_contract$+SMC01.CONTRACT$
10220 WRITE RECORD(SMC01_DEV)SMC01$
10225 if POS("SAM RENEW"=CVS(ART03.AR_PO_NUMBER$,1+2+4)) <> 0 then gosub sam_email
10230 GOTO ART73_LOOP
10240 RENEW_DONE:
10250 gosub upd_new_sam
10290 RETURN
10500 sam_email:
10505 gosub language
10510 job_queue.firm_id$=smc01.firm_id$
10520 job_queue.customer_nbr$=smc01.customer_nbr$
10530 job_queue.e_mail$=smc01.e_mail$
10540 job_queue.job$="RNWSAM"+date(0:"%mz%sz")
10550 job_queue.available$=lang$+smc01.contract$
10560 writerecord(job_queue)job_queue$
10570 rem ' insert a wait to prevent overwrites of previous records (index is firm, customer, job)
10580 wait 2.5
10590 return
10800 language:
10810 lang$="EN"
10820 if smc01.firm_id$="01" then return
10830 readrecord(tmm01,key=smc01.firm_id$+smc01.customer_nbr$+"000000",dom=*next)tmm01$
10840 if smc01.firm_id$+smc01.customer_nbr$<>tmm01.firm_id$+tmm01.customer_nbr$ then return
10850 lang$=tmm01.lang_code$
10860 if len(cvs(lang$,3))=2 then return
10870 readrecord(country,key=tmm01.country_code$,dom=*next)country$
10880 if tmm01.country_code$=country.country_code$ then lang$=country.lang_code$
10890 if len(cvs(lang$,3))<>2 then lang$="EN"
10895 return
12400 GET_DURATION:
12410 if get_prod_id$="" then goto read_duration
12420 read record(snm01_dev,key=get_prod_id$)snm01$
12430 prod_id$=snm01.product$
12440 read_duration: READ RECORD(CSM01_DEV,KEY=SMC01.FIRM_ID$+PROD_ID$)CSM01$
12450 DURATION=CSM01.CTR_DURATION
12460 RETURN
12500 GET_SERIAL_NBRS:
12505 SERIAL_NBRS$=""
12510 READ (ART83_DEV,key=art73$(1,20),err=*next)
12520 ART83_LOOP:
12530 READ RECORD(ART83_DEV,END=ART83_DONE)ART83$
12540 IF ART83$(1,20)<>ART73$(1,20) THEN GOTO ART83_DONE
12550 SERIAL_NBRS$=SERIAL_NBRS$+ART83.SERIAL_NBR$
12560 GOTO ART83_LOOP
12570 ART83_DONE:
12580 RETURN
12600 UPDATE_SERIAL_SAM:
12610 IF SERIAL_NBRS$="" THEN GOTO UPDATE_SERIAL_DONE
12620 SERIAL_NUM$=SERIAL_NBRS$(1,20),SERIAL_NBRS$=SERIAL_NBRS$(21)
12630 EXTRACT RECORD(SNM01_DEV,KEY=SERIAL_NUM$)SNM01$
12640 SNM01$=FIELD(SNM01$)
12645 if snm01.active_flag$="N" then gosub check_new_sn
12650 SNM01.SAM_ACTIVE$="Y",SNM01.AVAIL_SUPPORT=5
12660 WRITE RECORD(SNM01_DEV)SNM01$
12670 GOTO UPDATE_SERIAL_SAM
12680 UPDATE_SERIAL_DONE:
12690 RETURN
12800 check_new_sn:
12810 read (snt03_dev,key=snm01.serial_nbr$,dom=*next)
12815 get_new_sn:
12820 read record(snt03_dev,end=done_new_sn)snt03$
12830 if snt03.serial_nbr_1$<>snm01.serial_nbr$ then goto done_new_sn
12835 if snt03.action$<>"A" then goto get_new_sn
12840 dim snm01n$:fattr(snm01$)
12850 extract record(snm01_dev1,key=snt03.serial_nbr_2$)snm01n$
12855 if cvs(snm01n.contract$,1+2)="" or snm01n.active_flag$="N" then read(snm01_dev1);goto done_new_sn
12860 if pos(snm01n.contract$=new_contracts$,9)=0 then new_contracts$=new_contracts$+snm01n.contract$+snm01n.product$
12870 snm01n.sam_active$="Y",snm01n.avail_support=5
12875 snm01n$=field(snm01n$)
12880 write record(snm01_dev1)snm01n$
12890 done_new_sn:
12900 return
13000 upd_new_sam:
13100 if new_contracts$="" then goto upd_new_done
13110 new_contract$=new_contracts$(1,6),prod_id$=new_contracts$(7,3),new_contracts$=new_contracts$(10)
13120 extract record(smc01_dev,key=new_contract$)smc01$
13130 smc01$=field(smc01$)
13140 IF SMC01.ANNUAL_DT$=SMC01.EXPIRE_ON_DT$ THEN get_prod_id$="";GOSUB GET_DURATION;START_JUL=JUL(NUM(SMC01.EXPIRE_ON_DT$(1,4)),NUM(SMC01.EXPIRE_ON_DT$(5,2)),NUM(SMC01.EXPIRE_ON_DT$(7,2))); EXPIRE_DT_YR$=DATE((DURATION+START_JUL):"%Yl"); SMC01.EXPIRE_ON_DT$(1,4)=EXPIRE_DT_YR$
13150 SMC01.ANNUAL_DT$(1,4)=STR(NUM(SMC01.ANNUAL_DT$(1,4))+1:"0000")
13155 if smc01.expire_on_dt$<SMC01.ANNUAL_DT$ then smc01.expire_on_dt$=SMC01.ANNUAL_DT$ 
13160 smc01.sam_active$="Y",smc01.invoiced_flag$=" "
13170 write record(smc01_dev)smc01$
13180 goto upd_new_sam
13190 upd_new_done:
14000 return
14500 chk_art01:
14510 extract record(art01_dev,key=c0$(1,17)+"00")art01$
14515 if art01.late_notice$="3" then chk_credit_hold=1
14520 art01.late_notice$=" "
14530 art01$=field(art01$)
14540 write record(art01_dev,key=art01$(1,19))art01$
14550 return
15000 renew_rental:
15005 reset_ctr=0,rtl_contract$=""
15010 READ (ART73_DEV,KEY=C0$(1,17),DOM=*next)
15020 rental_ART73_LOOP:
15030 READ RECORD(ART73_DEV,END=rental_DONE)ART73$
15040 IF ART73$(1,17)<>C0$(1,17) THEN GOTO rental_DONE
15050 EXTRACT RECORD(SMC01_DEV,KEY=ART73.CONTRACT$,DOM=rental_ART73_LOOP)SMC01$
15060 SMC01$=FIELD(SMC01$)
15070 if rtl_contract$=smc01.contract$ then
15080   read(smc01_dev)
15090   goto rental_art73_loop
15100 endif
15110 days=num(smc01.disb_method$),cycles=num(smc01.pay_cycles$)
15120 if days=0 then days=365
15130 orig_cycles=round(360/days,0),grace_days=90
15140 if cycles then cycles=cycles-1
15150 smc01.pay_cycles$=str(cycles:"00")
15160 expires=jul(num(smc01.expire_on_dt$(1,4)),num(smc01.expire_on_dt$(5,2)),num(smc01.expire_on_dt$(7,2)))
15170 if cycles<>0 then goto write_rental
15175 reset_ctr=1
15180 expires=expires+(orig_cycles*days)+grace_days
15200 smc01.expire_on_dt$=date(expires:"%Yl%Mz%Dz")
15205 smc01.invoiced_flag$=" "
15210 write_rental:
15220 rtl_contract$=smc01.contract$
15230 write record(smc01_dev)smc01$
15240 goto rental_art73_loop
15250 rental_done:
15260 return
15500 chk_cred_hold:
15505 declare OpenInvoice openInvoice!
15510 rem " --- Position open invoice file
15520 chk_credit_hold=0
15530 read(art01_dev,key=n0$+"  "+customer_nbr$,dom=*next)
15540 REM " --- Loop thru Open Invoice Header
15550 credit_invoice_loop:
15560 READ record(ART01_DEV,end=done_credit_chk)art01$
15570 if art01.customer_nbr$<>customer_nbr$ then
15580   goto done_credit_chk
15590 endif
15600 if art01.late_notice$<>"3" then goto credit_invoice_loop
15610 openInvoice! = new OpenInvoice(n0$, customer_nbr$, art01.ar_inv_nbr$, 1)
15620 if openInvoice!.isOpenInvoice() and !openInvoice!.isSAMRenew() then chk_credit_hold=1; goto done_credit_chk
15630 goto credit_invoice_loop
15640 done_credit_chk:
15650 if chk_credit_hold=0 then b1$(39,1)="N"
15660 return
