0010 REM "GLR - Beginning Balances Register (Report Overlay)"
0020 REM "Program GLR.HB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "21Oct99 WGH: Prevent update when Retained Earnings Account is missing (4310-4320,4800-4890)
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=4
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0130 LET FILES$[1]="GLM-01",FILES$[2]="GLM-02",FILES$[3]="GLW-03"
0140 LET FILES$[4]="SYS-01"
0160 CALL "SYC.DA",1,1,4,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0180 LET GLM01_DEV=CHANNELS[1],GLM02_DEV=CHANNELS[2],GLW03_DEV=CHANNELS[3]
0185 LET SYS01_DEV=CHANNELS[4]
0200 REM " --- IOLIST's"
0210 GLM01A: IOLIST A0$(1),A1$(1)
0220 GLM02A: IOLIST B0$(1),A[ALL],U[ALL]
0230 GLW03A: IOLIST C0$(1),C[ALL]
0260 GLS01A: IOLIST X$,P1$,P2$,P3$(1),P4$(1),M0$,M1$,M2$,M3$
0270 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$,F6$
0280 GLS01B: IOLIST X$,R1$(1)
0400 REM " --- Parameters"
0405 DIM P[4],P3$(325),P4$(32)
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="GL",N4$=F5$
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=GLS01A
0435 LET M0=LEN(M0$),M1=LEN(M1$),M2=LEN(M2$),MP=13,HEADINGS=2
0440 FOR X=0 TO 4
0445 LET P[X]=NUM(P2$(X*2+1,2),ERR=450)
0450 NEXT X
0455 LET P[2]=FNYY_YEAR(P2$(5,2))
0460 DIM R1$(P[4])
0470 FIND (SYS01_DEV,KEY=N0$+N2$+"01",DOM=9800)IOL=GLS01B
0480 LET PRIOR$=STR(1900+P[2]-1)
0490 IF P4$(6,1)="Y" THEN GOTO 4900
0500 REM " --- Initializations"
0510 DIM A0$(2+P[4]),A1$(40),B0$(3+P[4]),A[MP],U[MP],C0$(2+P[4]),C[1]
0515 DIM J1$(M1-1,"-"),J2$(M2-1,"-"),HEADINGS$[HEADINGS],O[4],T[1]
0550 LET H0=80,H=0,L9=59,L=L9+1,RECORD$="0"
0555 LET H1$=N1$,H2$=N4$,WHEN$=F0$(7,3),CLOCK$="",UNITHDR$=""
0560 LET HEADINGS$[0]=H1$,HEADINGS$[1]=H2$
0590 LET A0$(1)=N0$
0600 REM " --- Print positions"
0605 LET X=M0+1
0610 IF X<9 THEN LET X=9
0620 LET O[0]=0,O[1]=O[0]+X,O[4]=H0
0630 IF P4$(3,1)="Y" THEN LET O[4]=H0-M2,UNITHDR$="Units"
0640 LET O[3]=O[4]-M1-1,O[2]=O[3]-M1,W=O[2]-O[1]-1
0650 IF W>35 THEN LET W=35
0800 REM " --- Options"
0810 IF UPDATE$="Y" THEN GOTO 0860
0820 LET V4$="OK To Generate Beginning Balances Register"
0830 CALL "SYC.YN",1,V4$,1,V$,V3
0840 IF V$<>"Y" THEN GOTO 9900
0850 GOTO 0900
0860 LET V4$="OK To Close Fiscal "+PRIOR$
0870 CALL "SYC.YN",0,V4$,0,V$,V3
0880 IF V$<>"YES" THEN GOTO 9900
0900 REM " --- Position File"
0910 rem ' CALL "SYC.GA",7,1,"","",STATUS
0920 rem ' IF STATUS THEN GOTO 9900
0921 rem ' converted to docout 07/2014 kew - use the DocoutWrapper
0922 use ::DocoutWrapper.bbj::DocoutWrapper
0923 declare DocoutWrapper report!
0924 xUserName$ = stbl("SYSTEMUID"), xPassword$ = stbl("SYSTEMPWD")

0926 docname$ = "_BeginningBalance"
0927 if n0$ = "01" then docname$ = "BAS" + docname$ else docname$ = "BSE" + docname$

0929 report! = new DocoutWrapper(n0$, "BegBalReport", docname$, xUserName$, xPassword$)

0931 gosub setOutputAction
0932 gosub addColumns
0933 gosub addHeadings

0935 CALL "SYC.NB","Printing",M0,COLUMN

0940 CALL "SYC.FA",GLW03_DEV
0990 READ (GLM01_DEV,KEY=A0$,DOM=1000)
1000 REM " --- Top Of Loop"
1010 LET K$=KEY(GLM01_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 READ (GLM01_DEV,END=4000)IOL=GLM01A
1040 PRINT @(COLUMN,11),FNF$(A0$(3,P[3]),M0$)
1100 REM " --- Retrieve GLM-02 record"
1110 DIM B0$(3+P[4]),A[MP],U[MP]
1120 LET B0$(1)=A0$,B0$(LEN(B0$))=RECORD$
1130 FIND (GLM02_DEV,KEY=B0$,DOM=3900)IOL=GLM02A
1200 REM " --- Calculate beginning balance"
1210 LET AMOUNT=A[0],UNITS=U[0]
1220 FOR X=1 TO P[0]
1230 LET AMOUNT=AMOUNT+A[X],UNITS=UNITS+U[X]
1240 NEXT X
2000 REM " --- Update GLW-04"
2020 DIM C0$(2+P[4]),C[1]
2030 LET C0$(1)=N0$+A0$(3),C[0]=AMOUNT,C[1]=UNITS
2040 IF POS(A1$(36,1)="ALC")=0 THEN GOTO 2200
2050 IF A0$(3)=R1$ THEN GOTO 2200
2090 WRITE (GLW03_DEV,KEY=C0$)IOL=GLW03A
2100 REM " --- Print detail line"
2110 LET DEBITS$="",CREDITS$="",UNITS$=""
2120 IF P3$(4,1)="Y" THEN LET UNITS$=STR(UNITS:M2$)
2130 IF AMOUNT>0 THEN LET DEBITS$=STR(AMOUNT:M1$)
2140 IF AMOUNT<0 THEN LET CREDITS$=STR(-AMOUNT:M1$)
2150 IF L+1>L9 THEN GOSUB 5000
2160 rem ' PRINT (7)@(O[0]),FNF$(A0$(3,P[3]),M0$),@(O[1]),A1$(1,W),@(O[2]),DEBITS$,@(O[3]),CREDITS$,@(O[4]),UNITS$
2161 if debits$ <> "" then debits$ = debits$ + $00$ + "R"
2162 if credits$ <> "" then credits$ = credits$ + $00$ + "R"
2163 dim row$:rowTemplate$; row.column01$ = FNF$(A0$(3,P[3]),M0$), row.column02$ = A1$(1,W), row.column03$ = DEBITS$, row.column04$ = CREDITS$
2164 report!.addRow(row$)
2170 LET L=L+1
2190 GOTO 3900
2200 REM " --- Accumulate totals"
2210 LET T[0]=T[0]+C[0],T[1]=T[1]+C[1]
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4010 DIM J$(H0,"-")
4020 LET X$=" Retained Earnings ",J$(FNC(X$,H0),LEN(X$))=X$
4030 LET A0$(1)=N0$+R1$,A1$(1)="(Account Not Found)"
4040 FIND (GLM01_DEV,KEY=A0$,DOM=4050)IOL=GLM01A
4050 LET DEBITS$="",CREDITS$="",UNITS$="",UNITS=0,AMOUNT=T[0]
4060 IF P3$(4,1)="Y" THEN LET UNITS$=STR(T[1]:M2$),UNITS=T[1]
4070 IF T[0]>=0 THEN LET DEBITS$=STR(T[0]:M1$)
4080 IF T[0]<0 THEN LET CREDITS$=STR(-T[0]:M1$)
4100 REM 
4110 IF L+3>L9 THEN GOSUB 5000
4120 rem ' PRINT (7)""
4121 report!.addBlankRow()
4130 rem ' PRINT (7)J$
4131 dim row$:rowTemplate$; row.column01$ = fill(20,"-"), row.column02$ = X$ + fill(30,"-")
4132 report!.addRow(row$)
4140 rem ' PRINT (7)@(O[0]),FNF$(A0$(3,P[3]),M0$),@(O[1]),A1$(1,W),@(O[2]),DEBITS$,@(O[3]),CREDITS$,@(O[4]),UNITS$
4141 if debits$ <> "" then debits$ = debits$ + $00$ + "R"
4142 if credits$ <> "" then credits$ = credits$ + $00$ + "R"
4143 dim row$:rowTemplate$; row.column01$ = FNF$(A0$(3,P[3]),M0$), row.column02$ = A1$(1,W), row.column03$ = DEBITS$, row.column04$ = CREDITS$ 
4144 report!.addRow(row$)
4200 REM " --- Update retained earnings"
4210 DIM C0$(2+P[4]),C[1]
4220 LET C0$(1)=N0$+A0$(3),C[0]=AMOUNT,C[1]=UNITS
4290 WRITE (GLW03_DEV,KEY=C0$)IOL=GLW03A
4300 REM " --- Run update overlay"
4310 rem ' CLOSE (7,ERR=4320)
4315 report!.renderReport()
4320 IF POS("(Account Not Found)"=A1$)=1 THEN GOTO 4800
4390 RUN "GLU.KA"
4800 REM " --- Missing Retained Earnings Account"
4810 DIM MESSAGE$[3]
4820 LET MESSAGE$[0]="The Retained Earnings account is missing! The year cannot be"
4830 LET MESSAGE$[1]="closed without it! Use the Chart Of Accounts Breaks task under"
4840 LET MESSAGE$[2]="GL Parameter Maintenance to enter a valid Retained Earnings"
4850 LET MESSAGE$[3]="Account number.     (<Enter>=Continue)"
4860 CALL "SYC.XA",1,MESSAGE$[ALL],3,22,-1,V$,V3
4890 GOTO 9900
4900 REM " --- Fiscal year already closed"
4910 DIM MESSAGE$[1]
4920 LET MESSAGE$[0]="Fiscal "+PRIOR$+" Has Already Been Closed (<Enter>=Continue):"
4950 CALL "SYC.XA",1,MESSAGE$[ALL],0,22,-1,V$,V3
4990 GOTO 9900
5000 REM " --- Report heading"
5010 LET L=HEADINGS+1
5020 rem ' CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,H,H0,WHEN$,CLOCK$,STATUS
5030 rem ' IF STATUS>0 THEN EXITTO 9900
5050 rem ' PRINT (7)@(O[0]),"Account",@(O[1]),"Description",@(O[2]+M1-6),"Debits",@(O[3]+M1-7),"Credits",@(O[4]),UNITHDR$
5060 rem ' PRINT (7)""
5070 LET L=L+2
5090 RETURN
8000 REM " --- Functions"
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 REM " --- Return To Menu"
9950 RUN "SYS.AA"
9999 END
10100 setOutputAction:
10110 rem ' indicates individual out put fields may contain special formatting
10120 report!.setOutputAction("FORMAT")
10130 return
10200 addColumns:
10210 rem ' add columns to the Report
10220 report!.addColumn("Account","C",10,0,"","L","")
10230 report!.addColumn("Description","C",40,0,"","L","")
10240 report!.addColumn("Debits","C",14,0,"","R","")
10250 report!.addColumn("Credits","C",14,0,"","R","")
10260 columnCount = report!.getColumnCount()
10270 rowTemplate$ = report!.getRowTemplate()
10280 dim row$:rowTemplate$
10290 return
10400 addHeadings:
10410 report!.addHeading(N1$)
10420 report!.addHeading(N4$)
10430 return
