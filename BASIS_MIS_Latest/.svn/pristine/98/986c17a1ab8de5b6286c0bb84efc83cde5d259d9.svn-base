0010 REM "OPU - Commit & Release Future Orders"
0020 REM "Program OPU.EA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0060 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files "
0110 LET FILES=11
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0130 LET FILES$[1]="ARE-03",FILES$[2]="ARE-04",FILES$[3]="ARE-13"
0135 LET FILES$[4]="ARM-02",FILES$[5]="ARM-10",FILES$[6]="ARM-14"
0140 LET FILES$[7]="IVM-01",FILES$[8]="IVM-02",FILES$[9]="SYS-01"
0150 CALL "SYC.DA",1,1,9,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0155 IF STATUS>0 THEN GOTO 9900
0160 LET ARE03_DEV=CHANNELS[1],ARE04_DEV=CHANNELS[2],ARE13_DEV=CHANNELS[3]
0170 LET ARM02_DEV=CHANNELS[4],ARM10_DEV=CHANNELS[5],ARM14_DEV=CHANNELS[6]
0180 LET IVM01_DEV=CHANNELS[7],IVM02_DEV=CHANNELS[8],SYS01_DEV=CHANNELS[9]
0200 REM " --- IOLists"
0210 ARE03A: IOLIST A0$(1),A[ALL]
0220 ARE04A: IOLIST ARE04_0$
0230 ARE13A: IOLIST W0$,W1$(1),W[ALL]
0240 ARE23A: IOLIST B0$,B1$,B2$,B[ALL]
0250 ARM02A: IOLIST C0$,C1$(1),C[ALL]
0260 ARM10A: IOLIST X4$
0270 ARM10E: IOLIST X0$
0280 ARM14C: IOLIST ARM14_0$
0290 ARM14D: IOLIST ARM14_0$
0300 IVM01A: IOLIST *,*,X2$
0360 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0370 ARS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0380 ARS01C: IOLIST C9$(1)
0390 IVS01A: IOLIST *,*,I2$,I3$,I4$,*,I6$
0400 REM " --- Parameters"
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="AR",N4$=F5$,LS$="N"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=ARS01A
0435 DIM C9$(55)
0440 FIND (SYS01_DEV,KEY=N0$+N2$+"01",DOM=9800)IOL=ARS01C
0445 LET C9$(35,1)="N"
0450 FIND (SYS01_DEV,KEY=N0$+"IV"+"00",DOM=9800)IOL=IVS01A
0460 DIM P[1],I[2]
0470 LET P[0]=NUM(P2$(1,2)),I[2]=NUM(I2$(5,1))
0480 IF POS(I3$(17,1)="LS") THEN LET LS$="Y"
0500 REM " --- Initialize Data"
0510 PRECISION I[2]
0520 DIM A0$(117),A[10],B[2],C1$(64),C[10],W1$(64),W[14]
0530 LET LAST$=P3$(89,3)
0540 CALL "SYC.CA",F0$(7,3),NEXT$,NUM(P3$(86,3))
0550 DIM IV_FILES[44],IV_INFO$[3],IV_INFO[0],IV_PARAMS$[4],IV_REFS$[11],IV_REFS[5]
0560 LET IV_FILES[0]=SYS01_DEV,IV_FILES[1]=IVM01_DEV,IV_FILES[2]=IVM02_DEV
0570 LET IV_INFO$[0]=N0$
0580 LET IV_PARAMS$[0]=F0$(7,3),IV_PARAMS$[1]=F0$(4,3),IV_PARAMS$[2]=I2$,IV_PARAMS$[3]=I3$,IV_PARAMS$[4]=I4$
0600 REM " --- Additional File Opens"
0610 IF LS$<>"Y" THEN GOTO 0700
0620 LET FILES$[10]="ARE-23",FILES$[11]="IVM-07"
0630 CALL "SYC.DA",1,10,11,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0635 IF STATUS>0 THEN GOTO 9900
0640 LET ARE23_DEV=CHANNELS[10],IVM07_DEV=CHANNELS[11]
0650 LET IV_FILES[7]=IVM07_DEV
0700 REM " --- Background"
0720 FOR X=4 TO 14 STEP 2
0725 CALL "SYC.WC",1,0,80,0,0,X,0
0727 NEXT X
0730 PRINT 'SB',@(19,3),"Last Committed Date: ",@(4,5),"Commit Inventory Scheduled Through: ",@(29,7),"Searching:",@(30,9),"Updating:",'SF',@(0,22),'CL',
1000 REM " --- Enter Options Here"
1010 PRINT @(40,3),FNB$(LAST$),@(40,5),FNB$(NEXT$)
1020 LET V0$="D",V1$="C",V2$=NEXT$,V4$="Commit All Orders Scheduled for Shipment Through This Date",V0=3,V1=40,V2=5
1040 GOSUB 7000
1060 IF V3=4 THEN GOTO 9900
1070 LET NEXT$=V$
1900 GOTO 4000
2000 REM " --- Verify Committed Here"
2020 PRINT @(40,7),'CL',
2030 READ (ARE03_DEV,KEY=N0$+"  ",DOM=2040)
2100 REM " --- Main Read"
2110 LET K$=KEY(ARE03_DEV,END=3000)
2120 IF POS(N0$=K$)<>1 THEN GOTO 3000
2130 READ (ARE03_DEV,KEY=K$)IOL=ARE03A
2140 PRINT @(40,7),FNF$(A0$(5,P[0]),M0$)," ",A0$(11,7),
2150 IF A0$(21,1)="P" THEN GOTO 2990
2160 IF A0$(22,1)="I" THEN GOTO 2990
2170 IF A0$(69,1)<>"N" THEN GOTO 2990
2180 LET NEW$="NO",A0$(69,1)="Y"; REM "Lock it while processing
2190 WRITE (ARE03_DEV,KEY=K$)IOL=ARE03A
2200 REM " --- Process Lines Here"
2205 READ (ARE13_DEV,KEY=A0$(1,17),DOM=2210)
2210 LET K1$=KEY(ARE13_DEV,END=2800)
2220 IF POS(A0$(1,17)=K1$)<>1 THEN GOTO 2800
2230 READ (ARE13_DEV,KEY=K1$)IOL=ARE13A
2240 IF W1$(44,1)="Y" THEN GOTO 2500
2250 IF W1$(41,3)>NEXT$ THEN GOTO 2500
2260 FIND (ARM10_DEV,KEY=N0$+"E"+W0$(21,1),DOM=2500)IOL=ARM10E
2280 PRINT @(40,9),FNF$(W0$(5,P[0]),M0$)," ",W0$(11,7)," ",W0$(18,3),
2285 IF POS(X0$(25,1)="NOM")<>0 THEN GOTO 2400
2290 IF X0$(27,1)="Y" THEN GOTO 2400
2300 REM " --- Serialized/Lotted Items"
2305 LET LS_NBR$="",QNTY=W[4]
2310 IF LS$<>"Y" THEN GOTO 2350
2315 READ (ARE23_DEV,KEY=W0$(1,20),DOM=2320)
2320 LET ARE23_K$=KEY(ARE23_DEV,END=2400)
2325 IF POS(W0$(1,20)=ARE23_K$)<>1 THEN GOTO 2400
2330 READ (ARE23_DEV)IOL=ARE23A
2340 LET LS_NBR$=B1$,QNTY=B[1]
2350 REM " --- Commit Inventory"
2360 LET IV_INFO$[1]=W0$(31,2),IV_INFO$[2]=W0$(33,20),IV_INFO$[3]=LS_NBR$
2370 LET IV_REFS[0]=QNTY
2380 CALL "IVC.UA","OE",IV_FILES[ALL],IV_INFO[ALL],IV_PARAMS$[ALL],IV_INFO$[ALL],IV_REFS$[ALL],IV_REFS[ALL],IV_STATUS
2390 IF LS$="Y" THEN GOTO 2320
2400 REM " --- Reset Order Amounts"
2410 LET W1$(44,2)="YN",W[4]=W[2],X6=W[6],X7=W[7]
2420 PRECISION 2
2430 IF X0$(25,1)="O" AND W[6]=0 AND W[1]<>0 THEN LET W[6]=W[1],W[1]=0
2440 IF POS(X0$(25,1)="MO")=0 THEN LET W[6]=W[1]*W[4]
2450 GOSUB 6000
2460 LET A[4]=A[4]+W[7]-X7,A[6]=A[6]+W[6]-X6
2470 PRECISION I[2]
2480 WRITE (ARE13_DEV,KEY=K1$)IOL=ARE13A
2490 LET NEW$="YES"; REM "Changed one. Generate pick ticket."
2500 GOTO 2210
2800 REM " --- End of Order Here"
2805 IF NEW$<>"YES" THEN GOTO 2900
2810 LET A0$(68,1)="N"
2815 IF C9$(7,1)<>"Y" THEN GOTO 2875
2820 LET CREDIT$="1"; REM "Initialize Credit Okay
2830 READ (ARM02_DEV,KEY=N0$+A0$(5,6)+A0$(3,2),DOM=2850)IOL=ARM02A
2840 CALL "OPC.CA",ARE03_DEV,ARM02_DEV,N0$,A0$(5,6),C9$,CREDIT$,I6$,0
2850 IF CREDIT$<>"1" THEN GOTO 2890; REM "Credit Not Okay
2860 READ (ARM10_DEV,KEY=N0$+"A"+A0$(62,2),DOM=2875)IOL=ARM10A
2870 IF X4$(27,1)="Y" THEN GOTO 2890
2875 LET ARE04_0$=N0$+"O"+A0$(3,15)
2880 WRITE (ARE04_DEV,KEY=ARE04_0$)IOL=ARE04A
2885 GOTO 2900
2890 LET A0$(101,1)="C"
2895 GOSUB 6100
2900 REM " --- Unlock it here"
2910 LET A0$(69,1)="N"
2920 WRITE (ARE03_DEV,KEY=A0$(1,20))IOL=ARE03A
2940 IF T9$="END" THEN RETURN 
2995 GOTO 2100
3000 REM " --- End of Job here"
3010 LET T9$="END"; GOSUB 2800
3020 EXTRACT (SYS01_DEV,KEY=N0$+N2$+"00")IOL=ARS01A
3030 LET P3$(89,3)=NEXT$
3040 WRITE (SYS01_DEV,KEY=P0$)IOL=ARS01A
3100 GOTO 9900
4000 REM " --- Correct?"
4020 LET V0$="S",V1$="CE",V2$="",V3$="",V4$="Is The Above Information Correct (Y/N)?",V0=1,V1=FNV(V4$),V2=22
4030 GOSUB 7000
4035 IF V3=4 THEN GOTO 9900
4040 IF V$="N" THEN GOTO 1000
4050 IF V$<>"Y" THEN GOTO 4000
4090 LET EXIT_CTRL=1
4100 GOTO 2000
6000 REM " --- Check If Taxable"
6010 LET W[7]=0
6020 IF X0$(26,1)="N" THEN GOTO 6090
6030 READ (IVM01_DEV,KEY=N0$+W0$(33,20),DOM=6090)IOL=IVM01A
6040 IF POS(X0$(25,1)="MNO")=0 THEN IF X2$(8,1)="N" THEN GOTO 6090
6050 LET W[7]=W[6]
6090 RETURN 
6100 REM " --- Update Credit Manager Tickler File"
6110 READ (ARM14_DEV,KEY=N0$+"C"+A0$(5,6),DOM=6120)
6120 LET K8$=KEY(ARM14_DEV,END=6170)
6130 READ (ARM14_DEV,KEY=K8$)
6140 IF K8$(1,9)<>N0$+"C"+A0$(5,6) THEN GOTO 6170
6150 IF K8$(16,7)<>A0$(11,7) THEN GOTO 6120
6155 IF K8$(10,6)=FNYY_YY21$(FNM$(FNC$(A0$(77,3)))) THEN GOTO 6190
6160 REMOVE (ARM14_DEV,KEY=K8$,DOM=6165)
6165 REMOVE (ARM14_DEV,KEY=N0$+"D"+K8$(10,6)+K8$(4,6)+K8$(16,7),DOM=6170)
6170 LET ARM14_0$=N0$+"C"+A0$(5,6)+FNYY_YY21$(FNM$(FNC$(A0$(77,3))))+A0$(11,7)
6175 WRITE (ARM14_DEV,KEY=ARM14_0$)IOL=ARM14C
6180 LET ARM14_0$=N0$+"D"+FNYY_YY21$(FNM$(FNC$(A0$(77,3))))+A0$(5,13)
6185 WRITE (ARM14_DEV,KEY=ARM14_0$)IOL=ARM14D
6190 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8060 DEF FNM$(Q$)=Q$(5,2)+Q$(1,4)
8080 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
