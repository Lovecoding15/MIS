0010 REM "POR - Purchase Order Receipt Register (Backorder Fill Report)"
0020 REM "Program POR.DD"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0200 REM " --- IOLIST's"
0210 ARE03A: IOLIST S0$(1),S[ALL]
0220 ARM01A: IOLIST B0$(1),B1$(1)
0230 IVM01A: IOLIST C0$(1),C1$(1)
0240 IVM02A: IOLIST D0$(1),D1$(1),D2$,D[ALL]
0250 POW03A: IOLIST R0$(1),R[ALL]
0310 ARE13A: IOLIST L0$(1),L1$(1),L2$(1),L[ALL]
0320 IVM10C: IOLIST X0$(1)
0330 ARM10E: IOLIST Z0$(1)
0500 REM " --- Initializations"
0505 PRECISION I[1]
0510 DIM DESCRIPTION$(I[3]+I[4]+I[5]),S0$(118),S[10]
0520 DIM FILES[3],ITEM$[2],WHSE$[2],Z0$(32)
0550 LET NUMBER=0,M2$=I7$,L=L9+1,SUBHEAD$="",T0$="",T1$="",P8=LEN(P8$)
0560 LET DONE=0,FILES[2]=IVM02_DEV,FILES[3]=IVM03_DEV,P8=MAX(P8,8)
0570 LET X1$=" This Warehouse ",X2$=" Other Warehouses "
0580 LET HEADINGS$[2]="Suggested Backorder Fill Report"
0600 REM " --- Print positions"
0610 CALL "SYC.RM",M2$,M2,10,10
0620 LET O[0]=0,O[1]=P8+1,O[13]=WIDTH-M2,O[12]=O[13]-M2,O[11]=O[12]-M2
0630 LET O[10]=O[11]-M2,O[9]=O[10]-M2,O[8]=O[9]-M2,O[7]=O[8]-M2,O[6]=O[7]-M2
0640 LET O[5]=O[6]-9,O[4]=O[5]-9,O[3]=O[4]-12,O[2]=O[3]-11,X=3*M2
0650 DIM H1$(X,"-"),H2$(X,"-")
0660 LET P=INT((X-LEN(X1$))/2),H1$(P,LEN(X1$))=X1$
0670 LET P=INT((X-LEN(X2$))/2),H2$(P,LEN(X2$))=X2$
0800 REM " --- Order Processing in use?"
0810 IF OP$<>"Y" THEN GOTO 4500
0900 REM " --- Position files"
0910 PRINT @(40,5),HEADINGS$[2],'CL',@(COLUMN,11),FILL(BW),
0990 READ (POW03_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Get next record"
1010 LET K$=KEY(POW03_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 READ (POW03_DEV)IOL=POW03A
1040 PRINT @(COLUMN,11),K$(3,2)," ",K$(5,I[0]),
1900 REM " --- Position ARE-07 Orders by Item"
1990 READ (ARE07_DEV,KEY=R0$,DOM=2000)
2000 REM " --- Read next ARE-07 record"
2010 LET K$=KEY(ARE07_DEV,END=3000)
2020 IF POS(R0$=K$)<>1 THEN GOTO 3000
2030 READ (ARE07_DEV)
2040 LET S0$(1)=N0$+K$(25,2)+K$(37)+K$(27,7)+"000"
2050 LET L0$(1)=N0$+K$(25,2)+K$(37)+K$(27,10)
2060 FIND (ARE03_DEV,KEY=S0$(1,20),DOM=2900)IOL=ARE03A
2070 IF S0$(23,1)<>"B" THEN GOTO 2900
2080 FIND (ARE13_DEV,KEY=L0$(1,20),DOM=2900)IOL=ARE13A
2100 REM " --- Drop shipment?"
2110 IF N0$+"E"+L1$(21,1)=Z0$(1,4) THEN GOTO 2150
2120 LET Z0$(1,4)=N0$+"E"+L1$(21,1)
2130 FIND (ARM10_DEV,KEY=Z0$(1,4),DOM=2900)IOL=ARM10E
2150 IF Z0$(27,1)="Y" THEN GOTO 2900
2200 REM " --- Level breaks?"
2210 IF K$(3,2)<>T0$ THEN GOSUB 6000
2220 IF K$(5,I[0])<>T1$ THEN GOSUB 6200
2230 IF SUBHEAD$<>"" THEN GOSUB 5400
2400 REM " --- Read customer"
2410 LET B0$(1)=N0$+S0$(5,6),B1$(1)=NF$
2420 FIND (ARM01_DEV,KEY=B0$,DOM=2500)IOL=ARM01A
2430 LET SHIPDATE$=L1$(41,3)
2440 IF FNP$(SHIPDATE$)="" THEN LET SHIPDATE$=S0$(27,3)
2450 IF FNP$(SHIPDATE$)<>"" THEN LET SHIPDATE$=FNB$(SHIPDATE$)
2500 REM " --- Print detail line"
2510 IF L+2>L9 THEN GOSUB 5000
2520 PRINT (7)@(O[0]),FNF$(B0$(3,CUSTLEN),P8$)," ",B1$(1,30)
2530 PRINT (7)@(O[2]),L0$(11,7),"-",L0$(18,3),@(O[3]),S0$(49,10),@(O[4]),FNB$(S0$(77,3)),@(O[5]),SHIPDATE$,@(O[6]),L[2]:M2$,@(O[7]),L[3]:M2$
2540 LET L=L+2,NUMBER=NUMBER+1
2550 LET TOTALS[0]=TOTALS[0]+L[2],TOTALS[1]=TOTALS[1]+L[3]
2900 REM " --- Loop back for next item/order record"
2990 GOTO 2000
3900 REM " --- Loop back for next receipt record"
3990 GOTO 1000
4000 REM " --- All done"
4010 IF NUMBER=0 THEN GOTO 4500
4020 LET DONE=1
4030 GOSUB 6200
4500 REM " --- Close files before proceeding to update"
4510 CLOSE (POW03_DEV,ERR=4520)
4520 CLOSE (POW04_DEV,ERR=4530)
4530 CLOSE (POW05_DEV,ERR=4540)
4540 CLOSE (POW08_DEV,ERR=4550)
4550 CLOSE (POW09_DEV,ERR=4560)
4560 CLOSE (ARE03_DEV,ERR=4570)
4570 CLOSE (ARE07_DEV,ERR=4580)
4580 CLOSE (ARE13_DEV,ERR=4590)
4590 CLOSE (IVM10_DEV,ERR=4600)
4900 REM " --- Run next overlay"
4910 LET UPDATE$="POU.DA"
4920 IF GL$<>"Y" THEN RUN UPDATE$,ERR=9900
4930 PRINT @(40,5),"General Ledger Summary",'CL',
4990 RUN "GLR.XA"
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+3
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS THEN EXITTO 9900
5040 PRINT (7)@(O[3]),"Customer",@(O[4]+2),"Order",@(O[5]),"Scheduled",@(O[6]+M2-6),"Order",@(O[7]+M2-7),"Back-",@(O[8]),H1$,@(O[11]),H2$
5050 PRINT (7)@(O[0]),"Customer",@(O[1]),"Sales Order",@(O[3]),"PO Number",@(O[4]+2),"Date",@(O[5]),"Ship Date",@(O[6]+M2-6),"Total",@(O[7]+M2-8),"Ordered",@(O[8]+M2-8),"On Hand",@(O[9]+M2-10),"Committed",@(O[10]+M2-10),"Available",@(O[11]+M2-8),"On Hand",@(O[12]+M2-10),"Committed",@(O[13]+M2-10),"Available"
5090 RETURN 
5400 REM " --- Subheading"
5410 IF L+4>L9 THEN GOSUB 5000
5420 PRINT (7)""
5430 PRINT (7)SUBHEAD$
5440 PRINT (7)""
5450 LET L=L+3,SUBHEAD$=""
5490 RETURN 
6000 REM " --- Warehouse break"
6010 GOSUB 6200
6020 LET T0$=K$(3,2),X0$(1)=N0$+"C"+T0$+NF$
6030 FIND (IVM10_DEV,KEY=X0$(1,5),DOM=6040)IOL=IVM10C
6040 LET HEADINGS$[2]="Suggested Backorder Fill Report For Warehouse "
6050 LET HEADINGS$[2]=HEADINGS$[2]+T0$+" "+FNP$(X0$(6,24)),L=L9+1
6090 RETURN 
6200 REM " --- Item break"
6210 IF T1$="" THEN GOTO 6300
6220 IF L+2>L9 THEN GOSUB 5000
6230 PRINT (7)""
6240 PRINT (7)@(O[6]-(16+I[0])),"Totals For Item ",T1$,@(O[6]),TOTALS[0]:M2$,@(O[7]),TOTALS[1]:M2$,@(O[8]),TOTALS[2]:M2$,@(O[9]),TOTALS[3]:M2$,@(O[10]),TOTALS[4]:M2$,@(O[11]),TOTALS[5]:M2$,@(O[12]),TOTALS[6]:M2$,@(O[13]),TOTALS[7]:M2$
6250 LET L=L+2
6300 IF DONE THEN GOTO 6390
6310 DIM CURWHSE[20],ALLWHSE[20],TOTALS[7]
6320 LET T1$=K$(5,I[0]),C0$(1)=N0$+T1$,C1$(1)=NF$
6330 FIND (IVM01_DEV,KEY=C0$,DOM=6340)IOL=IVM01A
6340 LET SUBHEAD$="Item "+T1$+" "+FNITEM$(C1$,I[3],I[4],I[5])
6350 LET ITEM$[0]=N0$,ITEM$[1]=K$(3,2),ITEM$[2]=K$(5,20)
6360 CALL "IVC.WA","",FILES[ALL],ITEM$[ALL],WHSE$[ALL],CURWHSE[ALL],X,STATUS
6370 CALL "IVC.WA","A",FILES[ALL],ITEM$[ALL],WHSE$[ALL],ALLWHSE[ALL],X,STATUS
6375 LET TOTALS[2]=CURWHSE[0],TOTALS[3]=CURWHSE[2]
6380 LET TOTALS[5]=ALLWHSE[0]-CURWHSE[0],TOTALS[6]=ALLWHSE[2]-CURWHSE[2]
6385 LET TOTALS[4]=TOTALS[2]-TOTALS[3],TOTALS[7]=TOTALS[5]-TOTALS[6]
6390 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
