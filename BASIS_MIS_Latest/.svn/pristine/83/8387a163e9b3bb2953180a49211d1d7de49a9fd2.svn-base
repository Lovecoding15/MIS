0010 REM "OPE - Invoice Entry/Heading"
0020 REM "Program OPE.CB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.4 - 15Dec97 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "15Jul96 WGH: Don't change lot/serial quantities when drop ship or quote line items deleted (4635)"
0032 REM "23Oct96 WGH: Display in ribbon the Salesperson, Territory and Tax Codes entered for a NEW Ship-To (3585)"
0033 REM "13Nov96 WGH: Lot/Serial status not updated when order deleted (4265,4640,4660)"
0034 REM "20Nov96 WGH: Voids need ARE-04 record to be removed in Sales Register Update (6560,6575)"
0035 REM "17Apr97 WGH: Don't overwrite previously entered Discount when invoice is recalled (1310,1530,1630)"
0036 REM "23Apr97 WGH: When invoice deleted and order retained, zero ARE-03 tax, freight and discount amounts (4450)"
0037 REM "13May97 JWK: Writes short ARM-03 records (510)"
0038 REM "14May97 WGH: Write ARE-43 cross-reference for historical invoices (1790)"
0039 REM "25Sep97 JWK: <F2> in Ship-To can cause error 1 (2810,2820)"
0040 REM "MAS * DCF * WA# 205"
0045 REM 
0050 REM "S$=General Flag String"
0055 REM "No changes to invoice: delete, change order & re-invoice (teh 8/00)
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists"
0210 ARE03A: IOLIST A0$(1),A[ALL]
0215 ARE04A: IOLIST X$
0220 ARE13A: IOLIST W0$(1),W1$(1),W[ALL]
0230 ARE23A: IOLIST T0$,T1$(1),T2$,T[ALL]
0240 ARE33A: IOLIST MAN_D0$,MAN_D1$(1)
0245 ARE43A: IOLIST ARE43_K$
0250 ARM01A: IOLIST B0$,B1$
0260 ARM02A: IOLIST C0$,C1$,C[ALL]
0270 ARM03A: IOLIST D0$(1),D1$(1)
0280 ARM05A: IOLIST X0$,X1$
0290 ARM10B: IOLIST TAX$(1)
0300 ARM10E: IOLIST Y0$
0310 ARM10F: IOLIST SLS$(1)
0320 ARM10H: IOLIST TER$(1)
0330 ARS10N: IOLIST N$,N[ALL]
0340 ART03A1: IOLIST A0$(1),A[ALL]
0350 ART03A2: IOLIST X0$,X[ALL]
0360 ART33A: IOLIST MAN_D0$,MAN_D1$(1)
0370 ART43A: IOLIST ART43_K$
0380 ART53A: IOLIST ART53_K$
0390 IVM07A: IOLIST H0$,H1$,H[ALL]
0500 REM " --- Init Date"
0510 DIM C[10],D0$(14),D1$(190),MAN_D1$(143),W0$(52),W1$(64),W[14]
0600 REM " --- Process Flow Control"
0602 REM "O0=0 on Initiation from OPE.CA
0604 REM "   0 on Initiation from OPE.DB
0606 REM "   1 on Next Invoice from OPE.CE
0608 REM "   1 on NO Temporary/New Customer from OPE.DG
0610 REM "   2 on Temporary/New Customer from OPE.DG
0612 REM "   3 on <F2> back from OPE.CC
0614 REM "   4 on DELETE from OPE.CD
0616 REM "   4 on DELETE from OPE.CE
0618 REM "   5 on Convert Order from OPE.DD
0640 ON O0 GOTO 0650,0700,NEXT_ORDER,2000,4200,1600,0650
0650 REM " --- Initialize ARE-03"
0660 READ (ARE03_DEV,KEY=A0$(1,2),DOM=0700)
0700 REM " --- Background"
0720 PRINT 'SB',@(3,1),"OPE.CA Invoice Entry  ",@(40),R2$(15,2),
0730 IF P3$(15,1)="Y" AND R2$(27,2)<>"  " THEN PRINT "/",R2$(27,2),
0750 CALL "OPC.PR",N0$,A0$,ARM09_DEV,0; REM "Clear ribbon
0790 PRINT 'SF',
0900 REM " --- Initialize For Next Customer"
0910 LET O0=0
0915 LET ORDER$=""; REM "WA:200
0920 DIM S$(12,"0")
0930 IF P3$(15,1)="Y" THEN LET S$(2,1)="1"
0940 LET CREDIT_LMT=0
0950 LET A0$(5)=""
0955 LET SERVER$=""; REM "WA:200
0960 PRINT 'CF',@(0,13),'CE',
0970 CALL "SYC.WC",1,0,80,0,0,8,0
0990 PRINT 'SF',
0995 GOTO 14000; REM "WA:200
1000 REM " --- Customer"
1005 LET ORDER$="",V2$=""
1010 REM LET V2$="",V2$=KEY(ARE03_DEV,END=1040)
1020 REM IF V2$(1,2)<>A0$(1,2) THEN LET V2$=""
1030 REM IF V2$<>"" THEN LET V2$=V2$(5,P[0])
1040 REM LET V0$="M",V1$="KCE",V3$=M0$,V4$="<F1>=Order Entry  <F2>=Create New Customer  <F3>=Lookup",V0=6,V1=10,V2=3
1041 LET V0$="M",V1$="KCE^",V3$=M0$,V4$="<F2>=Create New Customer  <F3>=Lookup",V0=6,V1=10,V2=3; REM WA# 205
1045 IF S$(2,1)="1" THEN LET V4$=V4$+"  C=Cash Sale"
1050 GOSUB 7000
1060 IF V3=4 THEN GOTO 9900
1070 IF V3=3 THEN CALL "SYC.LC",V$
1080 IF V3=2 THEN LET O0$="OPE.CB"; RUN "OPE.DG"
1090 REM IF V3=1 THEN RUN "OPE.DB"; REM WA# 205
1100 IF S$(2,1)="1" AND FNP$(V$)="C" THEN LET V$=P3$(16,6)
1110 IF NUM(V$,ERR=1120)=0 THEN GOTO 0650
1120 LET A0$(5,6)=V$
1130 PRINT @(10,3),FNF$(A0$(5,P[0]),M0$); REM "WA:200
1140 IF S$(2,1)="1" AND A0$(5,6)=P3$(16,6) THEN LET S$(1,3)="111",A0$(99,1)="Y"
1150 REM " --- Get Customer Data"
1160 FIND (ARM01_DEV,KEY=N0$+A0$(5,6),DOM=0900)IOL=ARM01A
1170 FIND (ARM02_DEV,KEY=N0$+A0$(5,6)+"  ",DOM=0900)IOL=ARM02A
1180 LET BALANCE=C[0]+C[1]+C[2]+C[3]+C[4]+C[5],A0$(82,4)=C1$(24,4)
1200 REM " --- Display Customer Data"
1210 GOSUB DISPLAY_ADDRESS
1220 IF A0$(99,1)="Y" THEN GOTO 1290
1230 GOSUB DISPLAY_AGING
1240 IF C9$(7,1)<>"Y" OR C9$(35,1)<>"A" THEN GOTO 1290
1250 CALL "OPC.CA",ARE03_DEV,ARM02_DEV,N0$,A0$(5,6),C9$,S$,M1$,1; REM "Display Credit Management Status
1290 CALL "SYC.CM","B",N0$,A0$(5,6),P3$(24,2),P3$(26,2),ARM05_DEV,50,9,1,13; REM "Display Comments
1300 REM " --- Initialize For Next Order"
1305 NEXT_ORDER: 
1310 LET S$(4)=FILL(12,"0"),NEWOLD$="NO",HIST_INV$="",OLDDISCCODE$="",OLDSALESTOTAL=0,O0=0
1320 PRINT @(0,6),FILL(3),@(59,3),FILL(3),@(73,3),FILL(7),; REM "Clear previous B/O, Taken By and Invoice Number
1330 GOSUB CLEAR_SHIPTO
1340 CALL "SYC.WC",1,0,80,0,0,8,0
1350 IF CREDIT_LMT THEN PRINT @(77-M1-23,8),"[*Credit Limit*]",
1360 CALL "OPC.PR",N0$,A0$,ARM09_DEV,0; REM "Clear ribbon
1400 REM " --- Order Number"
1402 IF ORDER$<>"" THEN GOTO 1500
1405 LET V4$="<Enter>=Next Order #  <F1>=New #"
1410 IF C9$(7,1)="Y" AND C9$(35,1)="R" THEN LET V4$=V4$+"  <F2>=Credit Check"
1415 LET V0$="Z",V1$="KC",V2$="",V3$="",V4$=V4$+"  <F3>=Lookup  <F4>=Customer",V0=7,V1=29,V2=3
1420 GOSUB 7000
1430 ON V3 GOTO 1480,1800,1440,1460,1450
1440 IF C9$(7,1)="Y" AND C9$(35,1)="R" THEN CALL "OPC.CA",ARE03_DEV,ARM02_DEV,N0$,A0$(5,6),C9$,S$,M1$,1; GOTO NEXT_ORDER; REM "Display Credit Management Status
1450 IF S$(12,1)="1" THEN GOSUB DELETE_TMP_CUST
1455 READ (ARE03_DEV,KEY=A0$(1,10)+$FF$,DOM=0900); REM "Back for next customer
1460 LET V$=A0$(5,6),V5$="I"
1465 CALL "SYC.LO",V$,V5$
1470 IF V$="" THEN GOTO NEXT_ORDER
1475 IF POS("I"=V5$)=1 THEN GOTO 1700
1480 IF NUM(V$,ERR=NEXT_ORDER)=0 THEN GOSUB 6600
1490 LET A0$(11,7)=V$,A0$(18,3)="000"
1495 FIND (ARE03_DEV,KEY=A0$(1,20),DOM=NEXT_ORDER)IOL=ARE03A
1500 REM " --- Display Order Data"
1505 PRINT @(V1,V2),A0$(11,7),
1510 IF A0$(21,1)="V" THEN GOTO NEXT_ORDER
1515 IF A0$(21,1)="P" THEN GOSUB NO_QUOTES; GOTO 14000
1520 IF A0$(23,1)="B" THEN PRINT @(0,6),"B/O",
1525 IF A0$(101,1)="C" THEN PRINT @(77-M1-23,8),"[*Credit Hold**]",
1530 LET S$(7,1)="1",OLDSHIPTO$=A0$(102,6),OLDDISCCODE$=A0$(64,2)
1535 GOSUB DISPLAY_SHIPTO
1540 PRINT 'SB',@(77-M1-7,8),"Total: ",'SF',A[6]:M1$,
1550 REM " --- Correct Order?"
1560 CALL "SYC.YN",1,"Is This The Correct Order",2,V$,V3
1570 IF V$="N" THEN LET ORDER$=""; GOTO 14000; REM "WA:200
1580 GOSUB CHECK_LOCK_FLAG; IF LOCKED THEN GOTO NEXT_ORDER
1600 REM " --- Convert Order To Invoice"
1610 GOSUB CHECK_PRINT_FLAG; IF LOCKED THEN GOTO NEXT_ORDER
1620 IF A0$(22,1)<>"O" THEN GOTO MAKE_INVOICE; REM "Already Invoice
1630 LET A0$(22,1)="I",A0$(24,3)=F0$(7,3),A0$(68,1)="N",NEWOLD$="YES",S$(7,1)="1",OLDDISCCODE$="",OLDSALESTOTAL=0
1640 LET NEXT_NMBR=3; GOSUB 6000; REM "Get Next Invoice Number
1650 CALL "OPC.PR",N0$,A0$,ARM09_DEV,2; REM "Display ribbon data
1690 GOTO MAKE_INVOICE
1700 REM " --- Historical Invoice"
1705 LET A0$(11,7)=V$,A0$(18,3)="000",HIST_INV$=A0$(11,7)
1710 FIND (ART03_DEV,KEY=A0$(1,20),DOM=NEXT_ORDER)IOL=ART03A1
1715 PRINT @(73,3),A0$(42,7),
1720 LET V0$="S",V1$="C^",V2$="",V3$="DC",V4$="Duplicate Or Credit This Invoice (D=Duplicate/C=Credit Memo)?",V0=1,V1=FNV(V4$),V2=22
1725 GOSUB 7000
1730 IF V3=4 THEN GOTO NEXT_ORDER
1740 IF V$="C" THEN LET CREDIT=-1 ELSE LET CREDIT=1
1750 LET A0$(21,3)="SI",A0$(24,3)=F0$(7,3),A0$(27,3)=F0$(7,3),A0$(68,1)="N",A0$(77,3)=F0$(7,3),S$(7,1)="0",NEWOLD$="YES"
1760 LET NEXT_NMBR=2; GOSUB 6000; REM "Get Next Order Number 
1765 LET NEXT_NMBR=3; GOSUB 6000; REM "Get Next Invoice Number
1770 READ (ART33_DEV,KEY=N0$+A0$(5,6)+HIST_INV$,DOM=1790)IOL=ART33A; REM "Manual Ship-To
1775 LET MAN_D0$=N0$+A0$(5,13)
1780 WRITE (ARE33_DEV,KEY=MAN_D0$)IOL=ARE33A
1790 GOTO 1880
1800 REM " --- New Order/New Invoice"
1810 DIM A[10]
1820 LET NEXT_NMBR=2; GOSUB 6000; REM "Get Next Order Number
1830 LET A0$(18,3)="000",A0$(21)="SI",A0$(24,3)=F0$(7,3),A0$(27,3)=A0$(24,3)
1840 LET NEXT_NMBR=3; GOSUB 6000; REM "Get Next Invoice Number
1850 LET A0$(32,10)=B1$(159,10),A0$(59,9)=C1$(1,9),A0$(68,1)="N",A0$(70,5)=C1$(30,2)+C1$(21,3),A0$(77,3)=A0$(24,3)
1860 LET A0$(80,2)=C1$(32,2),A0$(82,4)=C1$(24,4),A0$(96,3)=TAKEN_BY$,A0$(99,1)="N"
1870 IF S$(2,2)="11" THEN LET A0$(99,1)="Y"
1880 LET ARE43_K$=A0$(1,4)+A0$(11,7)+A0$(5,6)
1890 WRITE (ARE43_DEV,KEY=ARE43_K$)IOL=ARE43A
1900 REM " --- Make It An Invoice"
1905 MAKE_INVOICE: 
1910 PRINT @(29,3),A0$(11,7),@(73,3),A0$(42,7),
1920 LET A0$(69,1)="Y"
1930 WRITE (ARE03_DEV,KEY=A0$(1,20))IOL=ARE03A
1940 REMOVE (ARE04_DEV,KEY=N0$+"O"+A0$(3,15),DOM=1950)
1950 LET X$=N0$+"I"+A0$(3,15)
1960 WRITE (ARE04_DEV,KEY=X$)IOL=ARE04A
1970 CALL "BSN.20",N0$,A0$(5,6),A0$(11,7),SNM01_DEV,snm02_dev,SNT01_DEV,SNT03_DEV,ARE03_DEV,ARE13_DEV,ARE73_DEV,ARE83_DEV,IVM01_DEV,CSM03_DEV,SMC01_DEV
1975 CALL "BSU.01",A0$(1,17)
1980 GOSUB DISPLAY_SHIPTO
1990 IF O0=5 THEN GOTO 4000
2000 REM " --- Ship-To"
2005 LET OLDSHIPTO$=A0$(102,6),ADDS$="N"
2010 LET V0$="Z",V1$="KCE",V2$=A0$(102,6),V3$="",V4$="<F1>=Add New Master",V0=6,V1=47,V2=3,I0=0
2015 IF NEWOLD$<>"YES" THEN LET V4$=V4$+"  <F2>=Order Number"
2020 LET V4$=V4$+"  <F3>=Lookup  99=Manual Ship-To"
2025 GOSUB 7000
2030 ON V3 GOTO 2065,2035,2040,2060,4000
2035 LET A0$(102,6)="000099",ADDS$="Y"; GOTO 2080
2040 IF NEWOLD$="YES" THEN GOTO 2000
2045 WRITE (ARE03_DEV,KEY=A0$(1,20))IOL=ARE03A
2050 IF S$(7,1)="0" THEN GOSUB PURGE_HEADER ELSE GOSUB UNLOCK_ORDER
2055 GOTO NEXT_ORDER
2060 CALL "SYC.LT","S",A0$(5,6),V$; IF V$="" THEN GOTO 2000
2065 IF NUM(V$,ERR=2000)=0 THEN LET V$=FILL(6)
2070 IF POS(V$="      000099",6)=0 THEN READ (ARM03_DEV,KEY=N0$+A0$(5,6)+V$,DOM=2000)
2075 LET A0$(102,6)=V$
2080 IF OLDSHIPTO$="000099" AND (A0$(102,6)<>"000099" OR ADDS$="Y") THEN REMOVE (ARE33_DEV,KEY=N0$+A0$(5,13),DOM=2085)
2085 IF ADDS$="Y" OR A0$(102,6)<>OLDSHIPTO$ THEN LET A0$(59,3)=C1$(1,3),A0$(72,3)=C1$(21,3),A0$(80,2)=C1$(32,2)
2090 GOSUB DISPLAY_SHIPTO
2095 IF A0$(102,6)<>"000099" THEN GOTO 3700
2099 IF ADDS$="Y" THEN GOSUB GET_NEW_SHIPTO
2100 REM " --- Manual Ship-To Name"
2110 PRINT @(47,3),A0$(102,6),
2120 LET V0$="S",V1$="C",V2$=D1$(1,30),V3$="",V0=28,V1=47,V2=4,V4$="Ship-To Name",I0=1
2130 GOSUB 7000
2140 ON V3 GOTO 2160,2100,2190,2100,2800
2160 LET D1$(1,30)=V$
2190 GOTO 3900
2200 REM " --- Manual Ship-To Address 1"
2220 LET V0$="S",V1$="C",V2$=D1$(31,30),V3$="",V0=30,V1=41,V2=5,V4$="Address 1"
2230 GOSUB 7000
2240 ON V3 GOTO 2260,2200,2290,2200,2800
2260 LET D1$(31,30)=V$
2290 GOTO 3900
2300 REM " --- Manual Ship-To Address 2"
2320 LET V0$="S",V1$="C",V2$=D1$(61,30),V3$="",V0=30,V1=41,V2=6,V4$="Address 2"
2330 GOSUB 7000
2340 ON V3 GOTO 2360,2300,2390,2300,2800
2360 LET D1$(61,30)=V$
2390 GOTO 3900
2400 REM " --- Manual Ship-To  City"
2420 LET V0$="S",V1$="C",V2$=D1$(121,25),V3$="",V0=25,V1=41,V2=7,V4$="City"
2430 GOSUB 7000
2440 ON V3 GOTO 2460,2400,2490,2400,2800
2460 LET D1$(121,25)=V$
2490 GOTO 3900
2500 REM " --- Manual Ship-To State"
2502 IF ST_DEV=0 THEN GOTO OPEN_STATE ELSE LET A$=FID(ST_DEV,ERR=OPEN_STATE); GOTO STATE_ENTRY
2504 OPEN_STATE: LET ST_DEV=UNT; OPEN (ST_DEV)"states.dat"
2510 STATE_ENTRY: LET V0$="S",V1$="^",V2$=D1$(146,2),V0=2,V1=67,V2=7,V4$="State  (<F3>=Lookup)"
2520 GOSUB 7000
2525 IF V3<>3 THEN GOTO STATE_VERIFY
2530 LET TITLE$="State Codes",N=2,V$="SKIP",ROW=V2+2
2535 DIM DESCRIPTION$[N],FIELD[N],POSITION[N],LENGTH[N]
2540 LET DESCRIPTION$[0]="Code",DESCRIPTION$[1]="Name",FIELD[0]=1,POSITION[0]=1,LENGTH[0]=2,FIELD[1]=1,POSITION[1]=3,LENGTH[1]=30,COLUMN=79-LENGTH[0]-LENGTH[1]-2-N*4
2545 CALL "BTM.10",ST_DEV,N,TITLE$,DESCRIPTION$[ALL],FIELD[ALL],POSITION[ALL],LENGTH[ALL],COLUMN,ROW,V$
2550 IF V$="" THEN GOTO STATE_ENTRY
2555 STATE_VERIFY: LET V$=V$+"  ",V$=V$(1,2); IF V$<>"  " THEN FIND (ST_DEV,KEY=V$,DOM=STATE_ENTRY)
2560 LET D1$(146,2)=V$; PRINT @(V1,V2),V$; IF ST_DEV THEN CLOSE (ST_DEV); LET ST_DEV=0
2590 GOTO 3900
2600 REM " --- Manual Ship-To Zip Code"
2620 LET V0$="S",V1$="C",V2$=D1$(148,P[2]),V3$="",V4$="Zip/Postal Code",V0=P[2],V1=70,V2=7
2630 GOSUB 7000
2640 ON V3 GOTO 2660,2600,2690,2600,2800
2660 LET D1$(148,9)=V$
2680 PRINT @(V1,V2),FNZ9$(D1$(148,9)),
2690 GOTO 3900
2700 REM " --- Manual Ship-To Country"
2702 IF CTRY_DEV=0 THEN GOTO OPEN_CTRY ELSE LET A$=FID(CTRY_DEV,ERR=OPEN_CTRY); GOTO COUNTRY_ENTRY
2704 OPEN_CTRY: LET CTRY_DEV=UNT; OPEN (CTRY_DEV)"country.dat"
2710 COUNTRY_ENTRY: LET V0$="S",V1$="C^",V2$=D1$(157,15),V3$="",V4$="Country if not USA  (<F3>=Lookup)",V0=15,V1=41,V2=8
2720 GOSUB 7000
2725 IF V3<>3 THEN GOTO COUNTRY_VERIFY
2730 LET TITLE$="Countries",N=1,V$="",ROW=V2+2
2735 DIM DESCRIPTION$[N],FIELD[N],POSITION[N],LENGTH[N]
2740 LET DESCRIPTION$[0]="Country",DESCRIPTION$[1]="",FIELD[0]=1,POSITION[0]=3,LENGTH[0]=30,FIELD[1]=0,POSITION[1]=0,LENGTH[1]=0,COLUMN=79-LENGTH[0]-LENGTH[1]-2-N*4
2745 CALL "BTM.10",CTRY_DEV,N,TITLE$,DESCRIPTION$[ALL],FIELD[ALL],POSITION[ALL],LENGTH[ALL],COLUMN,ROW,V$
2750 IF V$="" THEN GOTO COUNTRY_ENTRY
2755 COUNTRY_VERIFY: LET V$=V$+FILL(15),V$=V$(1,15);FIND (CTRY_DEV,KEY=V$,knum=1,DOM=*next)
2760 FIND (CTRY_DEV,err=*next)ct$
2765 if v$<>fill(15) and pos(v$=ct$)=0 then goto country_entry
2770 LET D1$(157,15)=V$; PRINT @(V1,V2),D1$(157,15); IF CTRY_DEV THEN CLOSE (CTRY_DEV); LET CTRY_DEV=0
2780 IF CVS(V$,2)="" THEN CALL "SYC.WC",1,0,17,0,40,8,0
2790 GOTO 3900
2800 REM " --- Write Manual Ship-To"
2820 IF ADDS$="Y" THEN GOTO 3500
2840 LET MAN_D0$=N0$+A0$(5,13),MAN_D1$(1)=D1$(1,90)+D1$(121,53)
2860 WRITE (ARE33_DEV,KEY=MAN_D0$)IOL=ARE33A
2880 GOTO 3700
3500 REM " --- Ship-To Data Correct?"
3510 CALL "SYC.WD",SHIPTO_WIN$
3520 LET V0$="S",V1$="C^",V2$="Y",V3$="",V4$="Is the Above Ship-To Address Data Correct (Y/N/Delete)?",V0=6,V1=FNV(V4$),V2=22,I0=13
3530 GOSUB 7000
3535 ON V3 GOTO 3540,3500,3500,3500,3555
3540 ON POS(V$="YN") GOTO 3545,3580,2100
3545 IF V$<>"DELETE" THEN GOTO 3500
3550 REMOVE (ARM03_DEV,KEY=D0$,DOM=3555)
3555 LET A0$(102,6)=OLDSHIPTO$
3560 GOSUB CLEAR_SHIPTO
3570 GOTO 2000
3580 WRITE (ARM03_DEV,KEY=D0$)IOL=ARM03A
3585 GOSUB DISPLAY_SHIPTO
3590 GOTO 3900
3700 REM " --- Order Taken By"
3702 GOTO 3760
3705 IF TAKEN_BY$="" THEN LET TAKEN_BY$=F0$(4,3)
3710 IF S$(7,1)="1" THEN LET V2$=A0$(96,3) ELSE LET V2$=TAKEN_BY$
3715 PRINT @(59,3),V2$,
3720 LET V0$="S",V1$="C^",V4$="Taken By ID.",V0=3,V1=59,V2=3,I0=14
3730 GOSUB 7000
3735 ON V3 GOTO 3750,3700,2000,3700,4000
3750 REM LET A0$(96,3)=V$,TAKEN_BY$=V$
3755 LET A0$(96,3)=V$; REM "Don't change default
3760 PRINT @(59,3),A0$(96,3),
3790 GOTO 3900
3900 REM " --- Next Field
3910 IF V3=4 THEN GOTO 4000
3920 IF V3<>2 THEN GOTO 3950
3930 IF I0>0 THEN LET I0=I0-1
3940 GOTO 3960
3950 LET I0=I0+1
3960 ON I0 GOTO 2000,2100,2200,2300,2400,2500,2600,2700,2800,3700,4000
4000 REM " --- Header Correct?"
4010 LET I_CMPLT$=""
4020 IF S$(2,2)="11" AND S$(7,1)="0" THEN GOTO 4110
4030 LET V4$="Is the Heading Info Correct (Y/N/Delete"
4040 IF NEWOLD$="YES" THEN LET V4$=V4$+"/<F1>=Invoice Complete)?" ELSE LET V4$=V4$+")?"
4050 LET V0$="S",V1$="KC^",V2$="Y",V3$="",V0=6,V1=FNV(V4$),V2=22
4060 GOSUB 7000
4065 ON V3 GOTO 4080,4070,4000,4000,4090
4070 IF NEWOLD$="YES" THEN LET I_CMPLT$="YES" ELSE LET I_CMPLT$=""
4080 IF V$="DELETE" THEN GOTO 4200
4090 ON POS(V$="YN") GOTO 4000,4100,2000
4100 REM " --- Run Overlay"
4150 WRITE (ARE03_DEV,KEY=A0$(1,20))IOL=ARE03A
4180 LET O0=1
4190 RUN "OPE.CC"
4200 REM " --- Delete"
4205 IF S$(7,1)="0" OR (S$(2,1)="1" AND A0$(5,6)=P3$(16,6)) OR S$(12,1)="1" THEN GOTO 4225
4210 LET V4$="Do You Wish To Retain This Order"
4215 CALL "SYC.YN",0,V4$,4,V$,V3
4220 IF V$="Y" THEN GOTO 4400
4225 CALL "BSN.21",N0$,A0$(5,6),A0$(11,7),SNM01_DEV,snm02_dev,SNT01_DEV,SNT03_DEV,ARE03_DEV,ARE13_DEV,ARE73_DEV,ARE83_DEV,CSM03_DEV
4230 READ (ARE13_DEV,KEY=A0$(1,17),DOM=4235)
4235 LET ARE13_K$=KEY(ARE13_DEV,END=4300)
4240 IF ARE13_K$(1,17)<>A0$(1,17) THEN GOTO 4300
4245 READ (ARE13_DEV)IOL=ARE13A
4250 FIND (ARM10_DEV,KEY=N0$+"E"+W0$(21,1),DOM=4285)IOL=ARM10E
4255 IF POS(Y0$(25,1)="SP")=0 THEN GOTO 4285
4260 IF Y0$(27,1)="Y" OR W1$(44,1)="N" OR A0$(21,1)="P" THEN GOTO 4280
4265 LET IV_INFO$[1]=W0$(31,2),IV_INFO$[2]=W0$(33,20),IV_INFO$[3]="",IV_REFS[0]=W[2]
4270 CALL "IVC.UA","UC",IV_FILES[ALL],IV_INFO[ALL],IV_PARAMS$[ALL],IV_INFO$[ALL],IV_REFS$[ALL],IV_REFS[ALL],IV_STATUS
4275 REMOVE (ARE07_DEV,KEY=N0$+W0$(31,2)+W0$(33,20)+W0$(3,2)+W0$(11,10)+W0$(5,6),DOM=4280)
4280 IF POS(I3$(17,1)="LS")<>0 THEN GOSUB 4600
4285 REMOVE (ARE13_DEV,KEY=ARE13_K$,DOM=4286); REM WA# 205
4286 REMOVE (ARE73_DEV,KEY=ARE13_K$,DOM=4287); REM WA# 205
4287 GOSUB 4500; REM remove basis serial numbers WA# 205
4290 GOTO 4235
4300 REM " --- Process Delete/Void"
4305 REMOVE (ARE03_DEV,KEY=A0$(1,20),DOM=4310)
4310 REMOVE (ARE43_DEV,KEY=A0$(1,4)+A0$(11,7)+A0$(5,6),DOM=4320)
4320 REMOVE (ARE33_DEV,KEY=N0$+A0$(5,13),DOM=4330)
4330 REMOVE (ARE04_DEV,KEY=N0$+"I"+A0$(3,15),DOM=4340)
4340 IF ARE20_DEV THEN REMOVE (ARE20_DEV,KEY=A0$(1,17),DOM=4350)
4350 IF C9$(7,1)="Y" THEN REMOVE (ARM14_DEV,KEY=N0$+"C"+A0$(5,6)+FNYY_YY21$(FNM$(FNC$(A0$(77,3))))+A0$(11,7),DOM=4360)
4360 IF C9$(7,1)="Y" THEN REMOVE (ARM14_DEV,KEY=N0$+"D"+FNYY_YY21$(FNM$(FNC$(A0$(77,3))))+A0$(5,13),DOM=4370)
4370 IF S$(12,1)="1" THEN GOSUB DELETE_TMP_CUST
4380 GOSUB PURGE_HEADER
4390 GOTO 0700
4400 REM " --- REPRINT Order?"
4405 CALL "SYC.YN",0,"Do You Wish To REPRINT This Order",4,V$,V3
4410 LET REPRINT$=V$
4415 CALL "BSN.21",N0$,A0$(5,6),A0$(11,7),SNM01_DEV,snm02_dev,SNT01_DEV,SNT03_DEV,ARE03_DEV,ARE13_DEV,ARE73_DEV,ARE83_DEV,CSM03_DEV
4420 DIM X[10]; LET X0$=A0$,X0$(11,7)=A0$(42,7),X0$(42,7)=A0$(11,7),X0$(21,1)="V"
4425 WRITE (ART03_DEV,KEY=X0$(1,20))IOL=ART03A2
4430 LET ART43_K$=X0$(1,4)+X0$(11,7)+A0$(5,6)
4435 WRITE (ART43_DEV,KEY=ART43_K$)IOL=ART43A
4440 LET ART53_K$=X0$(1,4)+X0$(24,3)+X0$(11,7)+A0$(5,6)
4445 WRITE (ART53_DEV,KEY=ART53_K$)IOL=ART53A
4450 LET A0$(42,7)="",A0$(22,1)="O",A0$(68,2)="YN",A[0]=0,A[1]=0,A[2]=0
4455 IF REPRINT$="Y" THEN LET A0$(100,1)="Y" ELSE LET A0$(100,1)=""
4460 GOSUB 5400
4470 WRITE (ARE03_DEV,KEY=A0$(1,20))IOL=ARE03A
4475 IF ARE20_DEV THEN REMOVE (ARE20_DEV,KEY=A0$(1,17),DOM=4480)
4480 REMOVE (ARE04_DEV,KEY=N0$+"I"+A0$(3,15),DOM=4485)
4485 LET X$=N0$+"O"+A0$(3,15)
4490 IF REPRINT$="Y" THEN WRITE (ARE04_DEV,KEY=X$)IOL=ARE04A
4495 GOTO 0700
4500 REM " --- Remove BASIS serial numbers - WA# 205
4505 are93_dev=0,xx=unt;open(xx,err=*next)"ARE-93";are93_dev=xx
4510 READ (ARE83_DEV,KEY=ARE13_K$,DOM=*next)
4515 while 1
4520   LET ARE83_K$=KEY(ARE83_DEV,END=*break)
4525   IF pos(ARE13_K$=ARE83_K$)<>1 THEN break
4530   REMOVE (ARE83_DEV,KEY=ARE83_K$)
4535   if are93_dev=0 then continue
4540   read(are93_dev,key=are83_k$,dom=*next)
4545   while 1
4550     LET ARE93_K$=KEY(ARE93_DEV,END=*break)
4555     IF pos(ARE83_K$=ARE93_K$)<>1 THEN break
4560     REMOVE (ARE93_DEV,KEY=ARE93_K$)
4565   wend
4570 wend
4580 close(are93_dev,err=*next)
4590 RETURN 
4600 REM " --- Remove Lot/Serial Detail"
4605 DIM H[12],T1$(20),T[2]
4610 READ (ARE23_DEV,KEY=W0$(1,20),DOM=4620)
4620 LET ARE23_K$=KEY(ARE23_DEV,END=4690)
4625 IF ARE23_K$(1,20)<>W0$(1,20) THEN GOTO 4690
4630 READ (ARE23_DEV)IOL=ARE23A
4635 IF Y0$(27,1)="Y" OR A0$(21,1)="P" THEN GOTO 4680
4640 LET IV_INFO$[1]=W0$(31,2),IV_INFO$[2]=W0$(33,20),IV_INFO$[3]="",IV_REFS[0]=T[0]
4650 CALL "IVC.UA","OE",IV_FILES[ALL],IV_INFO[ALL],IV_PARAMS$[ALL],IV_INFO$[ALL],IV_REFS$[ALL],IV_REFS[ALL],IV_STATUS; REM "Undo previous warehouse action
4660 LET IV_INFO$[3]=T1$(1,20)
4670 CALL "IVC.UA","UC",IV_FILES[ALL],IV_INFO[ALL],IV_PARAMS$[ALL],IV_INFO$[ALL],IV_REFS$[ALL],IV_REFS[ALL],IV_STATUS; REM "Do warehouse and serial/lot action
4680 REMOVE (ARE23_DEV,KEY=ARE23_K$)
4685 GOTO 4620
4690 RETURN 
4700 REM " --- Remove Temporary Customer"
4705 DELETE_TMP_CUST: 
4710 REMOVE (ARM01_DEV,KEY=B0$,DOM=4715)
4715 REMOVE (ARM02_DEV,KEY=C0$,DOM=4720)
4720 REMOVE (ARM04_DEV,KEY=N0$+"A"+B1$(146,10)+B0$(3,6),DOM=4725)
4725 REMOVE (ARM04_DEV,KEY=N0$+"B"+C1$(1,3)+B0$(3,6),DOM=4730)
4730 REMOVE (ARM04_DEV,KEY=N0$+"C"+C1$(21,3)+B0$(3,6),DOM=4735)
4735 REMOVE (ARM04_DEV,KEY=N0$+"D"+B1$(228,10)+B0$(3,6),DOM=4740)
4740 REMOVE (ARM04_DEV,KEY=N0$+"E"+B1$(103,9)+B0$(3,6),DOM=4745)
4745 REMOVE (ARM04_DEV,KEY=N0$+"F"+C1$(4,2)+B0$(3,6),DOM=4750)
4750 REMOVE (ARM04_DEV,KEY=N0$+"G"+C1$(6,2)+B0$(3,6),DOM=4755)
4755 REMOVE (ARM04_DEV,KEY=N0$+"H"+C1$(8,2)+B0$(3,6),DOM=4760)
4760 REMOVE (ARM04_DEV,KEY=N0$+"J"+C1$(24,4)+B0$(3,6),DOM=4765)
4765 REMOVE (ARM04_DEV,KEY=N0$+"K"+C1$(32,2)+B0$(3,6),DOM=4770)
4770 REMOVE (ARM04_DEV,KEY=N0$+"L"+B1$(112,10)+B0$(3,6),DOM=4775)
4775 DIM N[4]; LET N$=N0$+"N",N[1]=1000
4780 EXTRACT (ARS10_DEV,KEY=N$,DOM=4790)IOL=ARS10N
4785 IF NUM(A0$(5,6))=N[1]-1 THEN LET N[1]=NUM(A0$(5,6))
4790 WRITE (ARS10_DEV,KEY=N$)IOL=ARS10N
4795 RETURN 
5000 REM " --- Display Customer Address"
5005 DISPLAY_ADDRESS: 
5010 LET WIDTH_IN=24,LINES_IN=3,ZIP_LEN=9,WIDTH_OUT=24,ADDRESS$=B1$(31,WIDTH_IN*LINES_IN+ZIP_LEN)
5020 CALL "SYC.AA",ADDRESS$,WIDTH_IN,LINES_IN,ZIP_LEN,WIDTH_OUT
5030 PRINT @(10,4),B1$(1,30),@(5,5),ADDRESS$(1,WIDTH_OUT),@(5,6),ADDRESS$(1+WIDTH_OUT,WIDTH_OUT),@(5,7),ADDRESS$(1+WIDTH_OUT*2,WIDTH_OUT)+" ",FNP$(ADDRESS$(1+WIDTH_OUT*3)),@(0,7),C1$(24,4),
5040 RETURN 
5050 REM " --- Clear Ship-To Address Display"
5055 CLEAR_SHIPTO: 
5060 PRINT @(47,3),FILL(6),@(47,4),'CL',
5070 FOR X=5 TO 7
5075 PRINT @(41,X),'CL',
5080 NEXT X
5085 CALL "SYC.WC",1,0,17,0,40,8,0
5090 RETURN 
5100 REM " --- Display Ship-To Address"
5105 DISPLAY_SHIPTO: 
5110 GOSUB CLEAR_SHIPTO
5120 IF POS(" "<>A0$(102,6)) THEN GOTO 5150
5130 PRINT @(47,4),"Same",
5140 GOTO 5280
5150 REM " --- Display Manual Ship-To Address"
5155 IF A0$(102,6)<>"000099" THEN GOTO 5200
5160 LET MAN_D1$(1)=""
5170 FIND (ARE33_DEV,KEY=N0$+A0$(5,13),DOM=5180)IOL=ARE33A
5180 LET D0$(1)=N0$+A0$(5,6)+"000099",D1$(1)=MAN_D1$(1,90)+FILL(30)+MAN_D1$(91)
5190 GOTO 5270
5200 REM " --- Display Customer Ship-To Address"
5210 LET X$=A0$(102,6),A0$(102,6)="",D0$(1)=N0$+A0$(5,6),D1$(1)=""
5220 FIND (ARM03_DEV,KEY=D0$(1,8)+X$,DOM=5280)IOL=ARM03A
5230 LET A0$(102,6)=D0$(9,6)
5270 PRINT @(47,3),D0$(9,6),@(47,4),D1$(1,30),@(41,5),D1$(31,30),@(41,6),D1$(61,30),@(41,7),D1$(121,25)," ",D1$(146,2)," ",FNZ9$(D1$(148,9)),
5275 IF CVS(D1$(157,15),2)<>"" THEN PRINT @(41,8),D1$(157,15),
5280 PRINT @(59,3),A0$(96,3),
5285 CALL "OPC.PR",N0$,A0$,ARM09_DEV,2; REM "Display ribbon data
5290 RETURN 
5300 REM " --- Display Aging & Check Credit"
5305 DISPLAY_AGING: 
5310 PRINT 'SB',@(80-M1-7,13),"Future:",@(80-M1-8,14),"Current:",@(80-M1-8,15),"30-Days:",@(80-M1-8,16),"60-Days:",@(80-M1-8,17),"90-Days:",@(80-M1-9,18),"120-Days:",@(80-M1-8,19),"Balance:",@(80-M1-13,20),"Credit Limit:",'SF',
5320 PRINT @(80-M1,13),C[0]:M1$,@(80-M1,14),C[1]:M1$,@(80-M1,15),C[2]:M1$,@(80-M1,16),C[3]:M1$,@(80-M1,17),C[4]:M1$,@(80-M1,18),C[5]:M1$,@(80-M1,19),BALANCE:M1$,@(80-M1,20),C[6]:M1$
5330 REM " --- Credit Check"
5335 IF C[6]=0 THEN GOTO 5385
5340 IF BALANCE<C[6] OR S$(1,1)="1" THEN GOTO 5390
5345 IF C9$(7,1)="Y" THEN GOTO 5370
5350 LET V0$="S",V1$="C",V2$="",V3$="",V4$="Credit Limit Of $"+STR(C[6])+" Has Been Exceeded (<Enter>=Continue)",V0=1,V1=FNV(V4$),V2=22
5355 PRINT 'RB',
5360 GOSUB 7000
5370 LET CREDIT_LMT=1
5380 PRINT @(77-M1-23,8),"[*Credit Limit*]",
5385 LET S$(1,1)="1"
5390 RETURN 
5400 REM " --- Pick Ticket Printed?"
5410 READ (ARE13_DEV,KEY=A0$(1,20),DOM=5420)
5420 LET ARE13_K$=KEY(ARE13_DEV,END=5480)
5430 IF POS(A0$(1,17)=ARE13_K$)<>1 THEN GOTO 5480
5440 READ (ARE13_DEV,KEY=ARE13_K$,DOM=5480)IOL=ARE13A
5450 IF W1$(45,1)="Y" THEN GOTO 5490
5470 GOTO 5420
5480 LET A0$(68,1)="N",A0$(100,1)="",REPRINT$="Y"; REM "Pick ticket NOT printed
5490 RETURN 
5500 REM " --- Quotes Not Allowed"
5505 NO_QUOTES: 
5510 DIM MESSAGE$[1]
5520 LET MESSAGE$[0]="Quotes May Not Be Invoiced (<Enter>=Continue)"
5530 CALL "SYC.XA",3,MESSAGE$[ALL],0,22,-1,V$,V3
5540 RETURN 
5550 REM " --- Tax Lookup"
5555 LET NMBR=1
5560 DIM DESCRIPT$[NMBR],FIELD[NMBR],POSITION[NMBR],LENGTH[NMBR]
5570 LET DESCRIPT$[0]="Code",FIELD[0]=1,POSITION[0]=4,LENGTH[0]=2
5575 LET DESCRIPT$[1]="Tax",FIELD[1]=1,POSITION[1]=6,LENGTH[1]=20
5580 CALL "SYC.LK",ARM10_DEV,"B",NMBR,"Tax Lookup",DESCRIPT$[ALL],FIELD[ALL],POSITION[ALL],LENGTH[ALL],V1,V2,V$
5590 RETURN 
5600 REM " --- Salesperson Lookup"
5605 LET NMBR=1
5610 DIM DESCRIPT$[NMBR],FIELD[NMBR],POSITION[NMBR],LENGTH[NMBR]
5620 LET DESCRIPT$[0]="Code",FIELD[0]=1,POSITION[0]=4,LENGTH[0]=3
5625 LET DESCRIPT$[1]="Salesperson",FIELD[1]=1,POSITION[1]=7,LENGTH[1]=20
5630 CALL "SYC.LK",ARM10_DEV,"F",NMBR,"Salesperson Lookup",DESCRIPT$[ALL],FIELD[ALL],POSITION[ALL],LENGTH[ALL],V1,V2,V$
5640 RETURN 
5650 REM " --- Territory Lookup"
5655 LET NMBR=1
5660 DIM DESCRIPT$[NMBR],FIELD[NMBR],POSITION[NMBR],LENGTH[NMBR]
5670 LET DESCRIPT$[0]="Code",FIELD[0]=1,POSITION[0]=4,LENGTH[0]=3
5675 LET DESCRIPT$[1]="Territory",FIELD[1]=1,POSITION[1]=7,LENGTH[1]=20
5680 CALL "SYC.LK",ARM10_DEV,"H",NMBR,"Territory Lookup",DESCRIPT$[ALL],FIELD[ALL],POSITION[ALL],LENGTH[ALL],V1,V2,V$
5690 RETURN 
6000 REM " --- Next Order & Invoice Numbers"
6010 DIM N[4]
6020 LET N$=N0$+"N",N[NEXT_NMBR]=1000
6030 EXTRACT (ARS10_DEV,KEY=N$,DOM=6040)IOL=ARS10N
6040 IF N[NEXT_NMBR]>9999999 THEN LET N[NEXT_NMBR]=1000
6050 IF NEXT_NMBR=2 THEN LET A0$(11,7)=STR(N[2]:FILL(7,"0"))
6060 IF NEXT_NMBR=3 THEN LET A0$(42,7)=STR(N[3]:FILL(7,"0"))
6070 LET N[NEXT_NMBR]=N[NEXT_NMBR]+1
6080 WRITE (ARS10_DEV,KEY=N$)IOL=ARS10N
6090 RETURN 
6100 REM " --- Check Order Lock Flag"
6105 CHECK_LOCK_FLAG: 
6110 LET LOCKED=0
6115 EXTRACT (ARE03_DEV,KEY=A0$(1,20),DOM=6235)IOL=ARE03A
6120 ON POS(A0$(69,1)="NYS12") GOTO 6240,6240,6130,6150,6200,6200
6130 LET V4$="Order Is Locked"
6135 IF A0$(68,1)="B" THEN LET V4$=V4$+" By Batch Print"
6140 GOTO 6160
6150 LET V4$="Invoice Already On Sales Register"
6160 DIM MESSAGE$[1]
6165 LET MESSAGE$[0]=V4$+" (<Enter>=Retry/<F4>=Re-Enter)"
6170 CALL "SYC.XA",2,MESSAGE$[ALL],0,22,-1,V$,V3
6175 IF V3=4 THEN GOTO 6230
6180 IF V$="SPECIAL" THEN GOTO 6240
6190 GOTO 6100
6200 DIM MESSAGE$[1]
6205 LET MESSAGE$[0]="Invoice Is In Update Status. No Access"
6210 LET MESSAGE$[1]="Is Possible (<Enter>=Continue)"
6215 CALL "SYC.XA",2,MESSAGE$[ALL],1,22,-1,V$,V3
6220 IF V$="SPECIAL" THEN GOTO 6240
6230 READ (ARE03_DEV,END=6235); REM "Un-extract record
6235 LET LOCKED=1
6240 RETURN 
6250 REM " --- Unlock Order"
6255 UNLOCK_ORDER: 
6260 EXTRACT (ARE03_DEV,KEY=A0$(1,20),DOM=6290)IOL=ARE03A
6270 LET A0$(69,1)="N"
6280 WRITE (ARE03_DEV,KEY=A0$(1,20))IOL=ARE03A
6290 RETURN 
6300 REM " --- Check Print Flag"
6305 CHECK_PRINT_FLAG: 
6310 LET PRINTED$="N",LOCKED=0
6315 ON POS(A0$(22,1)="OI") GOTO 6385,6320,6340
6320 IF A0$(68,1)="Y" THEN GOTO 6395
6325 CALL "SYC.YN",1,"Order Pick List Not Printed Completely - Continue",2,V$,V3
6330 IF V$="N" THEN GOTO 6385
6335 GOTO 6395
6340 IF A0$(68,1)="N" THEN GOTO 6365
6345 LET V0$="Sa",V1$="Ca",V2$="",V3$="",V4$="Continuing Will Require A Reprint Of This Invoice (<Enter>=Continue)",V0=1,V1=79,V2=22
6350 GOSUB 7000
6355 IF V3=4 THEN GOTO 6385
6360 LET A0$(68,1)="N",A0$(70,1)=" ",PRINTED$="Y"
6365 REMOVE (ARE04_DEV,KEY=N0$+"O"+A0$(3,15),DOM=6370)
6370 LET X$=N0$+"I"+A0$(3,15)
6375 WRITE (ARE04_DEV,KEY=X$)IOL=ARE04A
6380 GOTO 6395
6385 GOSUB UNLOCK_ORDER
6390 LET LOCKED=1
6395 RETURN 
6400 REM " --- Purge Header"
6405 PURGE_HEADER: 
6410 READ (ARE13_DEV,KEY=A0$(1,17),DOM=6420)
6420 LET ARE13_K$=KEY(ARE13_DEV,END=6430)
6430 IF POS(A0$(1,17)=ARE13_K$)=1 THEN GOSUB UNLOCK_ORDER; GOTO 6590; REM "Can't purge header if detail exists
6450 DIM N[4]
6460 LET N$=N0$+"N",N[2]=1000,N[3]=1000
6470 EXTRACT (ARS10_DEV,KEY=N$,DOM=6480)IOL=ARS10N
6480 IF NUM(A0$(42,7))<>N[3]-1 OR PRINTED$="Y" THEN GOTO 6550
6490 IF S$(5,1)="1" OR S$(7,1)="1" THEN GOTO 6550
6500 REM " --- Purge Header - Remove"
6505 REMOVE (ARE03_DEV,KEY=A0$(1,20),DOM=6510)
6510 REMOVE (ARE33_DEV,KEY=N0$+A0$(5,13),DOM=6515)
6515 REMOVE (ARE43_DEV,KEY=A0$(1,4)+A0$(11,7)+A0$(5,6),DOM=6520)
6520 REMOVE (ARE04_DEV,KEY=N0$+"I"+A0$(3,15),DOM=6530)
6530 IF NUM(A0$(11,7))=N[2]-1 THEN LET N[2]=NUM(A0$(11,7))
6540 LET N[3]=NUM(A0$(42,7))
6545 GOTO 6580
6550 REM " --- Purge Header - Void"
6560 LET A0$(21,1)="V",A0$(68,2)="YN",X$=N0$+"I"+A0$(3,15); DIM A[14]
6570 WRITE (ARE03_DEV,KEY=A0$(1,20))IOL=ARE03A
6575 WRITE (ARE04_DEV,KEY=X$)IOL=ARE04A
6580 WRITE (ARS10_DEV,KEY=N$)IOL=ARS10N
6590 RETURN 
6600 REM " --- Find Next Order"
6610 READ (ARE03_DEV,KEY=A0$(1,17)+$FF$,DOM=6620)
6620 LET ARE03_K$=KEY(ARE03_DEV,END=6790)
6630 READ (ARE03_DEV,ERR=6700)
6640 IF POS(A0$(1,10)=ARE03_K$)<>1 THEN GOTO 6750
6650 READ (ARE03_DEV,KEY=ARE03_K$)IOL=ARE03A
6660 IF POS(A0$(21,1)="PV") THEN GOTO 6620
6670 LET V$=A0$(11,7)
6680 PRINT @(29,3),V$,
6690 GOTO 6790
6700 REM " --- Find Next Order - EXTRACTed By Another"
6710 IF ERR<>0 THEN GOTO 9000
6720 READ (ARE03_DEV,KEY=ARE03_K$(1,17)+$FF$,DOM=6730)
6740 GOTO 6620
6750 REM " --- Find Next Order - No More"
6760 PRINT 'RB',
6770 LET V0$="S",V1$="C",V2$="",V3$="",V4$="No More Orders For This Customer (<Enter>=Continue)",V0=1,V1=FNV(V4$),V2=22
6780 GOSUB 7000
6790 RETURN 
6800 REM " --- Get New Ship-To Number"
6805 GET_NEW_SHIPTO: 
6810 LET SHIPTO$="000000"
6820 READ (ARM03_DEV,KEY=N0$+A0$(5,6)+$FF$,DOM=6830)
6830 LET ARM03_K$=KEYP(ARM03_DEV,END=6950)
6840 IF POS(N0$+A0$(5,6)=ARM03_K$)<>1 THEN GOTO 6860
6850 IF ARM03_K$(9,6)<"999999" THEN LET SHIPTO$=ARM03_K$(9,6)
6860 LET SHIPTO$=STR(NUM(SHIPTO$)+1:"000000")
6865 IF NUM(SHIPTO$)=99 THEN GOTO 6860; REM "Skip Manual Ship-To number
6870 IF SHIPTO$>"999999" THEN GOTO 6900
6880 READ (ARM03_DEV,KEY=N0$+A0$(5,6)+SHIPTO$,DOM=6950)
6890 GOTO 6860
6900 REM " --- Get New Ship-To Number - No More Left"
6910 DIM MESSAGE$[1]
6920 LET MESSAGE$[0]="No More Ship-To's Possible For This Customer (<Enter=Continue)"
6930 CALL "SYC.XA",3,MESSAGE$[ALL],0,22,-1,V$,V3
6940 LET SHIPTO$="000099",ADDS$="N"
6950 REM " --- Get New Ship-To Number - Assign It"
6970 LET A0$(102,6)=SHIPTO$,D0$(9,6)=A0$(102,6)
6990 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8060 DEF FNP$(Q$)=CVS(Q$,2)
8070 DEF FNM$(Q$)=Q$(5,2)+Q$(1,4)
8080 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8090 DEF FNZ$(Q$)=FILL(10,CVS(Q$(1,3)+FILL(POS("9"<Q$(1,5))>0)+Q$(4,2)+FILL(ABS(POS("A">=Q$(1,6))>0)-POS("0">Q$(6,4))>0,"-")+Q$(6,4)+FILL(10),16))
8100 DEF FNZ9$(Q$)
8105 LET Q=NUM(Q$,ERR=8110); IF LEN(CVS(Q$,2))=9 THEN LET Q$=Q$(1,5)+"-"+Q$(6,4)
8110 RETURN Q$
8115 FNEND
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- <F4>/END Option For Locked Record"
9220 IF ERR=0 THEN RUN "OPE.CA"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
14000 REM " --- Order Number"
14010 LET V0$="Z",V1$="KC",V2$="",V3$="",V4$="Enter Order #  <F4>=Customer",V0=7,V1=29,V2=3
14020 GOSUB 7000
14030 ON V3 GOTO 14035,14035,1000,14000,1000
14035 IF V$="" THEN GOTO 14010
14040 READ (ARE43_DEV,KEY=N0$+"  "+V$,DOM=14041)
14050 LET ARE43_K$=KEY(ARE43_DEV,END=14000)
14060 IF POS(N0$+"  "+V$=ARE43_K$(1,11))<>1 THEN GOTO 14000
14070 LET A0$(1,20)=N0$+"  "+ARE43_K$(12,6)+ARE43_K$(5,7)+"000"
14080 FIND (ARE03_DEV,KEY=A0$(1,20),DOM=14000)IOL=ARE03A
14085 PRINT @(10,3),FNF$(A0$(5,P[0]),M0$)
14090 LET ORDER$=A0$(11,7)
14095 GOTO 1130
46500 END
