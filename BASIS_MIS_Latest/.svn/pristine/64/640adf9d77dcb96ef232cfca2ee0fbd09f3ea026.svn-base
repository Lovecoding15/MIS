0010 REM "SYC - Determine Period End Dates (Public/Called)"
0020 REM "Program  SYC.PA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "04Jan97 JWK: Correct period definition (1160,1240)
0032 REM "10Feb97 WGH: Change Feb29 period end date to Feb28 for non-leap years (1190,1260,6000-6010,6040-6140)"
0040 REM 
0050 REM "SYS01_DEV :Channel Number SYS-01 Is Opened On
0052 REM "PERIOD    :Current Fiscal Period (Input)
0054 REM "FISC_YR   :Current Fiscal Year (Input)
0056 REM "BEGIN$    :Period Begin Date Packed 'YMD' (Return)
0058 REM "END$      :Period End Date Packed 'YMD' (Return)
0060 REM "STATUS    :Zero=No Error/Not Zero=Error
0070 SETESC 9000
0080 SETERR 9000
0090 ENTER SYS01_DEV,PERIOD,FISC_YR,BEGIN$,END$,STATUS
0200 REM " --- IOLists"
0210 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0220 GLS01A: IOLIST G0$,G1$,G2$,G3$
0400 REM " --- Parameters"
0405 LET STATUS=0
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9200)IOL=SYS01T
0415 LET N0$=F0$(16,2)
0440 FIND (SYS01_DEV,KEY=N0$+"GL"+"00",DOM=9200)IOL=GLS01A
0450 LET TOTPER=NUM(G2$(1,2))
1100 REM " --- Determine End Of Period"
1120 IF PERIOD>TOTPER THEN LET PERIOD=TOTPER
1140 LET END$=G3$(PERIOD*2-1,2),CAL_YR=FNYY_YEAR(FNYEAR_YY$(FISC_YR))
1160 IF END$(1,2)<G3$(1,2) THEN LET CAL_YR=CAL_YR+1
1180 LET END$=FNI$(CAL_YR)+END$
1190 END_DATE: LET JUL_DAY=JUL(1900+FNH(END$(1)),FNH(END$(2)),FNH(END$(3)),ERR=END_ERR)
1200 REM " --- Determine Start Of Period"
1220 IF PERIOD>1 THEN LET BEGIN$=G3$(2*(PERIOD-1)-1,2),CAL_YR=FNYY_YEAR(FNYEAR_YY$(FISC_YR)) ELSE LET BEGIN$=G3$(TOTPER*2-1,2),CAL_YR=FNYY_YEAR(FNYEAR_YY$(FISC_YR))-1
1240 IF BEGIN$(1,2)<G3$(1,2) THEN LET CAL_YR=CAL_YR+1
1260 BEGIN_DATE: LET JUL_DAY=JUL(1900+CAL_YR,FNH(BEGIN$(1)),FNH(BEGIN$(2)),ERR=BEGIN_ERR)
1280 LET BEGIN$=FND$(DATE(JUL_DAY+1:"%Mz%Dz%Yz"))
4000 REM " --- Done"
4020 GOTO 9900
6000 REM " --- Fix Non-Leap Year February 29th Error For Period Begin Date"
6010 BEGIN_ERR: 
6020 IF FNH(BEGIN$(1))<>2 OR FNH(BEGIN$(2))<>29 THEN GOTO 9200
6030 LET BEGIN$(2,1)=FNI$(28)
6040 GOTO BEGIN_DATE
6100 REM " --- Fix Non-Leap Year February 29th Error For Period End Date"
6110 END_ERR: 
6120 IF FNH(END$(2))<>2 OR FNH(END$(3))<>29 THEN GOTO 9200
6130 LET END$(3,1)=FNI$(28)
6140 GOTO END_DATE
8000 REM " --- Functions"
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8070 DEF FNH(Q$)=ASC(Q$)-32
8075 DEF FNI$(Q)=CHR(Q+32)
8100 REM " --- FNYEAR_YY$ Un-Convert 21st Century Numeric Year to 2-Char Year"
8105 DEF FNYEAR_YY$(Q)=STR(MOD(Q,100):"00")
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 LET STATUS=ERR
9220 IF STATUS=0 THEN LET STATUS=999
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to caller"
9950 EXIT 
9999 END
