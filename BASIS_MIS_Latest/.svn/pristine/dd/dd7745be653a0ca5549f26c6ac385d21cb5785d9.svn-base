0010 REM "IVR - Lot/Serial Transaction History By Customer Report (Report)"
0020 REM "Program IVR.9B"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0200 REM " --- IOLists"
0210 IVT01A: IOLIST A0$,A1$,A2$,A3$,A[ALL]
0220 IVM01A: IOLIST B0$,B1$,B2$,B3$,B4$,B5$,B6$,B[ALL]
0230 IVM10A: IOLIST X0$(1)
0240 IVM10C: IOLIST X0$(1)
0250 ARM01A: IOLIST C0$,C1$
0500 REM " --- Initializations"
0505 PRECISION P[2]
0510 LET HEADINGS=9,WHEN$=F0$(7,3),CLOCK$="",H9$=""
0520 DIM HEADINGS$[HEADINGS],O[10],A[4],B[12],L[4]
0530 DIM FILES[4],PARAMS[6],MASKS$[3]
0550 IF ITEM_TYPE$="" THEN LET X0$="All" ELSE LET X0$=ITEM_TYPE$
0560 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$+" For Item Type "+X0$
0565 LET WIDTH=132,PAGE=0,L9=59,L=L9+1
0575 LET FILES[0]=IVM01_DEV,FILES[1]=IVM10_DEV,FILES[2]=ARM01_DEV
0580 LET FILES[3]=APM01_DEV,FILES[4]=GLM01_DEV,PARAMS[0]=P[0],PARAMS[1]=CUSTLEN
0585 LET PARAMS[3]=NUM(G2$(7,2)),PARAMS[4]=P[5],PARAMS[5]=P[6],PARAMS[6]=P[7]
0590 LET MASKS$[0]=N0$,MASKS$[1]=CUSTMASK$,MASKS$[3]=G5$
0900 REM " --- Print positions"
0910 LET O[0]=0,O[1]=O[0]+MAX(LEN(CUSTMASK$)+1,5),O[2]=O[1]+5,O[3]=O[2]+7
0920 LET O[4]=O[3]+9,O[5]=O[4]+5,O[6]=O[5]+5
0930 LET O[10]=WIDTH-M4,O[9]=O[10]-M1,O[8]=O[9]-M3,O[7]=O[8]-M2
0940 GOSUB 5800
0950 REM " --- Position files"
0960 CALL "SYC.GA",7,1,"","",STATUS
0965 IF STATUS THEN GOTO 9900
0970 CALL "SYC.NB","Printing",8+P[0]+P[3],COLUMN
0990 READ (IVT02_DEV,KEY=N0$+BEG_CUST$,DOM=1000)
1000 REM " --- Get next record"
1010 LET K$=KEY(IVT02_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 LET CUST$=K$(3,6),PRODUCT$=K$(9,3),TRAN_DATE$=K$(32,3),WHSE$=K$(35,2),ITEM$=K$(37,20)
1040 READ (IVT02_DEV)
1100 REM " --- Valid Customer/Product/Date/Warehouse/Item?"
1110 IF END_CUST$<>"" THEN IF CUST$>END_CUST$ THEN GOTO 4000
1120 IF BEG_PROD$<>"" THEN IF PRODUCT$<BEG_PROD$ THEN READ (IVT02_DEV,KEY=K$(1,8)+BEG_PROD$,DOM=3900)
1130 IF END_PROD$<>"" THEN IF PRODUCT$>END_PROD$ THEN READ (IVT02_DEV,KEY=K$(1,8)+$FF$,DOM=3900)
1140 IF BEG_DATE$<>"" THEN IF TRAN_DATE$<BEG_DATE$ THEN READ (IVT02_DEV,KEY=K$(1,31)+BEG_DATE$,DOM=3900)
1150 IF END_DATE$<>"" THEN IF TRAN_DATE$>END_DATE$ THEN READ (IVT02_DEV,KEY=K$(1,31)+$FF$,DOM=3900)
1160 IF BEG_WHSE$<>"" THEN IF WHSE$<BEG_WHSE$ THEN READ (IVT02_DEV,KEY=K$(1,34)+BEG_WHSE$,DOM=3900)
1170 IF END_WHSE$<>"" THEN IF WHSE$>END_WHSE$ THEN READ (IVT02_DEV,KEY=K$(1,34)+$FF$,DOM=3900)
1180 IF BEG_ITEM$<>"" THEN IF ITEM$<BEG_ITEM$ THEN READ (IVT02_DEV,KEY=K$(1,36)+BEG_ITEM$,DOM=3900)
1190 IF END_ITEM$<>"" THEN IF ITEM$>END_ITEM$ THEN READ (IVT02_DEV,KEY=K$(1,36)+$FF$,DOM=3900)
1400 REM " --- Valid Type?"
1410 READ (IVT01_DEV,KEY=K$(1,2)+K$(35,22)+K$(12,23)+K$(57,5),DOM=3900)IOL=IVT01A
1420 FIND (IVM01_DEV,KEY=N0$+ITEM$,DOM=3900)IOL=IVM01A
1440 IF ITEM_TYPE$<>"" THEN IF B2$(53,3)<>ITEM_TYPE$ THEN GOTO 3900
1470 IF BEG_DATE$<>"" THEN IF A0$(45,3)<BEG_DATE$ THEN READ (IVT01_DEV,KEY=K$(1,44)+BEG_DATE$,DOM=3900)
1480 IF END_DATE$<>"" THEN IF A0$(45,3)>END_DATE$ THEN READ (IVT01_DEV,KEY=K$(1,44)+$FF$,DOM=3900)
1500 REM " --- Level breaks?"
1520 PRINT @(COLUMN,11),K$(3,6)," ",K$(37,P[0])," ",K$(12,P[3]),
1550 IF CUST$<>T1$ THEN GOSUB 6200
1560 IF K$(9,23)<>T2$ THEN LET FIRST$="Y" ELSE LET FIRST$="N",T2$=K$(9,23)
2000 REM " --- Get Reference Block"
2010 DIM DESC$[2]
2020 CALL "IVC.TD",A1$,FILES[ALL],PARAMS[ALL],MASKS$[ALL],TYPE$,DESC$[ALL]
3000 REM " --- Print detail line"
3010 LET NEEDED=1
3030 IF FIRST$="Y" THEN LET NEEDED=NEEDED+1
3040 IF L+NEEDED>L9 THEN GOSUB 5000
3050 IF FIRST$="Y" THEN PRINT (7)@(O[1]),PRODUCT$,@(O[2]),K$(12,P[3]),@(O[5]),K$(35,2),@(O[6]),K$(37,P[0])," ",FNITEM$(B1$,P[5],P[6],P[7]); LET L=L+1
3060 PRINT (7)@(O[3]),FNB$(K$(32,3)),@(O[4]),TYPE$,@(O[5]),DESC$[1],@(O[7]),A[0]:M2$,@(O[8]),A[1]:M3$,@(O[9]),A[0]*A[1]:M1$,@(O[10]),A[2]:M4$
3070 LET L=L+1
3080 LET FIRST$="N"
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4090 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5090 RETURN 
5800 REM " --- Initialize HEADINGS$"
5805 DIM H1$(WIDTH),H2$(WIDTH),H7$(WIDTH),H8$(WIDTH)
5810 LET X1$="First Date",X2$="Last Date"
5815 IF OCB$="O" THEN LET X0$="Open " ELSE IF OCB$="C" THEN LET X0$="Closed " ELSE LET X0$=""
5820 IF BEG_DATE$<>"" THEN LET X1$=FNB$(BEG_DATE$)
5825 IF END_DATE$<>"" THEN LET X2$=FNB$(END_DATE$)
5830 LET HEADINGS$[2]=X0$+"From "+X1$+" Through "+X2$
5850 LET X1$="First",X2$="First",X3$="First",X4$="First",X4=5
5855 IF BEG_ITEM$<>"" THEN LET X1$=BEG_ITEM$
5860 IF BEG_WHSE$<>"" THEN LET X2$=BEG_WHSE$
5865 IF BEG_CUST$<>"" THEN LET X3$=FNF$(BEG_CUST$,CUSTMASK$)
5870 IF BEG_PROD$<>"" THEN LET X4$=BEG_PROD$,X4=3
5875 IF END_PROD$="" THEN IF X4=3 THEN LET X4=4
5880 LET H1$(1)="From Item: "+X1$,H1$(46)="From Warehouse: "+X2$,H1$(77)="From Customer: "+X3$,H1$(WIDTH-X4-13)="From Product: "+X4$
5885 LET X1$="Last",X2$="Last",X3$="Last",X4$="Last",X5$="All Item Types"
5890 IF END_ITEM$<>"" THEN LET X1$=END_ITEM$
5900 IF END_WHSE$<>"" THEN LET X2$=END_WHSE$
5910 IF END_CUST$<>"" THEN LET X3$=FNF$(END_CUST$,CUSTMASK$)
5920 IF END_PROD$<>"" THEN LET X4$=END_PROD$
5930 LET H2$(1)="  To Item: "+X1$,H2$(46)="  To Warehouse: "+X2$,H2$(77)="  To Customer: "+X3$,H2$(WIDTH-X4-13)="  To Product: "+X4$
5940 LET H7$(O[1]+1)="Prod",H7$(22)="Transaction"
5950 LET H8$(1)="Cust",H8$(O[1]+1)="Type Serial # Date"
5960 LET H8$(O[4]+1)="Type Whse Item/Reference Information",H8$(O[7]+M2-8)="Quantity"
5970 LET H8$(O[8]+M3-9)="Unit Cost",H8$(O[9]+M1-9)="Extension",H8$(O[10]+M4-5)="Price"
5980 LET HEADINGS$[4]=H1$,HEADINGS$[5]=H2$,HEADINGS$[7]=H7$,HEADINGS$[8]=H8$
5990 RETURN 
6200 REM " --- Customer Break"
6210 IF L+1>L9 THEN GOSUB 5000
6220 DIM C1$(30)
6230 LET C1$(1)="Invalid Customer"
6240 FIND (ARM01_DEV,KEY=N0$+CUST$,DOM=6241)IOL=ARM01A
6250 PRINT (7)@(0),FNF$(K$(3,CUSTLEN),CUSTMASK$)," ",C1$(1,30)
6260 LET L=L+1
6310 LET T1$=CUST$,FIRST$="Y"
6390 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
