0010 REM "Replenishment Report - II
0020 REM "Program: POR.FB
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists
0210 APM01A: IOLIST *,VDATA$(1)
0220 APM05A: IOLIST *,VDATA2$(1)
0230 APM06A: IOLIST C0$,C1$(1),C[ALL]
0240 IVM01A: IOLIST D0$(1),D1$(1),D2$,D3$,D4$,D5$,D6$,D[ALL]
0250 IVM02A: IOLIST B0$,B1$,B2$,B[ALL]
0260 IVM10F: IOLIST R0$
0270 IVM10A: IOLIST PROD$
0300 POE06A: IOLIST A0$,A1$
0310 POE16A: IOLIST W0$,W1$,W2$,W[ALL]
0500 REM " --- Init data
0510 LET FOOTNUM=5,L9=59-FOOTNUM,HEADINGS=3,H=0,H1=132,WHEN$=F0$(7,3)
0520 DIM C[11],D[10],W[16],HEADINGS$[HEADINGS]
0530 LET HEADINGS$[0]=N1$,HEADINGS$[1]=N3$
0540 DIM LF$(60,$0A$)
0550 LET PRINTBTOT$="N",PRINTVTOT$="N",PRINTPTOT$="N",PRINTPHDR$="N"
0560 LET DOPAGEBRK$="N"
0570 DIM BUYERTOTS[2],VENDTOTS[2],PRODTOTS[2]
0580 DIM REVIEW$(30)
0600 REM " --- Open printer
0610 CALL "SYC.GA",7,1,"","",STATUS
0620 IF V1=1 THEN GOTO 9900
0700 REM " --- Background
0720 CALL "SYC.NB","Printing:",5+VENDLEN,COLUMN
0900 REM " --- Calculate divisor, X2
0910 IF F0$(7,3)<BEGPER$ OR F0$(7,3)>ENDPER$ THEN LET X2=30.55 ELSE LET X2=NUM(F0$(22,2)); REM "Adjust partial months usage
0920 IF X2=0 THEN LET X2=30.55
1000 REM " --- Init Read
1020 READ (POE06_DEV,KEY=N0$+BEGBUY$,DOM=1100)
1100 REM " --- Main Read
1105 READPOE06: 
1120 LET K$=KEY(POE06_DEV,END=4000)
1140 IF POS(N0$=K$)<>1 THEN GOTO 4000
1150 IF ENDBUY$<>"" THEN IF K$(3,3)>ENDBUY$ THEN GOTO 4000
1160 IF BEGVND$<>"" THEN IF K$(6,6)<BEGVND$ THEN READ (POE06_DEV,KEY=K$(1,5)+BEGVND$,DOM=NEXTPOE06)
1180 IF ENDVND$<>"" THEN IF K$(6,6)>ENDVND$ THEN READ (POE06_DEV,KEY=K$(1,11)+$FF$,DOM=NEXTPOE06)
1220 READ (POE06_DEV,END=4000)IOL=POE06A
1230 IF A1$(6,1)="N" THEN GOTO NEXTPOE06
1240 LET BUYER$=A0$(3,3),VENDOR$=A0$(6,6)
1250 LET REVIEW$="Through Review Date: "+FNB$(A1$(3))
1260 LET COMMENT$=A1$(7,30)
1270 PRINT @(COLUMN,11),BUYER$,"  ",FNF$(VENDOR$(1,VENDLEN),VENDOMASK$),
1280 GOSUB TESTBREAKS
1900 REM " --- Init detail ptr
1920 READ (POE16_DEV,KEY=A0$(1,11),DOM=READPOE16)
2000 REM " --- Line item details
2005 READPOE16: 
2010 DIM W[16]
2015 LET NEWFLAG$=""
2020 LET KEY$=KEY(POE16_DEV,END=3000)
2040 IF POS(A0$(1,11)=KEY$)<>1 THEN GOTO 3000
2060 IF KEY$(12,3)<>PREVPRODTYPE$ OR PRINTPHDR$="Y" THEN GOSUB NEWPRODTYPE
2080 READ (POE16_DEV)IOL=POE16A
2090 IF SUGYES$="S" AND W[9]=0 THEN GOTO NEXTPOE16
2100 DIM D0$(22),D1$(DESCLEN)
2110 LET D1$(1)="** Not on File **"
2120 FIND (IVM01_DEV,KEY=N0$+W0$(15),DOM=2200)IOL=IVM01A
2140 LET D1$=FNITEM$(D1$,DESC[1],DESC[2],DESC[3])
2200 GOSUB ITEMHDR
2210 IF W1$(1,2)<>"**" OR WHS$="N" THEN GOTO 2400
2220 REM " --- Split warehouses here
2230 FOR X=1 TO LEN(W2$) STEP 2
2240 DIM B[20]
2250 LET SAFETY$="",LEAD$="",AVAIL$="",ONORD$=""
2260 LET ORDPT$="",MAX$="",EOQ$="",COST$=""
2270 FIND (IVM02_DEV,KEY=N0$+W2$(X,2)+D0$(3),DOM=2340)IOL=IVM02A
2280 LET SAFETY$=STR(B[5]:M2$),LEAD$=STR(B[7]:M2$),AVAIL$=STR(B[0]-B[2]:M2$)
2290 LET ONORD$=STR(B[1]:M2$),ORDPT$=STR(B[4]:M2$),MAX$=STR(B[3]:M2$)
2300 LET MAX$=STR(B[3]:M2$),EOQ$=STR(B[6]:M2$),COST$=STR(B[11]:M3$)
2340 IF L+1>L9 THEN GOSUB ITEMHDR
2350 GOSUB GET_USAGES
2370 PRINT (7)@(132-M9-3),W2$(X,2)," ",@(O[0]),PRIORUSAGE:M2$,@(O[1]),CURUSAGE:M2$,@(O[2]),AVGUSAGE:M2$,@(O[3]),SAFETY$,@(O[4]),LEAD$,@(O[6]),AVAIL$,@(O[7]),ONORD$,@(O[8]),ORDPT$,@(O[9]),MAX$,@(O[10]),EOQ$,@(O[13]),COST$
2380 LET L=L+1
2390 NEXT X
2400 REM " --- Recalculate based on line point
2410 IF A1$(6,1)<>"L" THEN GOTO 2500
2420 IF W[9]=0 OR W[9]>W[0] THEN GOTO 2500
2430 LET W[9]=W[0],ONHND=W[2]+W[3],FLAG$=W1$(3)
2440 IF ONHND<0 THEN LET W[9]=W[0]-ONHND
2450 FOR X=1 TO LEN(FLAG$)
2460 IF POS(FLAG$(X,1)=" 2YMRE")=0 THEN LET NEWFLAG$=NEWFLAG$+FLAG$(X,1)
2470 NEXT X
2480 LET W1$(3)="L"+NEWFLAG$
2500 REM " --- Print it here
2510 IF L+1>L9 THEN GOSUB ITEMHDR
2520 PRINT (7)@(1),W1$(3,8),@(O[0]),W[14]:M2$,@(O[1]),W[12]:M2$,@(O[2]),W[13]:M2$,@(O[3]),W[5]:M2$,@(O[4]),W[7]:M2$,@(O[5]),W[11]:M2$,@(O[6]),W[2]:M2$,@(O[7]),W[3]:M2$,@(O[8]),W[1]:M2$,@(O[9]),W[6]:M2$,@(O[10]),W[4]:M2$,@(O[11]),W[0]:M2$,@(O[12]),W[9]:M2$,@(O[13]),W[10]:M3$,@(O[14]),W[9]*W[10]:M1$
2800 LET L=L+1
2850 LET BUYERTOTS[0]=BUYERTOTS[0]+W[9]*W[8],BUYERTOTS[1]=BUYERTOTS[1]+W[9],BUYERTOTS[2]=BUYERTOTS[2]+W[9]*W[10]
2860 LET VENDTOTS[0]=VENDTOTS[0]+W[9]*W[8],VENDTOTS[1]=VENDTOTS[1]+W[9],VENDTOTS[2]=VENDTOTS[2]+W[9]*W[10]
2870 LET PRODTOTS[0]=PRODTOTS[0]+W[9]*W[8],PRODTOTS[1]=PRODTOTS[1]+W[9],PRODTOTS[2]=PRODTOTS[2]+W[9]*W[10]
2900 REM " --- Loop up for next detail
2905 NEXTPOE16: 
2920 GOTO READPOE16
3000 REM " --- Loop up for next Suggested Order header
3005 NEXTPOE06: 
3010 GOTO READPOE06
4000 REM " --- Done
4010 IF H=0 THEN GOSUB 5000
4020 GOSUB VENDTOTALS
4030 GOSUB BUYERTOTALS
4040 GOSUB PRINTFOOTER
4100 RUN "POU.BA"
5000 REM " --- Heading
5015 IF H>0 THEN GOSUB PRINTFOOTER
5020 LET L=HEADINGS+1
5030 LET HEADINGS$[2]=BUYERHEAD$
5040 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,H,H1,WHEN$,CLOCK$,STATUS
5050 IF STATUS<>0 THEN EXITTO 9900
5060 IF COMMENT$=FILL(30) THEN GOTO 5080
5065 LET COMMENT$=CVS(COMMENT$,3); REM "Strip leading & trailing spaces
5070 PRINT (7)@(0),COMMENT$,@(H1-LEN(REVIEW$)),REVIEW$
5075 GOTO 5090
5080 PRINT (7)@(INT(H1/2-LEN(REVIEW$)/2)),REVIEW$
5090 LET L=L+1
5190 RETURN 
5200 REM " --- New Vendor 
5205 NEWVENDOR: 
5210 IF PRINTVTOT$="Y" THEN GOSUB VENDTOTALS
5220 IF DOPAGEBRK$="Y" THEN LET DOPAGEBRK$="N"; GOSUB 5000
5230 IF L+12>L9 THEN GOSUB 5000
5240 GOSUB VADDRESS
5245 PRINT (7)""
5250 PRINT (7)""
5255 PRINT (7)@(0),"Vendor: ",
5260 IF POS(" "<>VENDOR$)=0 THEN PRINT (7)@(18),"***No Stocking Vendor***", ELSE PRINT (7)FNF$(VENDOR$(1,VENDLEN),VENDOMASK$),@(18),NAME$,
5265 PRINT (7)@(55),"Prior Review:  ",FNB$(C1$(1)),@(91),"Cycle: ",C[0]:"##0",@(111),"Next Review: ",FNB$(C1$(4)),
5270 IF C1$(7,2)<>"  " THEN PRINT (7)@(44),"Addr: ",C1$(7,2) ELSE PRINT (7)""
5280 PRINT (7)@(18),ADDR1$
5290 PRINT (7)@(18),ADDR2$,@(55),"Purchase Target $:",C[1]:M1$,@(91),"Target lbs: ",C[2]:"###,###",@(111),"Target Units:",C[3]:M2$
5300 PRINT (7)@(18),ADDR3$
5310 PRINT (7)@(0),"Contact: ",CONTACT$,@(55),"Phone:  ",FNF$(PHONE$,PHNMSK$),@(91),"Fax:  ",FNF$(FAX$,PHNMSK$),@(112),"Last Rec't: ",FNB$(C1$(10))
5320 PRINT (7)DASHES$
5330 PRINT (7)@(132-M1-M3-M2*12-6),"Prior",@(132-M1-M3-M2*11-8),"Current",@(132-M1-M3-M2*10-8),"Average",@(132-M1-M3-M2*9-7),"Safety",@(132-M1-M3-M2*8-5),"Lead",@(132-M1-M3-M2*7-6),"Other",
5340 PRINT (7)@(132-M1-M3-M2*5-4),"On",@(132-M1-M3-M2*4-8),"Reorder",@(132-M1-M3-M2*3-4),"Max",@(132-M1-M3-M2*1-5),"Line",@(132-M1-M3-8),"Suggested",@(132-M1-5),"Unit"
5350 PRINT (7)@(0),"Whs",@(132-M1-M3-M2*12-6),"Usage",@(132-M1-M3-M2*11-6),"Usage",@(132-M1-M3-M2*10-6),"Usage",@(132-M1-M3-M2*9-6),"Stock",@(132-M1-M3-M2*8-5),"Time",@(132-M1-M3-M2*7-7),"Whse's",
5360 PRINT (7)@(132-M1-M3-M2*6-6),"Avail",@(132-M1-M3-M2*5-6),"Order",@(132-M1-M3-M2*4-6),"Point",@(132-M1-M3-M2*3-4),"Qty",@(132-M1-M3-M2*2-4),"EOQ",@(132-M1-M3-M2-6),"Point",@(132-M1-M3-6),"Order",@(132-M1-5),"Cost",@(132-10),"Extension"
5370 PRINT (7)DASHES$,
5380 LET L=L+12
5385 LET PRINTVTOT$="Y",PRINTPHDR$="Y"
5390 RETURN 
5400 REM " --- New Product Type
5405 NEWPRODTYPE: 
5410 IF PRINTPTOT$="Y" THEN GOSUB PRODTOTALS
5420 DIM PRODTOTS[2],PROD$(30)
5425 LET PROD$(7,20)="**Not On File**"
5430 FIND (IVM10_DEV,KEY=N0$+"A"+KEY$(12,3),DOM=5450)IOL=IVM10A
5440 LET PROD$=PROD$(7,20)
5450 IF L+2>L9 THEN LET PRINTVTOT$="N"; GOSUB NEWVENDOR
5460 PRINT (7)""
5470 PRINT (7)@(0),"Product: ",KEY$(12,3)," ",PROD$
5480 LET L=L+2
5485 LET PRINTPTOT$="Y",PREVPRODTYPE$=KEY$(12,3),PRINTPHDR$="N"
5490 RETURN 
5600 REM " --- New Item
5605 ITEMHDR: 
5620 IF L+1>L9 THEN LET PRINTPTOT$="N"; GOSUB NEWPRODTYPE
5660 PRINT (7)W1$(1,2),"  ",W0$(15,ITEMLEN),"  ",D1$
5680 LET L=L+1
5690 RETURN 
5800 REM " --- Print the 'footers' here
5805 PRINTFOOTER: 
5810 IF L<L9 THEN PRINT (7)LF$(1,L9-L)
5815 PRINT (7)DASHES$
5820 PRINT (7)@(0),"** Indicates warehouses are combined. ",@(40),"M - Suggested Buy Based on Maximum",@(85),"R - Suggested Buy Based on Reorder Point"
5830 PRINT (7)@(0),"O - Indicates On Hand Greater than Max",@(40),"E - Suggested Buy Rounded to EOQ Amount",@(85),"Y - Suggested Buy Limited to One Year's Usage"
5840 PRINT (7)@(0),"U - Indicates Unusual Monthly Usage.  ",@(40),"L - Suggested Buy Based on Line Point",@(85),"2 - Suggested Buy Increased 1/2 Month's Usage"
5890 RETURN 
6000 REM " --- Test for Breaks
6005 TESTBREAKS: 
6010 IF BUYER$=PREVBUYER$ THEN GOTO TESTVENDOR
6020 IF PRINTVTOT$="Y" THEN GOSUB VENDTOTALS
6025 IF PRINTBTOT$="Y" THEN GOSUB BUYERTOTALS
6030 GOSUB NEWBUYER
6035 GOSUB NEWVENDOR
6050 GOTO 6090
6055 TESTVENDOR: 
6060 IF VENDOR$=PREVVEND$ THEN GOTO 6090
6070 GOSUB NEWVENDOR
6090 RETURN 
6100 REM " --- New Buyer
6110 NEWBUYER: 
6130 DIM BUYERTOTS[2],BUYERHEAD$(30),R0$(30)
6150 FIND (IVM10_DEV,KEY=N0$+"F"+BUYER$,DOM=6160)IOL=IVM10F
6160 LET BUYERHEAD$="Buyer Code: "+BUYER$+" "+R0$(7,20),BUYERHEAD$=BUYERHEAD$(1,POS(" "<>BUYERHEAD$,-1))
6170 GOSUB 5000
6180 LET PRINTBTOT$="Y",PREVBUYER$=BUYER$,DOPAGEBRK$="N"
6190 RETURN 
6200 REM " --- Print Buyer Sub Totals
6205 BUYERTOTALS: 
6220 IF BUYERTOTS[0]=0 AND BUYERTOTS[1]=0 AND BUYERTOTS[2]=0 THEN GOTO 6290
6230 GOSUB 5000
6240 PRINT (7)""
6245 PRINT (7)""
6250 PRINT (7)@(20),"***Buyer Subtotals: "
6260 IF BUYERTOTS[0]<>0 THEN PRINT (7)@(132-M8),"Weight: ",BUYERTOTS[0]:"###,###",
6270 PRINT (7)@(132-M1-M3-M2),BUYERTOTS[1]:M2$,@(132-M1-1),BUYERTOTS[2]:"#"+M1$
6280 LET L=L+4
6290 RETURN 
6300 REM " --- Print Vendor Totals
6310 VENDTOTALS: 
6320 IF PRINTPTOT$="Y" THEN GOSUB PRODTOTALS
6330 IF L+4>L9 THEN LET PRINTVTOT$="N"; GOSUB NEWVENDOR
6340 PRINT (7)@(132-M8),DASHES$(1,M8)
6350 PRINT (7)@(132-M8-14),"Vendor Total: ",@(132-M8),
6360 IF VENDTOTS[0]<>0 THEN PRINT (7)@(132-M8),"Weight: ",VENDTOTS[0]:"###,###",
6370 PRINT (7)@(132-M1-M3-M2),VENDTOTS[1]:M2$,@(132-M1-1),VENDTOTS[2]:"#"+M1$
6380 PRINT (7)@(132-M8-9),"Minimum: ",
6390 IF C[2]<>0 THEN PRINT (7)@(132-M8),"Weight: ",C[2]:"###,###",
6400 PRINT (7)@(132-M1-M3-M2),C[3]:M2$,@(132-M1-1),C[1]:"#"+M1$
6410 PRINT (7)""
6420 PRINT (7)@(132-M8-12),"Over/Under:",
6430 IF VENDTOTS[0]<>0 OR C[2]<>0 THEN PRINT (7)@(132-M8),"Weight: ",VENDTOTS[0]-C[2]:"###,###",
6440 PRINT (7)@(132-M1-M3-M2),VENDTOTS[1]-C[3]:M2$,@(132-M1-1),VENDTOTS[2]-C[1]:"#"+M1$
6450 PRINT (7)@(132-M8),DASHES$(1,M8)
6460 LET L=L+6
6470 DIM VENDTOTS[2]
6480 LET PREVVEND$=VENDOR$,PRINTVTOT$="N",DOPAGEBRK$="Y"
6490 RETURN 
6500 REM " --- Print product type Subtotal
6510 PRODTOTALS: 
6520 PRINT (7)@(132-M8),DASHES$(1,M8)
6530 PRINT (7)@(132-M8-20),"Product Type Total: ",
6540 IF PRODTOTS[0]<>0 THEN PRINT (7)@(132-M8),"Weight: ",PRODTOTS[0]:"###,###",
6550 PRINT (7)@(132-M1-M3-M2),PRODTOTS[1]:M2$,@(132-M1-1),PRODTOTS[2]:"#"+M1$
6560 LET L=L+2
6570 LET PRINTPTOT$="N"
6580 RETURN 
6600 REM " --- Get Vendor's address etc
6610 VADDRESS: 
6620 DIM VDATA$(195),VDATA2$(160),C1$(25),C[11]
6630 READ (APM01_DEV,KEY=N0$+VENDOR$,DOM=6640)IOL=APM01A
6640 READ (APM06_DEV,KEY=N0$+VENDOR$+BUYER$,DOM=6660)IOL=APM06A
6650 IF C1$(7,2)="  " THEN GOTO 6710
6660 READ (APM05_DEV,KEY=N0$+VENDOR$+C1$(7,2),DOM=USEAPM01ADDR)IOL=APM05A
6670 USEAPM05ADRR: 
6680 LET VDATA$(1,125)=VDATA2$(1,125),VDATA$(186,10)=VDATA2$(146,10)
6690 LET VDATA$(126,20)=VDATA2$(126,20)
6700 USEAPM01ADDR: 
6710 LET NAME$=VDATA$(1,30),ADDR1$=VDATA$(31,24),ADDR2$=VDATA$(55,24)
6720 LET ADDR3$=VDATA$(79,24),ZIP$=FNZ$(VDATA$(103)),PHONE$=VDATA$(112,10)
6730 LET EXT$=VDATA$(122,4),FAX$=VDATA$(186,10),CONTACT$=VDATA$(126,20)
6740 IF POS(" "<>ADDR3$)>0 THEN LET ADDR3$=FNP$(ADDR3$)+"  "+ZIP$ ELSE LET ADDR2$=FNP$(ADDR2$)+"  "+ZIP$
6750 RETURN 
6800 REM " --- Get Prior, Current, Average Usages and IV activity
6805 GET_USAGES: 
6810 DIM CHANS[12],ITEM$[2]
6820 LET ACTION$="WA",CHANS[1]=IVM01_DEV,CHANS[2]=IVM02_DEV,CHANS[3]=IVM03_DEV
6830 LET CHANS[12]=IVM12_DEV,ITEM$[0]=N0$,ITEM$[1]=W2$(X,2)
6840 LET ITEM$[2]=KEY$(15,20),CUR_PERYR$=CURPER$+CURYR$,BASE_PERYR$=CUR_PERYR$
6850 CALL "IVC.AU",ACTION$,CHANS[ALL],ITEM$[ALL],FACTORS[ALL],DAYOFMONTH,BASE_PERYR$,CUR_PERYR$,TOT_PERS,IVPRECISION,ANNUALUSAGE,ESTIMATED,CALLFLAG$,STATUS
6860 IF CALLFLAG$="" THEN GOTO 6890
6870 LET ANNUALUSAGE=ESTIMATED
6890 LET AVGUSAGE=ANNUALUSAGE/TOT_PERS
6910 DIM CHANS[3],ITEM$[3],PERIOD$[1],ACTIVITY[12]
6920 LET ACTION$="",CHANS[2]=IVM12_DEV,CHANS[3]=IVM03_DEV
6930 LET ITEM$[0]=N0$,ITEM$[1]=W2$(X,2),ITEM$[2]=KEY$(15,20)
6935 LET PERIOD$[0]=CURYR$+CURPER$,PERIOD$[1]=CURYR$+CURPER$
6940 CALL "IVC.WB",ACTION$,CHANS[ALL],ITEM$[ALL],PERIOD$[ALL],ACTIVITY[ALL],STATUS
6950 LET CURUSAGE=ACTIVITY[3]+ACTIVITY[4]-ACTIVITY[8]
6960 LET PRIORUSAGE=ANNUALUSAGE-CURUSAGE
6970 LET AVGPRIORUSE=(ANNUALUSAGE-CURUSAGE)/TOT_PERS
6990 RETURN 
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8085 DEF FNZ$(Q$)=FILL(10,CVS(Q$(1,3)+FILL(POS("9"<Q$(1,5))>0)+Q$(4,2)+FILL(ABS(POS("A">=Q$(1,6))>0)-POS("0">Q$(6,4))>0,"-")+Q$(6,4)+FILL(10),16))
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
