0010 REM "DDS - Export Record Layouts to Taos"   
0020 REM "Program DDX.EB
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "18Sep96 JAL: Reading user record with incorrect layout (250,410-420)"
0032 REM "05Nov96 JAL: Prevent Error 47/Lines 6040 & 6050 (6040,6050)"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists
0210 DDM01A: IOLIST X0$(1),X1$(1),X[ALL]
0220 SYM03A: IOLIST A0$(1),A1$(1),A2$(1),A[ALL]
0230 DDM03A: IOLIST B0$(1),B1$(1),B[ALL]
0240 DDM04A: IOLIST C0$(1),C1$(1),C[ALL]
0250 SYM02A: IOLIST D0$(1),D1$(1)
0400 REM " --- Parameters
0410 DIM D0$(3),D1$(128)
0415 LET D0$(1)=F0$(4,3),D1$(1,24)="Unknown User"
0420 FIND (SYM02_DEV,KEY=D0$,DOM=0430)IOL=SYM02A
0500 REM " --- Initializations
0510 DIM X0$(12),X1$(64),X[2],MILESTONE$(20)
0520 DIM A0$(6),A1$(64),A2$(30),A[2],B0$(7),B1$(64),B[2]
0530 DIM C0$(10),C1$(64),C[2],PGM$(6),J1$(6)
0550 LET PGM$(1)=PGM(-2),C9$=F0$(13,2),VERSION$="6.0.0",PATH$=""
0555 LET VERSION$=STBL("!VERSION",ERR=0560)
0560 IF F0$(25,1)<>" " THEN LET C9$=C9$+"-"+F0$(25,1)
0565 LET PATH$="",VERBOSE$="",M1$="###,##0.00-"
0570 LET YY=FNYY_YEAR(F0$(18,2)),MM=NUM(F0$(20,2)),DD=NUM(F0$(22,2))
0575 LET ALPHA$="ABCDEFGHIJKLMNOPQRSTUVWXYZ",VALID$="0123456789"+ALPHA$
0600 REM " --- Additional File Opens
0610 CALL "_acu.utl",ERR=9400
0620 LET PATH$=STBL("BBEXT")
0630 CALL PATH$+"_ddopen.utl",ERR=9400
0640 CALL PATH$+"_ddinfo.utl",ERR=9400
0700 REM " --- Background
0790 CALL "SYC.NB","Processing",20,COLUMN
0800 REM " --- Expand and compress expressions
0810 LET EXPYMD$="str(asc(%(2,1))-32:"+$22$+"00"+$22$+")+str(asc(%(3,1))-32:"+$22$+"00"+$22$+")+str(asc(%(1,1))-32:"+$22$+"00"+$22$+")"
0815 LET CMPYMD$="chr(num(%(5,2))+32)+chr(num(%(1,2))+32)+chr(num(%3,2)+32)"
0820 LET EXPYYMMDD$="%(3,2)+%(5,2)+%(1,2)"
0825 LET CMPYYMMDD$="%(5,2)+%(1,2)+%(3,2)"
0900 REM " --- Position file
0960 LET K$=SYSTEM$
0970 IF SYSTEM$="" THEN LET K$=BEGFILE$
0980 READ (SYM03_DEV,KEY=K$,DOM=1000)IOL=SYM03A
0990 GOTO 1030
1000 REM " --- Read next SYM-03 File Definition Record
1010 LET K$=KEY(SYM03_DEV,END=4000)
1020 READ (SYM03_DEV)IOL=SYM03A
1025 IF BEGFILE$<>"" THEN IF A0$(1,6)<BEGFILE$ THEN GOTO 3900
1030 IF ENDFILE$<>"" THEN IF A0$(1,6)>ENDFILE$ THEN GOTO 4000
1040 IF SYSTEM$<>"" THEN IF A0$(1,LEN(SYSTEM$))<>SYSTEM$ THEN GOTO 4000
1050 LET MILESTONE$(1)=A0$(1,6)
1060 PRINT @(COLUMN,11),MILESTONE$,
1100 REM " --- Only keyed files are exported
1110 IF POS(A1$(37,1)="MDS")=0 THEN GOTO 3900
1200 REM " --- Convert file information to BBx format
1210 LET FILETYPE$=$02$,RECLEN=A[2]
1220 IF A1$(37,1)="M" THEN LET FILETYPE$=$06$
1400 REM " --- Position DDM-03
1490 READ (DDM03_DEV,KEY=A0$,DOM=1500)
1500 REM " --- Read next DDM-03 Record ID"
1510 LET K$=KEY(DDM03_DEV,END=3900)
1515 IF POS(A0$=K$)<>1 THEN GOTO 3900
1520 READ (DDM03_DEV)IOL=DDM03A
1530 LET MILESTONE$(1)=B0$(1,6)+" "+B0$(7,1)
1540 PRINT @(COLUMN+7,11),B0$(7,1),J1$(1,4),
1600 REM " --- Obtain file information
1630 LET FILE_ID$=B0$
1640 LET P=POS("-"=FILE_ID$)
1650 IF P=0 THEN GOTO 1700
1660 LET FILE_ID$=FILE_ID$(1,P-1)+FILE_ID$(P+1)
1690 GOTO 1640
1900 REM " --- Position DDM-04 Field Detail file
1910 DIM DATANAME$[999],DESCRIPTION$[999],LENGTH[999],OFFSET[999]
1920 DIM TYPE$(999,"C"),FS$(999,"N"),FIELD[999],KEYSEG$(48,"N")
1930 LET NUMBER=0,RECORDS=0,OFFSET=0,KEYFLD=0,KEYLEN=0,FIELD[1]=1
1940 LET ALIAS$=FILE_ID$
1990 READ (DDM04_DEV,KEY=B0$,DOM=2000)
2000 REM " --- Read next DDM-04 detail record
2010 LET K$=KEY(DDM04_DEV,END=2500)
2020 IF POS(B0$=K$)<>1 THEN GOTO 2500
2030 READ (DDM04_DEV)IOL=DDM04A
2040 LET RECORDS=RECORDS+1,MILESTONE$(1)=C0$(1,6)+" "+C0$(7,1)+" "+C0$(8,3)
2050 PRINT @(COLUMN,11),MILESTONE$,
2100 REM " --- Retrieve DDM-01 record (if necessary)
2110 IF FNP$(C1$(1,12))="" THEN GOTO 2200
2120 IF RECORDS>0 THEN IF X0$(1,12)=C1$(1,12) THEN GOTO 2150
2130 LET X0$(1)=C1$(1,12)
2140 FIND (DDM01_DEV,KEY=X0$,DOM=2200)IOL=DDM01A
2150 LET C1$(17,30)=X1$(1,30),C1$(53,1)=X1$(37,1),C[0]=X[0]
2200 REM " --- Calculate field length and number of occurences
2210 LET L=C[0],TIMES=1
2230 IF C[1]>0 THEN LET L=L*C[1]
2240 IF C[2]>1 THEN LET TIMES=C[2]
2250 IF C1$(53,1)="L" THEN LET C1$(1,12)="LITERAL"
2300 REM " --- Generate a field entry for each occurence
2310 FOR OCCURS=1 TO TIMES
2320 LET S$="N"
2330 IF POS(C1$(54,1)="XY") THEN LET S$="Y"
2340 IF C1$(54,1)="E" THEN IF OCCURS=TIMES THEN LET S$="Y"
2350 REM " --- Store field information
2360 LET NUMBER=NUMBER+1,DATANAME$[NUMBER]=FNP$(C1$(1,12))
2370 LET DESCRIPTION$[NUMBER]=FNP$(C1$(17,30))
2380 LET TYPE$(NUMBER,1)=C1$(53,1),FS$(NUMBER,1)=S$
2390 LET LENGTH[NUMBER]=L,OFFSET[NUMBER]=O
2400 REM " --- Recalculate field offset
2410 IF S$="N" THEN LET O=O+L,FIELD[NUMBER+1]=FIELD[NUMBER]
2420 IF S$="Y" THEN LET O=0,FIELD[NUMBER+1]=FIELD[NUMBER]+1
2430 IF POS(C1$(54,1)="KX")=0 THEN GOTO 2450
2440 LET KEYSEG$(NUMBER,1)="Y",KEYFLD=NUMBER,KEYLEN=KEYLEN+LENGTH[NUMBER]
2450 NEXT OCCURS
2490 GOTO 2000
2500 REM " --- Check for duplicate field names
2510 IF NUMBER=0 THEN GOTO 3900
2520 FOR N=1 TO NUMBER
2530 LET TIMES=1
2540 FOR X=1 TO NUMBER
2550 IF X=N THEN GOTO 2580
2560 IF DATANAME$[X]<>DATANAME$[N] THEN GOTO 2580
2570 LET TIMES=TIMES+1,DATANAME$[X]=DATANAME$[X]+"_"+STR(TIMES)
2580 NEXT X
2585 IF TIMES>1 THEN LET DATANAME$[N]=DATANAME$[N]+"_1"
2590 NEXT N
2600 REM " --- Check field names for invalid characters
2610 FOR N=1 TO NUMBER
2620 LET X$=DATANAME$[N],N$="",L=LEN(X$),TIMES=0
2630 FOR X=1 TO L
2640 LET CHAR$=X$(X,1)
2650 IF POS(CHAR$=VALID$)=0 THEN LET CHAR$="_"
2660 IF X=1 THEN IF POS(CHAR$=ALPHA$)=0 THEN LET CHAR$="X"+CHAR$
2670 LET N$=N$+CHAR$
2680 NEXT X
2685 LET DATANAME$[N]=N$
2690 NEXT N
3000 REM " --- Export File Information to TAOS
3010 REM " --- Remove any existing file definition
3020 CALL PATH$+"_ddfil.utl",ERR=3030,FILE_ID$,2,$$,"s"
3030 REM " --- Set TAOS file template fields
3040 GOSUB 6000
3050 REM " --- Export complete file template
3060 CALL PATH$+"_ddfil.utl",COMPLETE_FILE$,1,"",VERBOSE$
3100 REM " --- Export Field Information to TAOS
3110 FOR X=1 TO NUMBER
3120 LET MILESTONE$(1)=STR(X:"000-")+DATANAME$[X]
3130 PRINT @(COLUMN,11),MILESTONE$,
3150 REM " --- Set working variables
3160 LET FLDDESC$=DESCRIPTION$[X],L=LEN(FLDDESC$),EXPAND$="",COMPRESS$=""
3170 LET IMASK$="",BMASK$="",OMASK$="",PREC=0,SEPARATOR=0,TERM=0
3200 REM " --- Date?
3210 IF TYPE$(X,1)<>"D" THEN GOTO 3250
3230 IF LENGTH[X]=3 THEN LET EXPAND$=EXPYMD$,COMPRESS$=CMPYMD$
3240 IF LENGTH[X]=6 THEN LET EXPAND$=EXPYYMMDD$,COMPRESS$=CMPYYMMDD$
3250 REM " --- Zero filled?
3260 IF POS(TYPE$(X,1)="ZM")=0 THEN GOTO 3300
3270 DIM IMASK$(LENGTH[X],"#"),BMASK$(LENGTH[X],"0")
3280 LET OMASK$=BMASK$
3300 REM " --- Numeric field?
3310 IF TYPE$(X,1)<>"N" THEN GOTO 3350
3320 LET PREC=4,OMASK$=M1$
3350 REM " --- Field separator?
3360 IF FS$(X,1)<>"Y" THEN GOTO 3400
3370 LET SEPARATOR=ASC($80$),TERM=10
3380 IF POS(TYPE$(X,1)="NMZ")>0 THEN GOTO 3400
3390 LET COMPRESS$="CVS(%,2)+FILL("+STR(LENGTH[X])+"-LEN(%))"
3400 REM " --- Set TAOS field template fields
3410 IF TYPE$(X,1)<>"N" THEN LET TYPE$(X,1)="C"
3420 GOSUB 6300
3450 REM " --- Export complete field template
3460 CALL PATH$+"_ddfld.utl",COMPLETE_FIELD$,1
3490 NEXT X
3600 REM " --- Export Index Information to TAOS
3610 LET INDEXNAME$=FNP$(ALIAS$)+"_KEY"
3620 FOR X=1 TO KEYFLD
3630 IF KEYSEG$(X,1)<>"Y" THEN GOTO 3690
3640 REM " --- Set TAOS file template fields
3650 GOSUB 6700
3660 REM " --- Export complete field template
3670 CALL PATH$+"_ddseg.utl",INDEX$,1
3690 NEXT X
3800 REM " --- Loop back for next DDM-03 Record ID record
3890 GOTO 1500
3900 REM " --- Loop back for next SYM-03 Header record
3990 GOTO 1000
4000 REM " --- All done
4090 GOTO 9900
6000 REM " --- Initialize TAOS file template fields
6010 FIELD COMPLETE_FILE$,"FILE_ID"=FILE_ID$
6020 FIELD COMPLETE_FILE$,"DESCR"=A1$(1,30)
6030 FIELD COMPLETE_FILE$,"PATH"="(DATA)"+A0$
6040 FIELD COMPLETE_FILE$,"CREATOR"=D1$(1,16)
6050 FIELD COMPLETE_FILE$,"MODIFIER"=D1$(1,16)
6060 FIELD COMPLETE_FILE$,"FORM"=""
6070 FIELD COMPLETE_FILE$,"NARROW"=""
6080 FIELD COMPLETE_FILE$,"WIDE"=""
6090 FIELD COMPLETE_FILE$,"PRE_OPEN"=""
6100 FIELD COMPLETE_FILE$,"POST_OPEN"=""
6110 FIELD COMPLETE_FILE$,"PRE_CLOSE"=""
6120 FIELD COMPLETE_FILE$,"POST_CLOSE"=""
6130 FIELD COMPLETE_FILE$,"APP1"=""
6140 FIELD COMPLETE_FILE$,"APP2"=""
6150 FIELD COMPLETE_FILE$,"APP3"=""
6160 FIELD COMPLETE_FILE$,"FILE_TYPE"=FILETYPE$
6170 FIELD COMPLETE_FILE$,"KEYSIZ"=KEYLEN
6180 FIELD COMPLETE_FILE$,"RECLEN"=RECLEN
6190 FIELD COMPLETE_FILE$,"RECNUM"=0
6200 FIELD COMPLETE_FILE$,"M_DATE"=JUL(YY,MM,DD)
6210 FIELD COMPLETE_FILE$,"M_TIME"=INT(TIM*3600)
6220 FIELD COMPLETE_FILE$,"C_DATE"=JUL(YY,MM,DD)
6230 FIELD COMPLETE_FILE$,"C_TIME"=INT(TIM*3600)
6240 FIELD COMPLETE_FILE$,"FLAGS"=0
6290 RETURN 
6300 REM " --- Initialize TAOS field template fields
6310 FIELD COMPLETE_FIELD$,"FILE_ID"=FILE_ID$
6320 FIELD COMPLETE_FIELD$,"FIELD_ID"=DATANAME$[X]
6330 FIELD COMPLETE_FIELD$,"BTYPE"=TYPE$(X,1)
6340 FIELD COMPLETE_FIELD$,"TITLE"=DATANAME$[X]
6350 FIELD COMPLETE_FIELD$,"LABEL"=FLDDESC$(1,MIN(L,29))+":"
6360 FIELD COMPLETE_FIELD$,"DESCR"=FLDDESC$
6370 FIELD COMPLETE_FIELD$,"HELPFILE"=""
6380 FIELD COMPLETE_FIELD$,"PROMPT"="Enter "+FLDDESC$(1,MIN(L,24))
6390 FIELD COMPLETE_FIELD$,"DEFAULT"=""
6400 FIELD COMPLETE_FIELD$,"IMASK"=IMASK$
6410 FIELD COMPLETE_FIELD$,"BMASK"=BMASK$
6420 FIELD COMPLETE_FIELD$,"OMASK"=OMASK$
6430 FIELD COMPLETE_FIELD$,"INPUT_FLAGS"=""
6440 FIELD COMPLETE_FIELD$,"ALT_INPUT"=""
6450 FIELD COMPLETE_FIELD$,"EXPAND"=EXPAND$
6460 FIELD COMPLETE_FIELD$,"COMPRESS"=COMPRESS$
6470 FIELD COMPLETE_FIELD$,"SEARCH"=""
6480 FIELD COMPLETE_FIELD$,"APP1"=""
6490 FIELD COMPLETE_FIELD$,"APP2"=""
6500 FIELD COMPLETE_FIELD$,"APP3"=""
6510 FIELD COMPLETE_FIELD$,"SEQ"=X
6520 FIELD COMPLETE_FIELD$,"FIELD_TYPE"=TYPE$(X,1)
6530 FIELD COMPLETE_FIELD$,"FLAG"=SEPARATOR
6540 FIELD COMPLETE_FIELD$,"TERM"=TERM
6550 FIELD COMPLETE_FIELD$,"DIM"=1
6560 FIELD COMPLETE_FIELD$,"NUM"=FIELD[X]
6570 FIELD COMPLETE_FIELD$,"OFFSET"=OFFSET[X]
6580 FIELD COMPLETE_FIELD$,"LENGTH"=LENGTH[X]
6590 FIELD COMPLETE_FIELD$,"PREC"=PREC
6600 FIELD COMPLETE_FIELD$,"MAXLEN"=LENGTH[X]
6610 FIELD COMPLETE_FIELD$,"COLS"=LENGTH[X]
6690 RETURN 
6700 REM " --- Initialize TAOS index template fields
6710 FIELD INDEX$,"FILE_ID"=FILE_ID$
6720 FIELD INDEX$,"INDEX_ID"=INDEXNAME$
6730 FIELD INDEX$,"FIELD_ID"=DATANAME$[X]
6740 FIELD INDEX$,"KNUM"=0
6750 FIELD INDEX$,"SEQ"=X-1
6760 FIELD INDEX$,"NUM"=FIELD[X]
6770 FIELD INDEX$,"OFFSET"=OFFSET[X]
6780 FIELD INDEX$,"LENGTH"=LENGTH[X]
6790 FIELD INDEX$,"ATTR"=""
6800 FIELD INDEX$,"DESCR"=DESCRIPTION$[X]
6890 RETURN 
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9205 SETESC 9000
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9400 REM " --- Taos/EUS Error"
9410 LET V4$="Taos Data Dictionary"
9450 DIM MESSAGE$[0]
9460 LET MESSAGE$[0]="The "+V4$+" Cannot Be Opened (<Enter>=Continue)"
9470 CALL "SYC.XA",1,MESSAGE$[ALL],0,22,-1,V$,V3
9490 GOTO 9900
9900 REM " --- Return to menu"
9910 CALL PATH$+"_ddclose.utl",ERR=9950
9950 RUN "SYS.AA"
9999 END
