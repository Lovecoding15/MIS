0010 REM "SAM - Generic Sales Analysis Display"
0020 REM "Program SAM.AB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.5 - 01Dec98 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "27May97 JWK: Accumulating extra record into xref-driven display (1530,1565)
0032 REM "11Jun98 WGH: Last year's summary display may include this year's summary (1515-1530)"
0033 REM "01Sep98 WGH: Ship-To description may not display correctly (4275)
0034 REM "02Sep99 WGH: Prevent infinite loop when processing empty file (1565)
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLists"
0210 SAM00A: IOLIST SAM00_K$,Q[ALL],C[ALL],S[ALL]
0220 SAM21X: IOLIST SAM21_K$
0250 DESCCHANA: IOLIST X$[ALL]
0400 REM " --- Parameters"
0410 LET NMBR=4
0420 DIM LEVELS$[NMBR],LITERALS$[NMBR],TYPES$[NMBR],IMASKS$[NMBR],OMASKS$[NMBR],PROMPTS$[NMBR],INLEN[NMBR],FLDLEN[NMBR]
0430 DIM DESCCHAN[NMBR],DESCREC$[NMBR],DESCSTR[NMBR],DESCPOS[NMBR],DESCLEN[NMBR]
0440 DIM SA_CHANNELS[2],XREFS[NMBR],PERIODS$[13],IV_MASKS$[3],IV_DESC[3]
0450 CALL "SAC.PA",ACTION,SYS01_DEV,N0$,SEGMENTS,LEVELS$[ALL],LITERALS$[ALL],TYPES$[ALL],IMASKS$[ALL],OMASKS$[ALL],PROMPTS$[ALL],INLEN[ALL],FLDLEN[ALL],DESCCHAN[ALL],DESCREC$[ALL],DESCSTR[ALL],DESCPOS[ALL],DESCLEN[ALL],SA_CHANNELS[ALL],KEYLEN,XREFS[ALL],FY$,PERIODS,PERIODS$[ALL],IV_MASKS$[ALL],IV_DESC[ALL],IVM14_DEV,STATUS
0455 IF STATUS OR SEGMENTS<1 THEN GOTO 9900
0460 LET SAM00_DEV=SA_CHANNELS[1],SAM_DEV=SA_CHANNELS[1]
0465 IF SA_CHANNELS[2] THEN GOSUB BUILD_XREFS
0470 LET CURYEAR=1900+FNYY_YEAR(FY$),PRIYEAR=CURYEAR-1,PRIFY$=FNYEAR_YY21$(PRIYEAR)
0480 LET M1$=IV_MASKS$[1],M2$=IV_MASKS$[2],M3$=IV_MASKS$[3]
0490 LET M1=LEN(M1$),M2=LEN(M2$),M3=LEN(M3$)
0500 REM " --- Initializations"
0510 LET L0=7,MAX_W=0
0550 FOR X=1 TO SEGMENTS
0560 LET PROMPTS$[X]=PROMPTS$[X]+" (<F1>=Sales Analysis Lookup"
0570 IF DESCCHAN[X] THEN LET PROMPTS$[X]=PROMPTS$[X]+"/<F3>=Lookup)" ELSE LET PROMPTS$[X]=PROMPTS$[X]+")"
0580 NEXT X
0600 REM " --- Print positions"
0610 IF M1*2+M2<=33 THEN GOTO 0650
0620 CALL "SYC.RM",M1$,M1,6,M1-1
0630 CALL "SYC.RM",M2$,M2,6,M2-1
0640 GOTO 0600
0650 DIM O[5]
0660 LET O[2]=42-M1,O[1]=O[2]-M1,O[0]=O[1]-M2
0670 LET O[5]=78-M1,O[4]=O[5]-M1,O[3]=O[4]-M2
0680 FOR X=1 TO 3
0685 LET MAX_W=MAX(LEN(LITERALS$[X]),MAX_W)
0690 NEXT X
0700 REM " --- Background"
0710 FOR X=1 TO SEGMENTS
0715 IF LITERALS$[X]<>"" THEN PRINT 'SB',@(MAX_W-LEN(LITERALS$[X]),X+2),LITERALS$[X],":",
0720 NEXT X
0730 CALL "SYC.WC",1,0,80,0,0,L0-1,0
0735 CALL "SYC.WC",1,1,0,15,7,L0,0
0740 CALL "SYC.WC",1,1,0,15,43,L0,0
0745 IF PERIODS<13 THEN CALL "SYC.WC",1,0,80,0,0,20,0
0750 PRINT 'SB',@(20,L0-1)," Fiscal ",STR(CURYEAR:"0000")," ",@(56)," Fiscal ",STR(PRIYEAR:"0000")," ",@(0,L0),"Period",@(O[0]+M2-6),"Units",@(O[1]+M1-6),"Sales",@(O[2]+M1-5),"Cost",@(O[3]+M2-6),"Units",@(O[4]+M1-6),"Sales",@(O[5]+M1-5),"Cost",
0755 FOR X=1 TO PERIODS
0760 LET Y=L0+X
0765 PRINT @(0,Y),X:"##-",PERIODS$[X],
0770 NEXT X
0780 PRINT @(0,21),"Totals",'SF',
0800 REM " --- Initialize Sales Analysis File Pointer"
0810 DIM SAM_K$(KEYLEN),SAM00_K$(KEYLEN),KPOS[NMBR]
0820 LET SAM_K$(1)=N0$+FY$,KPOS[0]=1,FLDLEN[0]=LEN(N0$+FY$)
0830 FOR X=1 TO NMBR
0840 LET KPOS[X]=KPOS[X-1]+FLDLEN[X-1]
0850 NEXT X
0900 REM " --- Initialize For Next Selection
0910 PRINT 'CF',
0920 DIM FIELDS$[NMBR]
0930 LET FIELD=1
0950 READ (SAM_DEV,KEY=SAM_K$,DOM=1000)
1000 REM " --- Initialize For Next Field"
1020 DIM K$(KEYLEN)
1040 LET K$(1)=KEY(SAM_DEV,END=1050)
1060 IF POS(SAM_K$(1,KPOS[FIELD]-1)=K$)<>1 THEN LET K$(KPOS[FIELD])=""
1080 LET FIELDS$[FIELD]=K$(KPOS[FIELD],FLDLEN[FIELD])
1100 REM " --- Get Field Selection"
1110 IF LITERALS$[FIELD]="" THEN GOTO 1200
1120 CALL "SAC.IA","I",TYPES$[FIELD],FIELDS$[FIELD],IMASKS$[FIELD],OMASKS$[FIELD],PROMPTS$[FIELD],FLDLEN[FIELD],MAX_W+2,FIELD+2,INLEN[FIELD],N0$,DESCCHAN[FIELD],DESCREC$[FIELD],DESCSTR[FIELD],DESCPOS[FIELD],DESCLEN[FIELD],IV_DESC[ALL],IVM14_DEV,FY$,FIELD,SAM_DEV,LITERALS$[ALL],FIELDS$[ALL],V3
1140 IF V3=4 OR SAM_K$(KPOS[FIELD],FLDLEN[FIELD])=FIELDS$[FIELD] THEN GOTO 1200
1160 LET SAM_K$(KPOS[FIELD])=FIELDS$[FIELD]
1180 READ (SAM_DEV,KEY=SAM_K$(1,KPOS[FIELD]+FLDLEN[FIELD]-1),DOM=1200)
1200 REM " --- Next Field"
1205 IF V3=4 THEN GOTO 1280
1210 IF V3<>2 THEN GOTO 1240
1220 IF FIELD>1 THEN LET FIELD=FIELD-1
1230 GOTO 1250
1240 LET FIELD=FIELD+1
1250 IF FIELD>SEGMENTS THEN GOTO 1280
1260 GOTO 1000
1280 LET FIELD=FIELD-1
1290 IF FIELD<1 THEN GOTO 9900
1300 REM " --- Summary Segments?"
1310 LET SUMMARY=0
1320 IF FIELD=SEGMENTS THEN GOTO 1400
1330 LET SUMMARY=1
1340 FOR X=FIELD+1 TO SEGMENTS
1350 IF LITERALS$[X]="" THEN GOTO 1390
1360 DIM SUM_MSG$(80-MAX_W-2)
1370 LET SUM_MSG$(1)=FILL(INLEN[X],"*")+"  Summary  "+FILL(INLEN[X],"*")
1380 PRINT @(MAX_W+2,X+2),SUM_MSG$,
1390 NEXT X
1400 REM " --- Assemble Selected Sales Analysis"
1410 DIM Q[12],C[12],S[12],QTY[12,1],COST[12,1],SALES[12,1]
1420 LET NEW_REC=1
1430 LET SUM$="Summarizing ...",X0=FNC(SUM$+SAM_K$,80),COLUMN=X0+LEN(SUM$)+1
1440 IF SUMMARY THEN PRINT @(X0,22),SUM$,
1450 DIM SELECT$(KEYLEN)
1460 FOR Y=0 TO 1
1465 LET SELECT$(1)=SAM_K$(1,KPOS[FIELD]+FLDLEN[FIELD]-1),SELECT$(3,2)=FNYEAR_YY21$(FNYY_YEAR(FY$)-Y)
1470 READ (SAM_DEV,KEY=SELECT$,DIR=0,DOM=1480); REM "Don't move file pointer
1475 IF SELECT$(3,2)=FY$ THEN LET NEW_REC=0
1480 IF SUMMARY THEN GOTO 1500
1485 LET SAM00_K$(1)=SELECT$
1490 GOTO 1550
1500 REM " --- Summarize Selections"
1510 LET SAM00_K$(1)=KEY(SAM_DEV,END=1650)
1515 IF SAM00_K$(KPOS[0],FLDLEN[0])<>SELECT$(KPOS[0],FLDLEN[0]) THEN GOTO 1650
1520 FOR X=1 TO FIELD
1525 IF LITERALS$[X]<>"" AND SAM00_K$(KPOS[X],FLDLEN[X])<>SELECT$(KPOS[X],FLDLEN[X]) THEN EXITTO 1650
1530 NEXT X
1540 IF SUMMARY THEN PRINT @(COLUMN,22),FNYY21_YY$(SAM00_K$(3,2)),SAM00_K$(KPOS[1])
1550 REM " --- Get Sales Analysis Record"
1560 IF ACTION>20 THEN GOSUB UN_XREF_KEY
1565 READ (SAM_DEV,END=1650); REM "Move xref file pointer
1570 READ (SAM00_DEV,KEY=SAM00_K$,DOM=1650)IOL=SAM00A
1580 FOR P=0 TO PERIODS-1
1585 LET QTY[P,Y]=QTY[P,Y]+Q[P],COST[P,Y]=COST[P,Y]+C[P],SALES[P,Y]=SALES[P,Y]+S[P]
1590 NEXT P
1600 REM " --- Get Next Record"
1610 GOTO 1500
1650 REM " --- Get Prior Year"
1660 NEXT Y
1670 IF SUMMARY THEN PRINT @(0,22),'CL',
1680 LET SAM00_K$(1)=SELECT$
1700 REM " --- Display Sales Analysis"
1720 GOSUB 5000
1740 IF NEW_REC AND SUMMARY=0 THEN GOTO 1800
1790 GOTO 4000
1800 REM " --- New Record?"
1820 CALL "SYC.YN",1,"Is This A New Record",1,V$,V3
1840 ON V3 GOTO 1860,1800,1800,1800,900
1860 ON POS(V$="YN") GOTO 1800,1900,900
2000 REM " --- Maintain Selected Sales Analysis"
2020 LET I0=0,USC=PERIODS*3
2040 LET P=INT(MOD(I0,USC)/3),Y=INT(I0/USC)
2100 REM " --- Units"
2110 LET V0$="N",V1$="C",V2$=STR(QTY[P,Y]),V3$=M2$,V0=M2,V1=O[3*Y],V2=L0+1+P
2120 LET V4$="Enter Number Of Units For Period "+STR(P+1)+" (<F1>=Next Period)"
2130 GOSUB 7000
2140 ON V3 GOTO 2160,2900,2900,2100,2900
2160 LET QTY[P,Y]=V
2190 GOTO 2900
2200 REM " --- Sales"
2210 LET V0$="N",V1$="C",V2$=STR(SALES[P,Y]),V3$=M1$,V0=M1,V1=O[1+3*Y],V2=L0+1+P
2220 LET V4$="Enter Sales Amount For Period "+STR(P+1)+" (<F1>=Next Period)"
2230 GOSUB 7000
2240 ON V3 GOTO 2260,2900,2900,2200,2900
2260 LET SALES[P,Y]=V
2290 GOTO 2900
2300 REM " --- Cost"
2310 LET V0$="N",V1$="C",V2$=STR(COST[P,Y]),V3$=M1$,V0=M1,V1=O[2+3*Y],V2=L0+1+P
2320 LET V4$="Enter Cost Amount For Period "+STR(P+1)+" (<F1>=Next Period)"
2330 GOSUB 7000
2340 ON V3 GOTO 2360,2900,2900,2300,2900
2360 LET COST[P,Y]=V
2390 GOTO 2900
2900 REM " --- Next USC Field"
2905 IF V3=4 THEN GOTO 2990
2910 IF V3<>2 THEN GOTO 2940
2920 IF I0>0 THEN LET I0=I0-1
2930 GOTO 2950
2940 IF V3=1 THEN LET I0=I0+3 ELSE LET I0=I0+1
2950 LET P=INT(MOD(I0,USC)/3),Y=INT(I0/USC)
2960 IF Y>1 THEN GOTO 2990
2970 ON MOD(I0,3) GOTO 2100,2200,2300
2990 GOSUB 5000
3000 REM " --- Maintenance Correct?"
3010 LET V4$="Is The Above Information Correct (Y/N/Delete/<F1>=Next Record)?"
3015 LET V0$="S",V1$="^C",V2$="",V3$="",V0=6,V1=FNV(V4$),V2=22
3030 GOSUB 7000
3040 ON V3 GOTO 3050,4100,3000,3000,1400
3050 IF V$="DELETE" THEN GOTO 3400
3060 ON POS(V$="YN") GOTO 3000,3100,2000
3100 REM " --- Write Sales Analysis Records"
3110 FOR Y=0 TO 1
3120 FOR P=0 TO PERIODS-1
3130 LET Q[P]=QTY[P,Y],C[P]=COST[P,Y],S[P]=SALES[P,Y]
3140 NEXT P
3150 IF Y THEN LET SAM00_K$(3,2)=PRIFY$ ELSE LET SAM00_K$(3,2)=FY$
3160 WRITE (SAM00_DEV,KEY=SAM00_K$)IOL=SAM00A
3170 NEXT Y
3200 REM " --- Write Cross Reference"
3205 IF ACTION<20 THEN GOTO 3250
3210 LET SAM21_K$=SAM_K$
3220 WRITE (SAM_DEV,KEY=SAM21_K$)IOL=SAM21X
3230 LET SAM21_K$(3,2)=PRIFY$
3240 WRITE (SAM_DEV,KEY=SAM21_K$)IOL=SAM21X
3250 IF ACTION>20 OR SA_CHANNELS[2]=0 THEN GOTO 3300
3260 GOSUB GET_XREF_KEY
3270 WRITE (SA_CHANNELS[2],KEY=SAM21_K$)IOL=SAM21X
3280 LET SAM21_K$(3,2)=PRIFY$
3290 WRITE (SA_CHANNELS[2],KEY=SAM21_K$)IOL=SAM21X
3300 GOTO 4000
3400 REM " --- Delete Sales Analysis Records"
3420 LET SAM00_K$(3,2)=FY$
3440 REMOVE (SAM00_DEV,KEY=SAM00_K$,DOM=3450)
3460 LET SAM00_K$(3,2)=PRIFY$
3480 REMOVE (SAM00_DEV,KEY=SAM00_K$,DOM=3490)
3500 REM " --- Delete Cross Reference"
3505 IF ACTION<20 THEN GOTO 3550
3510 LET SAM21_K$=SAM_K$
3520 REMOVE (SAM_DEV,KEY=SAM21_K$,DOM=3530)
3530 LET SAM21_K$(3,2)=PRIFY$
3540 REMOVE (SAM_DEV,KEY=SAM21_K$,DOM=3550)
3550 IF ACTION>20 OR SA_CHANNELS[2]=0 THEN GOTO 3600
3560 GOSUB GET_XREF_KEY
3570 REMOVE (SA_CHANNELS[2],KEY=SAM21_K$,DOM=3580)
3580 LET SAM21_K$(3,2)=PRIFY$
3590 REMOVE (SA_CHANNELS[2],KEY=SAM21_K$,DOM=3600)
3600 GOTO 0900
4000 REM " --- Selection Correct?"
4010 LET V4$="<F1>=Display Next Record    <Enter>=Continue"
4015 LET V0$="S",V1$="KSC",V2$="",V3$="",V0=1,V1=FNV(V4$),V2=22
4030 GOSUB 7000
4040 ON V3 GOTO 4050,4100,4000,4000,4900
4050 IF V$="HISTORY" THEN GOTO 2000
4060 IF V$<>"" THEN GOTO 4000
4070 GOTO 0900
4100 REM " --- Display Next Record"
4110 LET SAM_K$(KPOS[SEGMENTS]+FLDLEN[SEGMENTS])=FILL(KEYLEN,$FF$)
4120 READ (SAM_DEV,KEY=SAM_K$,DOM=4130)
4130 LET SAM_K$=KEY(SAM_DEV,END=800)
4140 IF POS(N0$+FY$=SAM_K$)<>1 THEN GOTO 0800
4190 FOR X=1 TO SEGMENTS
4200 LET FIELDS$[X]=SAM_K$(KPOS[X],FLDLEN[X])
4210 DIM X$[DESCSTR[X]],X$[DESCSTR[X]](DESCPOS[X]+DESCLEN[X]),DESC$(80-MAX_W-2)
4220 IF DESCCHAN[X]=0 THEN GOTO 4250
4230 IF LITERALS$[X]="Customer Ship-To" THEN LET DESCREC$[X]=FIELDS$[X-1]
4235 LET X$[DESCSTR[X]](DESCPOS[X])="Unknown "+LITERALS$[X]
4240 READ (DESCCHAN[X],KEY=N0$+DESCREC$[X]+FIELDS$[X],DOM=4260)IOL=DESCCHANA
4250 LET DESC$(1)=X$[DESCSTR[X]](DESCPOS[X],DESCLEN[X])
4260 LET FLD$=FIELDS$[X]
4270 IF TYPES$[X]="M" THEN LET FLD$=FNF$(FLD$(1,INLEN[X]),OMASKS$[X])
4275 IF FNP$(FLD$)="" AND LITERALS$[X]="Customer Ship-To" THEN LET DESC$(1)="Bill-To Address"
4280 IF LITERALS$[X]="Item" THEN LET DESC$(1)=FNITEM$(X$[DESCSTR[X]](DESCPOS[X],DESCLEN[X]),IV_DESC[1],IV_DESC[2],IV_DESC[3]),FLD$=FLD$(1,INLEN[X])
4285 LET DESC$(1)=FLD$+"  "+DESC$
4290 PRINT @(MAX_W+2,X+2),DESC$,
4300 NEXT X
4310 GOTO 1400
4900 REM " --- Return To Menu"
4990 GOTO 9900
5000 REM " --- Display"
5010 DIM TOTQTY[1],TOTSALES[1],TOTCOST[1]
5020 FOR X=0 TO PERIODS-1
5030 PRINT @(O[0],L0+1+X),QTY[X,0]:M2$,@(O[1]),SALES[X,0]:M1$,@(O[2]),COST[X,0]:M1$,@(O[3]),QTY[X,1]:M2$,@(O[4]),SALES[X,1]:M1$,@(O[5]),COST[X,1]:M1$,
5040 LET TOTQTY[0]=TOTQTY[0]+QTY[X,0],TOTQTY[1]=TOTQTY[1]+QTY[X,1]
5050 LET TOTSALES[0]=TOTSALES[0]+SALES[X,0],TOTSALES[1]=TOTSALES[1]+SALES[X,1]
5060 LET TOTCOST[0]=TOTCOST[0]+COST[X,0],TOTCOST[1]=TOTCOST[1]+COST[X,1]
5070 NEXT X
5080 PRINT @(O[0],21),TOTQTY[0]:M2$,@(O[1]),TOTSALES[0]:M1$,@(O[2]),TOTCOST[0]:M1$,@(O[3]),TOTQTY[1]:M2$,@(O[4]),TOTSALES[1]:M1$,@(O[5]),TOTCOST[1]:M1$,
5090 RETURN
6000 REM " --- Build Cross References"
6005 BUILD_XREFS: 
6010 DIM SFERX[NMBR]
6020 FOR X=1 TO NMBR
6030 LET SFERX[XREFS[X]]=X; REM "Reverse cross reference
6040 NEXT X
6050 REM " --- Using Cross Reference File"
6055 IF ACTION<20 THEN GOTO 6190
6060 LET SAM_DEV=SA_CHANNELS[2],MAX_SEGMENTS=1
6070 DIM XLEVELS$[NMBR],XLITERALS$[NMBR],XTYPES$[NMBR],XIMASKS$[NMBR],XOMASKS$[NMBR],XPROMPTS$[NMBR],XINLEN[NMBR],XFLDLEN[NMBR]
6080 DIM XDESCCHAN[NMBR],XDESCREC$[NMBR],XDESCSTR[NMBR],XDESCPOS[NMBR],XDESCLEN[NMBR]
6090 FOR X=1 TO NMBR
6100 LET XLEVELS$[XREFS[X]]=LEVELS$[X],XLITERALS$[XREFS[X]]=LITERALS$[X],XTYPES$[XREFS[X]]=TYPES$[X],XIMASKS$[XREFS[X]]=IMASKS$[X],XOMASKS$[XREFS[X]]=OMASKS$[X],XPROMPTS$[XREFS[X]]=PROMPTS$[X],XINLEN[XREFS[X]]=INLEN[X],XFLDLEN[XREFS[X]]=FLDLEN[X]
6110 LET XDESCCHAN[XREFS[X]]=DESCCHAN[X],XDESCREC$[XREFS[X]]=DESCREC$[X],XDESCSTR[XREFS[X]]=DESCSTR[X],XDESCPOS[XREFS[X]]=DESCPOS[X],XDESCLEN[XREFS[X]]=DESCLEN[X]
6120 NEXT X
6130 LET LEVELS$[ALL]=XLEVELS$[ALL],LITERALS$[ALL]=XLITERALS$[ALL],TYPES$[ALL]=XTYPES$[ALL],IMASKS$[ALL]=XIMASKS$[ALL],OMASKS$[ALL]=XOMASKS$[ALL],PROMPTS$[ALL]=XPROMPTS$[ALL],INLEN[ALL]=XINLEN[ALL],FLDLEN[ALL]=XFLDLEN[ALL]
6140 LET DESCCHAN[ALL]=XDESCCHAN[ALL],DESCREC$[ALL]=XDESCREC$[ALL],DESCSTR[ALL]=XDESCSTR[ALL],DESCPOS[ALL]=XDESCPOS[ALL],DESCLEN[ALL]=XDESCLEN[ALL]
6145 LET X=NMBR
6150 WHILE X>SEGMENTS
6155 LET LITERALS$[XREFS[X]]="",X=X-1
6160 WEND
6170 FOR X=1 TO SEGMENTS
6175 LET MAX_SEGMENTS=MAX(MAX_SEGMENTS,XREFS[X])
6180 NEXT X
6185 LET SEGMENTS=MAX_SEGMENTS
6190 RETURN
6200 REM " --- Build Cross Reference Key From Sales Analysis Key"
6205 GET_XREF_KEY: 
6210 LET X_K$=SAM00_K$(KPOS[0],FLDLEN[0]),SAM21_K$=SAM00_K$
6220 FOR X=1 TO SEGMENTS
6240 LET X_K$=X_K$+SAM00_K$(KPOS[SFERX[X]],FLDLEN[SFERX[X]])
6260 NEXT X
6280 LET SAM21_K$(1)=X_K$
6290 RETURN
6300 REM " --- Build Sales Analysis Key From Cross Reference Key"
6305 UN_XREF_KEY: 
6310 LET X_K$=SAM00_K$(KPOS[0],FLDLEN[0])
6320 FOR X=1 TO SEGMENTS
6340 LET X_K$=X_K$+SAM00_K$(KPOS[XREFS[X]],FLDLEN[XREFS[X]])
6360 NEXT X
6380 LET SAM00_K$(1)=X_K$
6390 RETURN
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8060 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8080 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9900 RUN "SYS.AA"
9999 END
