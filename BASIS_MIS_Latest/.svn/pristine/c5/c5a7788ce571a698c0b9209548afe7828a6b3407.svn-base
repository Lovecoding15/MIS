0010 REM "IVU - Inventory Period End Update"
0020 REM "Program IVU.CA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.3 - 15May97 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "18Mar97 WGH: Update IVM-17 for lotted/serialized items (1180)"
0032 REM "19Mar97 WGH: Use IVM-07 Unit Cost for lotted/serialized items (1110,1245,1270,1300)"
0033 REM "19Aug97 WGH: Use 10-char instead of 7-char for lot/serial location (1270)"
0040 REM 
0050 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=9
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="IVM-01",FILES$[2]="IVM-02",FILES$[3]="IVM-12"
0130 LET FILES$[4]="IVT-04",FILES$[5]="SYS-01",FILES$[6]="IVM-07"
0135 LET FILES$[7]="IVM-17",FILES$[8]="IVT-01",FILES$[9]="APM-06"
0140 LET OPTIONS$[2]="L",OPTIONS$[8]="R"
0160 CALL "SYC.DA",1,1,5,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0180 LET IVM01_DEV=CHANNELS[1],IVM02_DEV=CHANNELS[2],IVM12_DEV=CHANNELS[3]
0185 LET IVT04_DEV=CHANNELS[4],SYS01_DEV=CHANNELS[5]
0200 REM " --- IOLists
0210 IVM02A: IOLIST A0$,A1$,A2$,A[ALL]
0220 IVM12A: IOLIST B0$,B1$,B2$,B[ALL]
0230 IVM01A: IOLIST C0$,C1$,C2$,C3$,C4$,C5$,C6$,C[ALL]
0240 IVM17A: IOLIST B0$,B1$,B2$,B[ALL]
0250 IVM07A: IOLIST D0$,D1$,D[ALL]
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$,M4$,M5$
0280 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0285 APS01A: IOLIST X$,X$,X$,AP$(1)
0310 APM06A: IOLIST R0$,R1$,R[ALL]
0400 REM " --- Parameters"
0405 DIM INFO$[20],AP$(21)
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0415 LET N0$=F0$(16,2),N1$=F4$,N2$="IV",N3$=F5$,APFLAG$="N"
0420 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0425 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0430 CALL "SYC.VA","AP",INFO$[ALL]
0435 LET APFLAG$=INFO$[20]
0440 IF APFLAG$<>"Y" THEN GOTO 0450
0444 FIND (SYS01_DEV,KEY=N0$+"AP00",DOM=0450)IOL=APS01A
0446 LET APFLAG$=AP$(21,1)
0448 IF APFLAG$=" " THEN LET APFLAG$="N"
0450 DIM P[7],G[4]
0460 LET G[0]=NUM(G2$(1,2))
0470 LET P[0]=NUM(P2$(1,2)),P[2]=NUM(P2$(7,2)),P[6]=NUM(P4$(1,2)),P[7]=FNYY_YEAR(P4$(3,2))
0500 REM " --- Init Data"
0505 PRECISION NUM(P2$(5,1))
0540 DIM A[20],B[12],C[12],D[12],R[11]
0550 LET M0=LEN(M0$),M1=LEN(M1$),G5=LEN(G5$)
0560 DIM CHANNS[44],PARAMS[3],PARAMS$[4],ITEM$[3],REFS$[11],REFS[53]
0570 LET CHANNS[0]=SYS01_DEV,CHANNS[1]=IVM01_DEV,CHANNS[2]=IVM02_DEV
0575 LET CHANNS[7]=IVM07_DEV,CHANNS[12]=IVM12_DEV,CHANNS[17]=IVM17_DEV
0580 LET CHANNS[41]=IVT01_DEV,CHANNS[44]=IVT04_DEV
0585 LET PARAMS[0]=P[0],PARAMS$[0]=F0$(7,3),PARAMS$[1]=F0$(4,3)
0590 LET PARAMS$[2]=P2$,PARAMS$[3]=P3$,PARAMS$[4]=P4$
0607 REM " --- Check on Lot/Serial Flag"
0610 LET LS$="N"
0620 IF POS(P3$(17,1)="LS")=0 THEN GOTO 0660
0630 CALL "SYC.DA",1,6,8,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0635 IF STATUS>0 THEN GOTO 9900
0640 LET IVM07_DEV=CHANNELS[6],IVM17_DEV=CHANNELS[7],IVT01_DEV=CHANNELS[8]
0645 LET CHANNS[7]=IVM07_DEV,CHANNS[17]=IVM17_DEV,CHANNS[41]=IVT01_DEV
0650 LET LS$=P3$(17,1)
0660 REM " --- Check on Replenishment"
0665 IF APFLAG$="N" THEN GOTO 0700
0670 CALL "SYC.DA",1,9,9,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0680 IF STATUS>0 THEN LET APFLAG$="N"
0690 LET APM06_DEV=CHANNELS[9]
0700 REM " --- Background"
0710 CALL "SYC.WC",1,0,80,0,0,4,0
0800 REM " --- Determine Period Limits"
0810 CALL "SYC.PA",SYS01_DEV,P[6],P[7],V0$,V9$,STATUS
0820 LET P8$=V0$,P9$=V9$,P9=P[6]
0830 LET H3$="Period "+STR(P[6])+"  From "+FNB$(V0$)+" To "+FNB$(V9$)
0840 PRINT @(FNC(H3$,80),3),H3$,
0850 CALL "SYC.CA",V9$,WHEN$,1
0900 REM " --- Correct?"
0910 CALL "SYC.YN",0,"Are You Ready To Close This Period",0,V$,V3
0920 IF V3=4 THEN GOTO 9900
0930 IF V$="NO" THEN GOTO 9900
0940 IF V$<>"YES" THEN GOTO 0900
0950 CALL "SYC.NB","Updating",3+P[0],COLUMN
0960 LET REFS$[0]=WHEN$
0970 REM " --- Disallow 'M'enu option in Error Routine
0980 LET EXIT_CTRL=1
1000 REM " --- Process IVM-02"
1020 READ (IVM02_DEV,KEY=N0$,DOM=1030)
1100 REM " --- Main Read"
1120 LET K0$=KEY(IVM02_DEV,END=2000)
1130 IF K0$(1,2)<>N0$ THEN GOTO 2000
1140 READ (IVM02_DEV)IOL=IVM02A
1160 READ (IVM01_DEV,KEY=A0$(1,2)+A0$(5,20),DOM=1100)IOL=IVM01A
1170 PRINT @(COLUMN,11),K0$(3,2)," ",K0$(5,P[0]),
1180 IF LS$="N" OR C2$(19,2)<>"YY" THEN GOTO 1300
1190 READ (IVM07_DEV,KEY=A0$(1,24),DOM=1191)
1200 REM " --- Check for Serial Numbers"
1210 LET K07$=KEY(IVM07_DEV,END=1300)
1220 IF POS(A0$(1,24)=K07$)<>1 THEN GOTO 1300
1230 READ (IVM07_DEV)IOL=IVM07A
1240 FIND (IVM17_DEV,KEY=K07$+P4$(3,2)+P4$(1,2),DOM=1200)IOL=IVM17A
1250 CALL "IVC.PA","END",B[ALL],BALANCE
1260 LET ITEM$[0]=N0$,ITEM$[1]=A0$(3,2),ITEM$[2]=A0$(5,20),ITEM$[3]=B0$(25,20)
1270 LET REFS$[10]=D1$(1,10),REFS$[11]=D1$(14,40),REFS[0]=BALANCE,REFS[1]=D[3]
1280 CALL "IVC.UA","BB",CHANNS[ALL],PARAMS[ALL],PARAMS$[ALL],ITEM$[ALL],REFS$[ALL],REFS[ALL],STATUS
1290 GOTO 1200
1400 FIND (IVM12_DEV,KEY=K0$+P4$(3,2)+P4$(1,2),DOM=1100)IOL=IVM12A
1410 CALL "IVC.PA","END",B[ALL],BALANCE
1415 LET ITEM$[0]=N0$,ITEM$[1]=A0$(3,2),ITEM$[2]=A0$(5,20),ITEM$[3]=""
1420 LET REFS$[10]="",REFS$[11]="",REFS[0]=BALANCE,REFS[1]=A[11]
1440 CALL "IVC.UA","BB",CHANNS[ALL],PARAMS[ALL],PARAMS$[ALL],ITEM$[ALL],REFS$[ALL],REFS[ALL],STATUS
1490 GOTO 1100
3000 REM " --- Update Replenishment File - Year End Only"
3010 IF APFLAG$="N" OR P9<>G[0] THEN GOTO 4000
3020 DIM R[11]
3090 READ (APM06_DEV,KEY=N0$,DOM=3100)
3100 LET KEY$=KEY(APM06_DEV,END=4000)
3110 IF POS(N0$=KEY$)<>1 THEN GOTO 4000
3120 EXTRACT (APM06_DEV,KEY=KEY$)IOL=APM06A
3130 LET R[4]=R[7],R[7]=0
3140 LET R[5]=R[8],R[8]=0
3150 LET R[6]=R[9],R[9]=0
3180 WRITE (APM06_DEV,KEY=KEY$)IOL=APM06A
3190 GOTO 3100
4000 REM " --- Increment Period"
4010 IF P9<P[6] THEN GOTO 4100
4020 LET P[6]=P[6]+1
4030 IF P[6]>G[0] THEN LET P[6]=1,P[7]=P[7]+1
4050 EXTRACT (SYS01_DEV,KEY=N0$+N2$+"00",DOM=4060)IOL=IVS01A
4060 LET P4$(1,2)=STR(P[6]:"00"),P4$(3,2)=FNYEAR_YY21$(P[7])
4070 WRITE (SYS01_DEV,KEY=N0$+N2$+"00")IOL=IVS01A
4100 GOTO 9900
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
