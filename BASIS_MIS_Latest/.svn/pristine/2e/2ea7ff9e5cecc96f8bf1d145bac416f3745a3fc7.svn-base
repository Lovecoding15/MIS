0001 SETERR ERROR
0010 rem LET TRACELOG$="/var/www/ec/trace.log",DEBUG=UNT; OPEN (DEBUG)TRACELOG$
0020 rem SETTRACE (DEBUG)
0030 REM E-commerce (on-line serial# search & ordering) <e_com.bbx>
0040 IF REENTRY THEN GOTO REENTRY_POINT
0050 LET QUO$=$22$,LF$=$0A$,SP$="&#160; &#160;"
0060 LET DATSRV$=STBL("datsrv"),ADATA$=STBL("adata"),CO$=STBL("cmp"),EXEC$=STBL("exec")
0070 REM CALL "utaddr.wbb"
0080 CALL "utcgi.wbb",ENV$,CGI$,ERRMSG$
0090 DEF FNCGIFLD$(FLD$)
0100 LET TMP$="",TMP$=FIELD(CGI$,FLD$,ERR=ENDCGIFLD)
0110 ENDCGIFLD: RETURN TMP$
0120 FNEND
0130 LET CN$="",CN$=FIELD(ENV$,"REMOTE_USER",ERR=EOJ)
0140 GOSUB GET_CN
0150 LET ACT$=FNCGIFLD$("act"),SN$=FNCGIFLD$("sn"),SN$=CVS(SN$,6),SNOP$=FNCGIFLD$("snop"),ITM$=FNCGIFLD$("itm"),ITM$=CVS(ITM$,6)
0160 LET SELCT$=FNCGIFLD$("selct"),USR$=FNCGIFLD$("usr"),PAGE$=FNCGIFLD$("page"),QTY$=FNCGIFLD$("qty"),MED$=FNCGIFLD$("med")
0170 LET RVS$=FNCGIFLD$("rvs"),PRC$=FNCGIFLD$("prc"),PO$=FNCGIFLD$("po"),COM$=FNCGIFLD$("com"),PGM$=FNCGIFLD$("pgm"),LSN$=FNCGIFLD$("lsn"),LSN$=CVS(LSN$,4)
0180 LET EMADDR$=FNCGIFLD$("emaddr")
0190 EDIT_EMADDR: LET N=POS($0A$=EMADDR$); IF N THEN LET EMADDR$(N,1)=" "; GOTO EDIT_EMADDR ELSE LET EMADDR$=CVS(EMADDR$,3)
0200 LET POLNK$=""; IF PO$<>"" THEN CALL "utsub.wbb",PO$," ","_"; LET POLNK$="&po="+PO$
0210 LET C=LEN(COM$); IF C>250 THEN LET COM$=COM$(1,250)
0220 REM LET HTML$="<html><body bgcolor=ivory text=darkred><font size=4>"; CALL "uttags.wbb","h2",CNAME$,HTML$
0230 LET HTML$="<html><body bgcolor=snow text=darkred><b><font size=1 color=black>Serial Number Info / Ordering</font></b><br><img src=https://www.basis.cloud/sites/basis.cloud/files/amity_island_logo.jpg align=bottom><font size=6>"+SP$+SP$+"<u>"+CNAME$+"</u></font><font size=4>"+LF$
0235 rem ' remove these links
0240 rem ' LET DILINK$=""; CALL "uttags.wbb","href http://www.basis.cloud/distributors/index.html","Back to Distributor Page",DILINK$
0250 rem ' LET CDLINK$=""; CALL "uttags.wbb","href http://www.basis.cloud/devtools/cdrom.html","CD-ROM Indexes",CDLINK$
0260 rem ' LET REVINFO$="For the latest information on available revisions, see the "+CDLINK$+" page."
0270 rem ' OSINFO$="For complete operating system descriptions see the "+CDLINK$+" page."
0280 rem ' LET PALINK$=""; CALL "uttags.wbb","href http://www.basis.cloud/devtools/availability.html","Product Availability",PALINK$
0290 LET HDR$="",DTL$="",SNSEL$="",FOUND_SN=0; IF SN$<>"" THEN GOSUB FIND_SN
0300 LET FSNLINK$="",NPLINK$=""; CALL "uttags.wbb","href "+EXEC$+"?sn="+CVS(SN$,2)+POLNK$,"Find serial number",FSNLINK$;rem 'CALL "uttags.wbb","href "+EXEC$+"?act=np"+POLNK$,"Order new product",NPLINK$
0310 IF PGM$<>"" THEN RUN PGM$+".bbx"
0320 REENTRY_POINT: LET PGM$="",REENTRY=0
0330 IF ACT$="Finish" THEN GOTO FINISH_PAGE
0340 REM IF ACT$="" AND (SNOP$<>"" OR ITM$<>"") THEN LET ACT$="Next"; REM act not set when ENTER is pressed, so set a default
0350 IF POS(ACT$="GonpNextBack") AND POS(SNOP$="Add Users Update Revision")=0 THEN GOTO NP_PAGE
0360 REM IF ACT$="Go" AND POS(SNOP$="Add Users Update Revision")=0 THEN GOTO NP_PAGE
0370 SN_PAGE: goto end_options;rem 'IF FOUND_SN=0 THEN GOTO END_OPTIONS
0380 IF SNM01.ACTIVE_FLAG$="N" THEN GOTO END_OPTIONS
0390 IF POS("DEMO"=CVS(LTYPE$,4)) OR POS("DM"=CVS(LTYPE$,4)) THEN GOTO END_OPTIONS
0400 DIM SOPT$[4]; LET SOPT$[1]="Add Users",SOPT$[2]="Update Revision",SOPT$[3]="Platform Exchange",SOPT$[4]="Upgrade to P5"
0410 IF SNM01.SERIAL_NBR$(1,3)<>"BBX" THEN LET SOPT$[4]=""
0420 IF SNM01.SERIAL_NBR$(1,3)="BBX" THEN LET SOPT$[2]="",SOPT$[3]=""
0430 IF PORT$(1,2)="15" THEN LET SOPT$[1]="",SOPT$[3]=""
0440 IF PORT$(1,2)="14" THEN LET SOPT$[3]=""
0450 LET OP_COUNT=4,SELTXT$="Option:",SELNAME$="snop",SBTN$="Go"; GOSUB SELECT_OPTIONS
0460 LET SNSEL$=SOTMP$
0470 END_OPTIONS: 
0480 IF POS(ACT$="Go Next Back") THEN LET BTN_OK=0 ELSE LET BTN_OK=1
0490 IF SNOP$="Add Users" THEN LET PAGETEST$="upnc" ELSE LET PAGETEST$="rumpnc"
0500 IF ACT$="Go" THEN LET PAGE$="",ACT$="Next"
0510 LET PL=LEN(PAGE$)
0520 IF ACT$="Next" THEN LET PAGE$=PAGETEST$(1,PL+1)
0530 IF ACT$="Back" THEN IF PL=1 THEN LET PAGE$="" ELSE LET PAGE$=PAGETEST$(1,PL-1)
0540 IF PAGE$="" THEN LET ACT$="",BTN_OK=1
0550 LET BTN1$="",BTN2$="",BTN3$=""
0560 IF BTN_OK THEN CALL "uttags.wbb","submit act","Search",BTN1$; CALL "uttags.wbb","submit act","<<",BTN2$; CALL "uttags.wbb","submit act",">>",BTN3$
0570 LET SETUP$="<table><tr><td><b> Find Serial Number:</b></td>"+LF$+"<td><input name=sn size=13 maxlength=12 value="+SN$+"> </td>"+LF$
0580 LET SETUP$=SETUP$+"<td>"+BTN1$+"</td>"+LF$+"<td>"+BTN2$+"</td>"+LF$+"<td>"+BTN3$+"</td>"+LF$+"</tr></table>"+HDR$+DTL$
0590 IF BTN_OK THEN LET SETUP$=SETUP$+SNSEL$,UNHIDE$="snop rvs"; GOTO PAGE_END
0600 CALL "uttags.wbb","form "+EXEC$,SETUP$,HTML$
0610 GOTO PAGE_SWITCH
0620 NP_PAGE: 
0630 LET PAGETEST$="qumpnc"; IF SNOP$<>"" THEN LET PAGETEST$="umpnc"
0640 LET P=POS(PAGE$=PAGETEST$),PL=LEN(PAGE$)
0650 IF P AND ACT$="Next" THEN LET PAGE$=PAGETEST$(1,PL+1)
0660 IF P AND ACT$="Back" THEN IF PL=1 THEN LET PAGE$="" ELSE LET PAGE$=PAGE$(1,PL-1)
0670 IF PAGE$="" THEN GOSUB CHECK_ITM
0680 IF SNOP$<>"" THEN LET H4$=SNOP$+" "+SN$ ELSE LET H4$="New Product"
0690 CALL "uttags.wbb","h4",H4$,SETUP$
0700 LET SETUP$=SETUP$+"<table><tr><td> Part Number: </td>"+LF$
0710 LET SETUP$=SETUP$+"<td><input name=itm size=24 maxlength=15 value="+ITM$+"> </td>"+LF$
0720 LET BTN$=""; IF PAGE$="" THEN CALL "uttags.wbb","submit act","Next",BTN$
0730 LET SETUP$=SETUP$+"<td>"+BTN$+"</td></tr></table>"+LF$
0740 LET UNHIDE$="itm"; GOSUB HIDDEN
0750 CALL "uttags.wbb","form "+EXEC$,SETUP$,HTML$
0760 PAGE_SWITCH: 
0770 IF PAGE$="" THEN GOTO END_PAGE_SWITCH
0780 IF PAGE$(LEN(PAGE$),1)="q" THEN GOTO QTY_PAGE
0790 IF PAGE$(LEN(PAGE$),1)="u" THEN GOTO USR_PAGE
0800 IF PAGE$(LEN(PAGE$),1)="m" THEN GOTO MED_PAGE
0810 IF PAGE$(LEN(PAGE$),1)="p" THEN GOTO PRC_PAGE
0820 IF PAGE$(LEN(PAGE$),1)="n" THEN GOTO PO_PAGE
0830 IF PAGE$(LEN(PAGE$),1)="c" THEN GOTO COM_PAGE
0840 IF PAGE$(LEN(PAGE$),1)="r" THEN GOTO REV_PAGE
0850 END_PAGE_SWITCH: LET SETUP$="OR"+NXTLIST$; GOTO PAGE_END
0860 QTY_PAGE: 
0870 IF QTY$="" THEN LET QTY$="1"
0880 LET SETUP$="<table><tr><td> Order Quantity: </td>"
0890 LET SETUP$=SETUP$+"<td><input name=qty size=6 maxlength=4 value="+QTY$+"> </td>"+LF$
0900 GOSUB ADD_BUTTONS
0910 LET UNHIDE$="qty"; GOTO PAGE_END
0920 USR_PAGE: 
0930 LET U=0,U1=NUM(USR$)
0940 IF SN$<>"" THEN LET U=SNM01.USERS; IF PORT$(1,3)="146" AND U=0 THEN LET U=1
0950 LET C$="Current users:",U$=STR(U)
0960 LET UTEXT$="Additonal users:"; IF SNOP$="" THEN LET UTEXT$="Total users:",C$="",U$=""; IF QTY$>"1" THEN LET UTEXT$="Users per serial#:"
0970 LET SETUP$="<table><tr><td> "+UTEXT$+" </td>"
0980 LET SETUP$=SETUP$+"<td><input name=usr size=6 maxlength=4 value="+USR$+"> </td>"+LF$
0990 LET BTN$=""; CALL "uttags.wbb","submit act","Next",BTN$
1000 LET SETUP$=SETUP$+"<td>"+BTN$+"</td></tr>"+LF$+"<tr><td>"+C$+"</td><td>"+U$+"</td>"
1010 LET BTN$=""; CALL "uttags.wbb","submit act","Back",BTN$
1020 LET SETUP$=SETUP$+"<td>"+BTN$+"</td></tr></table>"+LF$
1030 LET UNHIDE$="usr"; GOTO PAGE_END
1040 MED_PAGE: 
1050 DIM SOPT$[2]; LET SOPT$[2]="CD-ROM",SOPT$[1]="None",MATCH$=MED$
1060 LET OP_COUNT=2,SELTXT$="Media:",SELNAME$="med",SBTN$="Next",BTN2$="Back"; GOSUB SELECT_OPTIONS
1070 LET SETUP$=SOTMP$,UNHIDE$="med"; GOTO PAGE_END
1080 PRC_PAGE: 
1090 LET U0=NUM(USR$),U1=U0,TYPE$="NEW",PROD$=ITM$+"   ",PROD$=PROD$(1,3)
1100 IF SN$<>"" THEN LET U0=SNM01.USERS; IF PROD$="   " THEN LET PROD$=SNM01.PRODUCT$
1110 IF POS("Add"=SNOP$) THEN LET TYPE$="ADD",U0=U1,U1=0
1120 IF POS("Update"=SNOP$) THEN LET TYPE$="UPD"; IF PREV$(1,1)=RVS$(1,1) THEN LET TYPE$="UNC"
1130 IF POS("Upgrade"=SNOP$) THEN LET TYPE$="UG4"
1140 IF POS("Platform"=SNOP$) THEN LET TYPE$="PLX"
1150 LET PR1=0,PR2=0; IF TYPE$="NEW" AND POS("D60"=ITM$)=13 THEN GOTO 1180
1160 IF TYPE$<>"UNC" THEN CALL "e_price.bbx",U0,PROD$,TYPE$,DSC_CODE$,PR1
1170 IF TYPE$<>"NEW" AND U1 THEN CALL "e_price.bbx",U1,PROD$,"ADD",DSC_CODE$,PR2
1180 LET Q=NUM(QTY$); IF Q=0 THEN LET Q=1
1190 LET PRC$=STR(Q*(PR1+PR2):"###,###.00")
1200 LET SETUP$="<table><tr><td> Total price: </td><td><input name=prc size=12 maxlength=10 value="+PRC$+"> </td>"+LF$
1210 GOSUB ADD_BUTTONS
1220 LET UNHIDE$="prc"; GOTO PAGE_END
1230 REV_PAGE: 
1240 CALL "e_port.bbx",PORT$(1,5),ITEM$,RL$,OPCOUNT
1250 DIM SOPT$[OP_COUNT]; LET SELTXT$="Select Revision:",SELNAME$="rvs",SBTN$="Next",BTN2$="Back"
1260 FOR I=1 TO OP_COUNT
1270 LET P=POS($0A$=RL$); IF P THEN LET SOPT$[I]=SOPT$[I]+CVS(RL$(1,P-1),2),RL$=RL$(P+1)
1280 NEXT I; LET MATCH$=RVS$; GOSUB SELECT_OPTIONS; LET SETUP$=SOTMP$+REVINFO$,UNHIDE$="rvs"
1290 GOTO PAGE_END
1300 PO_PAGE: 
1310 LET SETUP$="<table><tr><td> Your PO#: </td><td><input name=po size=30 maxlength=30 value="+PO$+"> </td>"+LF$
1320 GOSUB ADD_BUTTONS; LET UNHIDE$="po"; GOTO PAGE_END
1330 COM_PAGE: 
1340 LET SETUP$="Comments, special instructions:<br> <textarea name=com cols=50 rows=2 wrap=physical>"+COM$+"</textarea><br>"
1350 LET BTN$=""; CALL "uttags.wbb","submit act","Finish",BTN$; LET SETUP$=SETUP$+BTN$
1360 LET BTN$=""; CALL "uttags.wbb","submit act","Back",BTN$; LET SETUP$=SETUP$+BTN$
1370 LET UNHIDE$="com"; GOTO PAGE_END
1380 FINISH_PAGE: 
1390 REM IF EMADDR$="" THEN CALL "e_emaddr.bbx",CN$,CO$,EMADDR$
1400 LET HD$=SNOP$+" - "+SN$; IF SNOP$="" THEN LET HD$="New Product"
1410 IF POS("Upgrade"=SNOP$) OR POS("Platform"=SNOP$) THEN LET HD$=HD$+" (this serial number will be deactivated)"
1420 LET SETUP$="<h3>"+HD$+"</h3>"+LF$; IF ITM$<>"" THEN LET SETUP$=SETUP$+"Part number: "+ITM$+"<br>"
1430 IF RVS$<>"" THEN LET SETUP$=SETUP$+"Revision: "+RVS$+"<br>"+LF$
1440 IF SNOP$="" THEN LET SETUP$=SETUP$+" Order Quantity: "+QTY$+"<br>"+LF$
1450 IF SN$<>"" THEN LET U=SNM01.USERS; IF PORT$(1,3)="146" AND U=0 THEN LET U=1
1460 LET UDESC$="Total users: "; IF SNOP$="" AND QTY$<>"1" THEN LET UDESC$="Users per product: "
1470 IF U THEN LET UDESC$="Current users: "+STR(U)+SP$+"Additional users: ",UTOT$=SP$+"Total users: "+STR(NUM(USR$)+U)
1480 IF USR$<>"" THEN LET SETUP$=SETUP$+UDESC$+USR$+UTOT$+"<br>"+LF$
1490 IF MED$<>"" THEN LET SETUP$=SETUP$+"Media: "+MED$+"<br>"+LF$
1500 IF PRC$<>"" THEN LET SETUP$=SETUP$+"Price: "+PRC$+"<br>"+LF$
1510 IF PO$<>"" THEN LET SETUP$=SETUP$+"Purchase order: "+PO$+"<br>"+LF$
1520 IF COM$<>"" THEN LET SETUP$=SETUP$+"Comments: <br>"+LF$+COM$+"<br>"+LF$
1530 LET SETUP$=SETUP$+"<br>Your email address: <textarea name=emaddr cols=30 rows=1 wrap=physical>"+EMADDR$+"</textarea><br><br>"+LF$
1540 LET PGM$="e_confirm",UNHIDE$="emaddr",BTN$=""
1550 CALL "uttags.wbb","submit act","Submit",BTN$; LET SETUP$=SETUP$+BTN$; GOTO PAGE_END
1560 PAGE_END: 
1570 GOSUB HIDDEN
1580 CALL "uttags.wbb","form "+EXEC$,SETUP$,HTML$; LET HTML$=HTML$+"<hr>"+LF$
1590 LET HTML$=HTML$+FSNLINK$+" | "; rem ' +NPLINK$+"  | "
1600 CALL "uttags.wbb","href "+EXEC$+"?sn="+CVS(SN$,2)+"&lsn="+CVS(LSN$,2)+"&pgm=e_lsn"+POLNK$,"List serial numbers",HTML$
1610 rem ' LET HTML$=HTML$+" |<br>"+CDLINK$+" | "+PALINK$+" | "+DILINK$+" | "+LF$+"</font></body></html>"
1611 rem ' removed CDLINK$, PALINK$ and DILINK$ see next line
1612 LET HTML$=HTML$+LF$+"</font></body></html>"
1620 GOTO EOJ
1630 ADD_BUTTONS: 
1640 LET BTN$=""; CALL "uttags.wbb","submit act","Next",BTN$
1650 LET SETUP$=SETUP$+"<td>"+BTN$+"</td></tr><tr><td></td><td></td>"
1660 LET BTN$=""; CALL "uttags.wbb","submit act","Back",BTN$
1670 LET SETUP$=SETUP$+"<td>"+BTN$+"</td></tr></table>"+LF$
1680 RETURN
1690 FIND_SN: 
1700 DIM SNT01$:"SERIAL_NBR:C(20),TRANS_DATE:C(3),SN_DET_SEQ:C(5*),CUSTOMER_NBR:C(6),INV_NBR:C(7),SEQUENCE_NBR:C(3),TYPE_OF_SALE:C(3),PRODUCT_REV:C(3),AUTH_CODE:C(15),SERVER_NBR:C(20*),FIRM_ID:C(2),ACTION:C(1),FIXED_FLOAT:C(1),DEALER_STR:C(36*),USERS:N(5*),EXT_PRICE:N(7*),LICENSE_CNT:N(7*),NUM1:N(1*),NUM2:N(1*),NUM3:N(1*)"
1710 DIM SNM01$:"SERIAL_NBR:C(20*),SERIAL_DESC:C(60*),PRODUCT:C(3),PLATFORM:C(3),OS_LEVEL:C(3),PRODUCT_REV:C(3),LICENSE_TYPE:C(3),MEDIA_TYPE:C(3*),ACTIVE_FLAG:C(1),ORIG_SALE:C(3),CUSTOMER_NBR:C(6),PORT_ID:C(5),FIRM_ID:C(2),CONTRACT:C(6),SAM_ACTIVE:C(1),AVAIL_EXPIRE:C(8),DEALER_STR:C(3*),COMMENT:C(60*),USERS:N(5*),DIST_RESET:N(1*),AVAIL_SUPPORT:N(1*)"
1720 LET SN$=SN$+FILL(20),SN$=SN$(1,20),SK$=SN$
1730 LET FIL$="SNM-01",CHNL=UNT,SNM01=CHNL; GOSUB OPEN_FILE
1740 FSN: READ (SNM01,KEY=CVS(SK$,2),DOM=FSN1)
1750 FSN1: LET SK$=KEY(SNM01,ERR=SNM01END)
1760 IF ACT$=">>" THEN LET SK$=KEYN(SNM01,ERR=SNM01END)
1770 IF ACT$="<<" THEN LET SK$=KEYP(SNM01,ERR=SNM01END)
1780 READ RECORD (SNM01,KEY=SK$,DOM=SNM01END)SNM01$
1790 IF SNM01.CUSTOMER_NBR$=CN$ THEN LET FOUND_SN=1 ELSE IF POS(ACT$=">><<") THEN GOTO FSN ELSE GOTO FSN1
1800 SNM01END: 
1810 CLOSE (SNM01)
1820 IF POS(ACT$="Search>><<") THEN LET PAGE$="",SNOP$="",RVS$="",USR$="",QTY$="1",PRC$="",ITM$=""
1830 IF FOUND_SN=0 THEN LET HDR$="Not found",SN$=""; GOTO END_FIND_SN
1840 LET SN$=SNM01.SERIAL_NBR$,IMDESC$="No description",FIL$="CSM-01",CHNL=UNT,CSM01=CHNL; GOSUB OPEN_FILE
1850 READ (CSM01,KEY=FIRM$+SNM01.PRODUCT$)*,PRDDESC$; CLOSE (CSM01)
1860 LET P=POS("("=PRDDESC$); IF P THEN LET PRDDESC$=PRDDESC$(1,P-1)
1870 LET FIL$="CSM-02",CHNL=UNT,CSM02=CHNL; GOSUB OPEN_FILE
1880 READ (CSM02,KEY=FIRM$+SNM01.PLATFORM$)*,PLTDESC$; CLOSE (CSM02)
1890 LET IMDESC$=CVS(PRDDESC$,2)+" "+CVS(PLTDESC$,2)
1900 LET FIL$="CSM-03",CHNL=UNT,CSM03=CHNL; GOSUB OPEN_FILE
1910 READ (CSM03,KEY=FIRM$+SNM01.OS_LEVEL$)*,*,PORT$; CLOSE (CSM03)
1920 LET PREV$=SNM01.PRODUCT_REV$,FIL$="CSM-04",CHNL=UNT,CSM04=CHNL; GOSUB OPEN_FILE
1930 READ (CSM04,KEY=FIRM$+SNM01.PRODUCT_REV$,DOM=PREV_END)*,PREV$
1940 PREV_END: 
1950 LET P=POS(" "=PREV$); IF P THEN LET PREV$=PREV$(1,P)
1960 LET PREV$=CVS(PREV$,3)
1970 LET LTYPE$=SNM01.LICENSE_TYPE$,FIL$="CSM-05",CHNL=UNT,CSM05=CHNL; GOSUB OPEN_FILE
1980 READ (CSM05,KEY=FIRM$+SNM01.LICENSE_TYPE$,DOM=LTYPE_END)*,LTYPE$
1990 LTYPE_END: CLOSE (CSM05); LET P=POS("("=LTYPE$); IF P THEN LET LTYPE$=LTYPE$(1,P-1)
2000 LET NO_SAM=(CVS(SNM01.contract$,3)=""); IF NO_SAM THEN GOTO end_sam
2010 DIM SMC01$:"CONTRACT:C(6),FIRM_ID:C(2),CUSTOMER_NBR:C(6),CONTR_START:C(8),ANNUAL_DT:C(8),EXPIRE_ON_DT:C(8),CONTR_TYPE:C(3),SAM_ACTIVE:C(1),E_MAIL:C(80),NEW_FLAG:C(1),INVOICED_FLAG:C(1),COMMENT:C(60),SAM_CREDIT:C(8),AVAILABLE:C(64)"
2020 LET FIL$="SMC-01",CHNL=UNT,FOUND=0; GOSUB OPEN_FILE
2030 READ RECORD (CHNL,KEY=SNM01.contract$,DOM=*NEXT)smc01$; LET FOUND=1
2040 CLOSE (CHNL); IF FOUND=0 THEN LET NO_SAM=1; GOTO end_sam
2050 LET X9$=SMC01.contr_start$; GOSUB unpack_date; LET START_DT$=X9$
2060 if smc01.sam_active$="Y" and snm01.sam_active$="N" then let smc01.annual_dt$(1,4)=str(num(smc01.annual_dt$(1,4))-1:"0000")
2070 LET X9$=SMC01.annual_dt$; GOSUB unpack_date; LET ANNUAL_DT$=X9$
2080 LET X9$=SMC01.expire_on_dt$; GOSUB unpack_date; LET expire_DT$=X9$
2090 end_sam: IF NO_SAM THEN DIM TB$[6,1] ELSE DIM TB$[9,1]
2100 LET YN$="Yes"; IF SNM01.ACTIVE_FLAG$="N" THEN LET YN$="No"
2110 LET U$=str(SNM01.USERS)
2120 DIM SNM02$:"SERIAL_NBR:C(20),UPG_TO_PRODUCT:C(3),UPG_TO_REV:C(3),LIC_PROPERTY1:C(2),LIC_PROPERTY2:C(2),LIC_PROPERTY3:C(2),ODBC_RW:C(1),EXP_DAYS_DT:C(8),AVAILABLE:C(56),SEP1:C(1*),USERS1:N(5*),USERS2:N(5*),USERS3:N(5*),NUM_1:N(1*),NUM_2:N(1*)"
2130 LET FIL$="SNM-02",CHNL=UNT;GOSUB OPEN_FILE
2140 READ RECORD (CHNL,KEY=SNM01.serial_nbr$,DOM=*NEXT)snm02$
2150 CLOSE (CHNL)
2160 if snm02.users1 then u$=str(snm02.users1)+snm02.lic_property1$;if snm02.users2 then u$=u$+"/"+str(snm02.users2)+snm02.lic_property2$
2170 LET TB$[1,0]="Description",TB$[1,1]=IMDESC$,TB$[2,0]="Port",TB$[2,1]=PORT$(1,4),TB$[3,0]="Revision",TB$[3,1]="align=center\"+PREV$,TB$[4,0]="Users",TB$[4,1]="align=center\"+U$,TB$[5,0]="ProductType",TB$[5,1]="align=center\"+LTYPE$,TB$[6,0]="Active",TB$[6,1]="align=center\"+YN$
2180 IF NO_SAM=0 THEN LET TB$[7,0]="SAM Start",TB$[7,1]=START_DT$,TB$[8,0]="SAM Renew",TB$[8,1]=ANNUAL_DT$,TB$[9,0]="SAM Commitment",TB$[9,1]=expire_DT$
2190 CALL "uttable.wbb","","border=1",TB$[ALL],HDR$
2200 LET TMP$=HDR$; GOSUB EDIT_TABLE; LET HDR$=TMP$
2210 LET FIL$="SNT-01",CHNL=UNT,SNT01=CHNL; GOSUB OPEN_FILE
2220 LET FIL$="CSM-07",CHNL=UNT,CSM07=CHNL; GOSUB OPEN_FILE
2230 LET X=0,COUNTEM=1
2240 START_SNT01: READ (SNT01,KEY=SN$,ERR=READ_SNT01)
2250 READ_SNT01: 
2260 READ RECORD (SNT01,END=SNT01END)SNT01$
2270 IF SNT01.SERIAL_NBR$<>SN$ THEN GOTO SNT01END
2280 IF COUNTEM THEN LET X=X+1; GOTO READ_SNT01
2290 LET X9$=SNT01.TRANS_DATE$; GOSUB unpack_date
2300 LET TB$[1,X]=X9$,TTYPE$=SNT01.TYPE_OF_SALE$
2310 READ (CSM07,KEY=FIRM$+SNT01.TYPE_OF_SALE$,DOM=END_CSM07)*,TTYPE$
2320 END_CSM07: 
2330 LET TB$[2,X]=SNT01.INV_NBR$,TB$[3,X]=CVS(TTYPE$,3),TREV$=SNT01.PRODUCT_REV$
2340 READ (CSM04,KEY=FIRM$+SNT01.PRODUCT_REV$,DOM=TREV_END)*,TREV$
2350 TREV_END: 
2360 LET P=POS(" "=TREV$); IF P THEN LET TREV$=TREV$(1,P)
2370 LET TREV$=CVS(TREV$,3)
2380 IF CVS(SNT01.AUTH_CODE$,2)="" THEN LET SNT01.AUTH_CODE$="-"
2390 LET U=SNT01.USERS; IF PORT$(1,3)="146" AND TTYPE$="NEW" AND U=0 THEN LET U=1
2400 LET TB$[4,X]="align=center\"+TREV$,TB$[5,X]="align=center\"+STR(U),TB$[6,X]=SNT01.AUTH_CODE$,X=X-1
2410 GOTO READ_SNT01
2420 SNT01END: 
2430 IF COUNTEM THEN DIM TB$[6,X]; LET ROW=X; LET COUNTEM=0; GOTO START_SNT01
2440 CLOSE (SNT01); CLOSE (CSM04); CLOSE (CSM07)
2450 LET TB$[1,0]="Date",TB$[2,0]="Invoice#",TB$[3,0]="TransactionType",TB$[4,0]="Revision",TB$[5,0]="Users",TB$[6,0]="Key/Authorization"
2460 CALL "uttable.wbb","","border=1",TB$[ALL],DTL$
2470 LET TMP$=DTL$; GOSUB EDIT_TABLE; LET DTL$=TMP$
2480 LET DTL$="<br>History:<br>"+DTL$
2490 END_FIND_SN: 
2500 RETURN
2510 EDIT_TABLE: 
2520 NOBR: LET P=POS("<br>"=TMP$); IF P THEN LET TMP$(P,4)="    "; GOTO NOBR
2530 ALGN: LET P=POS(">align="=TMP$); IF P THEN LET TMP$(P,1)=" ",P=POS("\"=TMP$); IF P THEN LET TMP$(P,1)=">" FI ; GOTO ALGN
2540 RETURN
2550 OPEN_FILE: 
2560 LET PATH$=DATSRV$+ADATA$+FIL$
2570 OPEN (CHNL)PATH$
2580 RETURN
2590 unpack_date: 
2600 IF LEN(X9$)=3 THEN LET Y4$=STR((ASC(X9$(1,1))-32)+1900:"0000"),M$=STR((ASC(X9$(2,1))-32):"00"),D$=STR((ASC(X9$(3,1))-32):"00")
2610 IF LEN(X9$)=8 THEN LET Y4$=X9$(1,4),M$=X9$(5,2),D$=X9$(7,2)
2620 LET X9$=M$+"/"+D$+"/"+Y4$
2630 RETURN
2640 SELECT_OPTIONS: 
2650 LET OP=1,OPLIST$="",SET_COUNT=0,SOTMP$=""
2660 SET_SELECTION: 
2670 LET SELECTED$=""; IF MATCH$<>"" AND POS(CVS(MATCH$,2)=SOPT$[OP])=1 THEN LET SELECTED$=" selected",MATCH$=""
2680 IF SOPT$[OP]<>"" THEN LET OPLIST$=OPLIST$+"<option"+SELECTED$+">"+SOPT$[OP]+LF$,SE_COUNT=SET_COUNT+1
2690 LET OP=OP+1; IF OP<=OP_COUNT THEN GOTO SET_SELECTION
2700 LET OPLIST$=OPLIST$+"</select>"+LF$
2710 LET SOTMP$="<table><tr><td>"+SELTXT$+"</td>"+LF$
2720 LET SOTMP$=SOTMP$+"<td><select name="+SELNAME$+" size=1>"+OPLIST$+"</td>"+LF$
2730 LET BTN$=""; CALL "uttags.wbb","submit act",SBTN$,BTN$
2740 LET SOTMP$=SOTMP$+"<td>"+BTN$+"</td></tr>"+LF$
2750 IF BTN2$<>"" THEN LET BTN$=""; CALL "uttags.wbb","submit act",BTN2$,BTN$; LET SOTMP$=SOTMP$+"<tr><td></td><td></td><td>"+BTN$+"</td></tr>"+LF$
2760 LET SOTMP$=SOTMP$+"</table>"+LF$,MATCH$=""
2770 RETURN
2780 HIDDEN: 
2790 CALL "uttags.wbb","hidden sn",SN$,SETUP$
2800 CALL "uttags.wbb","hidden page",PAGE$,SETUP$
2810 IF PGM$<>"" THEN CALL "uttags.wbb","hidden pgm",PGM$,SETUP$
2820 IF POS("itm"=UNHIDE$)=0 AND ITM$<>"" THEN CALL "uttags.wbb","hidden itm",ITM$,SETUP$
2830 IF POS("emaddr"=UNHIDE$)=0 AND EMADDR$<>"" THEN CALL "uttags.wbb","hidden emaddr",EMADDR$,SETUP$
2840 IF POS("po"=UNHIDE$)=0 AND PO$<>"" THEN CALL "uttags.wbb","hidden po",PO$,SETUP$
2850 IF POS("snop"=UNHIDE$)=0 AND SNOP$<>"" THEN CALL "uttags.wbb","hidden snop",SNOP$,SETUP$
2860 IF POS("rvs"=UNHIDE$)=0 AND RVS$<>"" THEN CALL "uttags.wbb","hidden rvs",RVS$,SETUP$
2870 IF POS("usr"=UNHIDE$)=0 AND USR$<>"" THEN CALL "uttags.wbb","hidden usr",USR$,SETUP$
2880 IF POS("qty"=UNHIDE$)=0 AND QTY$<>"" THEN CALL "uttags.wbb","hidden qty",QTY$,SETUP$
2890 IF POS("med"=UNHIDE$)=0 AND MED$<>"" THEN CALL "uttags.wbb","hidden med",MED$,SETUP$
2900 IF POS("prc"=UNHIDE$)=0 AND PRC$<>"" THEN CALL "uttags.wbb","hidden prc",PRC$,SETUP$
2910 IF POS("com"=UNHIDE$)=0 AND COM$<>"" THEN CALL "uttags.wbb","hidden com",COM$,SETUP$
2920 LET UNHIDE$=""
2930 RETURN
2940 CHECK_ITM: 
2950 LET NXTLIST$="",CHECK_ITM$=ITM$+FILL(15),CHECK_ITM$=CHECK_ITM$(1,15),ITM$="",ITMLEN=3
2960 CALL "e_item.bbx::i_list",E_ITEM$
2970 VALID_ITM: 
2980 LET P=POS(CHECK_ITM$(1,ITMLEN)=E_ITEM$,15); IF P=0 THEN GOTO END_ITEM
2990 LET ITM$=E_ITEM$(P,ITMLEN)
3000 END_ITEM: 
3010 IF ITM$=CHECK_ITM$(1,ITMLEN) THEN LET ITMLEN=ITMLEN+3; IF ITMLEN<16 THEN GOTO VALID_ITM
3020 IF ACT$<>"Back" THEN GOTO CHECK_ITM2
3030 IF LEN(ITM$)<4 THEN LET ITM$="" ELSE LET ITM$=ITM$(1,LEN(ITM$)-3)
3040 LET ACT$=""
3050 CHECK_ITM2: 
3060 SWITCH INT(LEN(ITM$)/3)
3070 CASE 0; LET NEXT$="Product:"; BREAK
3080 CASE 1; LET NEXT$="Platform:"; BREAK
3090 CASE 2; LET NEXT$="OS Level:"; BREAK
3100 CASE 3; LET NEXT$="Revision:"; BREAK
3110 CASE 4; LET NEXT$="ProductType:"; BREAK
3120 CASE DEFAULT; LET NEXT$=""; BREAK
3130 SWEND
3140 IF NEXT$="" THEN LET PAGE$="q"; IF SNOP$<>"" THEN LET PAGE$="u" FI ; GOTO END_CHECK_ITM
3150 CALL "e_item.bbx",ITM$,KEYLIST$,RECLIST$,PORTLIST$,OP_COUNT
3160 IF ACT$="Next" AND SELCT$<>"" THEN GOSUB FIND_KEY; LET ITM$=ITM$+KEY$,ACT$=""; GOTO CHECK_ITM2
3170 LET SELTXT$="Select "+NEXT$
3180 IF OP_COUNT=0 THEN LET RECLIST$="(none)"+$0A$,OP_COUNT=1
3190 DIM SOPT$[OP_COUNT]; LET RL$=RECLIST$,KL$=KEYLIST$,PL$=PORTLIST$
3200 FOR I=1 TO OP_COUNT
3210 LET P=POS($0A$=KL$); IF P THEN LET SOPT$[I]=KL$(1,P-1)+": ",KL$=KL$(P+1)
3220 LET P=POS($0A$=RL$); IF P THEN LET SOPT$[I]=SOPT$[I]+CVS(RL$(1,P-1),2),RL$=RL$(P+1)
3230 LET P=POS($0A$=PL$); IF P THEN LET SOPT$[I]=SOPT$[I]+" (Port "+PL$(1,P-1)+")",PL$=PL$(P+1)
3240 NEXT I
3250 LET SELNAME$="selct",SBTN$="Next"; LET BTN2$=""; IF NEXT$<>"Product:" THEN LET BTN2$="Back"
3260 GOSUB SELECT_OPTIONS; LET NXTLIST$=SOTMP$; IF NEXT$="Revision:" THEN LET NXTLIST$=NXTLIST$+REVINFO$
3270 IF NEXT$="OS Level:" THEN LET NXTLIST$=NXTLIST$+OSINFO$
3280 END_CHECK_ITM: RETURN
3290 FIND_KEY: 
3300 LET KEY$="",TMP$=RECLIST$,K=0,SELECTED$=SELCT$
3310 LET P=POS(": "=SELCT$); IF P THEN LET SELECTED$=SELCT$(P+2)
3320 LET P=POS(" (Port"=SELECTED$); IF P THEN LET SELECTED$=SELECTED$(1,P-1)
3330 FK_1: LET N=POS($0A$=TMP$); IF N THEN LET K=K+1,TEST$=CVS(TMP$(1,N-1),2),TMP$=TMP$(N+1); IF SELECTED$<>TEST$ THEN GOTO FK_1
3340 LET TMP$=KEYLIST$,K1=0; IF K=0 THEN GOTO END_FIND_KEY
3350 FK_2: LET N=POS($0A$=TMP$); IF N THEN LET K1=K1+1,KEY$=TMP$(1,N-1),TMP$=TMP$(N+1); IF K<>K1 THEN GOTO FK_2
3360 END_FIND_KEY: RETURN
5000 REM 5000
5010 GET_CN: 
5020 LET CNAME$="",OK=0,C=NUM(CN$),SREP$=""
5030 LET K$=STR(C:"000000"),FIRM$="01"
5040 LET FIL$="ARM-01",CHNL=UNT; GOSUB OPEN_FILE
5050 READ_ARM01: READ (CHNL,KEY=FIRM$+K$,DOM=END_ARM01)C0$,C1$; LET OK=1
5060 END_ARM01: IF OK=0 AND FIRM$="01" THEN LET FIRM$="02"; GOTO READ_ARM01
5070 CLOSE (CHNL); IF OK=0 THEN EXITTO EOJ
5080 LET CN$=C0$(3,6),CNAME$=CVS(C1$(1,30),2)
5090 LET OK=0,FIL$="ARM-02",CHNL=UNT; GOSUB OPEN_FILE
5100 READ (CHNL,KEY=FIRM$+K$+"  ",DOM=END_ARM02)C0$,C1$; LET OK=1
5110 END_ARM02: CLOSE (CHNL); IF OK THEN LET SREP$=C1$(1,3),DSC_CODE$=C1$(6,2)
5120 LET TRASH$=STBL("firm",FIRM$)
5130 GOSUB 6000
5140 RETURN
6000 REM 6000
6010 LET LOGDATE$=DATE(0:"%Y%Mz%Dz")
6020 LET LOGCHAN=UNT; OPEN (LOGCHAN,ERR=MAKELOG)CN$+".log"; GOTO READLOG
6030 MAKELOG: STRING CN$+".log"; LET LOG$=FILL(16); GOTO WRITELOG
6040 READLOG: READ (LOGCHAN,ERR=ENDLOG)LOG$; CLOSE (LOGCHAN)
6050 LET LOGDATE$=LOG$(1,8)
6060 WRITELOG: LET L$=LOGDATE$+STR(NUM(LOG$(9,8))+1:"#######0"),LOG$=L$
6070 LET LOGCHAN=UNT; OPEN (LOGCHAN,ERR=ENDLOG)CN$+".log"
6080 WRITE (LOGCHAN)LOG$
6090 CLOSE (LOGCHAN)
6100 ENDLOG: RETURN
7000 REM 7000
7010 GET_ENV: 
7020 LET TMP$="<br><br><hr>"; REM GOTO GET_CGI
7030 LET ENV_TEMP$=FATTR(ENV$)
7040 LET ENV_LIST$=FATTR(ENV$,"")
7050 REM loop through the environment string 
7060 LET TMP$=ENV_TEMP$+"<br><hr><ul>"
7070 LET DONE=0
7080 WHILE !(DONE)
7090 LET FPOS=POS($0A$=ENV_LIST$)
7100 IF FPOS<>0 THEN LET FLDNAME$=ENV_LIST$(1,FPOS-1); LET ENV_LIST$=ENV_LIST$(FPOS+1); LET TMP$=TMP$+"<li>"+FLDNAME$+" = "+FIELD(ENV$,FLDNAME$)+"</l i>" ELSE LET DONE=1
7110 WEND
7120 LET TMP$=TMP$+"</ul><br><hr>"
7130 GET_CGI: 
7140 LET CGI_TEMP$=FATTR(CGI$,ERR=DONE)
7150 LET CGI_LIST$=FATTR(CGI$,"")
7160 REM loop through the cgi string 
7170 LET TMP$=TMP$+CGI_TEMP$+"<br><hr><ul>"
7180 LET DONE=0
7190 WHILE !(DONE)
7200 LET FPOS=POS($0A$=CGI_LIST$)
7210 IF FPOS>1 THEN LET FLDNAME$=CGI_LIST$(1,FPOS-1); LET CGI_LIST$=CGI_LIST$(FPOS+1); LET TMP$=TMP$+"<li>"+FLDNAME$+" = "+FIELD(CGI$,FLDNAME$)+"</l i>" ELSE LET DONE=1
7220 WEND
7230 LET TMP$=TMP$+"</ul><br><hr>"
7240 DONE: 
7250 LET RETVAL$=""; CALL "uttags.wbb","html",TMP$,RETVAL$
7260 RETURN
9000 REM 9000
9010 ERROR: 
9020 CALL "uterr.wbb",ERR,TCB(5),PGM(-1)
9030 ENDTRACE
9040 RELEASE
9050 EOJ: 
9060 REM GOSUB GET_ENV; LET HTML$=HTML$+LF$+RETVAL$
9070 CALL "utsend.wbb",HTML$
9080 CALL "utexit.wbb",CGI$
9090 ENDTRACE
9100 RELEASE
