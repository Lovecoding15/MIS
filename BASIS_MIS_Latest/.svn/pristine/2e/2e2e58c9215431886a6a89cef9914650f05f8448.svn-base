0010 REM "BMR - Inventory Costing
0020 REM "Program BMR.FB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "20Jan99 Caj: Clear IVM-02 variables cuz displayed wrong cost when Item wasn't set up in selected whse.(1190,1900,1905) ** Requires associated SCN for BMC.AA **
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files
0110 IF PRINTORCOST$="C" THEN GOTO 0200
0120 CALL "SYC.GA",7,1,"","",STATUS
0125 IF STATUS THEN GOTO 9900
0200 REM " --- IOLists
0210 BMM01A1: IOLIST A0$,A1$,A2$,A[ALL]
0220 BMM01A2: IOLIST SECONDA0$,SECONDA1$,SECONDA2$,A[ALL]
0230 BMM01A21: IOLIST SECONDA0$,SECONDA1$,SECONDA2$
0240 BMM02A: IOLIST W0$,W1$,W2$,W[ALL]
0250 BMM03A: IOLIST R0$,R1$,R[ALL]
0260 BMM05A: IOLIST S0$,S1$,S2$,S3$,S4$,S[ALL]
0270 BMM08A: IOLIST D0$,D[ALL]
0280 IVM02A1: IOLIST C0$(1),C1$,C2$,C[ALL]
0290 IVM02A2: IOLIST TEMPC0$,C1$,C2$,C[ALL]
0500 REM " --- Init Data
0510 LET I0=0
0520 DIM W0$(25),W1$(20),W2$(114),W[10]
0530 DIM R0$(25),R1$(110),R[11]
0540 DIM S0$(25),S1$(69),S2$(6),S3$(20),S4$(20),S[9]
0550 DIM A0$(52),A1$(30),A2$(57),A[11]
0560 LET A0$(1,2)=N0$
0570 DIM C0$(24),C[20],D[13],A[11],TMPCOSTS[3]
0580 LET TMATCOST=0,TDIRCOST=0,TOHCOST=0,TSUBCOST=0
0590 PRECISION P6
0650 IF PRINTORCOST$="C" THEN CALL "SYC.NB","Costing:",P[0],COLUMN
0680 READ (BMM01_DEV,KEY=N0$+BILLFROM$,DOM=0700)IOL=BMM01A1
0695 GOTO 0720
0700 REM " --- Read Master
0710 READ (BMM01_DEV,END=4000)IOL=BMM01A1
0720 IF A0$(1,2+LEN(BILLTHRU$))>N0$+BILLTHRU$ THEN GOTO 4000
0730 FIND (IVM02_DEV,KEY=N0$+WHS$+A0$(3,20),DOM=0700); REM "Skip if not in specified whse
0740 LET H=0,I0=0
0750 LET PARENT$=A0$(3,20)
0760 IF PRINTORCOST$="C" THEN PRINT @(COLUMN,11),A0$(3,P[0]),
1000 REM " --- Print Material Information
1010 GOSUB EXPLODE
1020 IF BILL_LIST$="" THEN GOTO 0700
1030 LET TEMPC0$=N0$+WHS$+BILL_LIST$(LEN(BILL_LIST$)-20+1,20)
1040 GOSUB 6300
1050 IF PARENT$=TEMPC0$(5,20) THEN LET PARENTOUT$=PARENT$ ELSE LET PARENTOUT$=""
1060 IF PRINTORCOST$="C" THEN GOTO 1100
1070 CALL "BMC.AA",1,7,A0$(3,20),H,COMMENTS$,TEMPC0$(5)+PARENTOUT$,SELECT$,PDATE$,STATUS
1075 IF STATUS=0 THEN GOTO 1100
1080 IF PRINTORCOST$="P" THEN GOTO 4000
1085 LET PRINTORCOST$="C"
1090 CALL "SYC.NB","Costing",P[0],COLUMN
1100 IF LEN(BILL_LIST$)>20 THEN LET BILL_LIST$=BILL_LIST$(1,LEN(BILL_LIST$)-20) ELSE IF LEN(BILL_LIST$)=20 THEN LET BILL_LIST$=""
1110 READ (BMM01_DEV2,KEY=N0$+TEMPC0$(5,20),DOM=1120)IOL=BMM01A2
1120 LET A6=0
1130 LET TMATCOST=0,TDIRCOST=0,TOHCOST=0,TSUBCOST=0
1140 READ (BMM02_DEV,KEY=N0$+TEMPC0$(5,20),DOM=1150)
1150 READ (BMM02_DEV,END=1500)IOL=BMM02A
1160 IF POS(N0$+TEMPC0$(5,20)=W0$)<>1 THEN GOTO 1500
1170 IF W2$(5,3)<>"   " THEN IF W2$(5,3)>PDATE$ THEN GOTO 1150
1180 IF W2$(8,3)<>"   " THEN IF W2$(8,3)<=PDATE$ THEN GOTO 1150
1190 DIM C[20]
1200 FIND (IVM02_DEV,KEY=N0$+WHS$+W1$,DOM=1220)IOL=IVM02A1
1210 LET TMATCOST=TMATCOST+C[11]*FNQTY(W[0],W[1],W[3],A[4],W[4])
1220 GOTO 1150
1500 REM " --- Get Operation Information
1510 READ (BMM03_DEV,KEY=N0$+TEMPC0$(5,20),DOM=1520)
1520 READ (BMM03_DEV,END=1700)IOL=BMM03A
1530 IF POS(N0$+TEMPC0$(5,20)=R0$)<>1 THEN GOTO 1700
1540 IF R1$(65,3)<>"   " THEN IF R1$(65,3)>PDATE$ THEN GOTO 1520
1550 IF R1$(68,3)<>"   " THEN IF R1$(68,3)<=PDATE$ THEN GOTO 1520
1560 DIM D0$(30); LET D0$(6,20)="Not On File",D[0]=0
1570 READ (BMM08_DEV,KEY=R0$(1,2)+R1$(1,3),DOM=1580)IOL=BMM08A
1580 IF A[5]=0 THEN LET A[5]=1
1590 IF R[1]<>0 THEN LET DIRECTCOST=FNOP1(R[0],D[0],R[1],A[4],R[4],A[5]) ELSE LET DIRECTCOST=0
1600 LET OHLABCOST=DIRECTCOST*D[2]
1610 LET TDIRCOST=TDIRCOST+DIRECTCOST,TOHCOST=TOHCOST+OHLABCOST
1630 GOTO 1520
1700 REM " --- Get Subcontract Information
1710 IF AP$="N" THEN GOTO 1800
1720 READ (BMM05_DEV,KEY=N0$+TEMPC0$(5,20),DOM=1730)
1730 READ (BMM05_DEV,END=1800)IOL=BMM05A
1740 IF POS(N0$+TEMPC0$(5,20)=S0$)<>1 THEN GOTO 1800
1750 IF S2$(1,3)<>"   " THEN IF S2$(1,3)>PDATE$ THEN GOTO 1730
1760 IF S2$(4,3)<>"   " THEN IF S2$(4,3)<=PDATE$ THEN GOTO 1730
1770 IF S[3]*A[4]<>0 THEN LET TSUBCOST=TSUBCOST+S[2]*FNSUB(S[0],S[1],S[3])
1780 GOTO 1730
1800 REM " --- Print Total Information
1810 IF PRINTORCOST$="P" THEN GOTO 1990
1820 IF A0$(1,22)=N0$+TEMPC0$(5,20) THEN LET SECONDA0$=A0$,SECONDA1$=A1$,SECONDA2$=A2$; GOTO 1840
1830 FIND (BMM01_DEV2,KEY=N0$+TEMPC0$(5,20))IOL=BMM01A21
1840 WRITE (BMM01_DEV,KEY=N0$+TEMPC0$(5,20))IOL=BMM01A2
1850 REM " --- Write Inventory Record - with new cost for Finished Good
1870 IF COST_PARAM$="S" THEN GOTO 1900
1880 IF COST_PARAM$="R" AND POS(TEMPC0$(5)=A0$(3))=1 THEN GOTO 1900
1890 IF SECONDA2$(40,1)<>"Y" THEN GOTO 1990; REM "Avg/Rpl cost, only update phantoms
1900 DIM C[20]
1905 EXTRACT (IVM02_DEV,KEY=TEMPC0$,DOM=1990)IOL=IVM02A2
1910 LET TCOST=TMATCOST+TDIRCOST+TOHCOST+TSUBCOST
1920 GOSUB CALC_COSTS
1980 WRITE (IVM02_DEV,KEY=TEMPC0$)IOL=IVM02A2
1990 GOTO 1020
4000 REM " --- End
4020 GOTO 9900
6100 REM " --- Explode
6105 EXPLODE: 
6110 LET BILL_LIST$=A0$(3,20),BILLSEQ_LIST$=""
6115 LET SAVEA0$=A0$(1,22)
6120 READ (BMM02_DEV,KEY=SAVEA0$,DOM=6130)
6130 READ (BMM02_DEV,END=6210)IOL=BMM02A
6140 IF POS(SAVEA0$(1,22)=W0$)<>1 THEN GOTO 6210
6145 IF POS(W1$(1,20)=BILL_LIST$)<>0 THEN GOSUB 6900
6150 FIND (BMM01_DEV2,KEY=N0$+W1$(1,20),DOM=6130)
6155 IF POS(W1$(1,20)=BILL_LIST$)<>0 THEN GOTO 6130
6157 IF W2$(5,3)<>"   " THEN IF W2$(5,3)>PDATE$ THEN GOTO 6130
6158 IF W2$(8,3)<>"   " THEN IF W2$(8,3)<=PDATE$ THEN GOTO 6130
6160 LET BILL_LIST$=BILL_LIST$+W1$(1,20)
6170 LET BILLSEQ_LIST$=BILLSEQ_LIST$+SAVEA0$(3,20)+W0$(23,3),SAVEA0$=N0$+W1$
6180 GOTO 6120
6210 IF BILLSEQ_LIST$="" THEN GOTO 6290
6220 LET SAVEA0$=N0$+BILLSEQ_LIST$(LEN(BILLSEQ_LIST$)-22,23)
6230 LET BILLSEQ_LIST$=BILLSEQ_LIST$(1,LEN(BILLSEQ_LIST$)-23)
6240 GOTO 6120
6290 RETURN 
6300 REM " --- Get Non-Phantom information
6310 FIND (BMM01_DEV2,KEY=N0$+TEMPC0$(5,20),DOM=6390)IOL=BMM01A2
6320 IF SECONDA2$(40,1)<>"Y" THEN LET PARENT$=TEMPC0$(5,20)
6390 RETURN 
6400 REM " --- Calc IVM02 costs
6405 CALC_COSTS: 
6500 REM " --- Set Average cost
6510 LET C[12]=TCOST
6600 REM " --- Set replacement cost
6610 IF TCOST<>0 THEN LET C[14]=TCOST
6700 REM " --- Set Standard Cost
6710 LET C[13]=TCOST
6800 REM " --- Set unit cost 
6810 IF COST_PARAM$="A" THEN LET C[11]=C[12]; REM "Average Costing
6820 IF COST_PARAM$="S" THEN LET C[11]=C[13]; REM "Standard Costing
6830 IF COST_PARAM$="R" THEN LET C[11]=C[14]; REM "Replacement Costing
6890 RETURN 
6900 REM " --- Circular Reference
6910 LET I0=I0+1; IF I0<100 THEN GOTO 6990
6920 DIM MESSAGE$[1]
6930 LET MESSAGE$[0]="Circular Reference Found For This Bill Number"
6940 LET MESSAGE$[1]="     <Enter>=Continue, <F4>=Exit"
6950 CALL "SYC.XA",2,MESSAGE$[ALL],1,22,-1,V$,V3
6960 PRINT @(V1,V2),'RB',
6970 IF V3=4 THEN EXITTO 9900
6980 LET I0=0
6990 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions
8080 DEF FNQTY(Q1,Q2,Q3,Q4,Q5)=10000*Q1*Q2/(Q3*Q4*(100-Q5))
8085 DEF FNSUB(Q1,Q2,Q3)=Q1*Q2/Q3
8090 DEF FNOP1(Q1,Q2,Q3,Q4,Q5,Q6)=100*(Q1*Q2/Q3)/Q4+Q5*Q2/Q6
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
