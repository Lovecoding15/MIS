0010 REM "SYC - Format address block"
0020 REM "Program SYC.AA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0045 REM "ADDRESS$ = Address string, W characters * LINES lines with zip"
0050 REM "           appended (in). WIDTH characters * LINES+1 lines (out)"
0055 REM "W        = Width of address line (input)"
0060 REM "LINES    = Number of desired lines in address block (input)"
0065 REM "ZIP      = Length of zip/postal code string (input)"
0070 REM "WIDTH    = Width of address line desired in output"
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER ADDRESS$,W,LINES,ZIP,WIDTH
0500 REM " --- Initializations"
0510 LET SIZE=WIDTH*(LINES+1),N=0,P=W*LINES,STATE$=""
0520 DIM BUFFER$(SIZE)
0900 REM " --- Push state/province back into address"
0910 LET STATE$=ADDRESS$(P-1,2),ADDRESS$(P-1,2)="  "
0920 IF STATE$="  " THEN GOTO 1000
0940 LET X=POS(" "<>ADDRESS$(1,P-2),-1)
0950 IF X>P-3 THEN LET X=P-3
0960 LET ADDRESS$(X+2,2)=STATE$
1000 REM 
1010 FOR X=1 TO LINES
1015 IF FNP$(ADDRESS$(W*X-W+1,W))="" THEN GOTO 1030
1020 LET N=N+1,BUFFER$(WIDTH*N-WIDTH+1,WIDTH)=ADDRESS$(W*X-W+1,W)
1030 NEXT X
1040 LET ZIP$=ADDRESS$(W*LINES+1,ZIP)
1050 LET ZIP$=FNZ9$(ZIP$)
1055 REM IF ZIP>5 THEN LET ZIP$=FNZ$(ZIP$)
1060 REM IF ZIP$(LEN(ZIP$)-4)="-0000" THEN LET ZIP$=ZIP$(1,LEN(ZIP$)-5)
1070 LET ZIP$=FNP$(ZIP$),Z=LEN(ZIP$)
1100 REM 
1110 FOR X=SIZE-WIDTH+1 TO 1 STEP -WIDTH
1120 LET X$=FNP$(BUFFER$(X,WIDTH))
1130 IF X$<>"" THEN EXITTO 1200
1140 NEXT X
1150 LET X=SIZE-WIDTH+1
1200 REM 
1210 LET X$=FNP$(BUFFER$(X,WIDTH)),L=LEN(X$)
1220 IF WIDTH>L+Z THEN GOTO 1300
1230 LET X=X+WIDTH,X$=FNP$(BUFFER$(X,WIDTH))
1300 REM 
1310 LET BUFFER$(X,WIDTH)=X$+" "+ZIP$
4000 REM " --- All done"
4010 LET ADDRESS$=BUFFER$
4090 GOTO 9900
8000 REM " --- Functions"
8085 DEF FNZ$(Q$)=FILL(10,CVS(Q$(1,3)+FILL(POS("9"<Q$(1,5))>0)+Q$(4,2)+FILL(ABS(POS("A">=Q$(1,6))>0)-POS("0">Q$(6,4))>0,"-")+Q$(6,4)+FILL(10),16))
8090 DEF FNP$(Q$)=CVS(Q$,2)
8100 DEF FNZ9$(Q$)
8105 LET Q=NUM(Q$,ERR=8110); IF LEN(CVS(Q$,2))=9 THEN LET Q$=Q$(1,5)+"-"+Q$(6,4)
8110 RETURN Q$
8115 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to calling program"
9950 EXIT 
9999 END
