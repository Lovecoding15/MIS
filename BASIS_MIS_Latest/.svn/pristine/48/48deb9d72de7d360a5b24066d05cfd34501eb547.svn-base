0010 REM "IVR - Inventory Transaction History Listing (Report Overlay)"
0020 REM "Program IVR.QB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0200 REM " --- IOLists"
0210 IVT04A1: IOLIST A0$,A1$,A2$,A3$,A[ALL]
0220 IVM01A: IOLIST B0$,B1$,B2$,B3$,B4$,B5$,B6$,B[ALL]
0230 IVM10A: IOLIST X0$(1)
0240 IVM10C: IOLIST X0$(1)
0250 IVT04A2: IOLIST L0$,L1$,L2$,L3$,L[ALL]
0500 REM " --- Initializations"
0505 PRECISION P[2]
0510 LET HEADINGS=8,WHEN$=F0$(7,3),CLOCK$="",H9$=""
0520 DIM HEADINGS$[HEADINGS],O[6],A[4],B[12],L[4]
0530 DIM FILES[4],PARAMS[6],MASKS$[3]
0560 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$
0565 LET WIDTH=132,PAGE=0,L9=59,L=L9+1,DONE=0
0575 LET FILES[0]=IVM01_DEV,FILES[1]=IVM10_DEV,FILES[2]=ARM01_DEV
0580 LET FILES[3]=APM01_DEV,FILES[4]=GLM01_DEV,PARAMS[0]=P[0],PARAMS[1]=X8
0585 LET PARAMS[2]=X6,PARAMS[3]=NUM(G2$(7,2)),PARAMS[4]=P[5],PARAMS[5]=P[6],PARAMS[6]=P[7]
0590 LET MASKS$[0]=N0$,MASKS$[1]=X9$,MASKS$[2]=X7$,MASKS$[3]=G5$
0900 REM " --- Print positions"
0910 LET O[0]=P[0]+1,O[1]=O[0]+9,O[2]=O[1]+5
0920 LET O[6]=WIDTH-M2,O[5]=O[6]-M1,O[4]=O[5]-M3,O[3]=O[4]-M2
0940 GOSUB 5800
0950 REM " --- Position files"
0960 CALL "SYC.GA",7,1,"","",STATUS
0965 IF STATUS THEN GOTO 9900
0970 CALL "SYC.NB","Printing",3+P[0],COLUMN
0990 READ (IVT04_DEV,KEY=N0$+BEG_WHSE$,DOM=1000)
1000 REM " --- Get next record"
1010 LET K$=KEY(IVT04_DEV,END=4000)
1020 IF POS(N0$+BEG_WHSE$=K$)<>1 THEN GOTO 4000
1030 LET WHSE$=K$(3,2),ITEM$=K$(5,20)
1100 REM " --- Valid Warehouse/Item?"
1110 IF END_WHSE$<>"" THEN IF WHSE$>END_WHSE$ THEN GOTO 4000
1120 IF BEG_ITEM$<>"" THEN IF ITEM$<BEG_ITEM$ THEN READ (IVT04_DEV,KEY=K$(1,4)+BEG_ITEM$,DOM=3900)
1130 IF END_ITEM$<>"" THEN IF ITEM$>END_ITEM$ THEN READ (IVT04_DEV,KEY=K$(1,4)+$FF$,DOM=3900)
1400 REM " --- Valid Product/Type/Date?"
1405 READ (IVT04_DEV,KEY=K$)IOL=IVT04A1
1410 FIND (IVM01_DEV,KEY=N0$+ITEM$,DOM=3900)IOL=IVM01A
1420 IF BEG_PROD$<>"" THEN IF B2$(1,3)<BEG_PROD$ THEN GOTO 3900
1430 IF END_PROD$<>"" THEN IF B2$(1,3)>END_PROD$ THEN GOTO 3900
1440 IF ITEM_TYPE$<>"" THEN IF B2$(53,3)<>ITEM_TYPE$ THEN GOTO 3900
1450 IF ALL$="N" THEN IF POS(A1$(1,2)=TTYPE$,2)=0 THEN GOTO 3900
1460 IF A1$(1,2)="BB" THEN GOTO 3900
1470 IF BEG_DATE$<>"" THEN IF A0$(25,3)<BEG_DATE$ THEN READ (IVT04_DEV,KEY=K$(1,24)+BEG_DATE$,DOM=3900)
1480 IF END_DATE$<>"" THEN IF A0$(25,3)>END_DATE$ THEN READ (IVT04_DEV,KEY=K$(1,24)+$FF$,DOM=3900)
1500 REM " --- Level breaks?"
1510 IF ALL$="Y" AND ITEM$<>T1$ THEN GOSUB 6500
1520 PRINT @(COLUMN,11),K$(3,2)," ",K$(5,P[0]),
1530 IF WHSE$<>T0$ THEN GOSUB 6000
1550 IF ITEM$<>T1$ THEN GOSUB 6200
1580 LET BALANCE=BALANCE+A[0]
2000 REM " --- Get Reference Block"
2010 DIM DESC$[2]
2020 CALL "IVC.TD",A1$,FILES[ALL],PARAMS[ALL],MASKS$[ALL],TYPE$,DESC$[ALL]
2030 IF TYPE$="" THEN GOTO 3900
2100 REM " --- Build Totals Array"
2110 IF A1$(1,2)="BB" THEN GOTO 2200
2120 LET X=POS(TYPE$=ITEM_TOT$,4)
2130 IF X=0 THEN LET ITEM_TOT$=ITEM_TOT$+TYPE$; GOTO 2120
2140 LET X=(X+3)/4
2150 LET ITEM_QTY[X]=ITEM_QTY[X]+A[0]
2160 LET ITEM_EXT[X]=ITEM_EXT[X]+(A[0]*A[1])
2500 REM " --- Print subheading?"
2510 IF SUBHEAD$="" THEN GOTO 3000
2520 IF L+3>L9 THEN GOSUB 5000
2530 PRINT (7)SUBHEAD$
2540 LET L=L+1,SUBHEAD$=""
3000 REM " --- Print detail line"
3010 LET NEEDED=1
3020 IF FNP$(DESC$[1])<>"" THEN LET NEEDED=NEEDED+1
3030 IF L+NEEDED>L9 THEN GOSUB 5000
3060 PRINT (7)@(O[0]),FNB$(A0$(25,3)),@(O[1]),TYPE$,@(O[2]),DESC$[0],@(O[3]),A[0]:M2$,@(O[4]),A[1]:M3$,@(O[5]),A[0]*A[1]:M1$,
3065 IF ALL$="Y" THEN PRINT (7)@(O[6]),BALANCE:M2$ ELSE PRINT (7)""
3070 LET L=L+1
3090 IF FNP$(DESC$[1])="" THEN GOTO 3900
3100 PRINT (7)@(O[2]),DESC$[1]
3110 LET L=L+1
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4010 LET DONE=1
4020 GOSUB 6200
4090 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5090 RETURN 
5800 REM " --- Initialize HEADINGS$"
5805 DIM H1$(WIDTH),H2$(WIDTH),H7$(WIDTH)
5810 LET X1$="First Date",X2$="Last Date"
5820 IF BEG_DATE$<>"" THEN LET X1$=FNB$(BEG_DATE$)
5825 IF END_DATE$<>"" THEN LET X2$=FNB$(END_DATE$)
5830 LET HEADINGS$[2]=X0$+" From "+X1$+" Through "+X2$
5835 IF ALL$="Y" THEN LET HEADINGS$[3]="For All Transaction Types"; GOTO 5850 ELSE LET HEADINGS$[3]="For Transaction Types "
5840 FOR X=0 TO 8; LET HEADINGS$[3]=HEADINGS$[3]+TTYPE$(X*2+1,2)+" "; NEXT X
5845 LET HEADINGS$[3]=FNP$(HEADINGS$[3])
5850 LET X1$="First",X2$="First",X2=5
5855 IF BEG_ITEM$<>"" THEN LET X1$=BEG_ITEM$
5860 IF BEG_PROD$<>"" THEN LET X2$=BEG_PROD$,X2=3
5865 IF END_PROD$="" THEN IF X2=3 THEN LET X2=4
5870 LET H1$(1)="From Item: "+X1$,H1$(WIDTH-X2-13)="From Product: "+X2$
5875 LET X1$="Last",X2$="Last",X3$="All Item Types"
5880 IF END_ITEM$<>"" THEN LET X1$=END_ITEM$
5890 IF END_PROD$<>"" THEN LET X2$=END_PROD$
5900 IF ITEM_TYPE$<>"" THEN LET X3$="Item Type "+ITEM_TYPE$
5910 LET H2$(1)="  To Item: "+X1$,H2$(FNC(X3$,WIDTH))=X3$
5920 LET H2$(WIDTH-X2-13)="  To Product: "+X2$
5940 LET H7$(1)="Item",H7$(O[0]+3)="Date"
5950 LET H7$(O[1]+1)="Type",H7$(O[2]+1)="Reference Information"
5960 LET H7$(O[3]+M2-8)="Quantity",H7$(O[4]+M3-9)="Unit Cost"
5975 LET H7$(O[5]+M1-9)="Extension"
5980 IF ALL$="Y" THEN LET H7$(O[6]+M2-7)="Balance"
5985 LET HEADINGS$[4]=H1$,HEADINGS$[5]=H2$,HEADINGS$[7]=H7$
5990 RETURN 
6000 REM " --- Warehouse Break"
6010 DIM X0$(32)
6020 GOSUB 6200
6030 LET T0$=WHSE$,X0$(6,24)="(Not on File)",L=L9+1
6040 FIND (IVM10_DEV,KEY=N0$+"C"+T0$,DOM=6050)IOL=IVM10C
6050 LET X$="Warehouse "+T0$+" "+FNP$(X0$(6,24))
6060 LET HEADINGS$[4]=H1$,HEADINGS$[4](FNC(X$,WIDTH),LEN(X$))=X$
6090 RETURN 
6200 REM " --- Item Break"
6210 IF T1$="" THEN GOTO 6300
6215 IF LEN(ITEM_TOT$)=0 THEN GOTO 6270
6220 FOR X=1 TO LEN(ITEM_TOT$) STEP 4
6225 IF L+1>L9 THEN GOSUB 5000
6230 PRINT (7)@(O[3]-11),ITEM_TOT$(X,4)," Total ",ITEM_QTY[(X+3)/4]:M2$,@(O[5]),ITEM_EXT[(X+3)/4]:M1$
6235 IF ITEM_TOT$(X,4)<>"Phys" THEN LET NET_QTY=NET_QTY+ITEM_QTY[(X+3)/4],NET_EXT=NET_EXT+ITEM_EXT[(X+3)/4]
6240 LET L=L+1
6245 NEXT X
6250 IF ALL$="N" THEN GOTO 6270
6255 IF L+1>L9 THEN GOSUB 5000
6260 PRINT (7)@(O[3]-11),"Net Change ",NET_QTY:M2$,@(O[5]),NET_EXT:M1$
6265 LET L=L+1
6300 IF DONE THEN GOTO 6390
6310 DIM ITEM_QTY[9],ITEM_EXT[9]
6320 LET T1$=A0$(5,20),ITEM_TOT$="",NET_QTY=0,NET_EXT=0
6330 LET SUBHEAD$=A0$(5,P[0])+" "+FNITEM$(B1$,P[5],P[6],P[7])+" - Product: "+B2$(1,3)
6390 RETURN 
6500 REM " --- Determine starting beginning balance"
6505 IF ITEM_TYPE$<>"" THEN GOTO 6990
6510 LET BALANCE=0,X$=K$
6570 READ (IVT04_DEV,KEY=N0$+WHSE$+ITEM$+BEG_DATE$,DOM=6580)
6580 LET K01$=KEY(IVT04_DEV,END=6900)
6590 GOTO 6630
6600 REM " --- Read backwards thru file until BB record is found"
6610 LET K01$=KEYP(IVT04_DEV,END=6900)
6620 IF K01$(1,24)<>N0$+T0$+ITEM$ THEN GOTO 6900
6630 EXTRACT (IVT04_DEV,KEY=K01$)IOL=IVT04A2
6640 IF L1$(1,2)<>"BB" THEN GOTO 6600
6650 LET BALANCE=L[0]
6700 REM " --- Read forward until first record for BEGDATE$"
6710 LET K01$=KEY(IVT04_DEV,END=6900)
6720 IF K01$(1,24)<>N0$+T0$+ITEM$ THEN GOTO 6900
6730 IF K01$(25,3)>=BEG_DATE$ THEN GOTO 6900
6740 READ (IVT04_DEV,KEY=K01$)IOL=IVT04A2
6750 LET BALANCE=BALANCE+L[0]
6790 GOTO 6700
6900 REM " --- Reread original record"
6910 LET K$=X$
6920 READ (IVT04_DEV,KEY=K$)IOL=IVT04A1
6990 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
