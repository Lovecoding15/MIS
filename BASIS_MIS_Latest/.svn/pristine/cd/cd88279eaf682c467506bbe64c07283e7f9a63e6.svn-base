0010 REM "GLX - Change Fiscal Calendar"
0020 REM "Program GLX.DA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0060 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=6
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0130 LET FILES$[1]="GLM-01",FILES$[2]="GLM-02",FILES$[3]="GLM-08"
0150 LET FILES$[4]="GLT-06",FILES$[5]="GLW-05",FILES$[6]="SYS-01"
0155 LET OPTIONS$[1]="L",OPTIONS$[2]="L",OPTIONS$[4]="L",OPTIONS$[5]="C"
0160 CALL "SYC.DA",1,1,6,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0180 LET GLM01_DEV=CHANNELS[1],GLM02_DEV=CHANNELS[2],GLM08_DEV=CHANNELS[3]
0190 LET GLT06_DEV=CHANNELS[4],GLW05_DEV=CHANNELS[5],SYS01_DEV=CHANNELS[6]
0200 REM " --- IOLIST's"
0210 GLM01A: IOLIST A0$(1),A1$(1)
0220 GLM02A: IOLIST B0$(1),A[ALL],U[ALL]
0230 GLT06A: IOLIST C0$(1),C1$(1),C2$,C[ALL]
0240 GLW05A: IOLIST C0$(1),C1$(1),C2$,C[ALL]
0260 GLS01A: IOLIST P0$,P1$,P2$(1),P3$(1),P4$(1),M0$,M1$,M2$,M3$
0265 GLS01B: IOLIST X$,P5$
0270 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0400 REM " --- Parameters"
0405 DIM P[4],P2$(10),P3$(325),P4$(32)
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="GL",N4$=F5$,MP=13
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=GLS01A
0440 FIND (SYS01_DEV,KEY=N0$+N2$+"01",DOM=9800)IOL=GLS01B
0460 FOR X=0 TO 4
0465 LET P[X]=NUM(P2$(X*2+1,2),ERR=0470)
0470 NEXT X
0475 LET P[2]=FNYY_YEAR(P2$(5,2))
0480 LET NP=NUM(P2$(1,2)),LOCKED$=P3$(FNP4(1,MP),MP)
0490 LET BUDGETS$=P4$(2,1),UNITS$=P4$(3,1)
0500 REM " --- Initializations"
0510 DIM A0$(2+P[4]),A1$(40),B0$(3+P[4]),A[MP],U[MP]
0520 DIM C0$(26+P[4]),C1$(64),C[4],J1$(16*MP),EARNINGS$(P[4]),EARNINGS[2]
0550 LET L0=7,BASE=1,BASE$=STR(BASE),PRIOR$=STR(1900+P[2]-1)
0560 LET R$="204",B$="",B=0,EARNINGS$(1)=P5$
0565 IF BUDGETS$="Y" THEN LET R$="230145"
0570 LET R=LEN(R$)
0600 REM " --- Entry files empty?"
0610 CALL "GLC.IA",N0$,STATUS
0620 IF STATUS>0 THEN GOTO 9900
0630 REM " --- Valid Retained Earnings Account?"
0635 LET A0$(1)=N0$+EARNINGS$
0640 FIND (GLM01_DEV,KEY=A0$,DOM=9900)
0650 REM " --- Initialize retained earnings array"
0655 LET X$="2"
0660 GOSUB 6300
0665 LET EARNINGS[0]=ENDBAL,X$="0"
0670 GOSUB 6300
0675 LET EARNINGS[0]=BEGBAL-EARNINGS[0],EARNINGS[1]=ENDBAL,X$="4"
0680 GOSUB 6300
0685 LET EARNINGS[1]=BEGBAL-EARNINGS[1]
0700 REM " --- Background"
0710 CALL "SYC.WC",1,0,80,0,0,L0-2,0
0720 PRINT 'SB',@(0,3),"Current Period:",@(52),"Fiscal Year ",PRIOR$," Closed?",@(2,4),"Current Year:",@(62),"Total Periods:",@(7,L0-1),"New",@(15),"Current",@(54),"Period",@(7,L0),"Period",@(15),"Period",@(23),"Ends",@(30),"Period Name",@(48),"Abbr",@(54),"Locked?",@(64),"Date",'SF',
0730 GOSUB 5000
0800 REM " --- Warning"
0810 DIM MESSAGE$[8]
0815 LET MESSAGE$[0]="This utility will permit you to change your fiscal year. It will not permit"
0820 LET MESSAGE$[1]="you to change the period ending dates. Changing your fiscal year will cause"
0825 LET MESSAGE$[2]="your Summary Activity and Transaction History to be moved to the new periods"
0830 LET MESSAGE$[3]="as defined by the modified fiscal calendar. Make sure that your General"
0835 LET MESSAGE$[4]="Ledger files have been backed up prior to running this utility. If this task"
0840 LET MESSAGE$[5]="fails to run to completion (for any reason), you must restore your General"
0845 LET MESSAGE$[6]="Ledger files before continuing with any other processing."
0850 LET MESSAGE$[8]="                    Press <Enter> To Continue"
0855 CALL "SYC.XA",2,MESSAGE$[ALL],8,-1,-1,V$,V3
0860 IF V3>0 THEN GOTO 9900
0900 REM " --- New beginning period"
0905 LET V4$="Enter The Period That Period 1 Becomes In The New Fiscal Calendar (1 To "+STR(P[0])+")"
0910 LET V0$="Z",V1$="C",V2$=BASE$,V3$="",V0=2,V1=9,V2=L0+1
0915 GOSUB 7000
0920 ON V3 GOTO 0925,0900,0900,0900,9900
0925 IF V<1 OR V>P[0] THEN GOTO 0900
0930 LET BASE=V
0935 GOSUB 5000
0950 REM " --- Correct?"
0955 LET V4$="Is The Above Information Correct (Y/N)?"
0960 LET V0$="Y",V1$="C",V2$="Y",V3$="",V0=1,V1=FNV(V4$),V2=22
0965 GOSUB 7000
0970 ON V3 GOTO 0975,0900,0900,0900,9900
0975 ON POS(V$="YN") GOTO 0950,0980,0900
0980 IF BASE=1 THEN GOTO 9900
0985 LET V4$="Are you ready to update your General Ledger files"
0990 CALL "SYC.YN",0,V4$,0,V$,V3
0995 IF V$<>"YES" THEN GOTO 9900
1000 REM " --- Initializations"
1060 IF BUDGETS$="Y" THEN GOSUB 6000
1070 LET B=LEN(B$),DIF=BASE-1,OFFSET=NP-DIF
1075 GOSUB 6900
1080 CALL "SYC.NB","Processing",LEN(M0$),COLUMN
1090 READ (GLM01_DEV,KEY=N0$,DOM=1100)
1100 REM " --- Read next GLM-01 account"
1110 LET K$=KEY(GLM01_DEV,END=4000)
1120 IF POS(N0$=K$)<>1 THEN GOTO 4000
1130 READ (GLM01_DEV)IOL=GLM01A
1150 PRINT @(COLUMN,11),FNF$(A0$(3,P[3]),M0$),
1200 REM " --- Load GLM-02 summary activity"
1210 DIM AMOUNTS[NP*3,1],UNITS[NP*3,1],BA[5],BU[5]
1215 FOR X=1 TO R
1220 DIM B0$(3+P[4]),A[MP],U[MP]
1230 LET X$=R$(X,1),B0$(1)=A0$+X$,N=0,O=INT((X-1)/2)*NP
1240 IF POS(X$="315")>0 THEN LET N=1
1245 FIND (GLM02_DEV,KEY=B0$,DOM=1250)IOL=GLM02A
1250 IF POS(A1$(36,1)="ALC")=0 THEN GOTO 1270
1255 IF POS(X$="23")=0 THEN GOTO 1270
1260 LET BA[NUM(X$)]=A[0],BU[NUM(X$)]=U[0]
1270 FOR P=1 TO NP
1275 LET AMOUNTS[P+O,N]=A[P],UNITS[P+O,N]=U[P]
1280 NEXT P
1290 NEXT X
1300 REM " --- Calculate new beginning balance for prior year"
1310 IF POS(A1$(36,1)="ALC")=0 THEN GOTO 1360
1320 FOR P=1 TO OFFSET
1330 LET BA[2]=BA[2]+AMOUNTS[P,0],BU[2]=BU[2]+UNITS[P,0]
1340 LET BA[3]=BA[3]+AMOUNTS[P,1],BU[3]=BU[3]+UNITS[P,1]
1350 NEXT P
1355 GOTO 1400
1360 REM " --- Accumulate retained earnings"
1365 FOR P=1 TO OFFSET
1370 LET EARNINGS[0]=EARNINGS[0]+AMOUNTS[NP+P,0]
1375 LET EARNINGS[1]=EARNINGS[1]+AMOUNTS[NP*2+P,0]
1380 LET EARNINGS[2]=EARNINGS[2]+AMOUNTS[P,0]
1390 NEXT P
1400 REM " --- Roll GLM-02 summary activity"
1410 LET N=NP*3-OFFSET
1420 FOR X=0 TO 1
1425 FOR P=1 TO N
1430 LET AMOUNTS[P,X]=AMOUNTS[P+OFFSET,X],UNITS[P,X]=UNITS[P+OFFSET,X]
1435 NEXT P
1440 NEXT X
1450 FOR X=0 TO 1
1455 FOR P=N+1 TO NP*3
1460 LET AMOUNTS[P,X]=0,UNITS[P,X]=0
1465 NEXT P
1470 NEXT X
1500 REM " --- Calculate current year beginning balances"
1505 IF POS(A1$(36,1)="ALC")=0 THEN GOTO 1600
1510 LET BA[0]=BA[2],BA[1]=BA[3],BU[0]=BU[2],BU[1]=BU[3]
1520 FOR P=1 TO NP
1530 LET BA[0]=BA[0]+AMOUNTS[P,0],BU[0]=BU[0]+UNITS[P,0]
1540 LET BA[1]=BA[1]+AMOUNTS[P,1],BU[1]=BU[1]+UNITS[P,1]
1545 NEXT P
1550 REM " --- Calculate next year's beginning balances"
1560 LET BA[4]=BA[0],BA[5]=BA[1],BU[4]=BU[0],BU[5]=BU[1]
1570 FOR P=NP+1 TO NP*2
1580 LET BA[4]=BA[4]+AMOUNTS[P,0],BU[4]=BU[4]+UNITS[P,0]
1585 LET BA[5]=BA[5]+AMOUNTS[P,1],BU[5]=BU[5]+UNITS[P,1]
1590 NEXT P
1600 REM " --- Write GLM-02 summary activity"
1610 FOR X=1 TO R
1620 DIM B0$(3+P[4]),A[MP],U[MP]
1630 LET X$=R$(X,1),B0$(1)=A0$+X$,N=0
1640 LET O=INT((X-1)/2)*NP,A[0]=BA[NUM(X$)],U[0]=BU[NUM(X$)]
1645 IF POS(X$="315")>0 THEN LET N=1
1650 FOR P=1 TO NP
1660 LET A[P]=AMOUNTS[P+O,N],U[P]=UNITS[P+O,N]
1670 NEXT P
1680 WRITE (GLM02_DEV,KEY=B0$)IOL=GLM02A
1690 NEXT X
1700 REM " --- Budgets?"
1710 IF BUDGETS$<>"Y" THEN GOTO 1900
1720 IF B=0 THEN GOTO 1900
1800 REM " --- Roll budget revisions"
1810 FOR X=1 TO B
1815 DIM B0$(3+P[4]),A[MP],U[MP]
1820 LET B0$(1)=A0$+B$(X,1)
1825 FIND (GLM02_DEV,KEY=B0$,DOM=1890)IOL=GLM02A
1830 FOR P=1 TO OFFSET
1835 LET A[0]=A[0]+A[P],U[0]=U[0]+U[P]
1840 NEXT P
1850 FOR P=1 TO DIF
1855 LET A[P]=A[P+OFFSET],U[P]=U[P+OFFSET]
1860 NEXT P
1870 FOR P=DIF+1 TO NP
1875 LET A[P]=0,U[P]=0
1880 NEXT P
1885 WRITE (GLM02_DEV,KEY=B0$)IOL=GLM02A
1890 NEXT X
1900 REM " --- Position GLT-06 transaction file"
1990 READ (GLT06_DEV,KEY=A0$,DOM=2000)
2000 REM " --- Read next GLT-06 record"
2010 LET K$=KEY(GLT06_DEV,END=2900)
2020 IF POS(A0$=K$)<>1 THEN GOTO 2900
2030 READ (GLT06_DEV,KEY=K$)IOL=GLT06A
2100 REM " --- Change period"
2110 LET YEAR=FNYY_YEAR(C0$(13,2)),PERIOD=NUM(C0$(15,2))
2120 LET PERIOD=PERIOD-OFFSET
2130 IF PERIOD<1 THEN LET YEAR=YEAR-1,PERIOD=NP+PERIOD
2140 LET YEAR=YEAR+NEWYEAR[PERIOD]
2150 LET C0$(13,2)=FNYEAR_YY21$(YEAR),C0$(15,2)=STR(PERIOD:"00")
2200 REM " --- Write GLW-05 record and remove original"
2210 WRITE (GLW05_DEV,KEY=C0$)IOL=GLW05A
2220 REMOVE (GLT06_DEV,KEY=K$,DOM=2800)
2800 REM " --- Loop back for next GLT-06 record"
2890 GOTO 2000
2900 REM " --- Position GLW-05 work file"
2990 READ (GLW05_DEV,KEY=N0$,DOM=3000)
3000 REM " --- Copy GLW-05 records back to GLT-06"
3010 READ (GLW05_DEV,END=3900)IOL=GLW05A
3020 WRITE (GLT06_DEV,KEY=C0$)IOL=GLT06A
3030 REMOVE (GLW05_DEV,KEY=C0$,DOM=3090)
3090 GOTO 3000
3900 REM " --- Loop back for next account"
3990 GOTO 1100
4000 REM " --- Update G/L parameter record"
4010 LET P=OFFSET+1
4020 LET X=FNP1(1,MP),L=2,N=NP*L,X$=P3$(X,N),P3$(X,N)=FNQ$(X$,P,L)
4030 LET X=FNP2(1,MP),L=16,N=NP*L,X$=P3$(X,N),P3$(X,N)=FNQ$(X$,P,L)
4040 LET X=FNP3(1,MP),L=3,N=NP*L,X$=P3$(X,N),P3$(X,N)=FNQ$(X$,P,L)
4050 LET X=FNP4(1,MP),L=1,N=NP*L,X$=P3$(X,N),P3$(X,N)=FNQ$(X$,P,L)
4060 LET X=FNP5(1,MP),L=3,N=NP*L,X$=P3$(X,N),P3$(X,N)=FNQ$(X$,P,L)
4080 WRITE (SYS01_DEV,KEY=P0$)IOL=GLS01A
4100 REM " --- Update retained earnings"
4110 LET X$="0",AMOUNT=EARNINGS[0]
4120 GOSUB 6200
4130 LET X$="4",AMOUNT=EARNINGS[1]
4140 GOSUB 6200
4150 LET X$="2",AMOUNT=EARNINGS[2]
4160 GOSUB 6200
4900 REM " --- All done"
4990 RUN "SYS.AA"
5000 REM " --- Display"
5005 IF POS(P4$(6,1)="YN")=0 THEN LET P4$(6,1)="Y"
5010 PRINT @(0,L0+2),'CE',@(16,3),P2$(3,2),@(77),P4$(6,1),@(16,4),FNYY21_YY$(P2$(5,2)),@(77),P2$(1,2),
5015 LET N=BASE-1,NY=0
5020 FOR X=1 TO NP
5030 LET X$="No",Y$="",LX=FNP4(X,MP),N=N+1
5035 IF POS(P3$(LX,1)="YN")=0 THEN LET P3$(LX,1)="N"
5040 IF P3$(LX,1)="Y" THEN LET X$="Yes"
5045 IF N>P[0] THEN LET N=1,NY=X
5050 IF FNP$(P3$(FNP5(X,MP),3))<>"" THEN LET Y$=FNB$(P3$(FNP5(X,MP),3))
5070 PRINT @(9,X+L0),N:"##",@(17,X+L0),X:"##",@(23),FNM$(P3$(FNP1(X,MP),2)),@(30),P3$(FNP2(X,MP),16),@(48),P3$(FNP3(X,MP),3),@(56),X$,@(63),Y$,
5080 NEXT X
5090 RETURN 
6000 REM " --- Accumulate budget revisions"
6010 READ (GLM08_DEV,KEY=N0$,DOM=6020)
6020 LET K$=KEY(GLM08_DEV,END=6090)
6030 IF POS(N0$=K$)<>1 THEN GOTO 6090
6040 READ (GLM08_DEV)
6050 IF POS(K$(3,1)=B$)=0 THEN LET B$=B$+K$(3,1)
6080 GOTO 6020
6090 RETURN 
6200 REM " --- Update beginning balance"
6210 DIM B0$(3+P[4]),A[MP],U[MP]
6220 LET B0$(1)=N0$+EARNINGS$+X$
6230 FIND (GLM02_DEV,KEY=B0$,DOM=6240)IOL=GLM02A
6240 LET A[0]=A[0]+AMOUNT
6245 IF X$="4" THEN LET A[0]=AMOUNT
6250 WRITE (GLM02_DEV,KEY=B0$)IOL=GLM02A
6290 RETURN 
6300 REM " --- Retrieve retained earnings beginning/ending balances"
6310 DIM B0$(3+P[4]),A[MP],U[MP]
6320 LET B0$(1)=N0$+EARNINGS$+X$
6330 FIND (GLM02_DEV,KEY=B0$,DOM=6240)IOL=GLM02A
6340 LET BEGBAL=A[0],ENDBAL=A[0]
6350 FOR P=1 TO NP
6360 LET ENDBAL=ENDBAL+A[P]
6370 NEXT P
6390 RETURN 
6900 REM " --- Calculate period beginning and ending dates"
6910 DIM NEWYEAR[NP]
6920 LET N=0,X1=FNM(P3$,1),X2=FNM(P3$,NY)
6930 IF X1>X2 THEN LET N=NY
6940 IF N=0 THEN GOTO 6990
6950 FOR X=N TO NP
6960 LET NEWYEAR[X]=1
6970 NEXT X
6990 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8040 DEF FNM$(Q1$)=FNA$(Q1$(1),"XXX")+"/"+FNA$(Q1$(2),"XXX")
8043 DEF FNM(Q$,Q)=ASC(Q$((Q-1)*2+1,1))-1
8045 DEF FNP$(Q$)=CVS(Q$,2)
8050 DEF FNP1(Q1,Q2)=(Q1-1)*2+1
8055 DEF FNP2(Q1,Q2)=Q2*2+((Q1-1)*16+1)
8060 DEF FNP3(Q1,Q2)=Q2*2+Q2*16+((Q1-1)*3+1)
8065 DEF FNP4(Q1,Q2)=Q2*2+Q2*16+Q2*3+Q1
8070 DEF FNP5(Q1,Q2)=Q2*2+Q2*16+Q2*3+Q2*1+((Q1-1)*3+1)
8075 DEF FNQ$(Q$,Q1,Q2)=Q$((Q1-1)*Q2+1)+Q$(1,(Q1-1)*Q2)
8090 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9205 SETESC 9000
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
