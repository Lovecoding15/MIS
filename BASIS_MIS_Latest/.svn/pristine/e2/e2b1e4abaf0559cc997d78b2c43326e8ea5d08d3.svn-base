0010 REM "POS - Replenishment Selection Update
0020 REM "Program POE.FB
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0095 PRECISION IVPRECISION
0200 REM " --- IOLists
0210 APM06A: IOLIST U0$,U1$,U[ALL]
0220 IVM01A: IOLIST D0$,D1$,D2$,D3$,D4$,D5$,D6$,D[ALL]
0230 IVM02A: IOLIST B0$,B1$,B2$,B[ALL]
0260 IVM05A: IOLIST T0$,T1$,T2$,T[ALL],T0,*,VLEAD
0270 IVM10F: IOLIST BUYSTUF$,BUYDAYS
0300 POE07A: IOLIST A0$(1),A1$(1)
0310 POE06A: IOLIST C0$,C1$,C[ALL]
0330 POE16A: IOLIST W0$,W1$,W2$,W[ALL]
0500 REM " --- Init Data
0520 DIM B[16],D[7]
0700 REM " --- Notification Box
0720 CALL "SYC.NB","Now Reviewing: "+FILL(LEN(VENDOMASK$)+7)+"Item:",ITEMLEN+5,COLUMN
0900 REM " --- Calculate divisor
0910 IF TERMDATE$<BEGPER$ OR TERMDATE$>ENDPER$ THEN LET X2=30.55 ELSE LET X2$=FNB$(TERMDATE$),X2=NUM(X2$(4,2)); REM "# days into current period
0920 IF X2=0 THEN LET X2=30.55
1000 REM " --- Init read
1020 READ (POE07_DEV,KEY=N0$,DOM=READPOE07)
1100 REM " --- Read through replenishment selections file
1105 READPOE07: 
1110 LET K$=KEY(POE07_DEV,END=4000)
1120 IF POS(N0$=K$)<>1 THEN GOTO 4000
1140 READ (POE07_DEV)IOL=POE07A
1150 LET UPDATE$=A1$(25,1)
1160 IF UPDATE$="Y" THEN GOTO NEXTPOE07
1200 REM " --- Init IVM-03 for 'Should we buy' loop
1220 READ (IVM03_DEV,KEY=N0$+"F"+BUYERFROM$,DOM=SHOULDWEBUY)
1250 REM " --- Get the items... any need buying?
1255 SHOULDWEBUY: 
1305 LET K03$=KEY(IVM03_DEV,END=WRITEPOE07)
1310 IF POS(N0$+"F"=K03$)<>1 THEN GOTO WRITEPOE07
1315 PRINT @(COLUMN-12-LEN(VENDOMASK$),11),FNF$(K03$(7,VENDLEN),VENDOMASK$),
1320 PRINT @(COLUMN-10,11),K03$(4,3)
1325 IF BUYERTHRU$<>FILL(3) AND K03$(4,3)>BUYERTHRU$ THEN GOTO WRITEPOE07
1330 IF VENDFROM$<>FILL(6) AND K03$(7,6)<VENDFROM$ THEN READ (IVM03_DEV,KEY=K03$(1,6)+VENDFROM$,DOM=NEXTIVM03)
1335 IF VENDTHRU$<>FILL(6) AND K03$(7,6)>VENDTHRU$ THEN READ (IVM03_DEV,KEY=K03$(1,6)+$FF$,DOM=NEXTIVM03)
1340 PRINT @(COLUMN,11),K03$(4,3),"  ",K03$(16,ITEMLEN)
1360 READ (IVM03_DEV)
1370 IF K03$(4,3)<>CURBUY$ THEN GOSUB 6700
1380 IF K03$(7,6)<>CURVND$ THEN GOSUB NEWVENDOR
1390 IF SELVND$="YES" THEN GOTO SELECTVEND; REM "In cycle review it!
1400 REM " --- Got it; now, need it?
1420 FIND (IVM02_DEV,KEY=N0$+K03$(36)+K03$(16,20),DOM=NEXTIVM03)IOL=IVM02A
1430 FIND (IVM01_DEV,KEY=N0$+K03$(16,20),DOM=NEXTIVM03)IOL=IVM01A
1440 IF D2$(24,1)="W" THEN LET ORDPOINT=B[4]
1450 IF D2$(24,1)="I" THEN LET ORDPOINT=D[4]
1470 IF ORDPOINT=0 THEN GOTO NEXTIVM03
1480 IF B[0]-B[2]+B[1]<ORDPOINT THEN GOTO SELECTVEND
1490 NEXTIVM03: 
1495 GOTO SHOULDWEBUY
1500 REM " --- Select this Buyer/Vendor
1505 SELECTVEND: 
1510 LET SELVND$="YES"; REM "Buy today!
1610 DIM C0$(14),C1$(40),C[3]
1620 LET C0$(1)=N0$+CURBUY$+CURVND$+"000"
1630 LET C1$(1)=A0$(3,2)+A1$(22,3),C1$(7)=A1$(26,30)
1640 WRITE (POE06_DEV,KEY=C0$)IOL=POE06A
1900 REM " --- Init read Buyer/vendor/Prod/Item record
1910 DIM W0$(34),W1$(20),W[16]
1920 LET W0$(1)=C0$
1930 READ (IVM03_DEV,KEY=N0$+"F"+CURBUY$+CURVND$,DOM=DOITEMS); REM "Start at the beginning
2000 REM " --- Process all items for Buyer+Vendor
2005 DOITEMS: 
2010 LET KEY$=KEY(IVM03_DEV,END=DONEBUYERVEND)
2020 IF POS(N0$+"F"+CURBUY$+CURVND$=KEY$)<>1 THEN GOTO DONEBUYERVEND
2030 READ (IVM03_DEV)
2040 FIND (POE16_DEV,KEY=KEY$(1,2)+KEY$(4,32),DOM=2060)
2050 GOTO NEXTITEM; REM "If rec exists, all whses are already done for item
2070 FIND (IVM01_DEV,KEY=N0$+KEY$(16,20),DOM=NEXTITEM)IOL=IVM01A
2080 IF D2$(24,1)="I" THEN LET MAX=D[3],REORD=D[4],LEAD=D[7],EOQ=D[6],SAFE=D[5]; REM "Item level so use IVM-01's data
2090 LET W0$(12)=D2$(1,3)+D0$(3),WEIGHT=D[1],FLAG$="",AVFLAG$=""
2100 REM " --- Get all warehouse info
2120 GOSUB CALC_ALLWHSES
2200 REM " --- Calculate usages
2210 GOSUB CALC_USAGES
2220 IF CURUSAGE=0 AND PRIORUSE=0 THEN GOTO 2270
2230 LET AVGMIN=AVGUSAGE*.5,AVGMAX=AVGUSAGE*2; REM "Avg usage for reasonability check
2245 IF CURUSAGE<AVGMIN OR CURUSAGE>AVGMAX THEN LET AVFLAG$="U"
2260 IF AVGPRIORUSE<AVGMIN OR AVGPRIORUSE>AVGMAX THEN LET AVFLAG$="U"
2290 LET LINEPT=INT(AVGUSAGE*DAYS/30.55)+REORD; REM "Average usage during review cycle
2300 REM " --- OK, now lets calculate how much to buy
2303 LET SUGG=0
2305 PRECISION 2
2310 IF MAX=0 THEN GOTO MAX_ISNT_SET
2315 IF ONHND<=MAX THEN GOTO 2330
2320 LET FLAG$=FLAG$+"O"
2325 GOTO 2400; REM "If max is set, don't buy if onhand's over max
2330 LET SUGG=MAX-ONHND,FLAG$=FLAG$+"M"; REM "Buy MAX minus On Hand if max set
2335 MAX_ISNT_SET: 
2340 IF SUGG=0 AND EOQ<>0 AND ONHND<REORD THEN LET SUGG=EOQ,FLAG$="E"; REM "Buy EOQ quantities if set
2350 IF SUGG=0 AND REORD<>0 AND ONHND<REORD THEN LET SUGG=REORD-ONHND,FLAG$=FLAG$+"R"; REM "Last of all, buy Reorder Point
2360 IF SUGG>0 AND SUGG>AVGUSAGE*12 THEN LET SUGG=AVGUSAGE*12,FLAG$=FLAG$+"Y"; REM "Limit to yearly use
2370 IF SUGG>0 AND SUGG<AVGUSAGE*.5 THEN LET SUGG=AVGUSAGE*.5,FLAG$=FLAG$+"2"; REM "At least 1/2 mo supply
2380 LET SUGG=INT(SUGG+.5)
2385 IF EOQ<>0 THEN IF SUGG>0 THEN LET SUGG=INT((SUGG-1)/EOQ+1)*EOQ,FLAG$=FLAG$+"E"; REM "Round up to EOQ quantities if set
2395 PRECISION IVPRECISION
2400 REM " --- How much does it cost?
2410 DIM T[1,2]
2420 LET COST=0,VLEAD=0
2430 READ (IVM05_DEV,KEY=N0$+C0$(6,6)+D0$(3),DOM=2480)IOL=IVM05A
2440 FOR X=0 TO 2
2450 IF T[0,X]<=SUGG THEN LET COST=T[1,X]; REM "Quan breaks
2460 NEXT X
2470 IF COST=0 THEN LET COST=T0; REM "Last purchase cost
2480 IF COST=0 THEN LET COST=ICOST; REM "Last of all, IVM-02 cost
2490 IF VLEAD<>0 THEN LET LEAD=VLEAD; REM "Use vendor's LEAD if here
2600 REM " --- Write detail to POE-16
2610 LET W0$(12)=D2$(1,3)+D0$(3),W1$(1)=B0$(3,2),W2$=""
2620 DIM W[16]
2640 IF MULTIPLE THEN LET W1$(1,2)="**"; REM "Multiple warehouses
2650 LET W2$=WHSES$,W[0]=LINEPT,W[1]=REORD,W[2]=AVAIL,W[3]=ONORD
2660 LET W[4]=EOQ,W[5]=SAFE,W[6]=MAX,W[7]=LEAD,W[8]=WEIGHT
2670 LET W[9]=SUGG,W[10]=COST
2680 IF MULTIPLE THEN LET W[11]=AVAILALL-AVAIL; REM "Available other whses
2690 LET W[12]=CURUSAGE,W[13]=AVGUSAGE,W[14]=PRIORUSE
2700 LET FLAG$=FLAG$+AVFLAG$
2710 IF LEN(FLAG$)=0 THEN GOTO 2790
2720 FOR X=1 TO LEN(FLAG$)
2730 IF POS(FLAG$(X,1)=W1$(3,8))=0 THEN LET W1$(POS(" "=W1$(3,8))+2)=FLAG$(X,1)
2740 NEXT X
2790 WRITE (POE16_DEV,KEY=W0$)IOL=POE16A
2800 REM " --- Add em up here!!
2820 IF ONHND<REORD THEN LET TOTUNIT=TOTUNIT+SUGG,TOTCOST=TOTCOST+COST*SUGG,TOTWT=TOTWT+WEIGHT*SUGG
2840 LET VNDCOST=VNDCOST+COST*SUGG,VNDWT=VNDWT+WEIGHT*SUGG,VNDUNIT=VNDUNIT+SUGG
2900 REM " --- Loop up for next item for this buyer+vendor
2905 NEXTITEM: 
2920 GOTO DOITEMS
3000 REM " --- All done this Buyer+Vendor
3005 DONEBUYERVEND: 
3020 GOSUB 6000
3200 REM " --- All done this Buyer
3220 READ (IVM03_DEV,KEY=N0$+"F"+CURBUY$+CURVND$+$FF$,DOM=3290)
3290 GOTO SHOULDWEBUY
3500 REM " --- Write POE-07 record 
3505 WRITEPOE07: 
3520 LET UPDATE$="Y"
3530 WRITE (POE07_DEV,KEY=A0$)IOL=POE07A
3600 REM " --- Loop up to next selection
3605 NEXTPOE07: 
3620 GOTO READPOE07
4000 REM " --- All done searching here
4020 LET UPDATE$="Y"
4040 WRITE (POE07_DEV,KEY=A0$)IOL=POE07A
4060 GOTO 9900
6000 REM " --- All through with this buyer/vendor combination
6010 IF CURVND$="" THEN GOTO NEWVENDOR
6020 DIM U0$(11),U1$(30),U[11]
6030 LET U0$(1)=N0$+C0$(6,6)+C0$(3,3)
6040 READ (APM06_DEV,KEY=U0$,DOM=6200)IOL=APM06A
6200 REM " --- Purchase to What Level?
6220 EXTRACT (POE06_DEV,KEY=C0$)IOL=POE06A
6230 IF SELVND$<>"YES" THEN LET C1$(6,1)="N"; GOTO 6280
6240 LET C[0]=TOTCOST,C[1]=TOTWT,C[2]=TOTUNIT
6250 LET X=POS(U1$(9,1)="NDUP")
6260 LET C1$(6,1)="R"; REM "Reorder point is default
6270 IF X>1 THEN IF U[X]<>0 AND C[X-1]<U[X] THEN LET C1$(6,1)="L"; REM "If there are minimums, check them
6275 IF C1$(6,1)="R" AND TOTCOST=0 AND TOTWT=0 AND TOTUNIT=0 THEN LET C1$(6,1)="N"; REM "Check for reorder pt items only"
6280 IF C1$(6,1)="L" AND VNDCOST=0 AND VNDUNIT=0 AND VNDWT=0 THEN LET C1$(6,1)="N"; REM "Don't print if NO buys
6285 WRITE (POE06_DEV,KEY=C0$)IOL=POE06A
6290 RETURN 
6300 REM " --- New vendor
6305 NEWVENDOR: 
6310 LET SELVND$="",TOTUNIT=0,TOTCOST=0,TOTWT=0
6320 LET VNDUNIT=0,VNDCOST=0,VNDWT=0
6330 DIM U[11]
6340 FIND (APM06_DEV,KEY=N0$+K03$(7,6)+K03$(4,3),DOM=6400)IOL=APM06A
6400 REM " --- Get Current Vendor stuff
6440 LET CURVND$=K03$(7,6)
6460 IF U[0]<>0 THEN LET DAYS=U[0] ELSE LET DAYS=BUYDAYS
6490 RETURN 
6500 REM " --- Get Prior, Current, Average Usages and IV activity
6505 CALC_USAGES: 
6510 DIM CHANS[12],ITEM$[2]
6520 LET ACTION$="IA",CHANS[1]=IVM01_DEV,CHANS[2]=IVM02_DEV,CHANS[3]=IVM03_DEV
6530 LET CHANS[12]=IVM12_DEV,ITEM$[0]=N0$,ITEM$[1]=B0$(3,2)
6540 LET ITEM$[2]=B0$(5,20),CUR_PERYR$=CURPER$+CURYR$,BASE_PERYR$=CUR_PERYR$
6550 CALL "IVC.AU",ACTION$,CHANS[ALL],ITEM$[ALL],FACTORS[ALL],DAYOFMONTH,BASE_PERYR$,CUR_PERYR$,TOT_PERS,IVPRECISION,ANNUALUSAGE,ESTIMATED,CALLFLAG$,STATUS
6560 IF CALLFLAG$<>"" THEN LET ANNUALUSAGE=ESTIMATED
6570 LET AVGUSAGE=ANNUALUSAGE/TOT_PERS
6610 DIM CHANS[3],ITEM$[3],PERIOD$[1],ACTIVITY[12]
6620 LET ACTION$="A",CHANS[2]=IVM12_DEV,CHANS[3]=IVM03_DEV
6630 LET ITEM$[0]=N0$,ITEM$[1]=B0$(3,2),ITEM$[2]=B0$(5,20)
6635 LET PERIOD$[0]=CURYR$+CURPER$,PERIOD$[1]=CURYR$+CURPER$
6640 CALL "IVC.WB",ACTION$,CHANS[ALL],ITEM$[ALL],PERIOD$[ALL],ACTIVITY[ALL],STATUS
6650 READ (IVM03_DEV,KEY=KEY$); REM "Move ptr back to before call
6660 LET CURUSAGE=ACTIVITY[3]+ACTIVITY[4]-ACTIVITY[8]
6670 LET PRIORUSE=(ANNUALUSAGE-CURUSAGE)
6680 LET AVGPRIORUSE=(ANNUALUSAGE-CURUSAGE)/TOT_PERS
6690 RETURN 
6700 REM " --- Get current buy stuff
6710 DIM BUYSTUF$(30)
6720 LET BUYDAYS=0
6730 FIND (IVM10_DEV,KEY=N0$+"F"+K03$(4,3),DOM=6740)IOL=IVM10F
6740 LET CURBUY$=K03$(4,3)
6750 RETURN 
6800 REM " --- Calculate for all whses
6805 CALC_ALLWHSES: 
6810 LET AVAILALL=0,COUNT=0,MULTIPLE=0,WHSES$=""
6815 LET ONORD=0,AVAIL=0,SAFE=0,LEAD=0,EOQ=0,ICOST=0
6820 IF D2$(24,1)="W" THEN LET MAX=0,REORD=0
6830 READ (IVM03_DEV,KEY=N0$+"G"+D0$(3,20),DOM=WHSELOOP)
6840 IF K03G$(4,20)<>D0$(3,20) THEN GOTO DONEMULTWHSES
6845 WHSELOOP: 
6850 LET K03G$=KEY(IVM03_DEV,END=DONEMULTWHSES)
6860 IF K03G$(4,20)<>D0$(3,20) THEN GOTO DONEMULTWHSES
6865 READ (IVM03_DEV)
6870 READ (IVM02_DEV,KEY=N0$+K03G$(24,2)+K03G$(4,20),DOM=NEXTWHSE)IOL=IVM02A
6880 LET ONORD=ONORD+B[1],AVAIL=AVAIL+B[0]-B[2]
6890 LET SAFE=SAFE+B[5],LEAD=LEAD+B[7],EOQ=EOQ+B[6],ICOST=ICOST+B[11]
6895 LET WHSES$=WHSES$+B0$(3,2)
6900 IF D2$(24,1)<>"W" THEN GOTO 6960
6901 REM "Warehouse level so use IVM-02's data
6910 LET MAX=MAX+B[3],REORD=REORD+B[4]
6920 LET COUNT=COUNT+1
6925 NEXTWHSE: 
6930 GOTO WHSELOOP
6935 DONEMULTWHSES: 
6980 LET ONHND=AVAIL+ONORD
6985 IF COUNT>1 THEN LET MULTIPLE=1
6990 READ (IVM03_DEV,KEY=KEY$); REM "Move ptr back to before loop
6995 RETURN 
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
