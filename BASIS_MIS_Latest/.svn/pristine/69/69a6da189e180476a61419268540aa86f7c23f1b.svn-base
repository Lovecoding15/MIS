0010 REM "POC - Calendar Maintenance"
0020 REM "Program POC.CB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0050 REM "FILENAME$: Calendar file name POM-01/MPM-02 (input)"
0060 REM "STATUS   : 0=No error (returned)"
0070 REM 
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER FILENAME$,STATUS
0100 REM " --- Open/Lock Files"
0110 LET FILES=2
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0130 LET FILES$[1]="SYS-01",FILES$[2]=FILENAME$
0140 CALL "SYC.DA",1,1,2,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0150 IF STATUS THEN GOTO 9900
0160 LET SYS01_DEV=CHANNELS[1],POM01_DEV=CHANNELS[2]
0200 REM " --- IOLISTs"
0210 POM01A: IOLIST A0$(1),A1$(1),A0
0270 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0400 REM " --- Parameters"
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2)
0500 REM " --- Init Data"
0510 DIM A0$(6),A1$(31),L[12]
0550 LET MONTH=NUM(F0$(20,2)),YEAR=FNYY_YEAR(F0$(18,2))
0560 LET DAYS$="Sunday   Monday   Tuesday  WednesdayThursday Friday   Saturday "
0570 LET CODES$="           Work Day  Closed    Holiday  "
0580 LET L[1]=31,L[2]=28,L[3]=31,L[4]=30,L[5]=31,L[6]=30
0590 LET L[7]=31,L[8]=31,L[9]=30,L[10]=31,L[11]=30,L[12]=31
0700 REM " --- Background"
0710 FOR X=4 TO 10 STEP 2
0720 CALL "SYC.WC",1,0,80,0,0,X,0
0730 NEXT X
0740 PRINT 'SB',@(9,3),"First Day Currently Scheduled:",@(10,5),"Last Day Currently Scheduled:",@(33,7),"Month:",@(34,9),"Year:",'SF',
0800 REM " --- Get First Day Scheduled"
0810 CALL "POC.CE",POM01_DEV,N0$,BEGDATE$,ENDDATE$,STATUS
0820 LET V1$="None",V2$="None"
0830 IF BEGDATE$<>"" THEN LET V1$=FNB$(BEGDATE$),V2$=FNB$(ENDDATE$)
0840 PRINT @(40,3),V1$,@(40,5),V2$,
0900 REM " --- Check for gaps in existing schedule"
0910 GOSUB 6000
1000 REM " --- Month To Change"
1010 LET V4$="Enter The Month To Change"
1020 LET V0$="N",V1$="KEC",V2$=STR(MONTH),V3$="0#",V0=2,V1=40,V2=7
1030 GOSUB 7000
1040 ON V3 GOTO 1050,1000,1000,1000,1200
1050 IF V<1 OR V>12 THEN GOTO 1000
1060 LET MONTH=V
1070 PRINT @(V1,V2),V:"#0",
1100 REM " --- Year To Change"
1110 LET V4$="Enter The Year To Change"
1120 LET V0$="D",V1$="KECY",V2$=FNYEAR_YY21$(YEAR),V3$="",V0=2,V1=40,V2=9
1130 GOSUB 7000
1140 ON V3 GOTO 1160,1100,1000,1100,1200
1160 LET YEAR=FNYY_YEAR(V$)
1170 PRINT @(V1,V2),FNYEAR_YY$(YEAR),'CL',
1200 REM " --- Retrieve record"
1210 LET YEAR$=FNYEAR_YY21$(YEAR),MONTH$=STR(MONTH:"00"),A0$(1)=N0$+YEAR$+MONTH$
1220 FIND (POM01_DEV,KEY=A0$,DOM=1400)IOL=POM01A
1300 REM " --- Correct?"
1310 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
1320 ON V3 GOTO 1330,1300,1300,1300,9900
1330 ON POS(V$="YN") GOTO 1300,1340,1000
1390 GOTO 1600
1400 REM " --- New record?"
1410 CALL "SYC.YN",1,"No Calendar Exists For "+MONTH$+"/"+FNYY21_YY$(YEAR$)+". Create One",2,V$,V3
1420 ON V3 GOTO 1430,1400,1400,1400,9900
1430 ON POS(V$="YN") GOTO 1400,1440,1000
1500 REM " --- Initialize new record"
1510 DIM A1$(31)
1600 REM " --- Create main window"
1610 LET WIDTH=78,HEIGHT=21,COLUMN=1,ROW=2,TITLE$=""
1620 CALL "SYC.WA",0,WIDTH,HEIGHT,COLUMN,ROW,TITLE$,NAME$
1700 REM " --- Fill in calendar block"
1710 FOR X=10 TO 65 STEP 11
1720 CALL "SYC.WC",1,1,0,HEIGHT-2,X,0,0
1730 NEXT X
1740 CALL "SYC.WC",1,0,WIDTH-2,0,0,1,0
1750 FOR X=4 TO 16 STEP 3
1760 CALL "SYC.WC",1,0,WIDTH-2,0,0,X,0
1770 NEXT X
1780 PRINT @(22,HEIGHT-4),'CL',@(22,HEIGHT-3),'CL',
2000 REM " --- Month/Year?"
2010 LET YEAR$=A0$(3,2),YEAR=FNYY_YEAR(YEAR$),MONTH$=A0$(5,2),MONTH=NUM(MONTH$)
2100 REM " --- Set window title"
2110 LET TITLE$=DATE(JUL(1900+YEAR,MONTH,1):"%Ms %Y")
2120 PRINT @(23,17),TITLE$,"   Arrows=Change Day  PgUp/PgDn=Change Month",@(34,18),"<Space>=Toggle Status  <F4>=End",
2400 REM " --- Days"
2410 LET COLUMN=0,ROW=0
2420 FOR X=1 TO 7
2430 PRINT @(COLUMN,ROW),DAYS$((X-1)*9+1,9),
2440 LET COLUMN=COLUMN+11
2450 NEXT X
2500 REM " --- Determine starting day of the week"
2510 DIM DAYS[42],ROW[42],COLUMN[42]
2515 LET FIRST$=YEAR$+MONTH$+"01",X$="",FIRST=0,D=0,DATE=0
2520 CALL "SYC.CB",FIRST$,X$,FIRST
2530 LET FIRST=FIRST+1,L[2]=28,YY=FNYY_YEAR(YEAR$),MM=NUM(MONTH$)
2540 IF FIRST>7 THEN LET FIRST=1
2550 IF MOD(YY,4)=0 THEN LET L[2]=29
2560 FOR X=FIRST TO 42
2570 LET DATE=DATE+1
2580 IF DATE<=L[MM] THEN LET D=D+1,DAYS[X]=D
2590 NEXT X
2900 REM " --- Display dates on calendar"
2910 LET COLUMN=0,ROW=2
2920 FOR X=1 TO 42
2930 IF DAYS[X]>0 THEN PRINT @(COLUMN,ROW),DAYS[X],
2940 LET COLUMN=COLUMN+11
2950 IF COLUMN<77 THEN GOTO 2990
2960 LET COLUMN=0,ROW=ROW+3
2990 NEXT X
3000 REM " --- Display data"
3010 LET COLUMN=0,ROW=3,DATE=1,FIRST_COL=0,FIRST_ROW=0
3020 FOR X=1 TO 42
3030 IF DAYS[X]=0 THEN GOTO 3070
3035 IF FIRST_ROW=0 THEN LET FIRST_ROW=ROW,FIRST_COL=COLUMN
3040 LET X$=CODES$((POS(A1$(DATE,1)=" WCH")-1)*10+1,10)
3045 LET ROW[DATE]=ROW,COLUMN[DATE]=COLUMN
3050 PRINT @(COLUMN,ROW),X$,
3060 LET DATE=DATE+1
3070 LET COLUMN=COLUMN+11
3080 IF COLUMN>76 THEN LET COLUMN=0,ROW=ROW+3
3090 NEXT X
3100 REM " --- Initialize for modification"
3110 LET LAST_COL=COLUMN,LAST_ROW=ROW,V0=1,DAYS=1
3120 LET COLUMN=FIRST_COL,ROW=FIRST_ROW,L_COL=COLUMN,L_ROW=ROW
3200 REM " --- Process user input"
3210 PRINT @(L_COL,L_ROW)," ",@(L_COL+9)," ",@(COLUMN,ROW),"[",@(COLUMN+9),"]",
3220 LET V0$="Sa",V1$="a^",V2$="",V3$="",V4$="",V1=COLUMN+4,V2=ROW-1,L_COL=COLUMN,L_ROW=ROW
3230 GOSUB 7000
3240 PRINT @(V1,V2)," ",
3250 IF V3=4 THEN GOTO 4000
3260 IF V3=-1 THEN GOTO 3400
3270 IF V3=-2 THEN GOTO 3500
3280 IF V3=-3 THEN GOTO 3600
3290 IF V3=2 THEN GOTO 3700
3292 IF V3=-17 THEN GOTO 3800
3293 IF V3=-16 THEN GOTO 3900
3300 REM " --- Toggle status"
3310 IF POS(V$=" WCH")=0 THEN GOTO 3200
3315 IF V$<>" " THEN LET A1$(DAYS,1)=V$; GOTO 3350
3320 IF A1$(DAYS,1)="W" THEN LET A1$(DAYS,1)="C"; GOTO 3350
3325 IF A1$(DAYS,1)="C" THEN LET A1$(DAYS,1)="H"; GOTO 3350
3330 IF A1$(DAYS,1)="H" OR A1$(DAYS,1)=" " THEN LET A1$(DAYS,1)="W"
3340 LET A1$(DAYS,1)="W"
3350 LET X$=CODES$((POS(A1$(DAYS,1)=" WCH")-1)*10+1,10)
3360 PRINT @(COLUMN,ROW),X$,
3390 GOTO 3200
3400 REM " --- Right arrow"
3410 LET DAYS=DAYS+1
3420 IF DAYS>L[MM] THEN LET DAYS=1
3490 GOTO 3780
3500 REM " --- Left arrow"
3510 LET DAYS=DAYS-1
3520 IF DAYS<1 THEN LET DAYS=L[MM]
3590 GOTO 3780
3600 REM " --- Down arrow"
3610 LET DAYS=DAYS+7
3620 IF DAYS<=L[MM] THEN GOTO 3780
3630 WHILE DAYS>0
3640 LET DAYS=DAYS-7
3650 WEND
3690 GOTO 3600
3700 REM " --- Up arrow"
3710 LET DAYS=DAYS-7
3720 IF DAYS>0 THEN GOTO 3780
3730 WHILE DAYS<=L[MM]
3740 LET DAYS=DAYS+7
3750 WEND
3760 GOTO 3700
3780 LET COLUMN=COLUMN[DAYS],ROW=ROW[DAYS]
3790 GOTO 3200
3800 REM " --- PgUp one month"
3805 LET A0=L[MM]
3810 IF FNP$(A1$)<>"" THEN WRITE (POM01_DEV,KEY=A0$)IOL=POM01A
3815 LET K$=A0$
3820 LET MONTH=NUM(K$(5,2))-1,YR=FNYY_YEAR(K$(3,2))
3825 IF MONTH<1 AND YR<1 THEN GOTO 3880
3830 IF MONTH<1 THEN LET MONTH=12,K$(3,2)=FNYEAR_YY21$(YR-1)
3835 LET K$(5,2)=STR(MONTH:"00")
3840 FIND (POM01_DEV,KEY=K$,DOM=3850)IOL=POM01A
3845 GOTO 3880
3850 LET A0$(1)=K$,A1$(1)=""
3880 PRINT 'CF',
3890 GOTO 2000
3900 REM " --- PgDn one month"
3905 LET A0=L[MM]
3910 IF FNP$(A1$)<>"" THEN WRITE (POM01_DEV,KEY=A0$)IOL=POM01A
3915 LET K$=A0$
3920 LET MONTH=NUM(K$(5,2))+1,YR=FNYY_YEAR(K$(3,2))
3930 IF MONTH>12 THEN LET MONTH=1,K$(3,2)=FNYEAR_YY21$(YR+1)
3935 LET K$(5,2)=STR(MONTH:"00")
3940 FIND (POM01_DEV,KEY=K$,DOM=3950)IOL=POM01A
3945 GOTO 3980
3950 LET A0$(1)=K$,A1$(1)=""
3980 PRINT 'CF',
3990 GOTO 2000
4000 REM " --- End
4010 LET A0=L[MM]
4020 IF FNP$(A1$)<>"" THEN WRITE (POM01_DEV,KEY=A0$)IOL=POM01A
4090 GOTO 9900
6000 REM " --- Display Unscheduled Gaps in Calendar
6010 LET GAP$=""
6090 READ (POM01_DEV,KEY=N0$,DOM=6100)
6100 REM " --- Process First Month"
6110 LET K$=KEY(POM01_DEV,END=6500)
6120 IF POS(N0$=K$)<>1 THEN GOTO 6500
6130 READ (POM01_DEV)IOL=POM01A
6140 LET LAST_MONTH$=A0$(3,4)+STR(A0:"00"),X0=POS(" "<>A1$)
6150 LET X1=POS(" "=A1$(X0,A0+1-X0))
6160 IF X1=0 THEN GOTO 6200
6170 LET GAP$=GAP$+K$(3,4)+STR(X0+X1-1:"00")
6180 LET X2=POS(" "<>A1$(X0+X1-1,A0+1-(X0+X1)))
6185 IF X2=0 THEN GOTO 6200
6190 LET GAP$=GAP$+K$(3,4)+STR(X0+X1+X2-3:"00"),X0=X0+X1+X2-2
6195 GOTO 6150
6200 REM " --- Process remaining months
6210 LET K$=KEY(POM01_DEV,END=6400)
6220 IF POS(N0$=K$)<>1 THEN GOTO 6400
6230 LET X$=""
6235 CALL "SYC.CA",LAST_MONTH$,X$,1
6240 IF LEN(X$)<>6 THEN GOTO 6400
6245 IF X$(1,4)=K$(3,4) THEN GOTO 6260
6250 IF MOD(LEN(GAP$),12)=0 THEN LET GAP$=GAP$+X$
6260 READ (POM01_DEV)IOL=POM01A
6265 LET LAST_MONTH$=A0$(3,4)+STR(A0:"00")
6270 IF MOD(LEN(GAP$),12)>0 THEN GOTO 6290
6275 IF A1$(1,1)<>" " THEN GOTO 6340
6280 LET GAP$=GAP$+K$(3,4)+"01"+K$(3,4)+STR(POS(" "<>A1$)-1:"00"),X0=POS(" "<>A1$)
6285 GOTO 6350
6290 IF A1$(1,1)=" " THEN GOTO 6330
6300 LET X$=""
6310 CALL "SYC.CA",K$(3,4)+"01",X$,-1
6315 IF LEN(X$)<>6 THEN GOTO 6400
6320 LET GAP$=GAP$+X$,X0=1
6325 GOTO 6350
6330 LET GAP$=GAP$+A0$(3,4)+STR(POS(" "<>A1$)-1:"00"),X0=POS(" "<>A1$)
6335 GOTO 6350
6340 LET X0=1
6350 LET X1=POS(" "=A1$(X0,A0+1-X0))
6355 IF X1=0 THEN GOTO 6200
6360 LET GAP$=GAP$+K$(3,4)+STR(X0+X1-1:"00")
6370 LET X2=POS(" "<>A1$(X0+X1-1,A0+1-(X0+X1)))
6375 IF X2=0 THEN GOTO 6200
6380 LET GAP$=GAP$+K$(3,4)+STR(X0+X1+X2-3:"00"),X0=X0+X1+X2-2
6390 GOTO 6350
6400 REM " --- Now Prepare To Display Gaps"
6410 IF MOD(LEN(GAP$),12)<>0 THEN LET GAP$=GAP$(1,LEN(GAP$)-6)
6420 IF LEN(GAP$)=0 THEN GOTO 6690
6430 PRINT @(10,11),"The following gaps in scheduled days have been detected:",
6440 LET COLUMN=3,ROW=11
6500 REM " --- Display Gaps
6510 IF LEN(GAP$)=0 THEN GOTO 6600
6520 LET ROW=ROW+1
6525 IF ROW>21 THEN LET COLUMN=COLUMN+20,ROW=12
6530 IF COLUMN<80 THEN GOTO 6580
6540 GOSUB 6900
6550 IF V3=4 THEN GOTO 6690
6560 PRINT @(0,ROW),'CE',
6580 PRINT @(COLUMN,ROW),FNB6$(GAP$(1,6))," Through ",FNB6$(GAP$(7,6)),
6585 LET GAP$=GAP$(13)
6590 GOTO 6500
6600 REM " --- End Of Gaps
6610 GOSUB 6900
6690 RETURN 
6900 REM " --- Continue?
6910 LET V4$="Press <Enter> To Continue:"
6920 LET V0$="S",V1$="C",V2$="",V3$="",V0=1,V1=FNV(V4$),V2=22
6930 GOSUB 7000
6940 LET COLUMN=3,ROW=11
6990 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8025 DEF FNB6$(Q$)=Q$(3,2)+"/"+Q$(5,2)+"/"+FNYY21_YY$(Q$(1,2))
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8100 REM " --- FNYEAR_YY$ Un-Convert 21st Century Numeric Year to 2-Char Year"
8105 DEF FNYEAR_YY$(Q)=STR(MOD(Q,100):"00")
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 REM " --- Return to caller"
9950 EXIT 
9999 END
