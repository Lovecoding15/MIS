0010 REM "BM Indented BOM Listing II
0020 REM "Program BMR.ZB
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0050 SETERR 9000
0085 SETESC 9000
0090 PRECISION 5
0100 REM " --- Open/Lock Files
0170 CALL "SYC.GA",7,1,"","",STATUS
0175 IF STATUS THEN GOTO 9900
0200 REM " --- IOLists
0210 BMM01A1: IOLIST A0$,A1$,A2$,A[ALL]
0215 BMM01A2: IOLIST Z0$,Z1$,Z2$,Z[ALL]
0220 BMM02A: IOLIST B0$,B1$,B2$,B[ALL]
0230 BMM03A: IOLIST C0$,C1$,C[ALL]
0240 BMM05A: IOLIST S0$,S1$,S2$,S3$,S4$,S[ALL]
0250 BMM08A: IOLIST W0$,W[ALL]
0270 IVM01A: IOLIST D0$,D1$(1)
0280 IVM02A: IOLIST *,*,*,JUNK[ALL],UNITCOST
0500 REM " --- Initializations
0510 LET H0=132,H=0,HEADINGS=3,WHEN$=F0$(7,3),CLOCK$=""
0520 DIM HEADINGS$[HEADINGS],Z[11]
0530 LET HEADINGS$[0]=N1$,HEADINGS$[1]=N3$,HEADINGS$[2]="Level Selection: "+M8$
0540 DIM JUNK[10]
0550 IF SHOWCOST$="Y" THEN GOTO 0600
0560 LET X=POS("Cost"=UCHEAD$)
0570 IF X=0 THEN GOTO 0600
0580 LET UCHEAD$(X,4)=""; GOTO 0550
0700 REM " --- Background
0720 CALL "SYC.NB","Printing:",P[0],COLUMN
0800 REM " --- Options
0940 DIM L9$(40,$0A$)
1000 REM " --- Init Read
1020 READ (BMM01_DEV,KEY=N0$+BILLFROM$,DOM=1030)IOL=BMM01A1
1025 GOTO 1180
1100 REM " --- Main Read
1120 READ (BMM01_DEV,END=4000)IOL=BMM01A1
1140 IF A0$(1,2)<>N0$ THEN GOTO 4000
1180 LET X0$=A0$(1,22),LOT=A[5],YIELD=A[4]
1190 IF BILLTHRU$<>"" THEN IF A0$(3,LEN(BILLTHRU$))>BILLTHRU$ THEN GOTO 4000
1200 REM " --- Breaks
1220 GOSUB 6600
1240 IF X0$="NONE" THEN GOTO 1100
1300 PRINT @(COLUMN,11),A0$(3,P[0])
1320 DIM LAB_COST[9],MAT_COST[9],LAB_QTY[9],MAT_QTY[9],SUB_QTY[9],SUB_COST[9],K9$(9*25)
1340 LET K$=A0$(1,22),CUR_LEVEL=1,MAT_QTY[CUR_LEVEL]=1
1380 IF LEVEL<>1 THEN PRINT (7)'LF'; LET L=L+2
2000 REM " --- Get Subcontracts
2020 LET X$=K$
2040 GOSUB 6100
2100 REM " --- Find Labor
2120 LET X$=K$
2140 GOSUB 7500
2190 LET CUR_LEVEL=CUR_LEVEL+1
2200 REM " --- Find Parts
2210 READ (BMM02_DEV,KEY=K$,DOM=2211)
2220 LET K2$=KEY(BMM02_DEV,END=3000)
2230 IF POS(N0$=K2$)<>1 THEN GOTO 3000
2240 READ (BMM02_DEV,KEY=K2$)IOL=BMM02A
2250 IF B0$(1,LEN(K$))<>K$ THEN GOTO 3000
2260 IF B2$(4,1)<>"S" THEN GOTO 2220
2262 IF B2$(5,3)<>"   " THEN IF B2$(5,3)>PDATE$ THEN GOTO 2220
2264 IF B2$(8,3)<>"   " THEN IF B2$(8,3)<=PDATE$ THEN GOTO 2220
2280 LET X0$=B0$(1,2)+B1$
2290 GOSUB 6600
2300 REM " --- Any Pieces??
2320 FIND (BMM01_DEV2,KEY=B0$(1,2)+B1$,DOM=2400)
2330 IF CUR_LEVEL>9 THEN GOTO 6000
2340 LET K9$(((CUR_LEVEL-1)*25)+1,25)=B0$,K$=B0$(1,2)+B1$,MAT_QTY[CUR_LEVEL]=FNQTY(B[0],B[1],B[3],YIELD,B[4])
2360 IF CUR_LEVEL=2 AND LEVEL>=2 THEN PRINT (7)B0$(23,3),
2380 GOTO 2000
2400 REM " --- Print Parts
2420 IF CUR_LEVEL>LEVEL THEN GOTO 2900
2430 IF L+1>L9 THEN GOSUB 5000
2440 LET IVDESC$=IVDESC$+FILL(61)
2450 LET IVDESC$=IVDESC$(1,61-(14+P[0]+CUR_LEVEL*2))
2460 DIM DOTS$(CUR_LEVEL-1,".")
2465 IF CUR_LEVEL=1 THEN LET UM$=A2$(48,2) ELSE LET UM$=B2$(33,2)
2470 IF CUR_LEVEL=2 AND LEVEL>=2 THEN PRINT (7)B0$(23,3),
2475 IF B[3]=0 THEN LET B[3]=1
2480 PRINT (7)@(5),DOTS$,CUR_LEVEL:"0",@(13),B1$,@(14+P[0]+CUR_LEVEL*2),IVDESC$,@(62),UM$,
2490 PRINT (7)@(131-3*M0-4*M1),FNQTY(B[0],B[1],B[3],YIELD,B[4]):M0$,
2495 IF SHOWCOST$="Y" THEN PRINT (7)R0*UNITCOST*FNQTY(B[0],B[1],B[3],YIELD,B[4]):M1$ ELSE PRINT (7)""
2500 LET L=L+1
2900 LET MAT_COST[CUR_LEVEL-1]=MAT_COST[CUR_LEVEL-1]+R0*UNITCOST*FNQTY(B[0],B[1],B[3],YIELD,B[4])
2920 GOTO 2220
3000 REM " --- Sub Totals
3020 LET CUR_LEVEL=CUR_LEVEL-1
3040 IF CUR_LEVEL>LEVEL THEN GOTO 3300
3060 IF L+1>L9 THEN GOSUB 5000
3100 DIM DOTS$(CUR_LEVEL-1,".")
3110 PRINT (7)@(5),DOTS$,CUR_LEVEL:"0",@(131-M0*3-M1*4),MAT_QTY[CUR_LEVEL]:M0$,@(131-M0*2-M1*3),LAB_QTY[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]:M0$,@(131-M0-M1*2),SUB_QTY[CUR_LEVEL]:M0$,
3120 IF SHOWCOST$="Y" THEN PRINT (7)@(131-M0*2-M1*4),MAT_COST[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]:M1$,@(131-M0-M1*3),LAB_COST[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]:M1$,@(131-M1*2),SUB_COST[CUR_LEVEL]:M1$,@(131-M1),MAT_COST[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]+LAB_COST[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]+SUB_COST[CUR_LEVEL]:M1$,
3130 IF CUR_LEVEL<LEVEL THEN PRINT (7)@(23+CUR_LEVEL*2),"Total:" ELSE PRINT (7)""
3140 LET L=L+1
3150 IF R0=1 OR CUR_LEVEL=1 THEN GOTO 3200
3160 IF CUR_LEVEL<LEVEL THEN PRINT (7)@(23+CUR_LEVEL*2),"Factored Total:",@(131-2*M0-3*M1),LAB_QTY[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]:M0$,@(131-M0-2*M1),SUB_QTY[CUR_LEVEL]:M0$,
3165 IF SHOWCOST$="Y" THEN IF CUR_LEVEL<LEVEL THEN PRINT (7)@(131-2*M0-4*M1),R0*MAT_COST[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]:M1$,@(131-M0-3*M1),R0*LAB_COST[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]:M1$,@(131-2*M1),SUB_COST[CUR_LEVEL]:M1$,@(131-M1),R0*(MAT_COST[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]+LAB_COST[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]+SUB_COST[CUR_LEVEL]):M1$ ELSE PRINT (7)""
3170 LET L=L+1
3300 REM " --- Do the Next Level
3320 IF CUR_LEVEL=1 THEN GOTO 1100
3330 LET LAB_COST[CUR_LEVEL-1]=LAB_COST[CUR_LEVEL-1]+R0*LAB_COST[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]
3340 LET MAT_COST[CUR_LEVEL-1]=MAT_COST[CUR_LEVEL-1]+R0*MAT_COST[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]
3350 LET LAB_QTY[CUR_LEVEL-1]=LAB_QTY[CUR_LEVEL-1]+LAB_QTY[CUR_LEVEL]*MAT_QTY[CUR_LEVEL]*R0
3360 LET SUB_COST[CUR_LEVEL-1]=SUB_COST[CUR_LEVEL-1]+SUB_COST[CUR_LEVEL]
3370 LET LAB_COST[CUR_LEVEL]=0,MAT_COST[CUR_LEVEL]=0,LAB_QTY[CUR_LEVEL]=0
3380 LET MAT_QTY[CUR_LEVEL]=0,SUB_QTY[CUR_LEVEL]=0,SUB_COST[CUR_LEVEL]=0
3400 LET K$=K9$(((CUR_LEVEL-1)*25)+1,25),K9$(((CUR_LEVEL-1)*25)+1,25)=""
3420 LET X0$=K$(1,22)
3430 FIND (BMM01_DEV2,KEY=X0$,DOM=3440)IOL=BMM01A2
3435 IF Z2$(40,1)<>"Y" THEN LET LOT=Z[5],YIELD=Z[4]
3440 GOSUB 6600
3500 READ (BMM02_DEV,KEY=K$)
3510 LET K$=K$(1,22)
3520 GOTO 2220
4000 REM " --- End of File
4020 GOTO 9900
5000 REM " --- Heading
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,H,H0,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5100 PRINT (7)@(131-3*LEN(MHEAD$)-LEN(THEAD$)),MHEAD$,LHEAD$,SHEAD$,; IF SHOWCOST$="Y" THEN PRINT (7)THEAD$ ELSE PRINT (7)""
5110 PRINT (7)@(0),"Seq",@(5),"Level",@(12),"Item #",@(25),"Description",@(62),"UM",
5120 PRINT (7)@(131-LEN(MHEAD$)*3-LEN(THEAD$)),UCHEAD$,UCHEAD$,UCHEAD$
5130 PRINT (7)'LF'
5180 LET L=L+3
5190 RETURN 
6000 REM " --- Circular Reference
6010 DIM MESSAGES$[1]
6030 LET MESSAGES$[0]="More Than 9 Levels Detected In This Bill, Check For Possible",MESSAGES$[1]="Circular References, <Enter> To Return To Menu: "
6040 CALL "SYC.XA",2,MESSAGES$[ALL],1,22,-1,V$,V3
6090 GOTO 9900
6100 REM " --- Add Subcontracts
6110 READ (BMM05_DEV,KEY=X$,DOM=6111)
6115 LET KX$=KEY(BMM05_DEV,END=6200)
6120 IF POS(N0$=KX$)<>1 THEN GOTO 6200
6125 READ (BMM05_DEV,KEY=KX$)IOL=BMM05A
6130 IF S0$(1,LEN(X$))<>X$ THEN GOTO 6200
6140 IF S2$(1,3)<>"   " THEN IF S2$(1,3)>PDATE$ THEN GOTO 6115
6150 IF S2$(4,3)<>"   " THEN IF S2$(4,3)<=PDATE$ THEN GOTO 6115
6160 LET SUB_QTY[CUR_LEVEL]=SUB_QTY[CUR_LEVEL]+S[0]
6170 IF S[3]<>0 THEN LET SUB_COST[CUR_LEVEL]=SUB_COST[CUR_LEVEL]+S[0]*S[1]*S[2]/S[3] ELSE LET SUB_COST[CUR_LEVEL]=0
6180 GOTO 6115
6200 IF CUR_LEVEL>LEVEL THEN GOTO 6390
6300 IF L+1>L9 THEN GOSUB 5000
6310 DIM DOTS$(CUR_LEVEL-1,".")
6320 IF CUR_LEVEL=1 THEN LET UM$=A2$(48,2) ELSE LET UM$=B2$(33,2)
6330 LET SUBBILL$=" "
6334 FIND (BMM01_DEV2,KEY=N0$+K$(3),DOM=6340)
6336 LET SUBBILL$="*"
6340 PRINT (7)@(5),DOTS$,CUR_LEVEL:"0",@(12),SUBBILL$,K$(3),@(14+P[0]+CUR_LEVEL*2),IVDESC$,@(62),UM$,
6350 PRINT (7)@(131-M0-2*M1),SUB_QTY[CUR_LEVEL]:M0$,; IF SHOWCOST$="Y" THEN PRINT (7)SUB_COST[CUR_LEVEL]:M1$,
6390 RETURN 
6600 REM " --- Find Description & UnitCost
6610 DIM D1$(60)
6615 LET UNITCOST=0
6620 LET D1$(1)="***Not On File***"
6630 FIND (IVM01_DEV,KEY=X0$,DOM=6631)IOL=IVM01A
6640 LET IVDESC$=FNITEM$(D1$,DESC[1],DESC[2],DESC[3])+FILL(61)
6650 LET IVDESC$=IVDESC$(1,61-(14+P[0]+CUR_LEVEL*2))
6660 FIND (IVM02_DEV,KEY=N0$+WHS$+X0$(3,20),DOM=6661)IOL=IVM02A
6690 RETURN 
7500 REM " --- Add Labor
7510 FIND (BMM01_DEV2,KEY=X$,DOM=7520)IOL=BMM01A2
7515 IF Z2$(40,1)<>"Y" THEN LET LOT=Z[5],YIELD=Z[4]
7516 IF Z2$(40,1)="Y" THEN LET YIELD=Z[4]
7520 READ (BMM03_DEV,KEY=X$,DOM=7521)
7530 LET K3$=KEY(BMM03_DEV,END=7690)
7535 IF POS(N0$=K3$)<>1 THEN GOTO 7690
7540 READ (BMM03_DEV,KEY=K3$)IOL=BMM03A
7560 IF C0$(1,LEN(X$))<>X$ THEN GOTO 7690
7562 IF C1$(65,3)<>"   " THEN IF C1$(65,3)>PDATE$ THEN GOTO 7530
7564 IF C1$(68,3)<>"   " THEN IF C1$(68,3)<=PDATE$ THEN GOTO 7530
7570 IF C[1]=0 THEN GOTO 7600
7572 DIM W[13]
7574 READ (BMM08_DEV,KEY=N0$+C1$(1,3),DOM=7575)IOL=BMM08A
7576 IF LOT=0 THEN LET LOT=1
7578 LET DIRECTCOST=FNOP1(C[0],W[0],C[1],YIELD,C[4],LOT)
7580 LET OHCOST=DIRECTCOST*W[2]
7585 IF C[0]<>0 THEN LET LAB_COST[CUR_LEVEL]=LAB_COST[CUR_LEVEL]+DIRECTCOST+OHCOST
7590 LET LAB_QTY[CUR_LEVEL]=LAB_QTY[CUR_LEVEL]+FNOPQTY(C[0],C[1],YIELD,C[4],LOT)
7600 GOTO 7530
7690 IF CUR_LEVEL>LEVEL THEN GOTO 7800
7700 IF L+1>L9 THEN GOSUB 5000
7720 DIM DOTS$(CUR_LEVEL-1,".")
7725 IF CUR_LEVEL=1 THEN LET UM$=A2$(48,2) ELSE LET UM$=B2$(33,2)
7732 LET SUBBILL$=" "
7734 FIND (BMM01_DEV2,KEY=N0$+K$(3),DOM=7738)
7736 LET SUBBILL$="*"
7740 PRINT (7)@(5),DOTS$,CUR_LEVEL:"0",@(12),SUBBILL$,K$(3),@(14+P[0]+CUR_LEVEL*2),IVDESC$,@(62),UM$,
7750 PRINT (7)@(131-2*M0-3*M1),LAB_QTY[CUR_LEVEL]:M0$,; IF SHOWCOST$="Y" THEN PRINT (7)LAB_COST[CUR_LEVEL]:M1$,
7760 IF CUR_LEVEL<LEVEL OR SHOWCOST$="N" THEN PRINT (7)""; LET L=L+1
7800 RETURN 
8000 REM " --- Functions
8080 DEF FNQTY(Q1,Q2,Q3,Q4,Q5)=10000*Q1*Q2/(Q3*Q4*(100-Q5))
8085 DEF FNOP1(Q1,Q2,Q3,Q4,Q5,Q6)=100*(Q1*Q2/Q3)/Q4+Q5*Q2/Q6
8087 DEF FNOPQTY(Q1,Q2,Q3,Q4,Q5)=100*(Q1/Q2)/Q3+Q4/Q5
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
