0010 REM "IVR - Physical Inventory Count Sheets"
0020 REM "Program IVR.UA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.4 - 15Dec97 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "11Jun96 WGH: Print Lot/Serial lines correctly when Freeze Quantity is zero or less (2325,2350,2820-2830)"
0032 REM "18Aug97 WGH: Item Number may be overwritten by long Descriptions (925)"
0033 REM "19Aug97 WGH: Use 10-char instead of 7-char for lot/serial location (2820-2830,2850)"
0034 REM "20Oct97 WGH: Distinguish between 'Blank' and 'Missing' lot/serial numbers (2325-2470,2490-2590,2830)"
0035 REM "15Jun98 WGH: Item description may run into next field (935)"
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=7
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="SYS-01",FILES$[2]="IVM-10",FILES$[3]="IVW-10"
0130 LET FILES$[4]="IVM-02",FILES$[5]="IVE-03",FILES$[6]="IVM-01"
0140 LET FILES$[7]="IVM-07",OPTIONS$[3]="C",OPTIONS$[5]="L"
0150 CALL "SYC.DA",1,1,6,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM10_DEV=CHANNELS[2],IVW10_DEV=CHANNELS[3]
0180 LET IVM02_DEV=CHANNELS[4],IVE03_DEV=CHANNELS[5],IVM01_DEV=CHANNELS[6]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$(1),A5$,A6$,A[ALL]
0230 IVM10C: IOLIST X0$(1)
0240 IVM10P: IOLIST Y0$(1)
0250 IVE03A: IOLIST W0$(1),W1$(1),W[ALL]
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0280 IVM07A: IOLIST D0$(1),D1$(1)
0400 REM " --- Parameters"
0405 DIM P[5]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV",LS$="N"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0440 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1)),P[2]=NUM(I2$(7,2))
0450 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0460 LET DW=P[3]+P[4]+P[5]
0470 IF POS(I3$(17,1)="SL")>0 THEN LET LS$="Y"
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],HEADINGS$[3]
0520 DIM W0$(56),W1$(60),W[2],X0$(32),Y0$(11),O[6]
0550 LET CLOCK$="",WHEN$=F0$(7,3),L9=55,L=L9+1,WIDTH=132,HEADINGS=2,NL=0
0560 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$,LSH$="",SQH$="",NUMBER=0
0570 IF LS$="Y" THEN LET LSH$="Lot/Serial Number"
0600 REM " --- Additional file opens"
0620 IF LS$<>"Y" THEN GOTO 0650
0630 CALL "SYC.DA",1,7,7,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0635 IF STATUS>0 THEN GOTO 9900
0640 LET IVM07_DEV=CHANNELS[7]
0650 REM " --- Resize masks"
0660 CALL "SYC.RM",M2$,M2,9,12
0800 REM " --- Process input"
0810 LET ACTION$="P",WHSE$=I3$(6,2),CUTOFF$="",QUANTITY$="N"
0820 CALL "IVC.IC",ACTION$,CHANNELS[ALL],WHSE$,CUTOFF$,QUANTITY$,FKEY,STATUS
0830 IF FKEY<>0 THEN GOTO 9900
0840 IF STATUS<>0 THEN GOTO 9900
0850 REM " --- Retrieve warehouse and build HEADINGS$"
0860 FIND (IVM10_DEV,KEY=N0$+"C"+WHSE$,DOM=9900)IOL=IVM10C
0870 LET HEADINGS$[1]=F5$+" For Warehouse "+X0$(4,2)+" "+FNP$(X0$(6,24))
0880 IF QUANTITY$="Y" THEN LET SQH$="Quantity"
0900 REM " --- Print positions"
0905 LET O[1]=P[0]+1,O[3]=O[1]+MAX(DW,40)+1,O[2]=O[3],O[4]=O[3]+4
0910 LET O[5]=O[4]+11,O[6]=O[5],SPLIT=0
0915 IF QUANTITY$="Y" THEN LET O[6]=O[5]+M2+2
0920 IF O[6]<93 THEN GOTO 0940
0925 LET O[6]=92,O[5]=O[6]
0930 IF QUANTITY$="Y" THEN LET O[5]=O[6]-M2-2
0935 LET O[4]=O[5]-11,O[3]=O[4]-4,DW=O[3]-O[1]-1
0940 DIM J9$(WIDTH-O[6],"_")
0945 IF LS$="Y" THEN LET O[2]=O[3]-MAX(P[2],LEN(LSH$))-1
0950 REM " --- Position file"
0960 CALL "SYC.GA",7,1,"","",STATUS
0970 IF STATUS THEN GOTO 9900
0980 CALL "SYC.NB","Printing",17+P[0],COLUMN
0990 READ (IVW10_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Read next entry record"
1010 LET K$=KEY(IVW10_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 READ (IVW10_DEV)
1200 REM " --- Update IVM-10 cycle code record"
1210 LET Y0$(1)=N0$+"P"+WHSE$+K$(3,2)
1220 FIND (IVM10_DEV,KEY=Y0$(1,7),DOM=1900)IOL=IVM10P
1230 LET Y0$(8,1)="2",L=L9+1,HEADINGS=3,LAST$=""
1240 LET HEADINGS$[2]="Cycle Code "+K$(3,2)+" - Cutoff Date "+FNB$(Y0$(9,3))
1250 WRITE (IVM10_DEV,KEY=Y0$(1,7))IOL=IVM10P
1900 REM " --- Position physical inventory record"
1980 LET FIRST$=K$(1,2)+WHSE$+K$(3)
1990 READ (IVE03_DEV,KEY=FIRST$,DOM=2000)
2000 REM " --- Read next physical inventory record"
2010 LET K$=KEY(IVE03_DEV,END=3900)
2020 IF POS(FIRST$=K$)<>1 THEN GOTO 3900
2030 READ (IVE03_DEV)IOL=IVE03A
2040 PRINT @(COLUMN,11),W0$(3,2)," ",W0$(5,2)," ",K$(7,10)," ",K$(17,P[0]),
2100 REM " --- Retrieve item master"
2110 DIM DESCRIPTION$(DW)
2120 LET A0$(1)=N0$+W0$(17),A1$(1)="(Not On File)",A2$(1)=""
2130 FIND (IVM01_DEV,KEY=A0$,DOM=2140)IOL=IVM01A
2140 LET DESCRIPTION$(1)=FNITEM$(A1$,P[3],P[4],P[5]),NUMBER=NUMBER+1
2200 REM " --- Print detail line (non-lotted/serialized)"
2210 IF LS$="Y" THEN IF A2$(19,2)="YY" THEN GOTO 2300
2220 LET L=L+2+NL,X$="",QTY$=""
2230 IF L>L9 THEN GOSUB 5000
2235 IF NL>0 THEN PRINT (7)""
2240 IF SPLIT=0 THEN LET X$=DESCRIPTION$ ELSE LET X$=""
2250 IF QUANTITY$="Y" THEN LET QTY$=STR(W[0]:M2$)
2260 PRINT (7)@(O[0]),W0$(17,P[0]),@(O[1]),X$,@(O[3]),A2$(4,2),@(O[4]),W0$(7,10),@(O[5]),QTY$,@(O[6]),J9$
2270 IF SPLIT>0 THEN LET X$=DESCRIPTION$ ELSE LET X$=""
2280 PRINT (7)@(O[1]),X$
2290 GOTO 2900
2300 REM " --- Print detail line (lotted/serialized)"
2310 IF W0$(1,36)<>LAST$ THEN GOSUB 5200
2320 IF FNP$(W0$(37))<>"" THEN GOTO 2800
2400 REM " --- Print detail for blank lot/serial number"
2405 IF W[1]=0 THEN GOTO 2500
2410 LET W0$(37)="Blank"
2420 IF I3$(17,1)="S" THEN GOTO 2450
2430 LET QTY=W[1]
2440 GOSUB 5400
2445 GOTO 2490
2450 FOR X=1 TO W[1]
2460 LET QTY=1
2470 GOSUB 5400
2480 NEXT X
2490 LET W[0]=W[0]-W[1]; REM "Exclude blanks from freeze qnty
2495 IF W[0]>0 THEN GOTO 2520 ELSE GOTO 2900
2500 REM " --- Print detail for missing serial number"
2510 IF W[0]=0 THEN LET W0$(37)="None"; GOTO 2800
2520 IF W[0]<0 THEN GOTO 2900
2530 IF W[0]>0 THEN LET W0$(37)="Missing",LOCATION$=FILL(10,".")
2540 IF I3$(17,1)="L" THEN GOTO 2800
2550 FOR X=1 TO W[0]
2560 LET QTY=1
2570 GOSUB 5400
2580 NEXT X
2590 GOTO 2900
2800 REM " --- Retrieve and print lot/serial record"
2810 DIM D0$(44),D1$(96)
2820 LET D0$(1)=W0$(1,4)+W0$(17),D1$(1)=W0$(7,10)
2830 IF POS(W0$(37,7)="None   Missing",7) AND FNP$(D1$(1,10))="" THEN LET D1$(1)=FILL(10,".")
2840 IF FNP$(D0$(25))<>"" THEN FIND (IVM07_DEV,KEY=D0$,DOM=2850)IOL=IVM07A
2850 LET LOCATION$=D1$(1,10),QTY=W[0]
2860 GOSUB 5400
2900 REM " --- Loop back for next physical inventory record"
2990 GOTO 2000
3900 REM " --- Loop back for next entry record"
3990 GOTO 1000
4000 REM " --- All done"
4010 IF NUMBER>0 THEN GOTO 9900
4020 GOSUB 5000
4030 PRINT (7)""
4040 PRINT (7)"No Physical Inventory Entries Found"
4090 GOTO 9900
4900 REM " --- File in use"
4910 CALL "IVC.SB","P",STATUS
4990 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+3,NL=0
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)@(O[0]),"Item",@(O[1]),"Description",@(O[2]),LSH$,@(O[3]),"UM",@(O[4]),"Location",@(O[5]+M2-9),SQH$,@(O[6]),"Physical Count"
5050 PRINT (7)""
5090 RETURN 
5200 REM " --- Item subheading (lotted/serialized)"
5210 IF L+3+NL>L9 THEN GOSUB 5000
5220 IF NL>0 THEN PRINT (7)""
5240 IF SPLIT=0 THEN LET X$=DESCRIPTION$ ELSE LET X$=""
5250 PRINT (7)@(O[0]),W0$(17,P[0]),@(O[1]),X$,@(O[3]),A2$(4,2),@(O[4]),W0$(7,10)
5260 IF SPLIT>0 THEN LET X$=DESCRIPTION$ ELSE LET X$=""
5270 PRINT (7)@(O[1]),X$
5280 LET L=L+2+NL,LAST$=W0$(1,36)
5290 RETURN 
5400 REM " --- Print lot/serial detail"
5410 LET NL=1,QTY$=""
5420 IF L+1>L9 THEN LET L=L9+1; GOSUB 5200
5430 IF QUANTITY$="Y" THEN LET QTY$=STR(QTY:M2$)
5440 PRINT (7)@(O[2]),W0$(37,P[2]),@(O[4]),LOCATION$,@(O[5]),QTY$,@(O[6]),J9$
5450 LET L=L+1
5490 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
