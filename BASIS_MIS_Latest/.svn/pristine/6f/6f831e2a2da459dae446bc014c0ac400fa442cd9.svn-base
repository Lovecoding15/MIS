0010 REM "WOU - Work Order Material Issues Update"
0020 REM "Program WOU.AA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "18May99 KJS: Prevent error 47s when item number length is less than 20 (2862)
0040 REM 
0050 REM           
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0200 REM " --- IOLISTs"
0205 ARM10D: IOLIST AR0$,AR1$
0210 WOE15A: IOLIST A0$,A1$
0220 IVM01A: IOLIST B0$,B1$(1),B2$,B3$,B4$,B5$,B6$,B[ALL]
0230 IVM02A: IOLIST C0$,C1$,C2$,C[ALL]
0240 WOE25A: IOLIST W0$,W1$,W[ALL]
0250 WOE01A: IOLIST D0$,D1$,D[ALL]
0255 WOM10A: IOLIST *,Z1$(1)
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0265 WOT21A: IOLIST Y0$,Y1$,Y[ALL]
0270 IVS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0280 WOS01A: IOLIST X$,X$,X$,P9$
0290 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0300 ARS01A: IOLIST *,*,*,R0$
0340 WOE14A: IOLIST H0$,H1$,H2$,H[ALL]
0350 IVM07A: IOLIST XF0$,XF1$,XF[ALL]
0360 IVT01G: IOLIST X0$,X1$,X[ALL]
0370 WOT11A: IOLIST X0$,X1$,X2$,X[ALL]
0380 IVT04G: IOLIST L0$(1),L1$(1),L2$(1),L[ALL]
0385 WOE13A: IOLIST A0$,A1$
0390 WOE23A: IOLIST R0$,R1$,R0,R1,R2,R3,R4
0395 WOM07A: IOLIST M0$
0400 REM " --- Parameters"
0405 DIM P[9],G[4],INFO$[20],LF_FILES[10],ITEM$[10]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0415 LET N0$=F0$(16,2),N1$=F4$,N2$="IV",N3$=F5$
0420 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0425 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0430 FIND (SYS01_DEV,KEY=N0$+"WO00",DOM=9800)IOL=WOS01A
0435 LET G[4]=NUM(G2$(9,2)),R9$="N",R8$=P3$(17,1)
0445 CALL "SYC.VA","AR",INFO$[ALL]
0450 LET P9$(2,1)=INFO$[20]
0455 IF P9$(2,1)="N" THEN GOTO 0470
0460 FIND (SYS01_DEV,KEY=N0$+"AR00",DOM=9800)IOL=ARS01A
0465 LET R9$=R0$(11,1)
0470 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P2$(3,2)),P[2]=NUM(P2$(5,1))
0475 LET P[3]=NUM(P2$(7,2)),P[5]=NUM(P4$(1,2)),P[6]=FNYY_YEAR(P4$(3,2))
0480 LET P[7]=NUM(P2$(9,2)),P[8]=NUM(P2$(11,2)),P[9]=NUM(P2$(13,2))
0500 REM " --- Init Data"
0510 DIM B1$(P[7]+P[8]+P[9]),M0$(18)
0520 LET U0$=N0$
0550 DIM PARAMS[3],PARAMS$[4],ITEMS$[3],REFS$[11],REFS[5],IVFILES[44]
0560 LET PARAMS$[0]=F0$(7,3),PARAMS$[1]=F0$(4,3),PARAMS$[2]=P2$,PARAMS$[3]=P3$
0570 LET PARAMS$[4]=P4$,PARAMS[0]=NUM(P2$(1,2)),PARAMS[1]=IVS01_PRECISION
0572 LET PARAMS[2]=NUM(P2$(7,2))
0575 LET IVFILES[0]=SYS01_DEV,IVFILES[1]=IVM01_DEV,IVFILES[2]=IVM02_DEV
0580 LET IVFILES[4]=IVM04_DEV,IVFILES[7]=IVM07_DEV,IVFILES[12]=IVM12_DEV
0585 LET IVFILES[17]=IVM17_DEV,IVFILES[41]=IVT01_DEV,IVFILES[42]=IVT02_DEV
0590 LET IVFILES[43]=IVT03_DEV,IVFILES[44]=IVT04_DEV
0600 REM " --- Additional File Opens"
0700 REM " --- Background"
0710 PRINT @(0,3),'CE',
0800 REM " --- Options"
0810 LET V4$="Are You Ready To Update The "+N3$
0820 CALL "SYC.YN",0,V4$,0,V$,V3
0830 IF V$="NO" THEN GOTO 9900
0840 IF V$<>"YES" THEN GOTO 0800
0845 IF LF$="Y" THEN CALL "SYC.FA",IVW04_DEV
0850 LOCK (WOE04_DEV)
0860 LET EXIT_CTRL=1
0900 REM 
0910 CALL "SYC.NB","Updating",11,COLUMN
1000 REM " --- Initial Read"
1020 READ (WOE04_DEV,KEY=N0$+"  "+"D",DOM=1100)
1100 REM " --- Main Read"
1120 LET K0$=KEY(WOE04_DEV,END=4000)
1130 READ (WOE04_DEV)
1160 IF K0$(1,5)<>N0$+"  "+"D" THEN GOTO 4000
1180 READ (WOE15_DEV,KEY=K0$(1,4)+K0$(6)+"000",DOM=1100)IOL=WOE15A
1185 READ (WOE25_DEV,KEY=K0$(1,4)+K0$(6),DOM=1190)
1190 LET W9=1
1220 DIM D[11],Z1$(G[4],"0"),D0$(30)
1240 FIND (WOE01_DEV,KEY=A0$(1,11),DOM=3900)IOL=WOE01A
1260 FIND (WOM10_DEV,KEY=N0$+"A"+D0$(12,2),DOM=1280)IOL=WOM10A
1280 LET Z1$=Z1$(1,G[4])
1300 REM " --- Process Issue Details
1310 LET K1$=KEY(WOE25_DEV,END=3000)
1320 IF K1$(1,11)<>A0$(1,11) THEN GOTO 3000
1330 DIM W[4],B[10],C[16]
1340 READ (WOE25_DEV,KEY=K1$)IOL=WOE25A
1350 IF W[3]=0 THEN GOTO 1300
1360 PRINT @(COLUMN,11),W0$(5,7),"-",W0$(12,3)
1400 REM " --- Verify Inventory Item Number"
1410 DIM Z0$(G[4],"0"),B1$(P[7]+P[8]+P[9])
1420 FIND (IVM01_DEV,KEY=N0$+W1$(21,20),DOM=2900)IOL=IVM01A
1425 FIND (IVM02_DEV,KEY=N0$+W1$(19,22),DOM=2900)IOL=IVM02A
1426 LET V1=C[11]
1430 IF R9$="N" THEN LET Z0$=B6$(1,G[4]); GOTO 1500
1440 READ (ARM10_DEV,KEY=N0$+"D"+C1$(13,2),DOM=1500)IOL=ARM10D
1445 LET Z0$=AR1$(61,G[4])
1500 REM " --- Process LIFO/FIFO ? "
1505 LET LIFO$="N"
1510 IF P3$(3,1)="N" OR (POS(P3$(17,1)="LS")>0 AND B2$(19,2)="YY") THEN GOTO 1600
1515 LET LIFO$="Y"
1520 LET LF_FILES[0]=IVM04_DEV,LF_FILES[1]=IVW04_DEV,LF_FILES[2]=IVM02_DEV
1525 LET ACTION$=P3$(3,1)+"I",QUANTITY=ABS(W[3]),COST=W[4]
1530 LET TYPE$="R",PLACES=IVS01_PRECISION,LF_DATE$=A1$(7,3)
1535 IF W[3]<0 THEN LET ACTION$(2,1)="R"
1540 LET ITEM$[0]=N0$,ITEM$[1]=W1$(19,2),ITEM$[2]=W1$(21,20)
1545 CALL "IVC.LF",ACTION$,TYPE$,LF_DATE$,LF_FILES[ALL],ITEM$[ALL],PLACES,QUANTITY,COST,RET_COST,STATUS
1550 LET V1=RET_COST
1600 REM " --- Update IVM-02 Warehouse Record "
1610 IF POS(P3$(17,1)="LS")>0 AND POS(B2$(19,2)="YY")=1 THEN GOTO 1700
1620 GOSUB GET_ITEM_INFO
1630 LET REFS[0]=-(W[3]),REFS[1]=V1
1640 GOSUB INVENTORY_UPDATE
1700 REM " --- G/L Distribution"
1705 PRECISION 2
1710 IF POS(R8$="LS")=0 THEN GOTO 1760
1715 IF POS(B2$(19,2)="YY")=0 THEN GOTO 1760
1720 DIM H[1]
1725 LET AMOUNT=0,UNITS=0
1730 READ (WOE14_DEV,KEY=W0$,DOM=1735)
1735 LET K1$=KEY(WOE14_DEV,END=1765)
1740 IF POS(W0$=K1$)<>1 THEN GOTO 1765
1745 READ (WOE14_DEV,KEY=K1$)IOL=WOE14A
1750 LET AMOUNT=AMOUNT+(-H[0]*H[1]),UNITS=UNITS+(-H[0])
1755 GOTO 1735
1760 LET AMOUNT=(-W[3])*W[4],UNITS=-W[3]
1765 LET ACCOUNT$=Z0$,V0$=ACCOUNT$,WHEN$=A1$(7,3)
1770 LET MEMO$=FNITEM$(B1$,P[7],P[8],P[9]),REF1$="WO "+D0$(5,7)
1775 LET REF2$="Step "+W1$(7,3),REF3$="Whse "+D0$(54,2)
1780 IF LIFO$="Y" THEN LET AMOUNT=(-W[3])*V1
1785 GOSUB GLPOST
1790 LET ACCOUNT$=Z1$,AMOUNT=-AMOUNT,UNITS=-UNITS
1795 GOSUB GLPOST
1800 PRECISION IVS01_PRECISION
1900 REM " --- Open Work Order Transactions
1910 DIM Y0$(18),Y1$(43),Y[11]
1920 LET Y0$(1)=W0$(1,11)+A1$(7,3)+"M"+$FF$
1930 LET Y1$(1)=W0$(12,3)+W1$(1,2),Y1$(22,22)=W1$(19,22),Y[0]=W[3],Y[1]=W[4]
1940 PRECISION 2
1950 LET Y[2]=W[3]*W[4],W9=0
1960 IF LIFO$="Y" THEN LET Y[2]=W[3]*V1
1970 PRECISION IVS01_PRECISION
1980 READ (WOT21_DEV,KEY=Y0$,DOM=1990)
1990 LET L$=KEYP(WOT21_DEV,END=2010)
2000 IF POS(Y0$(1,15)=L$)=1 THEN LET W9=NUM(L$(16,3),ERR=2010)+1
2010 LET Y0$(16,3)=STR(W9:"000")
2020 WRITE (WOT21_DEV,KEY=Y0$)IOL=WOT21A
2030 REM " --- Update WO Transaction Cross Reference "
2040 LET M0$(1,11)=W0$(1,11)
2050 LET M0$(12,3)=A1$(7,3)
2060 LET M0$(15,1)="M"
2070 LET M0$(16,3)=Y0$(16,3)
2080 WRITE (WOM07_DEV,KEY=M0$)IOL=WOM07A
2100 REM " --- Lotted/Serialized Update
2110 IF POS(R8$="LS")=0 THEN GOTO 2800
2120 IF B2$(19,1)<>"Y" OR B2$(20,1)<>"Y" THEN GOTO 2800
2130 DIM H[1],XF[11]
2140 READ (WOE14_DEV,KEY=W0$,DOM=2200)
2200 LET K1$=KEY(WOE14_DEV,END=2800)
2210 IF POS(W0$=K1$)<>1 THEN GOTO 2800
2230 READ (WOE14_DEV,KEY=K1$)IOL=WOE14A
2240 IF H[0]=0 THEN GOTO 2790
2250 GOSUB UPDATE_LOTSER_RECORD
2400 REM " --- WOT-11 Here
2410 DIM X[2],X0$(21)
2420 LET X0$(1)=Y0$+$FF$,X1$=" ",X2$=H1$,W9=0
2430 READ (WOT11_DEV,KEY=X0$,DOM=2435)
2435 LET L$=KEYP(WOT11_DEV,END=2450)
2440 IF POS(Y0$=L$)=1 THEN LET W9=NUM(L$(19,3),ERR=2450)+1
2450 LET X0$(19,3)=STR(W9:"000"),X[0]=H[0],X[1]=H[1],X[2]=X[0]*X[1]
2460 WRITE (WOT11_DEV,KEY=X0$)IOL=WOT11A
2700 REM " --- Done With Lot/Serial "       
2720 REMOVE (WOE14_DEV,KEY=H0$)
2790 GOTO 2200
2800 REM " --- Check On More...
2820 LET W[1]=W[1]+W[3],W[3]=0
2840 IF W[1]>=W[0] THEN GOTO 2880
2860 WRITE (WOE25_DEV,KEY=W0$)IOL=WOE25A
2862 LET R0$=W0$(1,11)+W1$(7,3),R1$=W1$
2864 READ (WOE23_DEV,KEY=R0$,DOM=2866)IOL=WOE23A
2866 LET R0=W[0],R1=W[1],R2=W[2],R3=W[3],R4=W[4]
2868 WRITE (WOE23_DEV,KEY=R0$)IOL=WOE23A
2870 GOTO 2890
2880 REMOVE (WOE25_DEV,KEY=W0$,DOM=2885)
2885 REMOVE (WOE23_DEV,KEY=W0$(1,11)+W1$(7,3),DOM=2890)
2890 GOTO 1220
2900 REM " --- No Valid Item Code!!
2920 LET W[3]=0
2940 GOTO 2840
3000 REM " --- Update Header"
3020 EXTRACT (WOE01_DEV,KEY=A0$(1,11))IOL=WOE01A
3040 IF POS(" "<>D0$(25,3))=0 THEN LET D0$(25,3)=A1$(7,3)
3060 IF D0$(28,3)<A1$(7,3) THEN LET D0$(28,3)=A1$(7,3)
3080 WRITE (WOE01_DEV,KEY=D0$(1,11))IOL=WOE01A
3100 REM " --- Any More Left?"
3120 READ (WOE25_DEV,KEY=A0$(1,11),DOM=3140)
3140 LET K4$=KEY(WOE25_DEV,END=3200)
3160 IF K4$(1,11)<>A0$(1,11) THEN GOTO 3200
3180 GOTO 3300
3200 REMOVE (WOE15_DEV,KEY=A0$(1,11)+"000",DOM=3210)
3210 REMOVE (WOE13_DEV,KEY=A0$(1,11)+"000",DOM=3220)
3220 GOTO 3900
3300 LET A1$(7,3)=""
3320 WRITE (WOE15_DEV,KEY=A0$)IOL=WOE15A
3330 WRITE (WOE13_DEV,KEY=A0$)IOL=WOE13A
3900 REM " --- Remove Record"
3920 REMOVE (WOE04_DEV,KEY=K0$,DOM=3990)
3990 GOTO 1100
4000 REM " --- End"
4010 IF GL$="Y" THEN CALL "GLC.CA",STATUS
4020 CALL "SYC.BB",STATUS
4090 GOTO 9900
5700 REM " --- Update Item/Warehouse Information "
5710 UPDATE_WAREHOUSE_RECORD: 
5720 GOSUB GET_ITEM_INFO
5730 LET REFS[0]=-(W[3]),REFS[1]=W[4]
5740 GOSUB INVENTORY_UPDATE
5750 RETURN 
5800 REM " --- Update Lot/Serial Information "
5810 UPDATE_LOTSER_RECORD: 
5820 GOSUB GET_ITEM_INFO
5830 LET ITEMS$[3]=H1$(1),REFS[0]=-(H[0]),REFS[1]=H[1]
5840 GOSUB INVENTORY_UPDATE
5850 RETURN 
6500 REM " --- Inventory/Action Item Information"
6510 GET_ITEM_INFO: 
6520 LET ITEMS$[0]=W0$(1,2),ITEMS$[1]=W1$(19,2),ITEMS$[2]=W1$(21,20)
6530 LET REFS$[0]=A1$(7,3),REFS$[3]=D0$(5,7),REFS$[5]=W0$(12,3),ACTION$="WI"
6540 LET REFS$[1]=D0$(34,6),REFS$[2]=D0$(40,7),REFS$[4]=D0$(12,2)
6550 LET REFS$[9]=D0$(56,20)
6590 RETURN 
6700 REM " --- Perform Inventory Update "
6705 INVENTORY_UPDATE: 
6710 CALL "IVC.UA",ACTION$,IVFILES[ALL],PARAMS[ALL],PARAMS$[ALL],ITEMS$[ALL],REFS$[ALL],REFS[ALL],STATUS
6720 RETURN 
6900 REM " --- Standard G/L Posting Routine"
6910 GLPOST: 
6920 IF GL$<>"Y" THEN GOTO 6990
6950 CALL "GLC.AA",GLM01_DEV,GLT04_DEV,GLT05_DEV,ACCOUNT$,WHEN$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN 
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
