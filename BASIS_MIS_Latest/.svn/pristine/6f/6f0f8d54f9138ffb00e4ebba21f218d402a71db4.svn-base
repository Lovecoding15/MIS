0010 REM "IVR - Cost Change Register"
0020 REM "Program IVR.JA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=9
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="SYS-01",FILES$[2]="IVM-01",FILES$[3]="IVM-02"
0130 LET FILES$[4]="IVM-03",FILES$[5]="IVM-10",FILES$[6]="IVM-14"
0140 LET FILES$[7]="IVE-06",FILES$[8]="IVW-06"
0145 LET OPTIONS$[7]="L",OPTIONS$[8]="C"
0150 CALL "SYC.DA",1,1,8,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM01_DEV=CHANNELS[2],IVM02_DEV=CHANNELS[3]
0180 LET IVM03_DEV=CHANNELS[4],IVM10_DEV=CHANNELS[5],IVM14_DEV=CHANNELS[6]
0190 LET IVE06_DEV=CHANNELS[7],IVW06_DEV=CHANNELS[8]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$(1),A5$,A6$,A[ALL]
0220 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0230 IVE06A: IOLIST W0$(1),W1$,W2$,W[ALL]
0240 IVM10A: IOLIST X0$(1)
0250 IVM10C: IOLIST X0$(1)
0255 IVW06A: IOLIST Y0$(1)
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0400 REM " --- Parameters"
0405 DIM P[5]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0440 IF I3$(8,1)<>"S" THEN GOTO 4900
0450 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1)),WHSE$=I3$(6,2)
0460 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0470 IF POS(I3$(17,1)="LS") THEN LET LS$="Y" ELSE LET LS$="N"
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],W0$(27),W[4]
0520 DIM B0$(24),B1$(64),B[20],X0$(32),HEADINGS$[3],O[8]
0530 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$,WHEN$=F0$(7,3),CLOCK$="",ERRORS=0
0535 LET WIDTH=132,PAGE=0,L9=59,L=L9+1,HEADINGS=2,NUMBER=0,EFFECTIVE$=F0$(7,3)
0540 LET T0$="",T1$="",T2$="",M9$="-###0.00%",M9=LEN(M9$),DW=P[3]+P[4]+P[5]
0550 REM " --- Print positions"
0555 CALL "SYC.RM",M3$,M3,8,12
0560 LET O[7]=WIDTH-M3,O[6]=O[7]-M9,O[5]=O[6]-M3,O[4]=O[5]-M3
0570 LET O[3]=O[4]-M3,O[2]=O[3]-3,O[1]=P[0]+1,V=O[2]-O[1]
0580 IF DW>V THEN LET SPLIT=1,DW=O[2]-3
0590 DIM DESCRIPTION$(DW)
0600 REM " --- Additionial Opens"
0610 IF LS$<>"Y" THEN GOTO 0650
0620 LET FILES$[9]="IVM-07"
0630 CALL "SYC.DA",1,9,9,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0635 IF STATUS>0 THEN GOTO 9900
0640 LET IVM07_DEV=CHANNELS[9]
0650 REM " --- Set default effective date"
0660 READ (IVE06_DEV,KEY=N0$,DOM=0670)
0670 LET K$=KEY(IVE06_DEV,END=0700)
0680 IF POS(N0$=K$)=1 THEN LET EFFECTIVE$=K$(3,3)
0700 REM " --- Background"
0710 PRINT 'SB',@(24,3),"Effective Date:",'SF',
0720 CALL "SYC.WC",1,0,80,0,0,4,0
0800 REM " --- Effective Date"
0805 PRINT 'CF',
0810 LET V4$="Enter The Effective Date For Changes To Be Listed On This Register (<F1>=All)"
0815 LET V0$="D",V1$="CE",V2$=EFFECTIVE$,V3$="",V0=3,V1=40,V2=3
0820 GOSUB 7000
0825 ON V3 GOTO 0850,0830,0800,0800,9900
0830 LET EFFECTIVE$=""
0835 PRINT @(V1,V2),"All",'CL',
0840 GOTO 0900
0850 IF V$<=F0$(7,3) THEN GOTO 0890
0855 DIM MESSAGE$[1]
0860 LET MESSAGE$[0]="Cost Changes With Future Effective Dates May Not Be Implemented"
0865 LET MESSAGE$[1]="Until That Date (<Enter>=Continue)"
0870 CALL "SYC.XA",2,MESSAGE$[ALL],1,22,-1,V$,V3
0875 IF V$<>"SPECIAL" THEN GOTO 0800
0890 LET EFFECTIVE$=V$
0900 REM " --- Report Initializations"
0910 CALL "SYC.GA",7,1,"","",STATUS
0920 IF STATUS THEN GOTO 9900
0930 CALL "SYC.NB"," Sorting",16+P[0],COLUMN
0940 GOSUB 5500
0950 PRINT @(COLUMN-9),FILL(12+P[0]),@(COLUMN-9),'SB',"Printing",'SF',
0990 READ (IVW06_DEV,KEY="",DOM=1000)
1000 REM " --- Next IVW-06 record"
1010 LET K$=KEY(IVW06_DEV,END=4000)
1030 READ (IVW06_DEV)
1040 PRINT @(COLUMN,11),FNB$(K$(3,3))," ",K$(6,2)," ",K$(8,3)," ",K$(11,P[0]),
1050 LET W0$(1)=K$(1,7)+K$(11)
1060 READ (IVE06_DEV,KEY=W0$,DOM=3900)IOL=IVE06A
1200 REM " --- Level breaks?"
1210 IF K$(3,3)<>T0$ THEN GOSUB 6000
1220 IF K$(6,2)<>T1$ THEN GOSUB 6200
1230 IF K$(8,3)<>T2$ THEN GOSUB 6400
1400 REM " --- Additional reads"
1410 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],B0$(24),B1$(64),B[20]
1420 LET A0$(1)=N0$+W0$(8),B0$(1)=N0$+W0$(6)
1430 FIND (IVM01_DEV,KEY=A0$,DOM=1440)IOL=IVM01A
1440 FIND (IVM02_DEV,KEY=B0$,DOM=1450)IOL=IVM02A
1450 LET DESCRIPTION$(1)=FNITEM$(A1$,P[3],P[4],P[5])
1600 REM " --- Calculations"
1610 LET CHANGE=W[0]-B[11],MARGIN=B[9]-W[0],PERCENT=100
1620 IF B[11]=0 THEN GOTO 2000
1630 LET PERCENT=MAX(MIN(((W[0]-B[11])*100)/B[11],9999.99),-9999.99)
2000 REM " --- New Product Type?"
2010 IF H0$="" THEN GOTO 2500
2020 IF L+4+NL>L9 THEN GOSUB 5000
2030 IF NL>0 THEN PRINT (7)""
2040 PRINT (7)H0$
2050 PRINT (7)""
2060 LET L=L+2+NL,NL=1,H0$=""
2500 REM " --- Print detail line"
2510 LET X$=DESCRIPTION$,NEEDED=1
2520 IF SPLIT>0 THEN LET X$="",NEEDED=2
2530 IF L+NEEDED>L9 THEN GOSUB 5000
2540 PRINT (7)@(O[0]),W0$(8,P[0]),@(O[1]),X$,@(O[2]),A2$(4,2),@(O[3]),B[11]:M3$,@(O[4]),W[0]:M3$,@(O[5]),CHANGE:M3$,@(O[6]),PERCENT:M9$,@(O[7]),MARGIN:M3$
2550 IF SPLIT>0 THEN PRINT (7)@(O[0]+2),DESCRIPTION$
2560 LET L=L+NEEDED,NUMBER=NUMBER+1,NL=1
2570 IF W[0]<0 THEN LET ERRORS=ERRORS+1
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4010 IF NUMBER>0 THEN GOTO 4100
4020 GOSUB 5000
4030 PRINT (7)"No Cost Change Entries Found"
4090 GOTO 4200
4100 REM " --- Any negative costs?"
4110 IF ERRORS=0 THEN GOTO 4200
4120 DIM MESSAGE$[2]
4130 LET MESSAGE$[0]="This Register Contains Items With Negative Unit Costs."
4140 LET MESSAGE$[1]="The Update Will Not Be Run. Review The Register, Correct"
4150 LET MESSAGE$[2]="The Errors And Reprint (<Enter>=Continue)"
4160 CALL "SYC.XA",2,MESSAGE$[ALL],2,22,-1,V$,V3
4170 IF V$<>"SPECIAL" THEN GOTO 9900
4200 REM " --- Run update overlay"
4210 LET CHANNEL=IVE06_DEV,O0=1
4280 CLOSE (7,ERR=4290)
4290 RUN "IVU.GA"
4900 REM " --- Not standard costing"
4910 CALL "IVC.SB","S",STATUS
4990 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+4,NL=0
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)@(O[3]+M3-8),"Current",@(O[4]+M3-5),"New",@(O[5]+M3-7),"Cost",@(O[6]+M9-7),"Percent",@(O[7]+M3-7),"Gross"
5050 PRINT (7)@(O[0]),"Item",@(O[1]),"Description",@(O[2]),"UM",@(O[3]+M3-8),"Cost",@(O[4]+M3-5),"Cost",@(O[5]+M3-7),"Change",@(O[6]+M9-7),"Change",@(O[7]+M3-7),"Margin"
5060 PRINT (7)""
5090 RETURN 
5500 REM " --- Sort IVE-06 by product type"
5510 DIM Y0$(30)
5580 LET FIRST$=N0$+EFFECTIVE$
5590 READ (IVE06_DEV,KEY=FIRST$,DOM=5600)
5600 REM " --- Read next entry record"
5610 LET K$=KEY(IVE06_DEV,END=5900)
5620 IF POS(FIRST$=K$)<>1 THEN GOTO 5900
5625 IF K$(3,3)>F0$(7,3) THEN GOTO 5900
5630 READ (IVE06_DEV)
5640 PRINT @(COLUMN,11),FNB$(K$(3,3))," ",K$(6,2)," ",K$(8,P[0]),
5650 LET A0$(1)=K$(1,2)+K$(8)
5660 FIND (IVM01_DEV,KEY=A0$,DOM=5600)IOL=IVM01A
5700 REM " --- Write sort record"
5710 LET Y0$(1)=K$(1,7)+A2$(1,3)+K$(8)
5720 WRITE (IVW06_DEV,KEY=Y0$)IOL=IVW06A
5790 GOTO 5600
5900 REM " --- Sort completed"
5990 RETURN 
6000 REM " --- Date Break"
6010 IF T0$<>"" THEN GOSUB 6200
6020 LET T0$=K$(3,3),L=L9+1,HEADINGS=3
6030 LET HEADINGS$[1]=F5$+" For Changes Effective "+FNB$(T0$)
6090 RETURN 
6200 REM " --- Warehouse Break"
6210 IF T1$<>"" THEN GOSUB 6400
6220 DIM X0$(32)
6230 LET T1$=K$(6,2),X0$(6,24)="(Not on File)",L=L9+1
6240 FIND (IVM10_DEV,KEY=N0$+"C"+T1$,DOM=6250)IOL=IVM10C
6250 LET HEADINGS$[2]="Warehouse "+T1$+" "+FNP$(X0$(6,24))
6290 RETURN 
6400 REM " --- Product Break"
6410 DIM X0$(32)
6420 LET T2$=K$(8,3),X0$(7,20)="(Not On File)"
6430 FIND (IVM10_DEV,KEY=N0$+"A"+T2$,DOM=6440)IOL=IVM10A
6440 LET H0$="Product "+T2$+" "+X0$(7,20)
6490 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
