0010 REM "SAX - Convert 5.x SA Files to 6.0 Format"
0020 REM "Program SAX60A"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.2 - 01Jan96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "16Sep96 Caj: SAM-01 records were all skipped when Item Length was <10 (1135)
0032 REM "16Dec98 WGH: Erase old version 5.2 SAM-11 sort file so new Mkeyed file will be created (850-870)
0040 REM 
0060 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files
0110 LET FILES=14
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="SYS-01",FILES$[2]="SYM-06",FILES$[3]="SAM-02"
0130 LET FILES$[4]="SAM-03",FILES$[5]="SAM-04",FILES$[6]="SAM-05"
0135 LET FILES$[7]="SAM-06",FILES$[8]="SAM-07",FILES$[9]="SAM-08"
0140 LET FILES$[10]="SAM-09",FILES$[11]="SAM-10",FILES$[12]="SAM-11"
0150 LET FILES$[13]="SAM-01",FILES$[14]="SAM01.TMP"
0160 CALL "SYC.DA",1,1,2,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0165 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],SYM06_DEV=CHANNELS[2]
0200 REM " --- IOLists
0210 SAM01A52: IOLIST A0$(1),AJUNK[ALL],AUNITS[ALL],ASALES[ALL],ACOST[ALL]
0215 SAM04ACUR: IOLIST B0$,BUNITS[ALL],BCOST[ALL],BSALES[ALL]
0220 SAM04APRI: IOLIST C0$,CUNITS[ALL],CCOST[ALL],CSALES[ALL]
0225 REM 
0230 SAM01C52: IOLIST A0$(1),AJUNK[ALL],AUNITS[ALL],ASALES[ALL],ACOST[ALL]
0233 SAM01ACUR: IOLIST B0$,BUNITS[ALL],BCOST[ALL],BSALES[ALL]
0235 SAM01APRI: IOLIST C0$,CUNITS[ALL],CCOST[ALL],CSALES[ALL]
0245 REM 
0250 SAM01D52: IOLIST A0$(1),AJUNK[ALL],AUNITS[ALL],ASALES[ALL],ACOST[ALL]
0255 SAM10ACUR: IOLIST B0$,BUNITS[ALL],BCOST[ALL],BSALES[ALL]
0260 SAM10APRI: IOLIST C0$,CUNITS[ALL],CCOST[ALL],CSALES[ALL]
0265 REM 
0270 SAM01I52: IOLIST A0$(1),AJUNK[ALL],AUNITS[ALL],ASALES[ALL],ACOST[ALL]
0275 SAM07ACUR: IOLIST B0$,BUNITS[ALL],BCOST[ALL],BSALES[ALL]
0280 SAM07APRI: IOLIST C0$,CUNITS[ALL],CCOST[ALL],CSALES[ALL]
0285 REM 
0290 SAM01S52: IOLIST A0$(1),AJUNK[ALL],AUNITS[ALL],ASALES[ALL],ACOST[ALL]
0295 SAM03ACUR: IOLIST B0$,BUNITS[ALL],BCOST[ALL],BSALES[ALL]
0300 SAM03APRI: IOLIST C0$,CUNITS[ALL],CCOST[ALL],CSALES[ALL]
0305 REM 
0310 SAM01T52: IOLIST A0$(1),AJUNK[ALL],AUNITS[ALL],ASALES[ALL],ACOST[ALL]
0315 SAM02ACUR: IOLIST B0$,BUNITS[ALL],BCOST[ALL],BSALES[ALL]
0320 SAM02APRI: IOLIST C0$,CUNITS[ALL],CCOST[ALL],CSALES[ALL]
0325 REM 
0330 SAM01V52: IOLIST A0$(1),AJUNK[ALL],AUNITS[ALL],ASALES[ALL],ACOST[ALL]
0335 SAM09ACUR: IOLIST B0$,BUNITS[ALL],BCOST[ALL],BSALES[ALL]
0340 SAM09APRI: IOLIST C0$,CUNITS[ALL],CCOST[ALL],CSALES[ALL]
0345 REM 
0350 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0360 ARS01A: IOLIST *,*,*,*,PER_YR$
0370 GLS01A: IOLIST G0$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0380 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0390 SAS01A52: IOLIST A0$(1),A1$(1),A2$(1)
0395 SAS01A: IOLIST B0$,B1$,B2$
0400 REM " --- Parameters
0405 DIM P[1],P1$(11),P2$(11)
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N1$=F4$,N2$="SA",N4$=F5$,N0$=F0$(16,2)
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=SAS01A
0440 FIND (SYS01_DEV,KEY=N0$+"IV00",DOM=9800)IOL=IVS01A
0450 LET IVPRECISION=NUM(I2$(5,1))
0460 FIND (SYS01_DEV,KEY=N0$+"AR00",DOM=9800)IOL=ARS01A
0465 LET CURYEAR$=PER_YR$(3,2)
0470 LET CURYEAR=1900+FNYY_YEAR(CURYEAR$),PRIYEAR=CURYEAR-1,PRIYEAR$=FNYEAR_YY21$(PRIYEAR)
0500 REM " --- Initializations
0505 PRECISION 14
0550 LET ADDON$="",DEALER$="",LSTYPES$="POOPITTOTIPHWOWI"
0800 REM " --- Display Warning"
0810 CALL "SYC60A",N2$,SYS01_DEV,STATUS
0820 IF STATUS THEN GOTO 9900
0850 REM " --- Erase Old Ver 5.2 SAM-11 Sort File
0860 ERASE "SAM-11",ERR=0900
0870 GOTO 0850
0900 REM " --- Additional file Opens (Make temp files)
0905 PRINT @(40,3),'CL',@(0,5),'CE',
0920 CALL "SYC.NB"," Making Temporary Files",0,COLUMN
0925 LET NUMBER=1
0930 DIM FROM$[NUMBER],TMPFILE$[NUMBER],FLAG$[NUMBER]
0935 LET FROM$[1]="SAM-01",TMPFILE$[1]="SAM01.TMP"
0940 CALL "SYC.RN",FROM$[ALL],TMPFILE$[ALL],FLAG$[ALL],NUMBER,STATUS
0945 IF STATUS=0 THEN GOTO 0970
0950 DIM MESSAGE$[0]
0955 LET MESSAGE$[0]="Error creating temp files (<Enter>=Continue)"
0960 CALL "SYC.XA",1,MESSAGE$[ALL],0,22,-1,V$,V3
0965 GOTO 9900
0970 CALL "SYC.DA",1,3,14,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0975 IF STATUS<>0 THEN GOTO 9900
0977 LET SAM02_DEV=CHANNELS[3],SAM03_DEV=CHANNELS[4],SAM04_DEV=CHANNELS[5]
0980 LET SAM05_DEV=CHANNELS[6],SAM06_DEV=CHANNELS[7],SAM07_DEV=CHANNELS[8]
0985 LET SAM08_DEV=CHANNELS[9],SAM09_DEV=CHANNELS[10],SAM10_DEV=CHANNELS[11]
0990 LET SAM11_DEV=CHANNELS[12],SAM01_DEV=CHANNELS[13]
0993 LET SAM01TMP_DEV=CHANNELS[14]
0995 CALL "SYC.NB","Processing",13,COLUMN
1000 REM " --- Position file
1020 LET X$="Sales Analysis Master",X=4
1030 GOSUB UPDATESCRN
1040 READ (SAM01TMP_DEV,KEY="",DOM=READSAM01)
1100 REM " --- Read through 5.2 SAM-01 (SAM01.TMP)
1105 READSAM01: 
1130 LET K$=KEY(SAM01TMP_DEV,END=DONESAM01)
1135 IF POS("Z"=K$)=1 OR LEN(K$)<13 THEN GOTO SKIPSAM01
1170 PRINT @(COLUMN,11),K$(1,2)," ",K$(3,1),
1180 DIM A0$(32),AJUNK[4],AUNITS[25],ACOST[25],ASALES[25]
1190 ON POS(K$(3,1)="ACDISTV") GOTO SKIPSAM01,CUSTTYPE,CUSTOMER,DISTRIB,ITEM,SALESREP,TERR,VENDOR
1200 REM " --- Write 6.0 SAM-04 (By Customer Type)
1205 CUSTTYPE: 
1210 DIM B0$(30),BUNITS[12],BCOST[12],BSALES[12]
1215 DIM C0$(30),CUNITS[12],CCOST[12],CSALES[12]
1220 READ (SAM01TMP_DEV)IOL=SAM01A52
1230 LET B0$(1)=A0$(1,2)+CURYEAR$+A0$(4,6),C0$(1)=A0$(1,2)+PRIYEAR$+A0$(4,6)
1240 FOR X=0 TO 12
1250 LET CUNITS[X]=AUNITS[X],CCOST[X]=ACOST[X],CSALES[X]=ASALES[X]
1260 LET BUNITS[X]=AUNITS[X+13],BCOST[X]=ACOST[X+13],BSALES[X]=ASALES[X+13]
1265 NEXT X
1270 WRITE (SAM04_DEV,KEY=B0$)IOL=SAM04ACUR
1280 WRITE (SAM04_DEV,KEY=C0$)IOL=SAM04APRI
1290 GOTO NEXTSAM01
1400 REM " --- Write 6.0 SAM-01 (Analysis By Customer)
1405 CUSTOMER: 
1410 DIM B0$(33),BUNITS[12],BCOST[12],BSALES[12]
1415 DIM C0$(33),CUNITS[12],CCOST[12],CSALES[12]
1420 READ (SAM01TMP_DEV)IOL=SAM01C52
1430 LET B0$(1)=A0$(1,2)+CURYEAR$+A0$(4,29),C0$(1)=A0$(1,2)+PRIYEAR$+A0$(4,29)
1440 FOR X=0 TO 12
1450 LET CUNITS[X]=AUNITS[X],CCOST[X]=ACOST[X],CSALES[X]=ASALES[X]
1460 LET BUNITS[X]=AUNITS[X+13],BCOST[X]=ACOST[X+13],BSALES[X]=ASALES[X+13]
1465 NEXT X
1470 WRITE (SAM01_DEV,KEY=B0$)IOL=SAM01ACUR
1480 WRITE (SAM01_DEV,KEY=C0$)IOL=SAM01APRI
1590 GOTO NEXTSAM01
1600 REM " --- Write 6.0 SAM-10 (Analysis By Distribution)
1605 DISTRIB: 
1610 DIM B0$(29),BUNITS[12],BCOST[12],BSALES[12]
1615 DIM C0$(29),CUNITS[12],CCOST[12],CSALES[12]
1620 READ (SAM01TMP_DEV)IOL=SAM01D52
1630 LET B0$(1)=A0$(1,2)+CURYEAR$+A0$(4,5),C0$(1)=A0$(1,2)+PRIYEAR$+A0$(4,5)
1640 FOR X=0 TO 12
1650 LET CUNITS[X]=AUNITS[X],CCOST[X]=ACOST[X],CSALES[X]=ASALES[X]
1660 LET BUNITS[X]=AUNITS[X+13],BCOST[X]=ACOST[X+13],BSALES[X]=ASALES[X+13]
1665 NEXT X
1670 WRITE (SAM10_DEV,KEY=B0$)IOL=SAM10ACUR
1680 WRITE (SAM10_DEV,KEY=C0$)IOL=SAM10APRI
1690 GOTO NEXTSAM01
1800 REM " --- Write 6.0 SAM-07 (Analysis By Item)
1805 ITEM: 
1810 DIM B0$(27),BUNITS[12],BCOST[12],BSALES[12]
1815 DIM C0$(27),CUNITS[12],CCOST[12],CSALES[12]
1820 READ (SAM01TMP_DEV)IOL=SAM01I52
1830 LET B0$(1)=A0$(1,2)+CURYEAR$+A0$(4,23),C0$(1)=A0$(1,2)+PRIYEAR$+A0$(4,23)
1840 FOR X=0 TO 12
1850 LET CUNITS[X]=AUNITS[X],CCOST[X]=ACOST[X],CSALES[X]=ASALES[X]
1860 LET BUNITS[X]=AUNITS[X+13],BCOST[X]=ACOST[X+13],BSALES[X]=ASALES[X+13]
1865 NEXT X
1870 WRITE (SAM07_DEV,KEY=B0$)IOL=SAM07ACUR
1880 WRITE (SAM07_DEV,KEY=C0$)IOL=SAM07APRI
1890 GOTO NEXTSAM01
2000 REM " --- Write 6.0 SAM-03 (Analysis By Salesperson)
2005 SALESREP: 
2010 DIM B0$(30),BUNITS[12],BCOST[12],BSALES[12]
2015 DIM C0$(30),CUNITS[12],CCOST[12],CSALES[12]
2020 READ (SAM01TMP_DEV)IOL=SAM01S52
2030 LET B0$(1)=A0$(1,2)+CURYEAR$+A0$(4,6),C0$(1)=A0$(1,2)+PRIYEAR$+A0$(4,6)
2040 FOR X=0 TO 12
2050 LET CUNITS[X]=AUNITS[X],CCOST[X]=ACOST[X],CSALES[X]=ASALES[X]
2060 LET BUNITS[X]=AUNITS[X+13],BCOST[X]=ACOST[X+13],BSALES[X]=ASALES[X+13]
2065 NEXT X
2070 WRITE (SAM03_DEV,KEY=B0$)IOL=SAM03ACUR
2080 WRITE (SAM03_DEV,KEY=C0$)IOL=SAM03APRI
2090 GOTO NEXTSAM01
2200 REM " --- Write 6.0 SAM-02 (Analysis By Territory)
2205 TERR: 
2210 DIM B0$(30),BUNITS[12],BCOST[12],BSALES[12]
2215 DIM C0$(30),CUNITS[12],CCOST[12],CSALES[12]
2220 READ (SAM01TMP_DEV)IOL=SAM01T52
2230 LET B0$(1)=A0$(1,2)+CURYEAR$+A0$(4,6),C0$(1)=A0$(1,2)+PRIYEAR$+A0$(4,6)
2240 FOR X=0 TO 12
2250 LET CUNITS[X]=AUNITS[X],CCOST[X]=ACOST[X],CSALES[X]=ASALES[X]
2260 LET BUNITS[X]=AUNITS[X+13],BCOST[X]=ACOST[X+13],BSALES[X]=ASALES[X+13]
2265 NEXT X
2270 WRITE (SAM02_DEV,KEY=B0$)IOL=SAM02ACUR
2280 WRITE (SAM02_DEV,KEY=C0$)IOL=SAM02APRI
2290 GOTO NEXTSAM01
2400 REM " --- Write 6.0 SAM-09 (Analysis By Vendor)
2405 VENDOR: 
2410 DIM B0$(33),BUNITS[12],BCOST[12],BSALES[12]
2415 DIM C0$(33),CUNITS[12],CCOST[12],CSALES[12]
2420 READ (SAM01TMP_DEV)IOL=SAM01V52
2430 LET B0$(1)=A0$(1,2)+CURYEAR$+A0$(4,29),C0$(1)=A0$(1,2)+PRIYEAR$+A0$(4,29)
2440 FOR X=0 TO 12
2450 LET CUNITS[X]=AUNITS[X],CCOST[X]=ACOST[X],CSALES[X]=ASALES[X]
2460 LET BUNITS[X]=AUNITS[X+13],BCOST[X]=ACOST[X+13],BSALES[X]=ASALES[X+13]
2465 NEXT X
2470 WRITE (SAM09_DEV,KEY=B0$)IOL=SAM09ACUR
2480 WRITE (SAM09_DEV,KEY=C0$)IOL=SAM09APRI
2490 GOTO NEXTSAM01
2600 REM " --- Skip This SAM01.TMP Record"
2605 SKIPSAM01: 
2620 READ (SAM01TMP_DEV)
2650 REM " --- Loop up for next SAM01.TMP
2655 NEXTSAM01: 
2690 GOTO READSAM01
2700 REM " ---
2705 DONESAM01: 
2720 CLOSE (SAM01TMP_DEV,ERR=2730)
2730 ERASE "SAM01.TMP",ERR=DOSAS01
2800 REM " --- Convert SAS-01
2805 DOSAS01: 
2820 LET X$="Sales Analysis Parameters",X=2
2830 GOSUB UPDATESCRN
2840 READ (SYM06_DEV,KEY="",DOM=READSYM06)
2900 REM " --- Read through SYM-06 for firms
2905 READSYM06: 
2930 LET K$=KEY(SYM06_DEV,END=DONESAS01)
2940 IF LEN(K$)<2 THEN GOTO NEXTSYM06
2960 DIM A0$(6),A1$(45),A2$(20)
2970 FIND (SYS01_DEV,KEY=K$+"SA00",DOM=NEXTSYM06)IOL=SAS01A52
2980 PRINT @(COLUMN,11),K$(1,2),
3000 REM " ---
3010 DIM B0$(6),B1$(11),B2$(11)
3020 LET B0$(1)=A0$
3030 LET B1$(1)=A1$(1,1)+A1$(3,2)+A1$(2,1)+"NN"+A1$(6,1)+"N"+A2$(1,1)+A1$(5,1)+"N"
3040 LET B2$(1)="IPPPIIIIIPN"
3070 WRITE (SYS01_DEV,KEY=B0$)IOL=SAS01A
3100 REM " --- Loop up for next SYM-06 record
3105 NEXTSYM06: 
3110 READ (SYM06_DEV)
3120 LOOPUP: 
3130 GOTO READSYM06
3150 REM " --- Done converting SAS-01
3155 DONESAS01: 
4900 REM " --- All done
4990 GOTO 9900
6800 REM " --- Erase old xref files"
6900 REM " --- Update screen"
6905 UPDATESCRN: 
6910 PRINT @(40,3),X$,'CL',@(0,5),'CE',
6920 CALL "SYC.NB","Processing",X,COLUMN
6990 RETURN 
8000 REM " --- Functions"
8050 DEF FNE$(Q$)=DATE(0:"%Hz%mZ")
8080 DEF FNP$(Q$)=CVS(Q$,2)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9880 LET LINE_ERR$=LST(PGM(TCB(5)))
9890 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
