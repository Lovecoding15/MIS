0010 REM "IVC - Price/Cost Change By Percentage Entry"
0020 REM "Program IVC.CA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.6 - 15Aug99 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "20May96 JJD: Single character codes result in incorrect data written to IVE-05 (1070)"
0032 REM "29Jan97 WGH: Use correct Stocking Vendor (4680)"
0033 REM "10Feb99 JAL: Retain Effective Date after entry (1140)"
0034 REM "03May00 KJS: Prevent endless loop when the starting item is greater than an existing item by only the last digit (4510)
0040 REM 
0045 REM "ACTION$: Entry Type (Input)"
0050 REM "         C=Cost Change/P=Price Change/R=Price Change Reversal"
0055 REM "ENTRY$ : Entry File Name (Input)"
0060 REM "         C=IVE-06/P=IVE-05/R=IVW-09"
0065 REM "STATUS : 0=No error (Returned)"
0070 REM 
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER ACTION$,ENTRY$,STATUS
0100 REM " --- Open/Lock Files"
0105 LET FILES=9
0110 DIM FILES$[FILES],FILEOPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="SYS-01",FILES$[2]="IVM-01",FILES$[3]="IVM-02"
0130 LET FILES$[4]="IVM-03",FILES$[5]="IVM-10",FILES$[6]="IVM-14"
0140 LET FILES$[7]="IVM-15",FILES$[8]=ENTRY$,FILES$[9]="APM-01"
0150 CALL "SYC.DA",1,1,8,FILES$[ALL],FILEOPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM01_DEV=CHANNELS[2],IVM02_DEV=CHANNELS[3]
0180 LET IVM03_DEV=CHANNELS[4],IVM10_DEV=CHANNELS[5],IVM14_DEV=CHANNELS[6]
0190 LET IVM15_DEV=CHANNELS[7],CHANNEL=CHANNELS[8]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$(1),A5$,A6$,A[ALL]
0220 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0230 APM01A: IOLIST C0$(1),C1$(1)
0240 IVE05A: IOLIST W0$(1),W1$,W2$,W[ALL]
0250 IVE06A: IOLIST W0$(1),W1$,W2$,W[ALL]
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0265 APS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0400 REM " --- Parameters"
0405 DIM P[5],INFO$[20]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV",O0=(ACTION$="C")
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0435 IF O0=1 THEN IF I3$(8,1)<>"S" THEN GOTO 4950
0440 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1)),P[2]=NUM(I2$(7,2))
0450 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0460 CALL "SYC.VA","AP",INFO$[ALL]
0470 LET AP$=INFO$[20]
0475 IF AP$="N" THEN GOTO 0500
0480 FIND (SYS01_DEV,KEY=N0$+"AP00",DOM=9800)IOL=APS01A
0490 LET VENDLEN=NUM(P2$(1,2))
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM FILES[15],PARAMS$[3],OPTIONS$[7],B0$(24),B1$(64),B[20]
0520 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],W0$(26+O0),W[4]
0550 LET FILES[1]=IVM01_DEV,FILES[10]=IVM10_DEV,FILES[14]=IVM14_DEV
0555 LET PARAMS$[0]=N0$,PARAMS$[1]=I1$,PARAMS$[2]=I2$,PARAMS$[3]=I3$
0560 LET WHEN$=F0$(7,3),CODE$="",BEGVEND$="",ENDVEND$="",PERCENT=0,ROW=4
0570 LET M9$="-##0.00%",M9=LEN(M9$),X$="New List Price Code:",PC$="List Price"
0575 IF O0>0 THEN LET X$="Effective Date:",PC$="Cost"
0580 IF ACTION$="R" THEN LET X$="List Price Code To Be Reversed:"
0590 LET FILES[15]=IVM15_DEV
0600 REM " --- Additional File Opens"
0610 IF AP$="N" THEN GOTO 0700
0620 CALL "SYC.DA",1,9,9,FILES$[ALL],FILEOPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0630 IF STATUS>0 THEN GOTO 9900
0640 LET APM01_DEV=CHANNELS[9]
0700 REM " --- Background"
0710 PRINT 'SB',@(39-LEN(X$),3),X$,'SF',
0720 IF AP$="N" THEN GOTO 0750
0730 LET ROW=6
0740 PRINT 'SB',@(22,4),"Beginning Vendor:",@(25,5),"Ending Vendor:",'SF',
0750 CALL "IVC.IB","B","D",ROW,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0760 IF ACTION$<>"R" THEN PRINT 'SB',@(24,ROW+7),"Percent Change:",'SF',
0900 REM " --- Display default values"
0950 GOSUB 5000
1000 REM " --- New List Price Code"
1005 ON O0 GOTO 1010,1100
1010 LET V4$="Enter The New List Price Code For This Price Change"
1020 LET V0$="S",V1$="CE",V2$=CODE$,V3$="",V0=2,V1=40,V2=3,I0=0
1030 GOSUB 7000
1040 ON V3 GOTO 1050,1000,3900,1000,3900
1050 IF FNP$(V$)="" THEN GOTO 1000
1060 LET CODE$=V$
1070 IF LEN(CODE$)=1 THEN LET CODE$=CODE$+" "
1090 GOTO 3900
1100 REM " --- Effective Date"
1110 LET V4$="Enter The Effective Date For This Cost Change"
1120 LET V0$="D",V1$="CE",V2$=WHEN$,V3$="",V0=3,V1=40,V2=3,I0=0
1130 GOSUB 7000
1140 ON V3 GOTO 1150,1100,3900,1100,3900
1150 LET WHEN$=V$
1190 GOTO 3900
1200 REM " --- Beginning Vendor"
1205 IF AP$="N" THEN GOTO 3900
1210 LET V4$="Enter The Beginning Vendor Number (<F1>=First/<F3>=Lookup)"
1220 LET V0$="M",V1$="KCE",V2$=BEGVEND$,V3$=M0$,V0=6,V1=40,V2=4
1230 GOSUB 7000
1240 ON V3 GOTO 1300,1250,1300,1290,3900
1250 LET BEGVEND$="",X$="First"
1260 GOTO 1350
1290 CALL "SYC.LV",V$
1300 IF V$="" THEN GOTO 1250
1310 GOSUB 6000
1320 IF STATUS<>0 THEN GOTO 1200
1330 LET BEGVEND$=V$
1350 PRINT @(V1,V2),X$,'CL',
1390 GOTO 3900
1400 REM " --- Ending Vendor"
1405 IF AP$="N" THEN GOTO 3900
1410 LET V4$="Enter The Ending Vendor Number (<F1>=Last/<F3>=Lookup)"
1420 LET V0$="M",V1$="KCE",V2$=ENDVEND$,V3$=M0$,V0=6,V1=40,V2=5
1430 GOSUB 7000
1440 ON V3 GOTO 1500,1450,1550,1490,3900
1450 LET ENDVEND$="",X$="Last"
1460 GOTO 1550
1490 CALL "SYC.LV",V$
1500 IF V$="" THEN GOTO 1450
1510 GOSUB 6000
1520 IF STATUS<>0 THEN GOTO 1400
1530 LET ENDVEND$=V$
1550 PRINT @(V1,V2),X$,'CL',
1590 GOTO 3900
1600 REM " --- Process standard input"
1610 CALL "IVC.IB","I","D",ROW,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
1620 ON V3 GOTO 1630,1600,3900,1600,3900
1690 GOTO 3900
1800 REM " --- Percent change"
1805 IF ACTION$="R" THEN GOTO 3900
1810 LET V4$="Enter The Percentage By Which The "+PC$+" Should Be Changed"
1820 LET V0$="N",V1$="C",V2$=STR(PERCENT),V3$=M9$,V0=M9,V1=40,V2=ROW+7
1830 GOSUB 7000
1840 ON V3 GOTO 1850,1800,3900,1800,3900
1850 IF V<-999.99 OR V>999.99 THEN GOTO 1800
1860 LET PERCENT=V
1870 PRINT @(V1,V2),PERCENT:M9$
1890 GOTO 3900
3900 REM " --- Next Field"
3905 IF V3=4 THEN GOTO 3990
3910 IF V3<>2 THEN GOTO 3940
3920 IF I0>0 THEN LET I0=I0-1
3930 GOTO 3950
3940 LET I0=I0+1
3960 ON I0 GOTO 1000,1200,1400,1600,1800,3990
3990 GOSUB 5000
4000 REM " --- Correct?"
4010 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
4020 IF V3=4 THEN LET STATUS=V3
4030 ON V3 GOTO 4040,4000,4000,4000,9900
4040 ON POS(V$="YN") GOTO 4000,4050,1000
4100 REM " --- Verify percentage/list price code"
4110 LET STATUS=0
4115 IF ACTION$<>"R" THEN GOSUB 6100
4120 IF STATUS>0 THEN GOTO 3900
4125 IF O0>0 THEN GOTO 4150
4130 GOSUB 6200
4140 IF STATUS>0 THEN GOTO 1000
4150 REM " --- Update initialization"
4155 LET BEGWHSE$=OPTIONS$[1],ENDWHSE$=OPTIONS$[2],BEGPROD$=OPTIONS$[3]
4160 LET ENDPROD$=OPTIONS$[4],BEGITEM$=OPTIONS$[5],ENDITEM$=OPTIONS$[6]
4165 LET TYPE$=OPTIONS$[7],X$="Updating"
4167 IF ACTION$="R" THEN LET X$="Processing"
4170 CALL "SYC.NB",X$,6+O0+P[0],COLUMN
4175 LET FIRST$=N0$+"C",K$=FIRST$+BEGWHSE$
4180 IF BEGWHSE$<>"" THEN LET K$=K$+BEGPROD$
4185 IF K$<>FIRST$ THEN LET K$=K$+BEGITEM$
4190 READ (IVM03_DEV,KEY=K$,DOM=4200)
4200 REM " --- Get next sort record"
4210 LET K$=KEY(IVM03_DEV,END=4900)
4220 IF POS(FIRST$=K$)<>1 THEN GOTO 4900
4230 LET WHSE$=K$(4,2),PRODUCT$=K$(6,3),ITEM$=K$(9)
4300 REM " --- Valid Warehouse/Product/Item?"
4310 IF ENDWHSE$<>"" THEN IF WHSE$>ENDWHSE$ THEN GOTO 4900
4320 IF BEGPROD$<>"" THEN IF PRODUCT$<BEGPROD$ THEN GOTO 4400
4330 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 4450
4340 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 4500
4350 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 4550
4390 GOTO 4600
4400 REM " --- Skip to beginning product for this warehouse"
4410 READ (IVM03_DEV,KEY=K$(1,5)+BEGPROD$,DOM=4800)
4440 GOTO 4800
4450 REM " --- Skip to next warehouse"
4460 READ (IVM03_DEV,KEY=K$(1,5)+$FF$,DOM=4800)
4490 GOTO 4800
4500 REM " --- Skip to beginning item"
4510 READ (IVM03_DEV,KEY=K$(1,8)+BEGITEM$,DIR=0,DOM=4800)
4540 GOTO 4800
4550 REM " --- Skip to next product"
4560 READ (IVM03_DEV,KEY=K$(1,8)+$FF$,DOM=4800)
4590 GOTO 4800
4600 REM " --- Read item and warehouse records"
4610 PRINT @(COLUMN,11),WHSE$," ",PRODUCT$," ",ITEM$(1,P[0]),
4620 LET A0$(1)=N0$+ITEM$,B0$(1)=N0$+WHSE$+ITEM$
4630 READ (IVM03_DEV)
4640 FIND (IVM01_DEV,KEY=A0$,DOM=4800)IOL=IVM01A
4650 IF TYPE$<>"" THEN IF A2$(53,3)<>TYPE$ THEN GOTO 4800
4660 FIND (IVM02_DEV,KEY=B0$,DOM=4800)IOL=IVM02A
4680 IF A2$(24,1)<>"W" THEN LET VENDOR$=A2$(12,6) ELSE LET VENDOR$=B1$(22,6)
4685 IF BEGVEND$<>"" THEN IF VENDOR$<BEGVEND$ THEN GOTO 4800
4690 IF ENDVEND$<>"" THEN IF VENDOR$>ENDVEND$ THEN GOTO 4800
4695 IF ACTION$="R" THEN IF CVS(B1$(52,2),2)<>CODE$ THEN GOTO 4800
4700 REM " --- Generate IVE-05 record"
4710 DIM W0$(26+O0),W[4]
4715 IF ACTION$="R" THEN DIM W0$(29)
4720 ON O0 GOTO 4725,4750
4725 IF ACTION$="R" THEN LET W0$(1)=N0$+CODE$+B0$(3,2)+A2$(1,3)+B0$(5)
4730 IF ACTION$="P" THEN LET W0$(1)=N0$+CODE$+B0$(3),W[0]=FNP(B[9],PERCENT)
4735 WRITE (CHANNEL,KEY=W0$)IOL=IVE05A
4740 GOTO 4800
4750 REM " --- Generate IVE-06 record"
4760 LET W0$(1)=N0$+WHEN$+B0$(3),W[0]=FNP(B[11],PERCENT)
4790 WRITE (CHANNEL,KEY=W0$)IOL=IVE06A
4800 REM " --- Loop back for next sort record"
4890 GOTO 4200
4900 REM " --- All done"
4910 LET STATUS=0
4940 GOTO 9900
4950 REM " --- Not standard costing"
4960 CALL "IVC.SB","S",STATUS
4970 LET STATUS=999
4990 GOTO 9900
5000 REM " --- Display"
5005 LET X$=CODE$
5010 IF O0>0 THEN LET X$=FNB$(WHEN$)
5015 PRINT @(40,3),X$
5020 IF AP$="N" THEN GOTO 5100
5030 LET V$=BEGVEND$,X$="First"
5040 IF V$<>"" THEN GOSUB 6000
5050 PRINT @(40,4),X$,'CL',
5060 LET V$=ENDVEND$,X$="Last"
5070 IF V$<>"" THEN GOSUB 6000
5080 PRINT @(40,5),X$,'CL',
5100 CALL "IVC.IB","D","D",ROW,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
5110 IF ACTION$<>"R" THEN PRINT @(40,ROW+7),PERCENT:M9$
5190 RETURN
6000 REM " --- Retrieve vendor name"
6010 DIM C0$(8),C1$(30)
6020 LET STATUS=1,C0$(1)=N0$+V$,C1$(1)="(Not On File)"
6030 FIND (APM01_DEV,KEY=C0$,DOM=6050)IOL=APM01A
6040 LET STATUS=0
6050 LET X$=FNF$(C0$(3,VENDLEN),M0$)+" "+C1$
6090 RETURN
6100 REM " --- Percentage>0?"
6110 IF PERCENT<>0 THEN GOTO 6190
6120 LET V4$=PC$+" Change Percentage May Not Be Zero",I0=3,STATUS=1
6130 GOSUB 6900
6190 RETURN
6200 REM " --- Price Code Not Blank?"
6210 IF FNP$(CODE$)<>"" THEN GOTO 6290
6220 LET V4$="List Price Code May Not Be Blank",STATUS=1
6230 GOSUB 6900
6290 RETURN
6900 REM " --- Standard Warning"
6910 DIM MESSAGE$[1]
6920 LET MESSAGE$[0]=V4$+" (<Enter>=Continue)"
6930 CALL "SYC.XA",2,MESSAGE$[ALL],0,22,-1,V$,V3
6990 RETURN
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8065 DEF FNP(Q1,Q2)=Q1+((Q1*Q2)/100)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 LET STATUS=999
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5))),STATUS=11
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 REM " --- Return to calling program"
9910 FOR X=1 TO FILES
9920 CLOSE (CHANNELS[X],ERR=9930)
9930 NEXT X
9950 EXIT
9999 END