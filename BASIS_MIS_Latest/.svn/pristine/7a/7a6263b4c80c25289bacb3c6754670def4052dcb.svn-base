0010 REM "IVM - Item Maintenance (Lot/Serial Activity)"
0020 REM "Program IVM.MP"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 SETERR 9000
0080 SETESC 9000
0090 PRECISION P[1]
0200 REM " --- IOLIST's"
0230 IVM17A: IOLIST C0$(1),C1$,C2$,C[ALL]
0270 IVS01D: IOLIST T0$,T1$(1)
0300 IVM10C: IOLIST W0$(1)
0400 REM " --- Parameters"
0410 DIM T1$(36)
0420 LET TYPES$="IN OUTADJXFRRETEND"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"03",DOM=0500)IOL=IVS01D
0440 IF FNP$(T1$(19,18))<>"" THEN LET TYPES$=FNP$(T1$(19,18))
0500 REM " --- Initializations"
0510 DIM B0$(24),B1$(64),B[20],C0$(48),C[12],W0$(32),O[5]
0520 DIM D0$(44),D1$(96),D[12]
0550 LET TYPES=LEN(TYPES$),PERIOD=P[6],YEAR=P[7],M9$="00",COLUMN=52-P[2]
0560 LET DW=MAX(MIN(24,(COLUMN-14)-18),0),M6$=M2$
0600 REM " --- Print positions"
0610 CALL "SYC.RM",M6$,M6,12,12
0620 LET O[5]=80-M6,O[4]=68-M6,O[3]=56-M6,O[2]=44-M6,O[1]=32-M6,O[0]=20-M6
0700 REM " --- Background"
0710 CALL "SYC.WC",1,1,0,14,7,L0+2,0
0720 CALL "SYC.WC",1,0,80,0,0,L0+1,0
0730 PRINT 'SB',@(0,L0),"Warehouse ID:",@(COLUMN-14),"Lot/Serial #:",@(53),"Ending Period:",@(71),"Year:",@(0,L0+2),"Period",@(0,21),"Total",'SF',
0750 GOSUB 5400
0760 GOSUB 5100
0900 REM " --- Position file"
0990 READ (IVM03_DEV,KEY=A0$(1,2)+"G"+A0$(3),DOM=1000)
1000 REM " --- Warehouse ID"
1005 PRINT 'CF',@(68,L0),PERIOD:M9$,@(77),FNYEAR_YY$(YEAR),
1010 LET V2$="",V2$=KEY(IVM03_DEV,END=1040)
1020 IF POS(A0$(1,2)+"G"+A0$(3)=V2$)<>1 THEN LET V2$=""
1030 IF V2$<>"" THEN LET V2$=V2$(24)
1040 LET V0$="S",V1$="KCE",V3$="",V0=2,V1=14,V2=L0
1045 LET V4$="Enter A Valid Warehouse ID <F3>=Lookup)"
1050 GOSUB 7000
1055 ON V3 GOTO 1065,1000,1000,1060,4900
1060 CALL "IVC.LK",3,V1,V2,V$
1065 IF V$="" THEN GOTO 0900
1070 LET V$=V$+"  ",V$=V$(1,2)
1200 REM " --- Retrieve record"
1210 FIND (IVM10_DEV,KEY=N0$+"C"+V$,DOM=1000)IOL=IVM10C
1220 LET K$=A0$(1,2)+"G"+A0$(3)+V$,D0$(1)=A0$(1,2)+V$+A0$(3)
1230 READ (IVM03_DEV,KEY=K$,DOM=1240)
1240 READ (IVM07_DEV,KEY=D0$,DOM=1300)
1300 REM " --- Display record"
1310 GOSUB 5000
1400 REM " --- Lot/Serial Number"
1410 LET V2$="",V2$=KEY(IVM07_DEV,END=1440)
1420 IF POS(D0$(1,24)=V2$)<>1 THEN LET V2$=""
1430 IF V2$<>"" THEN LET V2$=V2$(25)
1440 LET V0$="S",V1$="KCE",V3$="",V0=P[2],V1=COLUMN,V2=L0
1445 LET V4$="Enter A Valid Lot/Serial Number (<F3>=Lookup)"
1450 GOSUB 7000
1455 ON V3 GOTO 1500,1400,1000,1460,4900
1460 LET ACTION$=""
1470 CALL "SYC.LL",ACTION$,D0$,D1$,D[ALL]
1480 LET V$=D0$(25)
1490 IF D0$=FILL(44) THEN LET D0$(1)=A0$(1,2)+W0$(4,2)+A0$(3,20)
1495 PRINT @(V1,V2),D0$(25,10),
1500 REM " --- Retrieve record"
1510 LET D0$(25)=V$
1520 READ (IVM07_DEV,KEY=D0$,DOM=1400)
1600 REM " --- Ending Period"
1610 LET V4$="Enter The Ending Period Between 1 And "+STR(G[0])+" For This Inquiry (<F1>="+MONTHS$((P[6]-1)*3+1,3)+")"
1620 LET V0$="Z",V1$="C",V2$=STR(PERIOD),V3$=M9$,V0=2,V1=68,V2=L0
1630 GOSUB 7000
1640 ON V3 GOTO 1660,1650,1000,1600,2000
1650 LET V=P[6]
1655 PRINT @(V1,V2),P[6]:M9$
1660 IF V<1 OR V>G[0] THEN GOTO 1600
1670 LET PERIOD=V
1700 REM " --- Ending Year"
1710 LET V4$="Enter The Ending Year For This Inquiry (<F1>="+STR(1900+P[7]:"0000")+")"
1720 LET V0$="D",V1$="CY",V2$=FNYEAR_YY$(YEAR),V3$="",V0=2,V1=77,V2=L0
1730 GOSUB 7000
1740 ON V3 GOTO 1760,1750,1600,1700,2000
1750 LET V$=FNYEAR_YY21$(P[7])
1760 LET YEAR=FNYY_YEAR(V$)
1770 PRINT @(V1,V2),YEAR
2000 REM " --- Display initializations"
2010 DIM QTY[13,5]
2020 GOSUB 5100
2200 REM " --- Retrieve records"
2210 FOR P=1 TO 12
2220 DIM C0$(48),C[12]
2230 LET C0$(1)=D0$+FNYEAR_YY21$(YEARS[P])+STR(PERIODS[P]:"00")
2240 FIND (IVM17_DEV,KEY=C0$,DOM=2390)IOL=IVM17A
2300 REM " --- Store quantities"
2310 FOR X=0 TO 5
2320 LET X$=TYPES$(X*3+1,3)
2330 CALL "IVC.PA",X$,C[ALL],V
2340 LET QTY[P,X]=V,QTY[13,X]=QTY[13,X]+V
2350 NEXT X
2390 NEXT P
3000 REM " --- Display quantities"
3010 FOR P=1 TO 12
3020 FOR X=0 TO 5
3030 IF FNP$(TYPES$(X*3+1,3))<>"" THEN PRINT @(O[X],L0+2+P),QTY[P,X]:M6$,
3040 NEXT X
3050 NEXT P
3100 REM " --- Display totals"
3110 FOR X=0 TO 5
3120 LET X$="",V=X*3+1
3130 IF POS(TYPES$(V,3)="BEGEND",3)>0 THEN GOTO 3190
3180 IF FNP$(TYPES$(V,3))<>"" THEN PRINT @(O[X],21),QTY[13,X]:M6$,
3190 NEXT X
4000 REM " --- Correct?"
4010 LET V4$="Press <Enter> To Continue (<F1>=Next Lot/Serial #/<F3>=Change Columns)"
4020 LET V0$="S",V1$="KC",V2$="",V3$="",V0=1,V1=FNV(V4$),V2=22
4030 GOSUB 7000
4040 ON V3 GOTO 4050,4100,4000,4300,4900
4090 GOTO 1400
4100 REM " --- Next Lot/Serial #"
4110 LET K$=KEY(IVM07_DEV,END=4000)
4120 IF POS(D0$(1,24)=K$)<>1 THEN GOTO 4000
4130 LET D0$(1)=K$
4140 READ (IVM07_DEV,KEY=D0$,DOM=4000)
4150 PRINT @(COLUMN,L0),D0$(25,P[2]),
4190 GOTO 2000
4300 REM " --- Change columns"
4310 LET V2=L0+4,X$="Inventory Activity Display Columns"
4320 CALL "IVC.RA",V2,X$,TYPES$
4380 GOSUB 5400
4390 GOTO 2000
4900 REM " --- Run menu overlay"
4990 RUN "IVM.MA"
5000 REM " --- Display record"
5010 PRINT @(14,L0),W0$(4,2)," ",W0$(6,DW),@(COLUMN),C0$(25,P[2]),@(68),PERIOD:M9$,@(77),FNYEAR_YY$(YEAR),
5100 REM " --- Display periods"
5110 DIM PERIODS$[12],PERIODS[12],YEARS[12]
5120 LET P=PERIOD,Y=YEAR
5130 FOR X=1 TO 12
5140 LET PERIODS$[X]=MONTHS$((P-1)*3+1,3)+" "+FNYEAR_YY$(Y)
5145 LET PERIODS[X]=P,YEARS[X]=Y,P=P-1
5150 IF P<1 THEN LET P=G[0],Y=Y-1
5160 NEXT X
5170 LET P=1
5180 FOR X=L0+3 TO 20
5190 PRINT 'SB',@(0,X),PERIODS$[P],@(8),'CL',
5200 LET P=P+1
5210 NEXT X
5220 PRINT @(8,21),'CL',
5290 RETURN 
5400 REM " --- Retrieve column titles"
5410 DIM TITLES$[5](12)
5415 LET INDEX=0
5420 FOR X=1 TO TYPES STEP 3
5430 LET V$=TYPES$(X,3)
5440 CALL "IVC.FA",V$,V1$,V2$,STATUS
5450 IF STATUS=0 THEN LET TITLES$[INDEX]=V2$
5460 LET INDEX=INDEX+1
5490 NEXT X
5500 REM " --- Display column titles"
5510 FOR X=0 TO 5
5520 LET V1=(X*12)+7+1
5530 PRINT 'SB',@(V1,L0+2),FILL(12),@(V1+M6-LEN(TITLES$[X])-1),TITLES$[X],'SF',
5540 NEXT X
5590 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8080 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8100 REM " --- FNYEAR_YY$ Un-Convert 21st Century Numeric Year to 2-Char Year"
8105 DEF FNYEAR_YY$(Q)=STR(MOD(Q,100):"00")
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
