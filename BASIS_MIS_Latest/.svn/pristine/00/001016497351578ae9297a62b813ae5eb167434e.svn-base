0010 REM "IVE - Transfer Entry"
0020 REM "Program IVE.CA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.5 - 01Dec98 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "31Mar97 WGH: Initialize !GLCONTROL based on current program (655)"
0032 REM "28Apr97 JWK: AVAILABLE should be OnHand-Commit not -OnOrd (2525)
0033 REM "19Nov98 KJS: Require lot/serial entry when item lotted/serialized and inventoried (2010,2555,3040,3905)"
0034 REM "29Jun00 WGH: Treat previously entered transfer quantities as available for transfer (2505,2520-2525)
0040 REM 
0060 BEGIN
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=14
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="IVE-02",FILES$[2]="IVM-01",FILES$[3]="IVM-02"
0130 LET FILES$[4]="IVM-10",FILES$[5]="SYS-01",FILES$[6]="IVM-14"
0135 LET FILES$[7]="IVM-07",FILES$[8]="IVM-08"
0160 CALL "SYC.DA",1,1,6,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0180 LET IVE02_DEV=CHANNELS[1],IVM01_DEV=CHANNELS[2],IVM02_DEV=CHANNELS[3]
0185 LET IVM10_DEV=CHANNELS[4],SYS01_DEV=CHANNELS[5],IVM14_DEV=CHANNELS[6]
0200 REM " --- IOLists
0210 IVE02A: IOLIST A0$,A1$(1),A[ALL]
0230 IVM02A: IOLIST D0$,D1$,D2$,D[ALL]
0250 IVM07A: IOLIST C0$,C1$,C[ALL]
0260 IVS01A: IOLIST X$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0270 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0280 GLS01A: IOLIST X$,X$,G2$
0340 IVM10C: IOLIST X0$
0400 REM " --- Parameters"
0405 DIM P[5],I[3]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N1$=F4$,N2$="IV",N4$=F5$,LS$="N",LF$="N"
0425 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0430 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0435 IF P3$(1,1)<>"Y" THEN GOTO 6000
0440 LET P[0]=NUM(P2$(1,2)),P[1]=NUM(P2$(7,2)),P[2]=NUM(P2$(5,1))
0450 LET P[3]=NUM(P2$(9,2)),P[4]=NUM(P2$(11,2)),P[5]=NUM(P2$(13,2))
0460 IF POS(P3$(17,1)="LS")>0 THEN LET LS$="Y"
0470 IF POS(P3$(3,1)="LF")>0 THEN LET LF$="Y"
0475 IF LS$<>"Y" THEN LET P[1]=0
0480 LET G0=NUM(G2$(1,2)),I[0]=P[0],I[1]=P[3],I[2]=P[4],I[3]=P[5]
0500 REM " --- Init Data"
0505 PRECISION P[2]
0510 DIM A0$(51),A1$(7),A[2],D[20],C[12],J1$(40)
0520 DIM FILES[44],PARAMS[10],PARAMS$[10],ITEM$[3],REFS$[10],REFS[3]
0540 LET A0$(1)=N0$,A0$(5,3)=F0$(7,3)
0550 LET FILES[0]=SYS01_DEV,FILES[1]=IVM01_DEV,FILES[2]=IVM02_DEV
0560 LET FILES[14]=IVM14_DEV,PARAMS$[0]=F0$(7,3),PARAMS$[1]=F0$(4,3)
0565 LET PARAMS$[2]=P2$,PARAMS$[3]=P3$,PARAMS$[4]=P4$,PARAMS[0]=G0
0600 REM " --- Additional File Opens"
0610 IF LS$<>"Y" THEN GOTO 0650
0615 CALL "SYC.DA",1,7,8,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0620 IF STATUS>0 THEN GOTO 9900
0625 LET IVM07_DEV=CHANNELS[7],IVM08_DEV=CHANNELS[8]
0630 LET FILES[7]=IVM07_DEV,FILES[8]=IVM08_DEV
0650 LET GL$="N",STATUS=0
0655 CALL "GLC.BA",ERR=660,PGM(-2),N2$,GLW11$,GL$,STATUS
0660 IF STATUS<>0 THEN GOTO 9900
0665 IF GL$<>"Y" THEN GOTO 0700
0670 LET FILES$[9]="GLM-01",FILES$[10]=GLW11$,OPTIONS$[10]="C"
0675 CALL "SYC.DA",1,9,10,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0680 IF STATUS>0 THEN GOTO 9900
0690 LET GLM01_DEV=CHANNELS[9],GLW11_DEV=CHANNELS[10]
0700 REM " --- Background"
0710 CALL "SYC.WC",1,0,80,0,0,5,0
0740 PRINT @(0,3),'SB',"From Warehouse:",@(1,4),"Transfer Date:",@(2,6),"To Warehouse:",@(10,7),"Item:",@(2,8),"Lot/Serial #:",@(3,9),"Purchase UM:",@(5,10),"Unit Cost:",@(1,11),"Item Quantity:",@(4,12),"Total Cost:",@(5,13),"Reference:",'SF',
1000 REM " --- Key"
1010 PRINT 'CF',
1020 LET I0=0
1100 REM " --- From Warehouse"
1120 LET V0$="S",V1$="KCRE",V2$=A0$(3,2),V0=2,V1=16,V2=3
1125 LET V4$="Enter A Valid Warehouse (<F3>=Lookup)"
1130 GOSUB 7000
1140 IF V3=4 THEN GOTO 9900
1142 IF V3<>3 THEN GOTO 1150
1146 CALL "IVC.LK",3,V1,V2,V$
1150 LET A0$(3,2)=V$,W$=A0$(3,2)
1170 GOSUB 6200
1180 IF STATUS>0 THEN GOTO 1100
1190 GOTO 3900
1200 REM " --- Date"
1220 LET V0$="D",V1$="CRE",V2$=A0$(5,3),V0=8,V1=16,V2=4
1225 LET V4$="Enter A Valid Date",STATUS=0
1240 GOSUB 7000
1250 ON V3 GOTO 1260,1200,1000,1200,1000
1260 IF GL$="Y" THEN CALL "GLC.EA",V$,"Y",PERIOD$,YEAR$,STATUS
1270 IF STATUS>99 THEN GOTO 1200
1280 LET A0$(5,3)=V$,A0$(8,2)=A0$(1,2)
1290 GOTO 3900
1400 REM " --- To Warehouse"
1410 LET V0$="S",V1$="KC",V2$=A0$(10,2),V0=2,V1=16,V2=6,I0=2
1420 LET V4$="Enter A Valid Warehouse Code (<F3>=Lookup)"
1430 GOSUB 7000
1440 ON V3 GOTO 1460,1400,3900,1450,1000
1450 CALL "IVC.LK",3,V1,V3,V$
1460 IF V$=A0$(3,2) THEN GOTO 1400
1470 LET A0$(10,2)=V$,W$=A0$(10,2)
1480 GOSUB 6200
1485 IF STATUS>0 THEN GOTO 1400
1490 GOTO 3900
1600 REM " --- Item"
1605 GOSUB 6300
1610 DIM B$[6],B[12]
1620 LET V1=16,V2=7,I0=3
1630 CALL "IVC.IA",ACTION$,V1,V2,FILES[ALL],N0$,A0$(12,20),V4$,I[ALL],B$[ALL],B[ALL],V3
1640 ON V3 GOTO 1650,1600,3900,1600,1000
1650 LET A0$(12,20)=B$[0],B1$=B$[1],B2$=B$[2]
1660 IF LEN(B1$)>79-P[0]-17 THEN LET B1$=B1$(1,79-P[0]-17)
1665 PRINT @(V1,V2),A0$(12,P[0])," ",B1$,
1670 GOSUB 5000
1675 FIND (IVM02_DEV,KEY=N0$+A0$(3,2)+A0$(12,20),DOM=1700)IOL=IVM02A
1680 FIND (IVM02_DEV,KEY=N0$+A0$(10,2)+A0$(12,20),DOM=1750)
1685 PRINT @(16,9),B2$(4,2),@(16,10),D[11]:M3$,
1690 GOTO 3900
1700 REM " --- Missing from warehouse"
1710 LET V4$=A0$(3,2)
1740 GOTO 1780
1750 REM " --- Missing to warehouse"
1760 LET V4$=A0$(10,2)
1780 LET V4$="Item Not Defined In Warehouse "+V4$
1785 GOSUB 6900
1790 GOTO 1600
2000 REM " --- Lot/Serial #
2005 IF LS$<>"Y" THEN IF V3=2 THEN GOTO 3900 ELSE GOTO 2100
2010 IF B2$(19,2)<>"YY" THEN IF V3=2 THEN GOTO 3900 ELSE LET C[3]=D[11]; GOTO 2100
2015 LET V0$="S",V1$="CE",V2$="",V3$="",V0=P[1],V1=16,V2=8
2020 LET V4$="Enter A Valid Lot/Serial Number (<F3>=Lookup)"
2025 GOSUB 7000
2030 ON V3 GOTO 2050,2000,3900,2040,1000
2040 GOSUB 5500
2050 IF V$="NONE" THEN LET V3=2; GOTO 3900
2060 LET V$=V$+J1$,V$=V$(1,20)
2070 FIND (IVM07_DEV,KEY=A0$(1,4)+A0$(12,20)+V$,DOM=2000)
2080 LET A0$(32,20)=V$
2090 PRINT @(16,8),A0$(32,P[1]),
2100 REM " --- Get Record"
2110 FIND (IVE02_DEV,KEY=A0$,DOM=2200)IOL=IVE02A
2120 GOSUB 5000
2130 GOSUB 5200
2140 REMOVE (IVE02_DEV,KEY=A0$)
2190 GOTO 4000
2200 REM " --- New Record"
2210 DIM A[2]
2220 IF LS$<>"Y" THEN GOTO 2500
2230 READ (IVM07_DEV,KEY=A0$(1,4)+A0$(12,40),DOM=2500)IOL=IVM07A
2240 PRINT @(16,10),C[3]:M3$
2500 REM " --- Quantity to transfer"
2505 IF LS$<>"Y" OR B2$(20,1)<>"Y" THEN LET AVAILABLE=D[0]-D[2]+A[0] ELSE LET AVAILABLE=C[0]-C[1]+A[0]
2510 IF A[0]=0 THEN LET A[0]=1
2515 LET V4$="Enter The Quantity Of This Item To Be Transferred"
2520 LET V0$="N",V2$=STR(A[0]),V3$=M2$,V1=16,V2=11,I0=5
2530 PRINT @(V1,V2),'CL',@(V1,V2+1),'CL',
2540 IF P3$(17,1)="S" AND AVAILABLE>0 AND B2$(20,1)="Y" THEN LET A=1; PRINT @(V1,V2),A:V3$; GOTO 2600
2550 GOSUB 7000
2555 ON V3 GOTO 2560,2500,3900,2500,1000
2560 IF V<=0 THEN GOTO 2500
2565 LET A=V
2570 IF LS$="Y" THEN IF B2$(19,2)="YN" THEN GOTO 2600
2575 IF AVAILABLE>=V THEN GOTO 2600
2580 LET V4$="Only "+STR(AVAILABLE)+" Item(s) Are Available For Transfer"
2585 GOSUB 6900
2590 IF V$<>"SPECIAL" THEN GOTO 2500
2600 REM " --- Display quantity"
2610 LET A[0]=A,A[1]=A[0]*D[11],A[2]=D[11]
2620 IF LS$="Y" THEN LET A[1]=A[0]*C[3],A[2]=C[3]
2630 PRINT @(16,12),A[1]:M1$,
2670 GOTO 3900
3000 REM " --- Reference"
3010 LET V0$="S",V1$="CE",V2$=A1$(1,6),V3$="",V0=6,V1=16,V2=13
3020 LET V4$="Enter An Optional Reference For This Transfer"
3030 GOSUB 7000
3040 ON V3 GOTO 3050,3000,3900,3000,1000
3050 LET A1$(1,6)=V$
3090 GOTO 3900
3100 REM " --- Explode?
3110 LET A1$(7,1)="N"
3190 GOTO 3900
3900 REM " --- Next Field"
3910 IF V3<>2 THEN GOTO 3940
3920 IF I0>0 THEN LET I0=I0-1
3930 GOTO 3950
3940 LET I0=I0+1
3960 ON I0 GOTO 1000,1200,1400,1600,2000,2500,3000,3100,4000
4000 REM " --- Options"
4010 LET V4$="Is The Above Information Correct (Y/N/Delete)?"
4015 LET V0$="S",V1$="KC",V2$="Y",V3$="",V0=6,V1=FNV(V4$),V2=22
4020 GOSUB 7000
4030 IF V$="DELETE" THEN GOTO 4200
4050 ON POS(V$="YN") GOTO 4000,4100,2500
4100 REM " --- Write"
4110 WRITE (IVE02_DEV,KEY=A0$)IOL=IVE02A
4120 GOSUB 5300
4190 GOTO 1600
4200 REM " --- Delete"
4210 REMOVE (IVE02_DEV,KEY=A0$,DOM=4220)
4290 GOTO 1600
5000 REM " --- Display"
5020 IF A[0]<>0 THEN PRINT @(16,9),B2$(6,2),@(16,10),A[2]:M3$,@(16,11),A[0]:M2$,@(16,12),A[1]:M1$,@(16,13),A1$(1,6),
5090 RETURN
5200 REM " --- Uncommit Inventory"
5210 LET ACTION$="UC"
5290 GOTO 5400
5300 REM " --- Commit Inventory"
5330 LET ACTION$="CO"
5400 REM " --- Update warehouse and lot/serial records"
5410 LET ITEM$[0]=N0$,ITEM$[1]=A0$(3,2),ITEM$[2]=A0$(12,20),REFS[0]=A[0]
5420 IF LS$="Y" THEN LET ITEM$[3]=A0$(32,20)
5430 CALL "IVC.UA",ACTION$,FILES[ALL],PARAMS[ALL],PARAMS$[ALL],ITEM$[ALL],REFS$[ALL],REFS[ALL],STATUS
5490 RETURN
5500 REM " --- Lot Lookup
5510 DIM R[15]
5520 LET V$="",R0$=N0$+A0$(3,2)+A0$(12,20),V8$="Z"
5530 CALL "SYC.LL",V8$,R0$,R1$,R[ALL]
5580 IF R0$<>"" THEN LET V$=R0$(25,20)
5590 RETURN
6000 REM " --- System not Multi-Warehouse"
6010 DIM MESSAGE$[2]
6020 LET MESSAGE$[0]="The system is not set up to allow multiple warehouses. You must",MESSAGE$[1]="allow for multiple warehouses to be able to transfer inventory.",MESSAGE$[2]="Check your parameter settings (<Enter>=Continue)"
6030 CALL "SYC.XA",3,MESSAGE$[ALL],2,-1,-1,V$,V3
6090 GOTO 9900
6200 REM " --- Warehouse"
6210 LET X0$="",V$=V$+"  ",V$=V$(1,2),STATUS=1
6220 FIND (IVM10_DEV,KEY=N0$+"C"+V$,DOM=6240)IOL=IVM10C
6230 LET STATUS=0
6240 PRINT @(V1,V2),V$,
6250 IF X0$<>"" THEN PRINT @(V1+3,V2),X0$(6,24),
6290 RETURN
6300 REM " --- Clear Data"
6320 FOR X=7 TO 14
6330 PRINT @(16,X),'CL',
6340 NEXT X
6350 LET A0$(32)="",A1$(1)="",A[0]=0,A[1]=0,A[2]=0
6390 RETURN
6900 REM " --- Display warning"
6910 DIM MESSAGE$[1]
6920 LET MESSAGE$[0]=V4$+" (<Enter>=Continue)"
6930 CALL "SYC.XA",2,MESSAGE$[ALL],0,22,-1,V$,V3
6990 RETURN
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8085 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END