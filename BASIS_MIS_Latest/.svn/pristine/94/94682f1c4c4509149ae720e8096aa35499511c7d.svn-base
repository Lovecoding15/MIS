0010 REM "POR - Purchase Order History By Item Report
0020 REM "Program POR.QA
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "31Dec97 JWK: Multiple receipts to same PO line inflated Total Ordered (3110,3130,3150)
0032 REM "23Apr98 JWK: Out of memory when TOTALEDPO$ gets too big (6150)
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files
0105 LET FILES=8
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="APM-01",FILES$[2]="IVM-01",FILES$[3]="IVM-10"
0130 LET FILES$[4]="IVM-14",FILES$[5]="IVM-15",FILES$[6]="POT-14"
0140 LET FILES$[7]="POT-24",FILES$[8]="SYS-01"
0150 CALL "SYC.DA",1,1,8,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET APM01_DEV=CHANNELS[1],IVM01_DEV=CHANNELS[2],IVM10_DEV=CHANNELS[3]
0180 LET IVM14_DEV=CHANNELS[4],IVM15_DEV=CHANNELS[5],POT14_DEV=CHANNELS[6]
0190 LET POT24_DEV=CHANNELS[7],SYS01_DEV=CHANNELS[8]
0200 REM " --- IOLists
0210 APM01A: IOLIST *,VENDNAME$(1)
0230 POT14A: IOLIST B0$(1),B1$(1),B2$,B3$(1),B4$,B5$,B6$,B[ALL]
0250 IVM01A: IOLIST C0$(1),C1$(1),C2$(1)
0300 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0310 APS01A: IOLIST U0$,VENDIMASK$,U2$,U3$,U4$,VENDOMASK$
0320 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0400 REM " --- Parameters
0405 DIM DESCLEN[3]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0415 LET N0$=F0$(16,2),N2$="IV"
0425 FIND (SYS01_DEV,KEY=N0$+"AP00",DOM=9800)IOL=APS01A
0430 LET VENDLEN=NUM(U2$(1,2))
0440 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0445 LET ITEMLEN=NUM(I2$(1,2)),IVPRECISION=NUM(I2$(5,1))
0450 LET DESCLEN[1]=NUM(I2$(9,2)),DESCLEN[2]=NUM(I2$(11,2)),DESCLEN[3]=NUM(I2$(13,2))
0500 REM " --- Initializations
0505 PRECISION IVPRECISION
0510 LET HEADINGS=9
0520 DIM FILES[15],PARAMS$[3],OPTIONS$[7],HEADINGS$[HEADINGS],O[11]
0530 DIM C0$(22),C1$(60),C2$(64)
0540 LET FILES[1]=IVM01_DEV,FILES[10]=IVM10_DEV,FILES[14]=IVM14_DEV
0550 LET FILES[15]=IVM15_DEV
0555 LET PARAMS$[0]=N0$,PARAMS$[1]=I1$,PARAMS$[2]=I2$,PARAMS$[3]=I3$
0560 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$,WHEN$=F0$(7,3),CLOCK$="",H9$=""
0565 LET WIDTH=132,PAGE=0,L9=59,L=L9+1
0570 DIM ITEMTOT[4],REPORTTOT[4],TOTAL[4]
0575 LET DONE=0
0600 REM " --- Resize masks
0610 CALL "SYC.RM",M1$,M1,12,15
0620 CALL "SYC.RM",M2$,M2,8,12
0630 CALL "SYC.RM",M3$,M3,8,12
0700 REM " --- Background
0710 CALL "IVC.IB","BDL","D",3,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0800 REM " --- Process input
0810 CALL "IVC.IB","IL","D",3,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0820 ON V3 GOTO 0830,0800,0800,0800,0830
0830 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
0840 ON V3 GOTO 0850,0830,0830,0830,9900
0850 ON POS(V$="YN") GOTO 0830,0860,0800
0860 LET BEGWHSE$=OPTIONS$[1],ENDWHSE$=OPTIONS$[2]
0870 LET BEGPROD$=OPTIONS$[3],ENDPROD$=OPTIONS$[4],BEGITEM$=OPTIONS$[5]
0880 LET ENDITEM$=OPTIONS$[6],TYPE$=OPTIONS$[7]
0900 REM " --- Print positions
0910 LET O[1]=ITEMLEN+1,O[2]=O[1]+3,O[3]=O[2]+7
0920 LET O[11]=WIDTH-M1,O[10]=O[11]-M3,O[9]=O[10]-M2,O[8]=O[9]-M2
0925 LET O[7]=O[8]-3,O[6]=O[7]-9,O[5]=O[6]-9,O[4]=O[5]-8
0935 LET VENDNAMELEN=WIDTH-(WIDTH-O[4]+O[3])
0940 IF VENDNAMELEN>30 THEN LET VENDNAMELEN=30
0945 GOSUB INITHEADS
0950 REM " --- Position files
0960 CALL "SYC.GA",7,1,"","",STATUS
0965 IF STATUS THEN GOTO 9900
0970 CALL "SYC.NB","Printing",7+ITEMLEN,COLUMN
0980 LET FIRST$=N0$+BEGITEM$+BEGWHSE$
0990 READ (POT24_DEV,KEY=FIRST$,DOM=1000)
1000 REM " --- Get next sort record
1010 LET K$=KEY(POT24_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 LET ITEM$=K$(3,20),WHSE$=K$(23,2),VENDOR$=K$(25,6),RECPTDATE$=K$(31,6)
1040 LET PONUM$=K$(37,7),RECEIVER$=K$(44,7),LINENUM$=K$(51,3)
1060 LET PRODUCT$=""
1070 FIND (IVM01_DEV,KEY=N0$+ITEM$,DOM=1100)IOL=IVM01A
1080 LET PRODUCT$=C2$(1,3)
1100 REM " --- Valid Item/Wh/Product/Type?
1110 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 4000
1120 IF BEGWHSE$<>"" THEN IF WHSE$<BEGWHSE$ THEN GOTO 1400
1130 IF ENDWHSE$<>"" THEN IF WHSE$>ENDWHSE$ THEN GOTO 1450
1140 READ (POT24_DEV)
1150 IF BEGPROD$<>"" THEN IF PRODUCT$<BEGPROD$ THEN GOTO 3900
1160 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 3900
1170 IF TYPE$<>"" THEN IF C2$(53,3)<>TYPE$ THEN GOTO 3900
1180 PRINT @(COLUMN,11),ITEM$(1,ITEMLEN)+" "+WHSE$,
1190 GOTO 1500
1400 REM " --- Skip to beginning whse for this item
1410 READ (POT24_DEV,KEY=K$(1,22)+BEGWHSE$,DOM=3900)
1440 GOTO 3900
1450 REM " --- Skip to next item
1460 READ (POT24_DEV,KEY=K$(1,22)+$FF$,DOM=3900)
1490 GOTO 3900
1500 REM " --- Breaks?
1520 IF VENDOR$<>LASTVEND$ THEN GOSUB VENDBREAK
1530 IF ITEM$<>LASTITEM$ THEN GOSUB ITEMBREAK
2100 REM " --- Retrieve history detail
2210 DIM B0$(25),B1$(48),B3$(22),B[12]
2220 LET B0$(1)=N0$+VENDOR$+PONUM$+RECEIVER$+LINENUM$
2230 FIND (POT14_DEV,KEY=B0$,DOM=3900)IOL=POT14A
2250 LET REQUIRED$=B1$(3,6),UNITMEAS$=B1$(22,2)
2260 LET QTYORD=B[3],QTYREC=B[7],UNITCOST=B[1],EXTENSION=QTYREC*UNITCOST
3000 REM " --- Print detail line
3020 LET NEEDED=1
3030 IF H9$<>"" THEN LET NEEDED=2
3045 IF L+NEEDED>L9 THEN GOSUB 5000
3050 IF H9$<>"" THEN GOSUB 5200
3060 PRINT (7)@(O[1]),WHSE$,@(O[2]),FNF$(VENDOR$(1,VENDLEN),VENDOMASK$),@(O[3]),VENDNAME$,@(O[4]),PONUM$,
3070 IF REQUIRED$<>FILL(6) THEN PRINT (7)@(O[5]),FNB6$(REQUIRED$),
3080 IF RECPTDATE$<>FILL(6) THEN PRINT (7)@(O[6]),FNB6$(RECPTDATE$),
3085 PRINT (7)@(O[7]),UNITMEAS$,@(O[8]),QTYORD:M2$,@(O[9]),QTYREC:M2$,@(O[10]),UNITCOST:M3$,@(O[11]),EXTENSION:M1$
3090 LET L=L+1
3100 REM " --- Accumulate totals
3110 LET ITEMTOT[2]=ITEMTOT[2]+QTYREC
3120 LET ITEMTOT[3]=ITEMTOT[3]+UNITCOST,ITEMTOT[4]=ITEMTOT[4]+EXTENSION
3130 LET REPORTTOT[2]=REPORTTOT[2]+QTYREC
3140 LET REPORTTOT[3]=REPORTTOT[3]+UNITCOST,REPORTTOT[4]=REPORTTOT[4]+EXTENSION
3150 IF POS(B0$(3,13)+B0$(23,3)=TOTALEDPO$,16)=0 THEN LET TOTALEDPO$=TOTALEDPO$+B0$(3,13)+B0$(23,3),ITEMTOT[1]=ITEMTOT[1]+QTYORD,REPORTTOT[1]=REPORTTOT[1]+QTYORD
3900 REM " --- Loop back for next record
3990 GOTO 1000
4000 REM " --- All done
4010 LET DONE=1
4020 GOSUB ITEMBREAK
4040 LET TOTAL$="Report"
4050 FOR CNT=1 TO 4
4060 LET TOTAL[CNT]=REPORTTOT[CNT]
4070 NEXT CNT
4080 GOSUB PRINTTOT
4090 GOTO 9900
5000 REM " --- Report Heading
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5090 RETURN 
5200 REM " --- Item subheading
5210 IF L+1>L9 THEN GOSUB 5000
5220 PRINT (7)H9$
5240 LET L=L+1,H9$=""
5290 RETURN 
5800 REM " --- Initialize HEADINGS$[]
5805 INITHEADS: 
5810 DIM H1$(WIDTH),H2$(WIDTH),H3$(WIDTH),H5$(WIDTH),H6$(WIDTH)
5820 LET H1$="All Item Types"
5830 IF TYPE$<>"" THEN LET H1$="Item Type "+TYPE$
5855 LET X1$="First",X2$="First",X2=5,X3$="From Warehouse: First"
5860 IF BEGITEM$<>"" THEN LET X1$=BEGITEM$
5865 IF BEGPROD$<>"" THEN LET X2$=BEGPROD$,X2=3
5870 IF ENDPROD$="" THEN IF X2=3 THEN LET X2=4
5875 IF BEGWHSE$<>"" THEN LET X3$="From Warehouse: "+BEGWHSE$
5880 LET H2$(1)="From Item: "+X1$,H2$(FNC(X3$,WIDTH))=X3$
5885 LET H2$(WIDTH-X2-13)="From Product: "+X2$
5890 LET X1$="Last",X2$="Last",X3$="To Warehouse: Last"
5910 IF ENDITEM$<>"" THEN LET X1$=ENDITEM$
5920 IF ENDPROD$<>"" THEN LET X2$=ENDPROD$
5930 IF ENDWHSE$<>"" THEN LET X3$="  To Warehouse: "+ENDWHSE$
5935 LET H3$(1)="  To Item: "+X1$,H3$(FNC(X3$,WIDTH))=X3$
5940 LET H3$(WIDTH-X2-13)="  To Product: "+X2$
5945 LET H5$(O[4]+1)="PO",H5$(O[5]+1)="Date",H5$(O[6]+1)="Date"
5950 LET H5$(O[8]+M2-8)="Quantity",H5$(O[9]+M2-8)="Quantity"
5955 LET H5$(O[10]+M2-4)="Unit"
5960 LET H6$(O[0]+1)="Item",H6$(O[1]+1)="Wh",H6$(O[2]+1)="Vendor"
5965 LET H6$(O[4]+1)="Number",H6$(O[5]+1)="Required",H6$(O[6]+1)="Received"
5970 LET H6$(O[7]+1)="UM",H6$(O[8]+M2-7)="Ordered",H6$(O[9]+M2-8)="Received"
5975 LET H6$(O[10]+M2-4)="Cost",H6$(O[11]+M1-9)="Extension"
5980 LET HEADINGS$[2]=H1$,HEADINGS$[4]=H2$,HEADINGS$[5]=H3$
5985 LET HEADINGS$[7]=H5$,HEADINGS$[8]=H6$
5990 RETURN 
6000 REM " --- Item Break
6005 ITEMBREAK: 
6010 IF LASTITEM$="" THEN GOTO 6100
6020 GOSUB VENDBREAK
6030 LET TOTAL$="Item "+LASTITEM$
6040 FOR CNT=1 TO 4
6050 LET TOTAL[CNT]=ITEMTOT[CNT]
6060 NEXT CNT
6080 GOSUB PRINTTOT
6100 IF DONE THEN GOTO 6190
6110 DIM C0$(22),C1$(60),ITEMTOT[4]
6120 LET LASTITEM$=ITEM$,C1$(1)="(Not on File)"
6130 FIND (IVM01_DEV,KEY=N0$+LASTITEM$,DOM=6140)IOL=IVM01A
6140 LET H9$=LASTITEM$(1,ITEMLEN)+" "+FNITEM$(C1$,DESCLEN[1],DESCLEN[2],DESCLEN[3])
6150 LET TOTALEDPO$=""
6190 RETURN 
6200 REM " --- Vendor break
6205 VENDBREAK: 
6300 IF DONE THEN GOTO 6390
6310 DIM VENDNAME$(30)
6320 LET LASTVEND$=VENDOR$,VENDNAME$(1)="(Not on File)"
6330 FIND (APM01_DEV,KEY=N0$+LASTVEND$,DOM=6340)IOL=APM01A
6340 LET VENDNAME$=VENDNAME$(1,VENDNAMELEN)
6390 RETURN 
6900 REM " --- Print total line
6905 PRINTTOT: 
6910 IF L+1>L9 THEN GOSUB 5000
6920 IF TOTAL$="Report" THEN PRINT (7)""
6930 LET L=L+1,TOTAL$="Total For "+FNP$(TOTAL$)
6940 PRINT (7)@(O[8]-LEN(TOTAL$)),TOTAL$,@(O[8]),TOTAL[1]:M2$,@(O[9]),TOTAL[2]:M2$,@(O[10]),TOTAL[3]:M3$,@(O[11]),TOTAL[4]:M1$
6990 RETURN 
8000 REM " --- Functions"
8025 DEF FNB6$(Q$)=Q$(3,2)+"/"+Q$(5,2)+"/"+FNYY21_YY$(Q$(1,2))
8035 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
