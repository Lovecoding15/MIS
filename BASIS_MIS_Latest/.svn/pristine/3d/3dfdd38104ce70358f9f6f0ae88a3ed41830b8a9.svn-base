0010 REM "IVX - Rebuild Beginning Balances (Input Overlay)"
0020 REM "Program IVX.BA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=11
0110 DIM FILES$[FILES],FILEOPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="SYS-01",FILES$[2]="IVM-01",FILES$[3]="IVM-02"
0130 LET FILES$[4]="IVM-03",FILES$[5]="IVM-10",FILES$[6]="IVM-12"
0140 LET FILES$[7]="IVT-04",FILES$[8]="IVM-15",FILES$[9]="IVM-07"
0145 LET FILES$[10]="IVM-17",FILES$[11]="IVT-01"
0150 CALL "SYC.DA",1,1,8,FILES$[ALL],FILEOPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM01_DEV=CHANNELS[2],IVM02_DEV=CHANNELS[3]
0180 LET IVM03_DEV=CHANNELS[4],IVM10_DEV=CHANNELS[5],IVM12_DEV=CHANNELS[6]
0190 LET IVT04_DEV=CHANNELS[7],IVM15_DEV=CHANNELS[8]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$,A2$(1)
0220 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0230 IVM12A: IOLIST C0$(1),C1$,C2$,C[ALL]
0240 IVM17A: IOLIST C0$(1),C1$,C2$,C[ALL]
0250 IVM07A: IOLIST L0$(1),L1$(1),L[ALL]
0260 SYS01T: IOLIST X$,F0$,F1$,F2$,F3$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0280 GLS01A: IOLIST G0$,G1$,G2$,G3$(1),G4$
0310 IVT01A: IOLIST W0$(1),W1$(1),W2$(1),W3$,W[ALL]
0340 IVT04A: IOLIST W0$(1),W1$(1),W2$(1),W3$,W[ALL]
0400 REM " --- Parameters"
0405 DIM P[5],G[1],G3$(325)
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV",LS$="N"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0440 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0450 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1)),P[2]=NUM(I2$(7,2))
0460 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0470 LET G[0]=NUM(G2$(1,2))
0480 IF POS(I3$(17,1)="SL")>0 THEN LET LS$="Y"
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM FILES[15],PARAMS$[3],OPTIONS$[7],L0$(44),L1$(96),L[12]
0520 DIM A0$(22),A2$(64),B0$(24),B1$(64),B[20]
0550 LET FILES[1]=IVM01_DEV,FILES[10]=IVM10_DEV,FILES[14]=IVM14_DEV
0555 LET PARAMS$[0]=N0$,PARAMS$[1]=I1$,PARAMS$[2]=I2$,PARAMS$[3]=I3$,M9$="00"
0560 LET PERIOD$=I4$(1,2),YEAR$=I4$(3,2),INCLUDE$="Y",BEGLOT$="",ENDLOT$=""
0565 LET FILES[15]=IVM15_DEV
0600 REM " --- Additional file opens"
0610 IF LS$="N" THEN GOTO 0700
0620 CALL "SYC.DA",1,9,11,FILES$[ALL],FILEOPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0630 IF STATUS>0 THEN GOTO 9900
0640 LET IVM07_DEV=CHANNELS[9],IVM17_DEV=CHANNELS[10],IVT01_DEV=CHANNELS[11]
0700 REM " --- Background"
0710 PRINT 'SB',@(32,3),"Period:",@(34,4),"Year:",'SF',
0720 CALL "IVC.IB","B","D",5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0730 IF LS$="N" THEN GOTO 0800
0740 PRINT 'SB',@(1,12),"Rebuild Lot/Serial Beginning Balances:",@(11,13),"Beginning Lot/Serial Number:",@(14,14),"Ending Lot/Serial Number:",'SF',
0900 REM 
0990 GOSUB 5000
1000 REM " --- Period"
1010 LET V0$="N",V1$="C",V2$=PERIOD$,V3$=M9$,V0=2,V1=40,V2=3,I0=0
1020 LET V4$="Enter The Period To Rebuild Balances For (1 Through "+STR(G[0])+")"
1030 GOSUB 7000
1040 ON V3 GOTO 1050,1000,3900,1000,3900
1050 IF V<1 OR V>G[0] THEN GOTO 1000
1060 LET PERIOD$=STR(V:M9$),PERIOD=V,DESCRIPTION$=G3$((V-1)*16+27,16)
1070 PRINT @(V1,V2),PERIOD$," ",DESCRIPTION$,
1090 GOTO 3900
1200 REM " --- Year"
1210 LET V0$="D",V1$="CY",V2$=YEAR$,V3$="",V0=2,V1=40,V2=4
1220 LET V4$="Enter The Year To Rebuild Balances For"
1230 GOSUB 7000
1240 ON V3 GOTO 1250,1200,3900,1200,3900
1250 IF V$="" THEN GOTO 1200
1260 LET YEAR$=V$
1270 PRINT @(V1,V2),FNYY21_YY$(YEAR$),
1290 GOTO 3900
1400 REM " --- Process standard input"
1410 CALL "IVC.IB","I","D",5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
1420 ON V3 GOTO 1430,1400,3900,1400,3900
1490 GOTO 3900
1600 REM " --- Rebuild Lot/Serial Beginning Balances?"
1605 IF LS$="N" THEN GOTO 3900
1610 LET V4$="Rebuild Lot/Serial Beginning Balances (Y/N)?"
1620 LET V0$="Y",V1$="C",V2$=INCLUDE$,V3$="",V0=1,V1=40,V2=12
1630 GOSUB 7000
1640 ON V3 GOTO 1650,1600,3900,1600,3900
1650 LET INCLUDE$=V$
1690 GOTO 3900
1800 REM " --- Beginning Lot/Serial Number"
1805 IF LS$="N" THEN GOTO 3900
1810 LET V4$="Enter The Beginning Lot/Serial Number (<F1>=First)",X$=""
1820 LET V0$="S",V1$="KCE",V2$=BEGLOT$,V3$="",V0=P[2],V1=40,V2=13
1825 IF INCLUDE$="N" THEN GOTO 1880
1830 GOSUB 7000
1840 ON V3 GOTO 1860,1850,3900,1800,3900
1850 LET V$=""
1860 LET BEGLOT$=V$,X$="First"
1875 IF BEGLOT$<>"" THEN LET X$=BEGLOT$
1880 PRINT @(V1,V2),X$,'CL',
1890 GOTO 3900
2000 REM " --- Ending Lot/Serial Number"
2005 IF LS$="N" THEN GOTO 3900
2015 LET V4$="Enter The Ending Lot/Serial Number (<F1>=Last)",X$=""
2020 LET V0$="S",V1$="KCE",V2$=ENDLOT$,V3$="",V0=P[2],V1=40,V2=14
2025 IF INCLUDE$="N" THEN GOTO 2080
2030 GOSUB 7000
2040 ON V3 GOTO 2060,2050,3900,2000,3900
2050 LET V$=""
2060 LET ENDLOT$=V$,X$="Last"
2070 IF BEGLOT$<>"" THEN IF ENDLOT$<BEGLOT$ THEN GOTO 2000
2075 IF ENDLOT$<>"" THEN LET X$=ENDLOT$
2080 PRINT @(V1,V2),X$,'CL',
2090 GOTO 3900
3900 REM " --- Next Field"
3905 IF V3=4 THEN GOTO 4000
3910 IF V3<>2 THEN GOTO 3940
3920 IF I0>0 THEN LET I0=I0-1
3930 GOTO 3950
3940 LET I0=I0+1
3960 ON I0 GOTO 1000,1200,1400,1600,1800,2000,3990
3990 GOSUB 5000
4000 REM " --- Correct?"
4010 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
4020 ON V3 GOTO 4030,4000,4000,4000,9900
4030 ON POS(V$="YN") GOTO 4000,4050,1000
4100 REM " --- Update initializations"
4110 LET PERIOD=NUM(PERIOD$),YEAR=FNYY_YEAR(YEAR$)
4120 CALL "SYC.PA",SYS01_DEV,PERIOD,YEAR,WHEN$,X$,STATUS
4150 LET BEGWHSE$=OPTIONS$[1],ENDWHSE$=OPTIONS$[2],BEGPROD$=OPTIONS$[3]
4160 LET ENDPROD$=OPTIONS$[4],BEGITEM$=OPTIONS$[5],ENDITEM$=OPTIONS$[6]
4170 LET TYPE$=OPTIONS$[7],FIRST$=N0$+"C",K$=FIRST$+BEGWHSE$
4175 IF INCLUDE$="N" THEN LET LS$="N"
4180 CALL "SYC.NB","Updating",7+P[0],COLUMN
4190 READ (IVM03_DEV,KEY=K$,DOM=4200)
4200 REM " --- Get next sort record"
4210 LET K$=KEY(IVM03_DEV,END=9900)
4220 IF POS(FIRST$=K$)<>1 THEN GOTO 9900
4230 LET WHSE$=K$(4,2),PRODUCT$=K$(6,3),ITEM$=K$(9)
4300 REM " --- By Warehouse: Valid Warehouse/Product/Item?"
4310 IF ENDWHSE$<>"" THEN IF WHSE$>ENDWHSE$ THEN GOTO 9900
4320 IF BEGPROD$<>"" THEN IF PRODUCT$<BEGPROD$ THEN GOTO 4400
4330 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 4450
4340 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 4500
4350 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 4550
4360 LET X$=WHSE$+" "+PRODUCT$+" "+ITEM$(1,P[0])
4390 GOTO 4600
4400 REM " --- Skip to beginning product for this warehouse'
4410 READ (IVM03_DEV,KEY=K$(1,5)+BEGPROD$,DOM=4900)
4440 GOTO 4900
4450 REM " --- Skip to next warehouse"
4460 READ (IVM03_DEV,KEY=K$(1,5)+$FF$,DOM=4900)
4490 GOTO 4900
4500 REM " --- Skip to beginning item"
4510 READ (IVM03_DEV,KEY=K$(1,6+P)+BEGITEM$(1,P[0]-1),DOM=4900)
4540 GOTO 4900
4550 REM " --- Skip to next product"
4560 READ (IVM03_DEV,KEY=K$(1,6+P)+$FF$,DOM=4900)
4590 GOTO 4900
4600 REM " --- Update IVT-04 beginning balance"
4605 PRINT @(COLUMN,11),X$,
4610 READ (IVM03_DEV)
4615 DIM W0$(32),W1$(96),W2$(16),W[4],C0$(28),C[12]
4620 LET A0$(1)=N0$+ITEM$,B0$(1)=N0$+WHSE$+ITEM$
4625 LET C0$(1)=N0$+WHSE$+ITEM$+YEAR$+PERIOD$,W3$=""
4630 FIND (IVM01_DEV,KEY=A0$,DOM=4900)IOL=IVM01A
4635 FIND (IVM02_DEV,KEY=B0$,DOM=4900)IOL=IVM02A
4640 FIND (IVM12_DEV,KEY=C0$,DOM=4950)IOL=IVM12A
4650 LET W0$(1)=B0$+WHEN$+"00000",LOCATION$=B1$(1,10),QTY=C[0],COST=B[11]
4660 GOSUB 6000
4670 WRITE (IVT04_DEV,KEY=W0$)IOL=IVT04A
4680 IF LS$="N" THEN GOTO 4900
4685 IF INCLUDE$="N" THEN GOTO 4900
4690 READ (IVM07_DEV,KEY=B0$,DOM=4700)
4700 REM " --- Next lot/serial number"
4710 LET K$=KEY(IVM07_DEV,END=4900)
4720 IF POS(B0$=K$)<>1 THEN GOTO 4900
4730 DIM L0$(44),L1$(96),L[12],W0$(52),W1$(96),W2$(16),W[4],C0$(48),C[12]
4735 LET C0$(1)=K$+YEAR$+PERIOD$
4740 READ (IVM07_DEV)IOL=IVM07A
4745 FIND (IVM17_DEV,KEY=C0$,DOM=4750)IOL=IVM17A
4750 LET W0$(1)=K$+WHEN$+"00000",LOCATION$=L1$(1,7),QTY=C[0],COST=L[0]
4760 GOSUB 6000
4770 WRITE (IVT01_DEV,KEY=W0$)IOL=IVT01A
4790 GOTO 4700
4900 REM " --- Loop back for next record"
4990 GOTO 4200
5000 REM " --- Display"
5010 LET DESCRIPTION$="",X1$="First",X2$="Last"
5020 LET V=NUM(PERIOD$,ERR=5030),DESCRIPTION$=G3$((V-1)*16+27,16)
5030 PRINT @(40,3),PERIOD$," ",DESCRIPTION$,'CL',@(40,4),FNYY21_YY$(YEAR$),
5040 CALL "IVC.IB","D","D",5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
5050 IF LS$="N" THEN GOTO 5090
5060 IF BEGLOT$<>"" THEN LET X1$=BEGLOT$
5070 IF ENDLOT$<>"" THEN LET X2$=ENDLOT$
5075 IF INCLUDE$="N" THEN LET X1$="",X2$=""
5080 PRINT @(40,12),INCLUDE$,@(40,13),X1$,'CL',@(40,14),X2$,'CL',
5090 RETURN 
6000 REM " --- Initialize IVT-01/IVT-04 Transaction History Record"
6010 DIM W1$(96),W2$(16),W[4]
6020 LET W1$(1,2)="BB",W1$(29,2)=A2$(4,2),W1$(81,10)=LOCATION$
6030 LET W2$(1,3)=F0$(7,3),W2$(4,3)=F0$(4,3),W2$(7,3)=FNE$(Q$)
6040 LET W2$(11,4)=FID(0),W[0]=QTY,W[1]=COST
6090 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8050 DEF FNE$(Q$)=DATE(0:"%Hz%mz")
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
