0010 REM "IVR - Inventory Price List"
0020 REM "Program IVR.FA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=7
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="SYS-01",FILES$[2]="IVM-01",FILES$[3]="IVM-02"
0130 LET FILES$[4]="IVM-03",FILES$[5]="IVM-10",FILES$[6]="IVM-14"
0140 LET FILES$[7]="IVM-15"
0150 CALL "SYC.DA",1,1,FILES,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM01_DEV=CHANNELS[2],IVM02_DEV=CHANNELS[3]
0180 LET IVM03_DEV=CHANNELS[4],IVM10_DEV=CHANNELS[5],IVM14_DEV=CHANNELS[6]
0190 LET IVM15_DEV=CHANNELS[7]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$(1),A5$,A6$,A[ALL]
0220 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0230 IVM10A: IOLIST X0$(1)
0240 IVM10C: IOLIST X0$(1)
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0400 REM " --- Parameters"
0405 DIM P[5]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0450 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1))
0460 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM FILES[15],PARAMS$[3],OPTIONS$[7],HEADINGS$[8],O[8]
0520 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12]
0530 DIM B0$(24),B1$(64),B[20],TOTAL[3],WAREHOUSE[3],PRODUCT[3],REPORT[3]
0550 LET FILES[1]=IVM01_DEV,FILES[10]=IVM10_DEV,FILES[14]=IVM14_DEV
0555 LET PARAMS$[0]=N0$,PARAMS$[1]=I1$,PARAMS$[2]=I2$,PARAMS$[3]=I3$
0560 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$,WHEN$=F0$(7,3),CLOCK$=""
0565 LET WIDTH=132,PAGE=0,L9=59,L=L9+1,HEADINGS=8,INCLUDE$="N"
0570 LET M9$="-##0.00%",M9=LEN(M9$),DONE=0,FILES[15]=IVM15_DEV
0600 REM " --- Resize masks"
0610 CALL "SYC.RM",M3$,M3,10,15
0620 CALL "SYC.RM",M4$,M4,11,15
0700 REM " --- Background"
0710 PRINT 'SB',@(27,3),"Print Costs:",'SF',
0720 CALL "SYC.WC",1,0,80,0,0,4,0
0770 CALL "IVC.IB","BL","D",5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0780 PRINT @(40,3),INCLUDE$,
0790 CALL "IVC.IB","DL","D",5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0800 REM " --- Sequence"
0805 LET V4$="Include Unit Cost And Margin For Each Item (Y/N)?"
0810 LET V0$="Y",V1$="CE",V2$=INCLUDE$,V3$="",V0=1,V1=40,V2=3
0815 GOSUB 7000
0820 ON V3 GOTO 0825,0800,0800,0800,0865
0825 LET INCLUDE$=V$
0850 REM " --- Process input"
0855 CALL "IVC.IB","IL","D",5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0860 ON V3 GOTO 0865,0850,0800,0850,0865
0865 PRINT @(40,3),INCLUDE$,
0870 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
0875 ON V3 GOTO 0880,0870,0870,0870,9900
0880 ON POS(V$="YN") GOTO 0870,0885,0800
0885 LET BEGWHSE$=OPTIONS$[1],ENDWHSE$=OPTIONS$[2],BEGPROD$=OPTIONS$[3]
0890 LET ENDPROD$=OPTIONS$[4],BEGITEM$=OPTIONS$[5],ENDITEM$=OPTIONS$[6]
0895 LET TYPE$=OPTIONS$[7]
0900 REM " --- Print positions and headings"
0910 GOSUB 5600
0950 REM " --- Position files"
0955 CALL "SYC.GA",7,1,"","",STATUS
0960 IF STATUS THEN GOTO 9900
0965 CALL "SYC.NB","Printing",7+P[0],COLUMN
0970 LET FIRST$=N0$+"C",K$=FIRST$+BEGWHSE$
0975 IF BEGWHSE$<>"" THEN LET K$=K$+BEGPROD$
0980 IF K$<>FIRST$ THEN LET K$=K$+BEGITEM$
0990 READ (IVM03_DEV,KEY=K$,DOM=1000)
1000 REM " --- Get next sort record"
1010 LET K$=KEY(IVM03_DEV,END=4000)
1020 IF POS(FIRST$=K$)<>1 THEN GOTO 4000
1040 LET WHSE$=K$(4,2),PRODUCT$=K$(6,3),ITEM$=K$(9)
1100 REM " --- Valid Warehouse/Product/Item?"
1110 IF ENDWHSE$<>"" THEN IF WHSE$>ENDWHSE$ THEN GOTO 4000
1120 IF BEGPROD$<>"" THEN IF PRODUCT$<BEGPROD$ THEN GOTO 1200
1130 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 1250
1140 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 1300
1150 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 1350
1190 GOTO 1400
1200 REM " --- Skip to beginning product for this warehouse"
1210 READ (IVM03_DEV,KEY=K$(1,5)+BEGPROD$,DOM=3900)
1240 GOTO 3900
1250 REM " --- Skip to next warehouse"
1260 READ (IVM03_DEV,KEY=K$(1,5)+$FF$,DOM=3900)
1290 GOTO 3900
1300 REM " --- Skip to beginning item"
1310 READ (IVM03_DEV,KEY=K$(1,8)+BEGITEM$(1,P[0]-1),DOM=3900)
1340 GOTO 3900
1350 REM " --- Skip to next product"
1360 READ (IVM03_DEV,KEY=K$(1,8)+$FF$,DOM=3900)
1390 GOTO 3900
1400 REM " --- Level breaks?"
1410 READ (IVM03_DEV)
1420 PRINT @(COLUMN,11),WHSE$," ",PRODUCT$," ",ITEM$(1,P[0]),
1430 IF WHSE$<>T0$ THEN GOSUB 6000
1440 IF PRODUCT$<>T1$ THEN GOSUB 6200
1500 REM " --- Retrieve item"
1510 LET A0$(1)=N0$+ITEM$
1520 FIND (IVM01_DEV,KEY=A0$,DOM=3900)IOL=IVM01A
1530 IF TYPE$<>"" THEN IF A2$(53,3)<>TYPE$ THEN GOTO 3900
1540 LET DESCRIPTION$=FNITEM$(A1$,P[3],P[4],P[5])
1600 REM " --- Retrieve warehouse"
1610 DIM ITEM[3]
1620 LET B0$(1)=N0$+WHSE$+ITEM$,X$=""
1630 FIND (IVM02_DEV,KEY=B0$,DOM=3900)IOL=IVM02A
1640 LET ITEM[0]=1,ITEM[1]=B[10],ITEM[2]=B[9],ITEM[3]=B[11]
1650 IF INCLUDE$="N" THEN GOTO 2000
1660 LET MARGIN=0
1670 IF B[9]<>0 THEN LET MARGIN=100-((B[11]*100)/B[9])
1680 LET MARGIN=MIN(999.99,MAX(-999.99,MARGIN))
1690 LET X$=STR(B[11]:M3$)+" "+STR(MARGIN:M9$)
2000 REM " --- Print detail line"
2010 IF L+1+SPLIT>L9 THEN GOSUB 5000
2020 IF H9$<>"" THEN GOSUB 5200
2030 LET D$=DESCRIPTION$,L=L+1+SPLIT
2040 IF SPLIT>0 THEN LET D$=""
2050 PRINT (7)@(O[0]),A0$(3,P[0]),@(O[1]),D$,@(O[2]),A2$(4,2),@(O[3]),ITEM[1]:M4$,@(O[4]),B1$(54,2),@(O[5]),ITEM[2]:M4$,@(O[6]),B1$(52,2),@(O[7]),X$
2060 IF SPLIT>0 THEN PRINT (7)@(O[0]+3),DESCRIPTION$
3000 REM " --- Accumulate totals"
3010 FOR X=0 TO 3
3020 LET PRODUCT[X]=PRODUCT[X]+ITEM[X],WAREHOUSE[X]=WAREHOUSE[X]+ITEM[X]
3030 LET REPORT[X]=REPORT[X]+ITEM[X]
3040 NEXT X
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4010 LET DONE=1
4020 GOSUB 6000
4030 LET TOTAL$="Report",TOTAL[0]=REPORT[0]
4040 LET TOTAL[1]=REPORT[1],TOTAL[2]=REPORT[2],TOTAL[3]=REPORT[3]
4050 GOSUB 6900
4090 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+1
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5090 RETURN 
5200 REM " --- Product subheading"
5210 IF L+3<L9 THEN GOTO 5240
5220 GOSUB 5000
5230 GOTO 5250
5240 PRINT (7)""
5245 LET L=L+1
5250 PRINT (7)H9$
5260 PRINT (7)""
5270 LET L=L+2,H9$=""
5290 RETURN 
5600 REM " --- Print positions"
5610 DIM O[8]
5620 LET O[1]=P[0]+1,O[2]=O[1]+P[3]+P[4]+P[5]+1,O[3]=O[2]+3,O[4]=O[3]+M4+2
5630 LET O[5]=O[4]+6,O[6]=O[5]+M4+2,O[7]=O[6]+2,O[8]=O[7],SPLIT=0
5640 IF INCLUDE$="N" THEN GOTO 5690
5650 LET O[7]=O[6]+5,O[8]=O[7]+M3+1
5690 IF O[8]+M9<WIDTH THEN GOTO 5800
5700 REM " --- Must split detail line"
5710 DIM O[8]
5720 LET O[8]=WIDTH-1,O[7]=WIDTH-1,SPLIT=1
5730 IF INCLUDE$="Y" THEN LET O[8]=WIDTH-M9,O[7]=O[8]-M3-1
5740 LET O[6]=O[7]-4,O[5]=O[6]-M4-3,O[4]=O[5]-4,O[3]=O[4]-M4-3,O[2]=O[3]-4
5800 REM " --- Initialize HEADINGS$"
5810 DIM H1$(WIDTH),H2$(WIDTH),H6$(WIDTH),H7$(WIDTH)
5825 LET X1$="First",X2$="First",X2=5,X3$="All Item Types"
5830 IF BEGITEM$<>"" THEN LET X1$=BEGITEM$
5840 IF BEGPROD$<>"" THEN LET X2$=BEGPROD$,X2=3
5850 IF ENDPROD$="" THEN IF X2=3 THEN LET X2=4
5860 LET H1$(1)="From Item: "+X1$,H1$(WIDTH-X2-13)="From Product: "+X2$
5865 IF TYPE$<>"" THEN LET X3$="Item Type "+TYPE$
5870 LET X1$="Last",X2$="Last"
5875 LET H2$(1)="  To Item: "+X1$,H2$(FNC(X3$,WIDTH))=X3$
5880 LET H2$(WIDTH-X2-13)="  To Product: "+X2$
5890 LET H6$(O[3]+M4-10)="----- Prior -----"
5900 LET H6$(O[5]+M4-10)="---- Current ----",H6$(O[7]+M3-4)="Unit"
5910 LET H7$(O[0]+1)="Item",H7$(O[1]+1)="Description",H7$(O[2]+1)="UM"
5920 LET H7$(O[3]+M3-10)="List Price / Code"
5930 LET H7$(O[5]+M3-10)="List Price / Code"
5940 IF INCLUDE$="Y" THEN LET H7$(O[7]+M3-4)="Cost",H7$(O[8]+3)="Margin"
5980 LET HEADINGS$[3]=H1$,HEADINGS$[4]=H2$,HEADINGS$[6]=H6$,HEADINGS$[7]=H7$
5990 RETURN 
6000 REM " --- Warehouse Break"
6010 IF T0$="" THEN GOTO 6100
6020 GOSUB 6200
6030 LET TOTAL$="Warehouse "+T0$,TOTAL[0]=WAREHOUSE[0]
6040 LET TOTAL[1]=WAREHOUSE[1],TOTAL[2]=WAREHOUSE[2],TOTAL[3]=WAREHOUSE[3]
6050 IF WAREHOUSE[0]>0 THEN GOSUB 6900
6100 DIM X0$(32),WAREHOUSE[3]
6110 LET T0$=WHSE$,X0$(6,24)="(Not on File)"
6115 IF DONE=0 THEN LET L=L9+1
6120 FIND (IVM10_DEV,KEY=N0$+"C"+T0$,DOM=6130)IOL=IVM10C
6130 LET X$="Warehouse "+T0$+" "+FNP$(X0$(6,24))
6140 LET HEADINGS$[3]=H1$,HEADINGS$[3](FNC(X$,WIDTH),LEN(X$))=X$
6190 RETURN 
6200 REM " --- Product break"
6210 IF T1$="" THEN GOTO 6300
6220 LET TOTAL$="Product "+T1$,TOTAL[0]=PRODUCT[0]
6230 LET TOTAL[1]=PRODUCT[1],TOTAL[2]=PRODUCT[2],TOTAL[3]=PRODUCT[3]
6250 IF PRODUCT[0]>0 THEN GOSUB 6900
6300 DIM X0$(32),PRODUCT[3]
6310 LET T1$=PRODUCT$,X0$(7,20)="(Not on File)"
6320 FIND (IVM10_DEV,KEY=N0$+"A"+T1$,DOM=6330)IOL=IVM10A
6330 LET H9$="Product Type "+T1$+" "+X0$(7,20)
6390 RETURN 
6900 REM " --- Print total line"
6910 IF L+2>L9 THEN GOSUB 5000
6915 LET L=L+2,X$="",COST=0,PRIPRICE=0,CURPRICE=0,MARGIN=0
6920 LET TOTAL$="Averages For "+FNP$(TOTAL$)
6925 IF TOTAL[0]=0 THEN GOTO 6950
6930 LET COST=TOTAL[3]/TOTAL[0],CURPRICE=TOTAL[2]/TOTAL[0]
6935 IF TOTAL[2]<>0 THEN LET MARGIN=100-((TOTAL[3]*100)/TOTAL[2])
6940 LET MARGIN=MIN(999.99,MAX(-999.99,MARGIN)),PRIPRICE=TOTAL[1]/TOTAL[0]
6950 LET X$=STR(COST:M3$)+" "+STR(MARGIN:M9$)
6960 IF INCLUDE$="N" THEN LET X$=""
6970 PRINT (7)""
6980 PRINT (7)@(O[3]-2-LEN(TOTAL$)),TOTAL$,@(O[3]),PRIPRICE:M4$,@(O[5]),CURPRICE:M4$,@(O[7]),X$
6990 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
