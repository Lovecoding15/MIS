0010 REM "IVR - Item Detail Listing (Input Overlay)"
0020 REM "Program IVR.RA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.2 - 01Jan96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "25Jun96 WGH: Print correct dates (510,555-570,2715,2725-2735)"
0032 REM "15Jul96 JJD: Include date parameters when run from Item Maintenance (60,580)"
0033 REM "02Aug96 WGH: Don't skip warehouse and vendor info when not printing comments (1720,1910)"
0034 REM "16Sep96 JAL: Pagination, return to item maintenance after hardcopy and print correct buyer code (550,575,2715,5360)"
0035 REM "23Oct96 JAL: Committed, Available and On Order quantities are reversed (2610,2630,2640)"
0036 REM "29Jan97 JAL: Error 41/1670 when more than 70 synonyms (5260)"
0040 REM 
0050 SETERR 9000
0055 SETESC 9000
0060 ON O0 GOTO 0070,0500
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=15
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0115 LET FILES$[1]="SYS-01",FILES$[2]="IVM-01",FILES$[3]="IVM-02"
0120 LET FILES$[4]="IVM-03",FILES$[5]="IVM-09",FILES$[6]="IVM-10"
0125 LET FILES$[7]="IVM-12",FILES$[8]="IVM-13",FILES$[9]="IVM-14"
0130 LET FILES$[10]="IVM-24",FILES$[11]="IVM-15"
0150 CALL "SYC.DA",1,1,11,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0155 IF STATUS>0 THEN GOTO 9900
0160 LET SYS01_DEV=CHANNELS[1],IVM01_DEV=CHANNELS[2],IVM02_DEV=CHANNELS[3]
0165 LET IVM03_DEV=CHANNELS[4],IVM09_DEV=CHANNELS[5],IVM10_DEV=CHANNELS[6]
0170 LET IVM12_DEV=CHANNELS[7],IVM13_DEV=CHANNELS[8],IVM14_DEV=CHANNELS[9]
0175 LET IVM24_DEV=CHANNELS[10],IVM15_DEV=CHANNELS[11]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$,A5$,A6$,A[ALL]
0220 IVM02A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0240 IVM12A: IOLIST C0$(1),C1$,C2$,C[ALL]
0250 IVM05A: IOLIST B0$(1),B1$(1),B2$(1),B[ALL]
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0275 ARS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$
0280 APS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$
0285 GLS01A: IOLIST G0$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0290 IVM09A: IOLIST C0$(1),C1$(1)
0300 GLM01A: IOLIST B0$(1),B1$(1)
0305 APM01A: IOLIST C0$(1),C1$(1)
0310 IVM10A: IOLIST X0$(1)
0330 IVM10C: IOLIST X0$(1)
0340 IVM10F: IOLIST X0$(1)
0380 ARM10D: IOLIST X0$(1)
0390 IVM13A: IOLIST X0$(1),X1$(1)
0395 IVM15A: IOLIST X0$(1),X1$(1)
0400 REM " --- Parameters"
0405 DIM P[8],G[4],INFO$[20]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0415 LET N0$=F0$(16,2),N2$="IV",LF$="N",LS$="N",MF$="N",MAXROW=15
0420 LET AR$="N",AP$="N",GL$="N",DI$="N"
0425 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0430 LET G[0]=NUM(G2$(1,2)),G[3]=NUM(G2$(7,2)),G[4]=NUM(G2$(9,2))
0435 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0437 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1)),P[2]=NUM(I2$(7,2))
0440 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0443 LET P[6]=NUM(I4$(1,2)),P[7]=FNYY_YEAR(I4$(3,2)),P[8]=NUM(I2$(3,2))
0445 CALL "SYC.VA","AR",INFO$[ALL]
0447 LET AR$=INFO$[20]
0450 CALL "SYC.VA","AP",INFO$[ALL]
0453 LET AP$=INFO$[20]
0455 CALL "SYC.VA","GL",INFO$[ALL]
0457 LET GL$=INFO$[20]
0460 IF GL$="N" THEN GOTO 0470
0463 CALL "SYC.VA",N2$,INFO$[ALL]
0465 LET GL$=INFO$[9]
0470 IF AR$="N" THEN GOTO 0480
0473 FIND (SYS01_DEV,KEY=N0$+"AR00",DOM=9800)IOL=ARS01A
0475 LET CUSTLEN=NUM(P2$(1,2)),CUSTMASK$=M0$,DI$=P3$(11,1)
0477 IF GL$="N" THEN LET DI$="N"
0480 IF AP$="N" THEN GOTO 0500
0485 FIND (SYS01_DEV,KEY=N0$+"AP00",DOM=9800)IOL=APS01A
0490 LET VENDLEN=NUM(P2$(1,2)),VENDMASK$=M0$
0500 REM " --- Initializations"
0510 DIM DATEP[8],DATEW[8]
0540 LET M1=LEN(M1$),M2=LEN(M2$),M3=LEN(M3$),M4=LEN(M4$),M5=LEN(M5$)
0545 LET G5=LEN(G5$),MONTHS$=G3$(235,G[0]*3),M6$="###0.00-",ITEM$=""
0550 LET INCLUDE$="Y",NF$="(Not On File)",M9$="##0-"
0555 LET DATEP[1]=29,DATEP[2]=32,DATEP[3]=35,DATEP[4]=38,H1$=F5$
0560 LET DATEP[5]=41,DATEP[6]=50,DATEP[7]=44,DATEP[8]=47
0565 LET DATEW[1]=28,DATEW[2]=31,DATEW[3]=34,DATEW[4]=37
0570 LET DATEW[5]=43,DATEW[6]=46,DATEW[7]=40,DATEW[8]=49
0575 IF O0$="" THEN LET O0$="SYS.AA"
0580 ON O0 GOTO 0600,0900
0600 REM " --- Other file opens"
0610 IF AP$="Y" THEN LET FILES$[12]="IVM-05",FILES$[13]="APM-01"
0620 IF DI$="N" THEN IF GL$="Y" THEN LET FILES$[14]="GLM-01"
0630 IF DI$="Y" THEN IF AR$="Y" THEN LET FILES$[15]="ARM-10"
0640 CALL "SYC.DA",1,12,15,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0650 IF STATUS>0 THEN GOTO 9900
0660 LET IVM05_DEV=CHANNELS[12],APM01_DEV=CHANNELS[13]
0670 LET GLM01_DEV=CHANNELS[14],ARM10_DEV=CHANNELS[15]
0680 REM " --- Input initializations"
0685 DIM FILES[15],PARAMS$[3],OPTIONS$[7]
0690 LET FILES[1]=IVM01_DEV,FILES[10]=IVM10_DEV,FILES[14]=IVM14_DEV
0695 LET PARAMS$[0]=N0$,PARAMS$[1]=I1$,PARAMS$[2]=I2$,PARAMS$[3]=I3$
0697 LET FILES[15]=IVM15_DEV
0700 REM " --- Background"
0710 PRINT 'SB',@(22,3),"Include Comments:",'SF',
0720 CALL "SYC.WC",1,0,80,0,0,4,0
0770 CALL "IVC.IB","BL","DW",5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0780 PRINT @(40,3),SELECTION$,
0790 CALL "IVC.IB","DL","DW",5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0800 REM " --- Sequence"
0805 LET V4$="Include Comments For Each Item (Y/N)?"
0810 LET V0$="Y",V1$="CE",V2$=INCLUDE$,V3$="",V0=1,V1=40,V2=3
0815 GOSUB 7000
0820 ON V3 GOTO 0825,0800,0800,0800,0865
0825 LET INCLUDE$=V$
0850 REM " --- Process input"
0855 CALL "IVC.IB","IL","DW",5,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0860 ON V3 GOTO 0865,0850,0800,0850,0865
0865 PRINT @(40,3),INCLUDE$,
0870 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
0875 ON V3 GOTO 0880,0870,0870,0870,9900
0880 ON POS(V$="YN") GOTO 0870,0885,0800
0885 LET BEGPROD$=OPTIONS$[3],ENDPROD$=OPTIONS$[4],BEGITEM$=OPTIONS$[5]
0890 LET ENDITEM$=OPTIONS$[6],TYPE$=OPTIONS$[7]
0900 REM " --- Report Initializations"
0905 PRECISION P[1]
0910 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A6$(G[4]*5),A[12]
0915 DIM DATES$[8](8),ALTSUP$(79-(14+P[0]+1)),X0$(32),X1$(30),HEADINGS$[4]
0920 LET WIDTH=80,PAGE=0,L9=59,L=L9+1,HEADINGS=2,PRODUCT$="",CLASS$=""
0925 LET HEADINGS$[0]=F4$,HEADINGS$[1]=H1$
0930 LET WHEN$=F0$(7,3),CLOCK$="",O=WIDTH-MAX(M2,MAX(M3,M4))-3
0935 CALL "SYC.GA",7,1,"","",STATUS
0940 IF STATUS THEN GOTO 4000
0945 CALL "SYC.NB","Printing",P[0],COLUMN
0950 REM " --- Position files"
0970 LET K$=N0$+BEGITEM$
0980 READ (IVM01_DEV,KEY=K$,DOM=1000)
0990 GOTO 1030
1000 REM " --- Next item"
1010 LET K$=KEY(IVM01_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 IF ENDITEM$<>"" THEN IF K$(3)>ENDITEM$ THEN GOTO 4000
1040 PRINT @(COLUMN,11),K$(3,P[0]),
1050 READ (IVM01_DEV,KEY=K$)IOL=IVM01A
1060 IF BEGPROD$<>"" THEN IF A2$(1,3)<BEGPROD$ THEN GOTO 3900
1070 IF ENDPROD$<>"" THEN IF A2$(1,3)>ENDPROD$ THEN GOTO 3900
1080 LET HEADINGS$[3]=" Item Number: "+A0$(3),L=L9+1
1090 LET HEADINGS$[4]=" Description: "+A1$(1,P[3])+" "+A1$(P[3]+1,P[4])+" "+A1$(P[3]+P[4]+1,P[5])
1100 REM " --- IVM-01 Master Info"
1110 LET X$="Item Information",PRODUCT$=NF$,CLASS$=NF$
1120 GOSUB 5100
1130 FIND (IVM10_DEV,KEY=N0$+"A"+A2$(1,3),DOM=1140)IOL=IVM10A
1135 LET PRODUCT$=X0$(7,20)
1140 FIND (IVM13_DEV,KEY=N0$+A2$(21,3),DOM=1150)IOL=IVM13A
1145 LET CLASS$=X1$(1,20)
1150 PRINT (7)"Product Type: ",A2$(1,3)," ",PRODUCT$,@(44),"Sale UM: ",A2$(4,2),@(62),"Sales Analysis: ",A2$(18,1)
1155 PRINT (7)"  Item Class: ",A2$(21,3)," ",CLASS$,@(40),"Purchase UM: ",A2$(6,2),@(59),"Lotted/Serialized: ",A2$(19,1)
1160 PRINT (7)"   Item Type: ",A2$(53,3)," ",TYPE$,@(45),"Weight: ",A[1]:M6$,@(65),"Inventoried: ",A2$(20,1)
1165 PRINT (7)"   MSR Price: ",A[2]:M4$,@(34),"Conversion Factor: ",A[0]:M5$,@(67),"Taxable: ",A2$(8,1)
1170 PRINT (7)"    UPC Code: ",A3$(1,20),@(43),"Bar Code: ",A3$(21,20)
1175 LET X$="Alternate/Superceded/Not Used",ALTSUP$(1)="",L=L+5
1180 GOSUB 5100
1185 IF FNP$(A4$(2))="" THEN GOTO 1220
1190 LET A0$(3)=A4$(2)
1200 FIND (IVM01_DEV,KEY=A0$,DOM=1220)IOL=IVM01A
1205 LET ALTSUP$(1)=FNITEM$(A1$,P[3],P[4],P[5])
1210 READ (IVM01_DEV,KEY=K$)IOL=IVM01A
1220 PRINT (7)"Code: ",A4$(1,1)," Item: ",A4$(2,P[0])," ",ALTSUP$
1225 LET L=L+1
1230 IF A2$(24,1)="W" THEN GOTO 1300
1240 LET BUYER$=A2$(9,3),VENDOR$="",ABC$=A2$(25,1),EOQ$=A2$(26,1)
1245 LET ORDPNT$=A2$(27,1),SAFETY$=A2$(28,1),LEADTIME=A[7],MAXQTY=A[3]
1250 LET ORDPNT=A[4],SAFETY=A[5],EOQ=A[6]
1260 IF AP$="Y" THEN LET VENDOR$=A2$(12,6)
1270 GOSUB 5300
1300 REM " --- Print transaction dates"
1310 DIM DATES$[9](8)
1320 LET X$="Last Transaction Dates"
1330 GOSUB 5100
1340 FOR X=1 TO 8
1350 IF FNP$(A2$(DATEP[X],3))<>"" THEN LET DATES$[X](1)=FNB$(A2$(DATEP[X],3))
1360 NEXT X
1370 PRINT (7)"Receipt: ",DATES$[1],@(20),"Sold: ",DATES$[3],@(35),"Adjustment: ",DATES$[5],@(57),"Transfer In: ",DATES$[7]
1380 PRINT (7)"  Built: ",DATES$[2],@(18),"Issued: ",DATES$[4],@(37),"Returned: ",DATES$[6],@(56),"Transfer Out: ",DATES$[8]
1390 LET L=L+2
1400 REM " --- GL accounts"
1410 IF GL$="N" THEN GOTO 1560
1420 IF DI$="Y" THEN GOTO 1560
1430 DIM BUFFER$[6](55),B0$(12),B1$(35)
1440 FOR X=1 TO 6
1450 IF FNP$(A6$((X-1)*G[4]+1))="" THEN GOTO 1490
1460 LET B0$(1)=N0$+A6$((X-1)*G[4]+1),B1$(1)=NF$
1470 FIND (GLM01_DEV,KEY=B0$,DOM=1480)IOL=GLM01A
1480 LET BUFFER$[X](1)=FNF$(B0$(3,G[3]),G5$)+" "+B1$
1490 NEXT X
1500 LET X$="General Ledger Accounts"
1510 GOSUB 5100
1520 PRINT (7)"              Inventory: ",BUFFER$[1]
1530 PRINT (7)"     Cost Of Goods Sold: ",BUFFER$[2]
1535 PRINT (7)"              Purchases: ",BUFFER$[3]
1540 PRINT (7)"Purchase Price Variance: ",BUFFER$[4]
1550 PRINT (7)"   Inventory Adjustment: ",BUFFER$[5]
1555 PRINT (7)"        COGS Adjustment: ",BUFFER$[6]
1560 LET L=L+5
1570 LET M=L9-L-1,R=1,C=-29
1580 DIM BUFFER$[M+1](80)
1590 READ (IVM24_DEV,KEY=A0$,DOM=1600)
1600 REM " --- Synonyms"
1610 LET K$=KEY(IVM24_DEV,END=1700)
1620 IF POS(A0$=K$)<>1 THEN GOTO 1700
1630 READ (IVM24_DEV)
1640 LET C=C+30
1650 IF C>61 THEN LET R=R+1,C=1
1660 IF R>M THEN GOSUB 5200
1670 LET BUFFER$[R](C)=K$(23)
1690 GOTO 1600
1700 REM " --- Position comments file"
1710 IF R>0 THEN GOSUB 5200
1720 IF INCLUDE$="N" THEN GOTO 1900
1730 DIM C0$(24),C1$(48)
1740 LET X$="Comments"
1750 GOSUB 5100
1760 LET FIRST$=A0$,X$=""
1790 READ (IVM09_DEV,KEY=FIRST$,DOM=1800)
1800 REM " --- Next comment record"
1810 LET K$=KEY(IVM09_DEV,END=1900)
1820 IF POS(FIRST$=K$)<>1 THEN GOTO 1900
1830 READ (IVM09_DEV)IOL=IVM09A
1840 IF L+1<L9 THEN GOTO 1870
1845 GOSUB 5000
1850 LET X$="Comments"
1855 GOSUB 5100
1870 PRINT (7)C0$(23)," ",C1$
1880 LET L=L+1
1890 GOTO 1800
1900 REM " --- Position warehouse xref file"
1910 LET FIRST$=N0$+"G"+A0$(3),L=L9+1
1990 READ (IVM03_DEV,KEY=FIRST$,DOM=2000)
2000 REM " --- Next warehouse record"
2010 LET K$=KEY(IVM03_DEV,END=2900)
2020 IF POS(FIRST$=K$)<>1 THEN GOTO 2900
2025 READ (IVM03_DEV)
2030 DIM B0$(24),B1$(64),B[20]
2040 LET B0$(1)=K$(1,2)+K$(24,2)+K$(4,20),NEEDED=31
2050 LET X0$(1)=B0$(1,2)+"C"+B0$(3,2),X0$(6)=NF$
2055 IF A2$(24,1)="W" THEN LET NEEDED=NEEDED+6
2060 FIND (IVM02_DEV,KEY=B0$,DOM=2800)IOL=IVM02A
2070 FIND (IVM10_DEV,KEY=X0$(1,5),DOM=2080)IOL=IVM10C
2080 LET X$="Warehouse "+X0$(4,2)+" "+FNP$(X0$(6,24))
2090 IF L+NEEDED>L9 THEN GOSUB 5000
2100 REM " --- Warehouse fields"
2110 LET DV$=""
2120 IF FNP$(B1$(16,3))<>"" THEN LET PHYSICAL$=FNB$(B1$(16,3)) ELSE LET PHYSICAL$=""
2130 IF DI$="N" THEN GOTO 2200
2140 IF AR$="N" THEN GOTO 2200
2150 LET X0$(1)=N0$+"D"+B1$(13,2),X0$(6)=NF$
2160 FIND (ARM10_DEV,KEY=X0$(1,5),DOM=2170)IOL=ARM10D
2170 LET DV$="Distribution Code: "+B1$(13,2)+" "+X0$(6,20)
2200 REM " --- Warehouse information"
2210 GOSUB 5100
2220 PRINT (7)@(O-12),"Cycle Code: ",B1$(11,2)
2230 PRINT (7)@(9),"Location: ",B1$(1,10),@(O-10),"Selected: ",B1$(15,1)
2240 PRINT (7)DV$,@(O-15),"Last Physical: ",PHYSICAL$
2245 IF A2$(24,1)<>"W" THEN GOTO 2300
2250 REM " --- Stocking information"
2260 LET BUYER$=B1$(19,3),VENDOR$="",ABC$=B1$(56,1),EOQ$=B1$(57,1)
2270 LET ORDPNT$=B1$(58,1),SAFETY$=B1$(59,1),LEADTIME=B[7],MAXQTY=B[3]
2280 LET ORDPNT=B[4],SAFETY=B[5],EOQ=B[6]
2285 IF AP$="Y" THEN LET VENDOR$=B1$(22,6)
2290 GOSUB 5300
2300 REM " --- Prices/Costs"
2310 LET X$="Prices",L=L+3
2320 GOSUB 5100
2330 PRINT (7)@(5),"Current List: ",B[9]:M4$," ",B1$(52,2),@(O-12),"Prior List: ",B[10]:M4$," ",B1$(54,2)
2340 LET X$="Costs",L=L+1
2350 GOSUB 5100
2360 PRINT (7)@(8),"Unit Cost: ",B[11]:M3$,@(O-14),"Average Cost: ",B[12]:M3$
2370 PRINT (7)@(6),"Landed Cost: ",B[15]:M3$,@(O-15),"Standard Cost: ",B[13]:M3$
2380 PRINT (7)@(5),"Last PO Cost: ",B[16]:M3$,@(O-18),"Replacement Cost: ",B[14]:M3$
2390 LET L=L+3
2400 REM " --- Initializations for period display"
2410 DIM BUFFER$[4],QTY[4,10],C0$(28),C[12]
2420 LET P=P[6]+1,Y=P[7]
2430 IF P>G[0] THEN LET P=1,Y=Y+1
2500 REM " --- Retrieve period records"
2510 FOR X=1 TO 4
2520 LET BUFFER$[X]=MONTHS$((P-1)*3+1,3)+" "+FNYEAR_YY$(Y)
2530 LET C0$(1)=B0$+FNYEAR_YY21$(Y)+STR(P:"00"),P=P-1
2540 IF P<1 THEN LET P=G[0],Y=Y-1
2550 FIND (IVM12_DEV,KEY=C0$,DOM=2590)IOL=IVM12A
2560 LET QTY[X,1]=C[0],QTY[X,2]=C[1],QTY[X,3]=C[2],QTY[X,4]=C[3]
2570 LET QTY[X,5]=C[4],QTY[X,6]=C[6],QTY[X,7]=C[7],QTY[X,8]=C[5]
2580 LET QTY[X,9]=C[8],QTY[X,10]=C[0]+C[1]+C[2]-C[3]-C[4]+C[5]+C[6]-C[7]+C[8]
2590 NEXT X
2600 REM " --- Print status"
2610 LET X$="Item Status",X=B[0]-B[2]
2620 GOSUB 5100
2630 PRINT (7)@(10),"On Hand: ",B[0]:M2$,@(O-10),"On Order: ",B[1]:M2$
2640 PRINT (7)@(8),"Committed: ",B[2]:M2$,@(O-21),"Last Physical Count: ",B[8]:M2$
2650 PRINT (7)@(8),"Available: ",X:M2$
2660 LET X$="",L=L+3
2670 GOSUB 5100
2680 PRINT (7)@(13),"|    Last",@(26),"|",@(32),BUFFER$[1],@(39),"|",@(45),BUFFER$[2],@(52),"|",@(58),BUFFER$[3],@(WIDTH-8),BUFFER$[4]
2690 DIM BUFFER$[9]
2700 LET BUFFER$[0]="Beginning",BUFFER$[1]="Received",BUFFER$[2]="Built"
2705 LET BUFFER$[3]="Sold",BUFFER$[4]="Issued",BUFFER$[5]="Transfer In"
2710 LET BUFFER$[6]="Transfer Out",BUFFER$[7]="Adjustments"
2715 LET BUFFER$[8]="Returns",BUFFER$[9]="Ending",L=L+11
2720 FOR X=1 TO 10
2725 LET X$=""
2730 IF X>1 AND X<10 THEN LET X$=B1$(DATEW[X-1],3)
2735 IF FNP$(X$)<>"" THEN LET X$=FNB$(X$)
2740 PRINT (7)@(12-LEN(BUFFER$[X-1])),BUFFER$[X-1],@(13),"|",@(16),X$,@(26),"|",@(39-M2),QTY[1,X]:M2$,@(39),"|",@(52-M2),QTY[2,X]:M2$,@(52),"|",@(65-M2),QTY[3,X]:M2$,@(65),"|",@(WIDTH-M2-1),QTY[4,X]:M2$
2745 NEXT X
2800 REM " --- Loop back for next warehouse record"
2890 GOTO 2000
2900 REM " --- Position vendor xref"
2910 IF AP$="N" THEN GOTO 3900
2920 LET FIRST$=N0$+"H"+A0$(3),L=L9+1
2990 READ (IVM03_DEV,KEY=FIRST$,DOM=3000)
3000 REM " --- Next vendor xref"
3010 LET K$=KEY(IVM03_DEV,END=3900)
3020 IF POS(FIRST$=K$)<>1 THEN GOTO 3900
3030 READ (IVM03_DEV)
3040 DIM B0$(28),B1$(5),B2$(20),B[8],C0$(8),C1$(30)
3050 LET B0$(1)=K$(1,2)+K$(24,6)+K$(4,20),C0$(1)=K$(1,2)+K$(24,6),C1$(1)=NF$
3060 FIND (IVM05_DEV,KEY=B0$,DOM=3600)IOL=IVM05A
3070 FIND (APM01_DEV,KEY=C0$,DOM=3080)IOL=APM01A
3080 LET X$="Vendor "+FNF$(C0$(3,VENDLEN),VENDMASK$)+" "+FNP$(C1$)
3090 IF L+15>L9 THEN GOSUB 5000
3100 GOSUB 5100
3110 PRINT (7)@(3),"Primary/Secondary: ",B1$(1,1)
3120 PRINT (7)"Vendor's Item Number: ",B2$
3130 PRINT (7)@(11),"Lead Time: ",B[8]:M9$
3140 LET X$="Quantity Discounts"
3150 GOSUB 5100
3160 PRINT (7)@(4),"Level 1 Quantity: ",B[0]:M2$,@(39),"Level 1 Cost: ",B[3]:M3$
3170 PRINT (7)@(4),"Level 2 Quantity: ",B[1]:M2$,@(39),"Level 2 Cost: ",B[4]:M3$
3180 PRINT (7)@(4),"Level 3 Quantity: ",B[2]:M2$,@(39),"Level 3 Cost: ",B[5]:M3$
3190 LET X$="Last Purchase"
3200 GOSUB 5100
3210 LET X$="",L=L+9
3220 IF FNP$(B1$(2,3))<>"" THEN LET X$=FNB$(B1$(2,3))
3230 PRINT (7)"Date: ",X$,@(30),"Lead Time: ",B[7]:M9$,@(O-6),"Cost: ",B[6]:M3$
3240 PRINT (7)""
3250 PRINT (7)""
3600 REM " --- Loop back for next vendor"
3690 GOTO 3000
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4010 ON O0 GOTO 9900,4020
4020 CLOSE (7,ERR=4030)
4030 READ (IVM01_DEV,KEY=ITEM$,DOM=4040)IOL=IVM01A
4040 PRINT @(0,L0),'CE',
4090 RUN O0$,ERR=9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+3
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)HEADINGS$[3]
5050 PRINT (7)HEADINGS$[4]
5090 RETURN 
5100 REM " --- Section Heading"
5110 DIM J$(80,"-")
5120 IF X$<>"" THEN LET J$(9,LEN(X$)+2)=" "+X$+" "
5130 IF L+2>L9 THEN GOSUB 5000
5140 PRINT (7)""
5150 PRINT (7)J$
5160 LET L=L+2
5190 RETURN 
5200 REM " --- Print synonyms"
5210 LET X$="Item Synonyms"
5220 GOSUB 5100
5230 FOR X=1 TO R
5240 PRINT (7)BUFFER$[X]
5245 LET L=L+1
5250 NEXT X
5260 LET M=L9-2,R=1,C=1
5270 DIM BUFFER$[M+1](80)
5290 RETURN 
5300 REM " --- Print stocking information"
5310 LET X$="Stocking Information"
5320 GOSUB 5100
5330 DIM C0$(8),C1$(30)
5340 LET X0$(1)=N0$+"F"+BUYER$
5350 FIND (IVM10_DEV,KEY=X0$(1,6),DOM=5360)IOL=IVM10F
5360 LET BUYER$=X0$(4,3)+" "+X0$(7,20)
5370 IF FNP$(VENDOR$)="" THEN GOTO 5400
5380 LET C0$(1)=N0$+VENDOR$,C1$(1)=NF$
5385 FIND (APM01_DEV,KEY=C0$,DOM=5390)IOL=APM01A
5390 LET VENDOR$=FNF$(C0$(3,VENDLEN),VENDMASK$)+" "+C1$
5400 PRINT (7)@(8),"Buyer Code: ",BUYER$,@(O-19)," Maximum Quantity: ",MAXQTY:M2$
5410 PRINT (7)@(3),"Stocking Vendor: ",VENDOR$,@(O-13),"Order Point: ",ORDPNT:M2$," ",ORDPNT$
5420 PRINT (7)@(9),"Lead Time: ",LEADTIME:M9$,@(O-5),"EOQ: ",EOQ:M2$," ",EOQ$
5430 PRINT (7)@(10),"ABC Code: ",ABC$,@(O-14),"Safety Stock: ",SAFETY:M2$," ",SAFETY$
5440 LET L=L+4
5490 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8100 REM " --- FNYEAR_YY$ Un-Convert 21st Century Numeric Year to 2-Char Year"
8105 DEF FNYEAR_YY$(Q)=STR(MOD(Q,100):"00")
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
