0010 REM "ARE - Cash Receipts G/L Distribution"
0020 REM "Program ARE.AD"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0200 REM " --- IOLists
0240 ARE11A: IOLIST X0$,X0,X1
0250 ARE21A2: IOLIST X0$,X0,X1
0260 ARE21A1: IOLIST W0$,W[0]
0270 GLM01A: IOLIST X0$,X1$
0500 REM " --- Init Data
0550 LET W0$(1)=C0$(1,24),W0$(25,1)=FILL(1)
0700 REM " --- Background
0710 CALL "SYC.WC",1,0,80,0,0,9,0
0720 PRINT 'SB',@(9,9)," GL Distribution ",'SF',@(0,L0),'CE','SB',@(1,L0),"GL Account",@(70),"Amount",'SF',
0800 REM " --- Get Balance
0820 GOSUB 6000
0840 GOSUB 5800
0860 LET L=L1
0900 REM " --- Init File
0920 READ (ARE21_DEV,KEY=W0$(1,25),DOM=0930)
1000 REM " --- Check Line
1020 IF L>L9 THEN PRINT @(0,L1),'LD',
1040 IF L>L9 THEN LET L=L9
1100 REM " --- Get Next Key
1110 LET W0$(26)=""
1120 LET K$=KEY(ARE21_DEV,END=2000)
1160 IF K$(1,25)<>W0$(1,25) THEN GOTO 2000
1180 LET W0$(26)=K$(26)
2000 REM " --- G/L Account Number
2020 LET V0$="M",V1$="KEC",V2$=W0$(26,G[3]),V3$=G1$,V0=G[4],V1=1,V2=L
2025 LET V4$="Enter A Valid G/L Account (<F3>=Lookup)"
2030 GOSUB 7000
2032 IF V3=4 THEN GOTO 4000 ELSE IF V3<>3 THEN GOTO 2040
2036 CALL "SYC.LG",V$
2038 IF V$="" THEN GOTO 2000
2040 IF POS(" "=V$)<>0 THEN GOTO 0900
2050 LET W0$(26)=V$
2060 FIND (GLM01_DEV,KEY=N0$+W0$(26,G[4]),DOM=2000)IOL=GLM01A
2080 PRINT @(V1,V2),FNF$(W0$(26,G[3]),G1$),@(V1+G5+1,V2),X1$(1,35),
2100 FIND (ARE21_DEV,KEY=W0$(1,25+G[4]),DOM=2200)IOL=ARE21A1
2120 LET W9=-W[0]
2130 IF W0$(1,25+G[4])<=W9$ THEN GOSUB 5400
2140 GOSUB 5000
2190 GOTO 3500
2200 LET W9=0,W[0]=-T0
2500 REM " --- Amount
2510 LET V4$="Enter The Amount To Be Posted To This Account"
2520 LET V0$="N",V1$="C",V2$=STR(W[0]),V3$=G6$,V0=G6,V1=77-G6,V2=L,I0=0
2540 GOSUB 7000
2560 LET W[0]=V
2590 GOTO 3000
3000 REM " --- Next
3010 IF V3=4 THEN GOTO 3500
3020 IF V3<>2 THEN GOTO 3050
3030 IF V3>0 THEN LET I0=I0-1
3040 GOTO 3060
3050 LET I0=I0+1
3060 ON I0 GOTO 2500,3500
3500 REM " --- Correct?
3520 LET V0$="S",V1$="C",V2$="",V3$="",V4$="<Enter>=OK   <F2>=Change   <D>=Delete",V0=1,V1=78,V2=L
3540 GOSUB 7000
3550 IF V3=2 THEN GOTO 3000
3560 IF V$="D" THEN GOTO 3700
3570 IF V$<>"" THEN GOTO 3500
3600 WRITE (ARE21_DEV,KEY=W0$(1,25+G[4]))IOL=ARE21A1
3620 LET T0=T0+W9+W[0]
3650 GOSUB 5800
3660 LET L=L+1,W9$=W0$(1,25+G[4])
3690 GOTO 1000
3700 REM " --- Delete Line
3710 REMOVE (ARE21_DEV,KEY=W0$(1,25+G[4]),DOM=3720)
3720 LET T0=T0+W9
3760 GOSUB 5800
3780 PRINT @(0,L),'CL',
3790 GOTO 1000
4000 REM " --- Options
4010 LET V0$="S",V1$="KC",V2$="",V3$="",V4$="Is The Above Information Correct (Y/N/",V0=2,V2=22
4015 IF Y0$(29,1)<>"G" THEN LET V4$=V4$+"AR)?" ELSE LET V4$=V4$+")?"
4017 LET V1=FNV(V4$)
4020 GOSUB 7000
4040 IF V$="AR" THEN IF Y0$(29,1)<>"G" THEN RUN "ARE.AC"
4060 ON POS(V$="YN") GOTO 4000,4100,1000
4100 REM " --- Check Balance
4120 IF T0=0 THEN RUN "ARE.AB"
4130 DIM MESSAGE$[1]
4140 LET MESSAGE$[0]="This Transaction Is Out Of Balance (<Enter>=Continue)"
4150 CALL "SYC.XA",2,MESSAGE$[ALL],0,22,-1,V$,V3
4160 GOTO 1000
5000 REM " --- Display
5010 PRINT @(1,L),FNF$(W0$(26,G[3]),G5$)," ",X1$(1,35),@(77-G6),W[0]:G6$,
5090 RETURN 
5400 REM " --- Clear Screen
5420 PRINT @(0,L1),'CE',
5440 LET L=L1
5490 RETURN 
5800 REM " --- Balance
5810 PRINT @(O[7],8),T0:M1$,
5890 RETURN 
6000 REM " --- Accumulate
6010 LET T0=C[0]
6020 READ (ARE11_DEV,KEY=C0$(1,24),DOM=6030)
6030 LET K11$=KEY(ARE11_DEV,END=6090)
6050 IF K11$(1,24)<>C0$(1,24) THEN GOTO 6090
6060 READ (ARE11_DEV)IOL=ARE11A
6070 LET T0=T0-X0
6080 GOTO 6030
6090 REM 
6120 READ (ARE21_DEV,KEY=C0$(1,24),DOM=6130)
6130 LET K21$=KEY(ARE21_DEV,END=6190)
6150 IF K21$(1,24)<>C0$(1,24) THEN GOTO 6190
6160 READ (ARE21_DEV)IOL=ARE21A2
6170 LET T0=T0+X0
6180 GOTO 6130
6190 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions
8090 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
