0010 REM "POS - Replenishment Selection Update
0020 REM "Program POE.FB
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.2 - 01Jan96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "18Oct96 CAJ: Program rewritten for 6.0.2 replenishment
0032 REM "18Feb97 Caj: Corrected the vendor quantity discounts calculation for cases where not all qty levels are filled in (6450)
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0095 PRECISION IVPRECISION
0200 REM " --- IOLists
0210 APM06A: IOLIST U0$,U1$,VENDCYCLEDAYS,TARGET[ALL]
0220 IVM01A: IOLIST R0$,R1$,R2$,R3$,R4$,R5$,R6$,R[ALL]
0230 IVM02A: IOLIST S0$(1),S1$,S2$,S[ALL]
0240 IVM05A: IOLIST T0$,T1$,T2$,T[ALL],T0,*,VLEAD
0250 IVM10F: IOLIST *,BUYCODEDAYS
0260 POE06A: IOLIST A0$(1),A1$(1),A[ALL]
0270 POE16A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0280 POE26A: IOLIST C0$(1),C1$(1),C2$,C[ALL]
0290 POE36A: IOLIST D0$(1),D1$,D[ALL]
0300 POE17A: IOLIST K17$(1)
0500 REM " --- Initialization
0510 DIM A0$(14),B0$(36)
0700 REM " --- Notification Box
0720 CALL "SYC.NB","Now Reviewing: "+FILL(LEN(VENDOMASK$)+7)+"Item:",ITEMLEN+5,COLUMN
0900 REM " --- Init read
0910 LET FIRST$=N0$+"F"+BUYERFROM$
0920 IF BUYERFROM$="" THEN LET FIRST$=N0$+"F"+FILL(3)+$FF$
0930 READ (IVM03_DEV,KEY=FIRST$,DOM=SHOULDWEBUY)
1000 REM " --- Init IVM-03 for 'Should we buy' loop
1005 SHOULDWEBUY: 
1010 LET K03$=KEY(IVM03_DEV,END=DONESHOULD)
1020 IF POS(N0$+"F"=K03$)<>1 THEN GOTO DONESHOULD
1030 PRINT @(COLUMN-12-LEN(VENDOMASK$),11),FNF$(K03$(7,VENDLEN),VENDOMASK$),
1040 PRINT @(COLUMN-10,11),K03$(4,3),@(COLUMN,11),K03$(16,ITEMLEN)
1050 LET PRODTYPE$=K03$(13,3),ITEMNUM$=K03$(16,20),WHSE$=K03$(36,2)
1060 IF BUYERTHRU$<>"" AND K03$(4,3)>BUYERTHRU$ THEN GOTO DONESHOULD
1070 IF VENDFROM$<>"" AND K03$(7,6)<VENDFROM$ THEN READ (IVM03_DEV,KEY=K03$(1,6)+VENDFROM$,DOM=NEXTIVM03)
1080 IF VENDTHRU$<>"" AND K03$(7,6)>VENDTHRU$ THEN READ (IVM03_DEV,KEY=K03$(1,6)+$FF$,DOM=NEXTIVM03)
1090 IF WHSEFROM$<>"" AND WHSE$<>FILL(2) AND WHSE$<WHSEFROM$ THEN READ (IVM03_DEV); GOTO NEXTIVM03
1100 IF WHSETHRU$<>"" AND WHSE$<>FILL(2) AND WHSE$>WHSETHRU$ THEN READ (IVM03_DEV,KEY=K03$(1,35)+$FF$,DOM=NEXTIVM03)
1120 READ (IVM03_DEV)
1130 IF K03$(4,3)<>CURBUYER$ THEN GOSUB NEWBUYER
1140 IF K03$(7,6)<>CURVEND$ THEN GOSUB NEWVENDOR
1150 IF K03$(16,20)<>CURITEM$ THEN GOSUB NEWITEM
1300 REM " --- Within Review Date Range?
1320 IF DATEFROM$<>"" AND NEXTREVIEW$<DATEFROM$ THEN READ (IVM03_DEV,KEY=K03$(1,12)+$FF$,DOM=NEXTIVM03)
1330 IF DATETHRU$<>"" AND NEXTREVIEW$>DATETHRU$ THEN READ (IVM03_DEV,KEY=K03$(1,12)+$FF$,DOM=NEXTIVM03)
1400 REM " --- Assign vars and get linepoint
1410 DIM S0$(24),S[20],R[12]
1420 LET ONORDER=0,AVAIL=0,UNITCOST=0,WEIGHT=0
1430 LET SAFE=0,LEAD=0,EOQ=0,MAX=0,ORDPOINT=0
1440 FIND (IVM01_DEV,KEY=N0$+ITEMNUM$,DOM=NEXTIVM03)IOL=IVM01A
1450 LET STOCKLEVEL$=R2$(24,1),WEIGHT=R[1]
1460 IF POS(STOCKLEVEL$="IW")=0 THEN GOTO NEXTIVM03
1465 IF STOCKLEVEL$="W" THEN GOTO 1490
1470 GOSUB GETWHSE
1480 IF WHSE$=FILL(2) THEN GOTO NEXTIVM03
1490 FIND (IVM02_DEV,KEY=N0$+WHSE$+ITEMNUM$,DOM=1500)IOL=IVM02A
1495 LET MAX=R[3],ORDPOINT=R[4],SAFE=R[5],EOQ=R[6],LEAD=R[7]
1500 LET ONHAND=S[0],ONORDER=S[1],AVAIL=S[0]-S[2],UNITCOST=S[11]
1505 IF STOCKLEVEL$="I" THEN LET TOTCOST=TOTCOST+UNITCOST
1510 LET ONHANDTOT=ONHANDTOT+ONHAND,AMOUNT=AMOUNT+(ONHAND*UNITCOST)
1520 IF STOCKLEVEL$="W" THEN LET MAX=S[3],ORDPOINT=S[4],SAFE=S[5],EOQ=S[6],LEAD=S[7]
1530 IF ORDPOINT=0 THEN GOTO NEXTIVM03
1550 GOSUB CALC_USE_N_LP
1555 REM " --- Write POE-36, warehouse surplus, record
1560 DIM D0$(24),D[2]
1570 LET SURPLUS=AVAIL-LINEPOINT-ONORDER,D0$(1)=N0$+ITEMNUM$+WHSE$,D[0]=SURPLUS
1580 IF SURPLUS<=0 THEN GOTO WRITEPOE06
1590 WRITE (POE36_DEV,KEY=D0$,DOM=WRITEPOE06)IOL=POE36A
1600 REM " --- Write POE-06 record
1605 WRITEPOE06: 
1610 IF WRITEHEADER<>1 THEN GOTO INITDETAIL
1620 DIM A0$(14),A1$(40),A[3]
1630 LET A0$(1)=N0$+CURBUYER$+CURVEND$
1640 REM " --- Compare date already in file; use greater date
1650 LET DATE2WRITE$=DATETHRU$
1660 READ (POE06_DEV,KEY=A0$,DOM=ASSIGNPOE06)IOL=POE06A
1670 IF A1$(3,3)>DATETHRU$ THEN LET DATE2WRITE$=A1$(3,3)
1730 ASSIGNPOE06: 
1740 LET A1$(1)=FILL(2)+DATE2WRITE$,A1$(7)=COMMENT$
1760 WRITE (POE06_DEV,KEY=A0$)IOL=POE06A
1790 LET WRITEHEADER=0
1800 REM " --- Write POE-17 Selections sort record for Buyer/Seqnum
1810 DIM K17$(7)
1820 LET K17$=N0$+CURBUYER$+REPLEN_SEQ$
1830 WRITE (POE17_DEV,KEY=K17$,DOM=INITDETAIL)IOL=POE17A
1900 REM " --- Init for POE-16 detail
1905 INITDETAIL: 
1920 DIM B0$(36),B1$(20),B[16]
1930 LET B0$(1)=A0$(1,11)+PRODTYPE$+ITEMNUM$+WHSE$
1940 REM " --- If record exists, don't recalc 
1950 FIND (POE16_DEV,KEY=B0$,DOM=2000)IOL=POE16A
1960 GOTO NEXTIVM03
2000 REM " --- Calc Average usage range for reasonability checks
2010 IF ADJUSTEDCURUSAGE=0 THEN GOTO GOCALC_SUGG
2020 LET AVGMIN=AVGUSAGE*.5,AVGMAX=AVGUSAGE*2
2030 IF ADJUSTEDCURUSAGE>=AVGMIN AND ADJUSTEDCURUSAGE<=AVGMAX THEN GOTO GOCALC_SUGG
2040 IF POS("U"=ADJCODES$)=0 THEN LET ADJCODES$=ADJCODES$+"U"
2050 REM " --- Go calculate suggested order qty
2060 GOCALC_SUGG: 
2070 IF STOCKLEVEL$="I" THEN GOTO ASSIGNPOE16
2080 GOSUB CALC_SUGG
2200 REM " --- How much does it cost?
2240 GOSUB GETCOST_N_VLEAD
2250 IF COST=0 THEN LET COST=UNITCOST; REM "If no qty breaks, use IVM-02 cost
2260 LET EXTENSION=SUGG*COST
2500 REM " --- Assign to POE-16
2505 ASSIGNPOE16: 
2510 DIM B1$(20),B2$(2),B[16]
2520 LET B1$(1,1)=STOCKLEVEL$,B1$(2,1)=ESTIMATED$
2530 REM " --- Assign items stocked by Item to POE-16
2540 IF STOCKLEVEL$="W" THEN GOTO ASSIGNBYWHSE
2550 LET B[2]=AVAIL,B[3]=ONORDER
2570 LET B[12]=ACTUALUSAGE,B[13]=AVGUSAGE
2580 GOTO WRITEPOE16
2600 REM " --- Assign items stocked by Whse to POE-16
2605 ASSIGNBYWHSE: 
2650 LET B[0]=LINEPOINT,B[1]=ORDPOINT,B[2]=AVAIL,B[3]=ONORDER
2660 LET B[4]=EOQ,B[5]=SAFE,B[6]=MAX,B[7]=LEAD,B[8]=WEIGHT*SUGG,B[9]=SUGG
2670 LET B[10]=COST,B[12]=ACTUALUSAGE,B[13]=AVGUSAGE,B[14]=EXTENSION
2700 REM " --- Write POE-16
2705 WRITEPOE16: 
2780 WRITE (POE16_DEV,KEY=B0$)IOL=POE16A
2790 LET DETAILLINES=DETAILLINES+1
2800 REM " --- Accumulate totals
2820 LET TOTAVAIL=TOTAVAIL+AVAIL,TOTONORDER=TOTONORDER+ONORDER
2830 LET TOTACTUALUSAGE=TOTACTUALUSAGE+ACTUALUSAGE
2850 LET TOTAVGUSAGE=TOTAVGUSAGE+AVGUSAGE
2860 IF STOCKLEVEL$="I" THEN GOTO NEXTWHSE
2870 LET TOTSUGG=TOTSUGG+SUGG,TOTEXTENSION=TOTEXTENSION+EXTENSION
2890 GOTO NEXTIVM03
3400 REM " --- Loop up for next whse for items stocked by 'I'tem
3405 NEXTWHSE: 
3420 GOTO 1470
3500 REM " --- Loop up for next IVM-03 record
3510 NEXTIVM03: 
3520 GOTO SHOULDWEBUY
4000 REM " --- Done
4005 DONESHOULD: 
4020 GOSUB NEWITEM
4060 GOTO 9900
5000 REM " --- Get current buy stuff
5005 NEWBUYER: 
5020 LET BUYCODEDAYS=0,CURBUYER$=K03$(4,3),CURVEND$="",WRITEHEADER=1
5030 FIND (IVM10_DEV,KEY=N0$+"F"+CURBUYER$,DOM=5040)IOL=IVM10F
5040 RETURN 
5100 REM " --- New vendor
5105 NEWVENDOR: 
5120 DIM U0$(11),U1$(30),TARGET[2]
5130 LET VENDCYCLEDAYS=0
5140 FIND (APM06_DEV,KEY=N0$+K03$(7,6)+K03$(4,3),DOM=5150)IOL=APM06A
5150 REM " --- Get Current Vendor stuff
5160 LET CURVEND$=K03$(7,6),NEXTREVIEW$=U1$(4,3),WRITEHEADER=1
5170 IF VENDCYCLEDAYS<>0 THEN LET CYCLEDAYS=VENDCYCLEDAYS ELSE LET CYCLEDAYS=BUYCODEDAYS
5180 RETURN 
5200 REM " --- Write Totals line for old item & init for new
5205 NEWITEM: 
5210 IF CURITEM$="" THEN GOTO DONE_NEWITEM
5220 DIM C0$(36),C1$(20),C2$(2),C[16]
5230 LET C0$(1)=B0$(1,34)+FILL(2),C1$(1,1)=STOCKLEVEL$,C1$(2,1)=ESTIMATED$
5240 REM " --- Assign for stocked by 'W'arehouse
5250 IF STOCKLEVEL$="I" THEN GOTO ASSIGNBYITEM
5260 LET C1$(3,8)=ADJCODES$
5270 LET C[2]=TOTAVAIL,C[3]=TOTONORDER,C[8]=WEIGHT*TOTSUGG
5280 LET C[9]=TOTSUGG,C[12]=TOTACTUALUSAGE,C[13]=TOTAVGUSAGE,C[14]=TOTEXTENSION
5290 GOTO WRITEPOE26
5300 ASSIGNBYITEM: 
5305 REM " --- Get suggested buy & cost for 'I' items
5310 LET AVAIL=TOTAVAIL,ONORDER=TOTONORDER,AVGUSAGE=TOTAVGUSAGE
5320 GOSUB CALC_SUGG
5325 GOSUB GETCOST_N_VLEAD
5330 IF COST<>0 THEN GOTO 5380; REM "Use qty breakcost
5340 IF ONHANDTOT<>0 THEN LET WEIGHTEDCOST=AMOUNT/ONHANDTOT
5350 IF WHSECNT<>0 THEN LET AVGCOST=TOTCOST/WHSECNT ELSE LET AVGCOST=0
5360 LET COST=WEIGHTEDCOST
5370 IF COST=0 THEN LET COST=AVGCOST
5380 LET C0$(35,2)=FILL(2); REM "No whse for totals record
5390 LET C1$(3,8)=ADJCODES$
5400 LET C[0]=LINEPOINT,C[1]=ORDPOINT,C[2]=TOTAVAIL,C[3]=TOTONORDER
5410 LET C[4]=EOQ,C[5]=SAFE,C[6]=MAX,C[7]=LEAD,C[8]=WEIGHT*SUGG,C[9]=SUGG
5420 LET C[10]=COST,C[12]=TOTACTUALUSAGE,C[13]=TOTAVGUSAGE,C[14]=COST*SUGG
5430 WRITEPOE26: 
5435 IF DETAILLINES=0 THEN GOTO 5450
5440 WRITE (POE26_DEV,KEY=C0$)IOL=POE26A
5450 GOSUB DOSURPLUS
5460 DONE_NEWITEM: 
5470 LET CURITEM$=ITEMNUM$,TOTAVAIL=0,TOTONORDER=0,TOTSUGG=0
5480 LET TOTACTUALUSAGE=0,TOTAVGUSAGE=0,TOTEXTENSION=0,TOTCOST=0,WHSECNT=0
5490 LET ONHANDTOT=0,WEIGHTEDCOST=0,AMOUNT=0,DETAILLINES=0
5500 DIM ADJCODES$(0)
5510 REM " --- Init read IVM03G (Used later to get whs when stock by 'I')
5520 READ (IVM03_DEV2,KEY=N0$+"G"+ITEMNUM$,DOM=5530)
5530 RETURN 
5600 REM " --- Get whse for items stocked by "I"
5605 GETWHSE: 
5620 DIM WHSE$(2)
5630 LET K03G$=KEY(IVM03_DEV2,END=DONE_GETWHSE)
5640 IF POS(N0$+"G"+ITEMNUM$=K03G$)<>1 THEN GOTO DONE_GETWHSE
5650 READ (IVM03_DEV2)
5660 LET WHSE$=K03G$(24,2)
5670 IF WHSEFROM$<>"" AND WHSE$<WHSEFROM$ THEN GOTO NEXTIVM03G
5680 IF WHSETHRU$<>"" AND WHSE$>WHSETHRU$ THEN READ (IVM03_DEV2,KEY=K03G$(1,23)+$FF$,DOM=NEXTIVM03G)
5690 LET WHSECNT=WHSECNT+1
5700 GOTO DONE_GETWHSE
5710 NEXTIVM03G: 
5720 GOTO GETWHSE
5730 DONE_GETWHSE: 
5790 RETURN 
5800 REM " --- Get Annual & Average Usages, IV activity & Line Point
5805 CALC_USE_N_LP: 
5820 DIM CHANS[12],ITEM$[2]
5830 LET ACTION$="W",CHANS[1]=IVM01_DEV,CHANS[2]=IVM02_DEV,CHANS[3]=IVM03_DEV
5840 LET CHANS[12]=IVM12_DEV,ITEM$[0]=N0$,ITEM$[1]=WHSE$
5850 LET ITEM$[2]=ITEMNUM$,CUR_PERYR$=CURPER$+CURYR$,BASE_PERYR$=CUR_PERYR$
5860 CALL "IVC.AU",ACTION$,CHANS[ALL],ITEM$[ALL],FACTORS[ALL],DAYOFMONTH,BASE_PERYR$,CUR_PERYR$,TOT_PERS,IVPRECISION,ANNUALUSAGE,ESTIMATED,CALLFLAG$,STATUS
5870 LET ACTUALUSAGE=ANNUALUSAGE
5880 IF CALLFLAG$<>"" THEN LET ANNUALUSAGE=ESTIMATED,ESTIMATED$="Y"
5890 LET AVGUSAGE=ANNUALUSAGE/TOT_PERS
5900 DIM CHANS[3],ITEM$[3],PERIOD$[1],ACTIVITY[12]
5910 LET ACTION$="",CHANS[2]=IVM12_DEV,CHANS[3]=IVM03_DEV
5920 LET ITEM$[0]=N0$,ITEM$[1]=WHSE$,ITEM$[2]=ITEMNUM$
5930 LET PERIOD$[0]=CURYR$+CURPER$,PERIOD$[1]=CURYR$+CURPER$
5940 CALL "IVC.WB",ACTION$,CHANS[ALL],ITEM$[ALL],PERIOD$[ALL],ACTIVITY[ALL],STATUS
5950 READ (IVM03_DEV,KEY=K03$); REM "Move ptr back to before call
5960 LET CURUSAGE=ACTIVITY[3]+ACTIVITY[4]-ACTIVITY[8]
5970 LET ADJUSTEDCURUSAGE=CURUSAGE*30.55/DAYOFMONTH
5980 LET USEDURINGREVIEW=INT(ANNUALUSAGE/365*CYCLEDAYS)
5985 LET LINEPOINT=ORDPOINT+USEDURINGREVIEW
5990 RETURN 
6000 REM " --- Calculate suggested order quantity
6005 CALC_SUGG: 
6010 LET SUGG=0
6020 IF AVAIL+ONORDER>LINEPOINT THEN GOTO DONECALCSUGG
6030 PRECISION 2
6040 IF MAX=0 THEN GOTO MAX_ISNT_SET
6050 REM " --- If MAX is set...
6060 IF AVAIL+ONORDER<=MAX THEN GOTO CONTINUE
6070 IF POS("O"=ADJCODES$)=0 THEN LET ADJCODES$=ADJCODES$+"O"
6080 GOTO DONECALCSUGG; REM "don't buy if onhand+on order's over max
6090 REM " --- Buy MAX minus avail minus on order; round to EOQ
6100 CONTINUE: 
6110 LET SUGG=MAX-(AVAIL+ONORDER)
6120 IF POS("M"=ADJCODES$)=0 THEN LET ADJCODES$=ADJCODES$+"M"
6130 IF EOQ=0 OR SUGG<=0 THEN GOTO 6160
6140 LET SUGG=INT((SUGG-1)/EOQ+1)*EOQ; REM "Round up to nearest EOQ if set
6150 IF POS("E"=ADJCODES$)=0 THEN LET ADJCODES$=ADJCODES$+"E"
6160 GOTO DONECALCSUGG
6170 REM " --- If MAX isn't set ...
6180 MAX_ISNT_SET: 
6190 IF EOQ=0 THEN GOTO NO_EOQ
6200 LET SUGG=EOQ; REM "Buy EOQ quantities if set
6210 IF POS("E"=ADJCODES$)=0 THEN LET ADJCODES$=ADJCODES$+"E"
6220 GOTO SETLIMITS
6230 NO_EOQ: 
6240 IF LINEPOINT=0 THEN GOTO NO_LINEPOINT
6250 LET SUGG=LINEPOINT; REM "Buy Linepoint if no EOQ
6260 IF POS("L"=ADJCODES$)=0 THEN LET ADJCODES$=ADJCODES$+"L"
6270 GOTO SETLIMITS
6280 NO_LINEPOINT: 
6290 LET SUGG=ORDPOINT; REM "Last of all, buy Reorder Point
6300 IF POS("R"=ADJCODES$)=0 THEN LET ADJCODES$=ADJCODES$+"R"
6310 SETLIMITS: REM "No more than 1 yr's, or less than 1/2 month's usage
6320 IF SUGG<=0 OR SUGG<=AVGUSAGE*12 THEN GOTO 6350
6330 LET SUGG=AVGUSAGE*12
6340 IF POS("Y"=ADJCODES$)=0 THEN LET ADJCODES$=ADJCODES$+"Y"
6350 IF SUGG<=0 OR SUGG>=AVGUSAGE*.5 THEN GOTO DONECALCSUGG
6360 LET SUGG=AVGUSAGE*.5
6370 IF POS("2"=ADJCODES$)=0 THEN LET ADJCODES$=ADJCODES$+"2"
6375 DONECALCSUGG: 
6380 PRECISION IVPRECISION
6390 RETURN 
6400 REM " --- Get quantity breaks etc and vendor lead time
6405 GETCOST_N_VLEAD: 
6410 DIM T[1,2]
6420 LET COST=0,VLEAD=0
6430 READ (IVM05_DEV,KEY=N0$+A0$(6,6)+R0$(3),DOM=DONE_GETCOST)IOL=IVM05A
6440 FOR X=0 TO 2
6450 IF (T[0,X]>0 AND T[0,X]<=SUGG) THEN LET COST=T[1,X]; REM "Quan breaks
6460 NEXT X
6470 IF COST=0 THEN LET COST=T0; REM "Last purchase cost
6480 IF VLEAD<>0 THEN LET LEAD=VLEAD; REM "Use vendor's LEAD if here
6485 DONE_GETCOST: 
6490 RETURN 
6600 REM " --- Calc & write surplus of all whses not already done
6605 DOSURPLUS: 
6610 DIM D0$(24),D[4],S0$(24),S[20]
6620 LET FIRSTIVM032$=N0$+"G"+C0$(15,20),SAVEITEMNUM$=ITEMNUM$,SAVEWHSE$=WHSE$
6630 READ (IVM03_DEV2,KEY=FIRSTIVM032$,DOM=READIVM03)
6640 READIVM03: 
6650 LET K032$=KEY(IVM03_DEV2,END=DONESURPLUS)
6660 READ (IVM03_DEV2)
6670 IF POS(FIRSTIVM032$=K032$)<>1 THEN GOTO DONESURPLUS
6680 LET S0$(1)=N0$+K032$(24,2)+K032$(4,20),D0$(1)=N0$+K032$(4)
6690 FIND (POE36_DEV,KEY=D0$,DOM=GETSURPLUS)
6700 GOTO NEXTWHS; REM "Don't re-process
6710 GETSURPLUS: 
6720 FIND (IVM02_DEV,KEY=S0$,DOM=NEXTWHS)IOL=IVM02A
6730 LET WHSE$=S0$(3,2),ITEMNUM$=S0$(5,20),AVAIL=S[0]-S[2],ONORDER=S[1]
6740 IF STOCKLEVEL$="W" THEN LET ORDPOINT=S[4]
6750 GOSUB CALC_USE_N_LP
6760 REM " --- Write surplus data
6770 LET SURPLUS=AVAIL-LINEPOINT-ONORDER
6780 IF SURPLUS<=0 THEN GOTO NEXTWHS
6790 LET D[0]=SURPLUS
6800 WRITE (POE36_DEV,KEY=D0$,DOM=NEXTWHS)IOL=POE36A
6810 NEXTWHS: 
6820 GOTO READIVM03
6830 DONESURPLUS: 
6840 LET ITEMNUM$=SAVEITEMNUM$,WHSE$=SAVEWHSE$
6890 RETURN 
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
