0010 REM "IVC - Physical Inventory Entry Screen Processing"
0020 REM "Program IVC.IC"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0042 REM "ACTION$    : Action code (input)"
0044 REM "           : S=Physical inventory selection"
0046 REM "           : C=Cancel physical inventory"
0048 REM "           : P=Print count sheets"
0050 REM "           : R=Physical inventory register"
0054 REM "CHANNELS[n]: Channel numbers (input)"
0056 REM "           : [1]=SYS-01   [3]=IVW-10   [5]=IVE-03"
0058 REM "           : [2]=IVM-10   [4]=IVM-02"
0060 REM "WHSE$      : Warehouse ID (returned)"
0062 REM "CUTOFF$    : Cutoff date (returned)"
0064 REM "QUANTITY$  : Print system quantities Y/N? (returned)"
0066 REM "FKEY       : Function key value (returned)"
0068 REM "STATUS     : 0=No error"
0070 REM 
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER ACTION$,CHANNELS[ALL],WHSE$,CUTOFF$,QUANTITY$,FKEY,STATUS
0100 REM " --- Open/Lock Files"
0110 LET SYS01_DEV=CHANNELS[1],IVM10_DEV=CHANNELS[2],IVW10_DEV=CHANNELS[3]
0120 LET IVM02_DEV=CHANNELS[4],IVE03_DEV=CHANNELS[5]
0200 REM " --- IOLIST's"
0210 IVW10A: IOLIST A0$(1)
0220 IVM10C: IOLIST B0$(1)
0230 IVM10P: IOLIST C0$(1)
0240 IVM02A: IOLIST D0$(1),D1$(1)
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0400 REM " --- Parameters"
0405 DIM P[5]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0440 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1)),P[2]=NUM(I2$(7,2))
0450 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM A0$(4),B0$(32),C0$(11),D0$(24),D1$(64),STATUS$[5],MESSAGE$[2]
0550 LET CUTOFF$=F0$(7,3),WHSE$=I3$(6,2),L0=6,L9=21,L=L0,FKEY=0,STATUS=0
0560 LET A0$(1)=N0$,STATUS$[0]="Not Selected",STATUS$[1]="Cycle Selected"
0565 LET STATUS$[2]="Count Sheets Printed",STATUS$[3]="Register Printed"
0570 LET STATUS$[4]="Update In Progress",STATUS$[5]="Cancel In Progress"
0575 LET H$="",C=14,QUANTITY$="N"
0580 IF ACTION$="S" THEN LET H$="Cutoff Date:",C=71
0585 IF ACTION$="P" THEN LET H$="Print System Quantities:",C=78
0700 REM " --- Background"
0710 PRINT 'SB',@(0,3),"Warehouse ID:",@(C-LEN(H$)-1),H$,'SF',
0720 CALL "SYC.WC",1,0,80,0,0,L0-2,0
0730 PRINT 'SB',@(0,L0-1),"Cycle",@(8),"Status",@(41),"Cutoff Date",'SF',
0800 REM " --- Warehouse ID"
0805 PRINT 'CF',
0807 IF I3$(1,1)<>"Y" THEN LET V$=WHSE$; GOTO 0840
0810 LET V4$="Enter A Valid Warehouse ID (<F3>=Lookup)"
0815 LET V0$="S",V1$="CE",V2$=WHSE$,V3$="",V0=2,V1=14,V2=3
0820 GOSUB 7000
0825 ON V3 GOTO 0835,0800,0800,0830,9900
0830 CALL "IVC.LK",3,V1,V2,V$
0835 LET V$=V$+"  ",V$=V$(1,2)
0840 FIND (IVM10_DEV,KEY=N0$+"C"+V$,DOM=0800)IOL=IVM10C
0843 PRINT @(V1,V2),B0$(4,2)," ",B0$(6,24),
0845 LET WHSE$=B0$(4,2)
0850 REM " --- Cutoff Date"
0855 IF ACTION$<>"S" THEN GOTO 0900
0860 LET V4$="Enter The Cutoff Date For This Physical Inventory Selection"
0865 LET V0$="D",V1$="CE",V2$=CUTOFF$,V3$="",V0=3,V1=C,V2=3
0870 GOSUB 7000
0875 ON V3 GOTO 0880,0850,0800,0850,9900
0880 IF FNP$(V$)="" THEN GOTO 0850
0885 PRINT @(V1,V2),FNB$(V$),
0890 LET CUTOFF$=V$
0900 REM " --- Print Quantities?"
0905 IF ACTION$<>"P" THEN GOTO 0950
0910 LET V4$="Should System On-Hand Quantities Be Printed For Each Item (Y/N)?"
0915 LET V0$="Y",V1$="C",V2$=QUANTITY$,V3$="",V0=1,V1=C,V2=3
0920 GOSUB 7000
0925 ON V3 GOTO 0930,0900,0800,0900,9900
0930 IF POS(V$="YN")=0 THEN GOTO 0900
0940 PRINT @(V1,V2),V$,
0945 LET QUANTITY$=V$
0950 REM " --- Display any existing lines"
0970 GOSUB 5100
0980 IF Q1=0 THEN GOTO 1400
0990 GOTO 4000
1000 REM " --- Overflow"
1010 IF L>L9 THEN PRINT @(0,22),'CL',@(0,L0),'LD',
1020 IF L>L9 THEN LET L=L9
1100 REM " --- Get Next Key"
1110 LET K$=KEY(IVW10_DEV,END=1300)
1120 IF POS(N0$=K$)<>1 THEN GOTO 1300
1130 READ (IVW10_DEV)IOL=IVW10A
1170 GOSUB 5000
1190 GOTO 3300
1300 REM " --- EOF"
1310 LET A0$(3)=""
1400 REM " --- Cycle Code"
1410 LET V4$="Enter A Valid Cycle Code (<F1>=All Cycles)"
1420 LET V0$="S",V1$="CE",V2$=A0$(3),V3$="",V0=2,V1=1,V2=L
1430 GOSUB 7000
1440 IF V3=4 THEN PRINT @(V1,L),'CL',; GOTO 4000
1450 ON V3 GOTO 1460,1900,1400,1400,4000
1460 LET A0$(3)=V$
1500 REM " --- Existing record?"
1510 READ (IVW10_DEV,KEY=A0$,DOM=1520)IOL=IVW10A
1520 IF A0$<=K9$ THEN GOSUB 5400
1530 GOSUB 5000
1540 IF ACTION$="S" THEN IF POS(C0$(8,1)="01")>0 THEN GOTO 3300
1550 IF ACTION$<>"S" THEN IF POS(C0$(8,1)="123")>0 THEN GOTO 3300
1600 REM " --- Can't Use This Cycle"
1610 IF ACTION$="S" THEN LET MESSAGE$[0]="This Cycle Has Already Been Selected (<Enter>=Continue)"
1620 IF ACTION$<>"S" THEN LET MESSAGE$[0]="Cycle Not Selected, Cancelled Or Updated (<Enter>=Continue)"
1630 CALL "SYC.XA",2,MESSAGE$[ALL],0,22,-1,V$,V3
1640 IF V$<>"SPECIAL" THEN GOTO 1400
1690 GOTO 3300
1900 REM " --- Position warehouse file"
1910 DIM C0$(11)
1930 LET FIRST$=N0$+WHSE$
1940 IF ACTION$<>"S" THEN GOTO 2400
1970 CALL "SYC.NB","Selecting",P[0],COLUMN
1990 READ (IVM02_DEV,KEY=FIRST$,DOM=2000)
2000 REM " --- Select all cycles"
2010 LET K$=KEY(IVM02_DEV,END=3000)
2020 IF POS(FIRST$=K$)<>1 THEN GOTO 3000
2030 READ (IVM02_DEV)IOL=IVM02A
2040 PRINT @(COLUMN,11),D0$(3,P[0]),
2100 REM " --- Check status"
2110 IF D1$(11,2)=C0$(6,2) THEN GOTO 2200
2120 LET C0$(1)=N0$+"P"+WHSE$+D1$(11,2),C0$(8,1)="0"
2130 FIND (IVM10_DEV,KEY=C0$(1,7),DOM=2200)IOL=IVM10P
2190 IF POS(C0$(8,1)="12")=0 THEN GOTO 2000
2200 REM " --- Write IVW-10 record"
2210 LET A0$(1)=N0$+D1$(11,2)
2220 WRITE (IVW10_DEV,KEY=A0$)IOL=IVW10A
2290 GOTO 2000
2400 REM " --- Position entry file"
2480 CALL "SYC.NB","Selecting",2,COLUMN
2490 READ (IVE03_DEV,KEY=FIRST$,DOM=2500)
2500 REM " --- Read next entry record"
2510 LET K$=KEY(IVE03_DEV,END=3000)
2520 IF POS(FIRST$=K$)<>1 THEN GOTO 3000
2530 READ (IVE03_DEV,KEY=K$(1,6)+$FF$,DOM=2540)
2540 PRINT @(COLUMN,11),K$(5,2),
2550 FIND (IVM10_DEV,KEY=N0$+"P"+K$(3,4),DOM=2500)IOL=IVM10P
2560 IF POS(C0$(8,1)="45")>0 THEN GOTO 2500
2600 REM " --- Write work record"
2610 LET A0$(1)=N0$+K$(5,2)
2620 WRITE (IVW10_DEV,KEY=A0$)IOL=IVW10A
2690 GOTO 2500
3000 REM " --- All cycles selected"
3090 GOTO 0950
3300 REM " --- Line Correct?"
3310 LET V4$="<Enter>=Continue     <D>=Delete"
3320 LET V0$="S",V1$="C",V2$="",V3$="",V0=1,V1=78,V2=L,K9$=A0$
3330 GOSUB 7000
3340 ON V3 GOTO 3350,3300,3300,3300,3350
3350 IF V$="" THEN GOTO 3400
3360 IF V$="D" THEN GOTO 3700
3390 GOTO 3300
3400 REM " --- Write"
3410 WRITE (IVW10_DEV,KEY=A0$)IOL=IVW10A
3450 LET L=L+1,A0$(3)=""
3460 IF V3=4 THEN GOTO 4000
3490 GOTO 1000
3700 REM " --- Remove"
3710 REMOVE (IVW10_DEV,KEY=A0$,DOM=3720)
3750 PRINT @(0,L),'CL',@(0,L+1),'CL',
3760 IF V3=4 THEN GOTO 4000
3790 GOTO 1000
4000 REM " --- Options"
4010 LET V4$="Is The Above Information Correct (Y/N/List/Review)?"
4020 LET V0$="S",V1$="C",V2$="Y",V3$="",V0=6,V1=FNV(V4$),V2=22
4030 GOSUB 7000
4040 ON V3 GOTO 4050,4000,4000,4000,4100
4050 IF V$="L" OR V$="LIST" THEN GOTO 4500
4070 IF V$="R" OR V$="REVIEW" THEN GOTO 4600
4090 ON POS(V$="YN") GOTO 4000,4100,1000
4100 REM " --- Return to caller"
4190 GOTO 9900
4500 REM " --- List"
4510 LET A0$(3)=""
4520 GOSUB 5100
4590 GOTO 4000
4600 REM " --- Review"
4620 LET A0$(3)=""
4650 REM " --- Restart"
4660 READ (IVW10_DEV,KEY=A0$(1,2),DOM=4670)
4670 GOSUB 5400
4690 GOTO 1000
5000 REM " --- Display"
5010 LET C0$(1)=N0$+"P"+WHSE$+A0$(3),C0$(8)="0",C0$(9)=CUTOFF$
5020 FIND (IVM10_DEV,KEY=C0$(1,7),DOM=5030)IOL=IVM10P
5030 LET X=POS(C0$(8,1)="12345"),Q1=1
5050 PRINT @(0,L),'CL',@(1),C0$(6,2),@(8),STATUS$[X],@(41),FNB$(C0$(9,3)),
5090 RETURN 
5100 REM " --- List"
5105 LET Q1=0
5110 GOSUB 5400
5120 READ (IVW10_DEV,KEY=N0$,DOM=5130)
5130 LET K$=KEY(IVW10_DEV,END=5300)
5140 IF POS(N0$=K$)<>1 THEN GOTO 5300
5160 READ (IVW10_DEV)IOL=IVW10A
5190 IF L<=L9 THEN GOTO 5250
5200 REM " --- Continue"
5210 LET V4$="Press <Enter> To Continue:"
5215 LET V0$="S",V1$="CE",V2$="",V3$="",V0=1,V1=FNV(V4$),V2=22
5220 GOSUB 7000
5230 IF V3=4 THEN GOTO 5300
5240 GOSUB 5400
5250 GOSUB 5000
5260 LET L=L+1,K9$=A0$
5290 GOTO 5130
5300 RETURN 
5400 REM " --- Clear Screen"
5420 PRINT @(0,L0),'CE',
5440 LET L=L0
5490 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8085 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 LET STATUS=999
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 REM " --- Return to caller"
9910 IF V3=4 THEN LET FKEY=V3
9950 EXIT 
9999 END
