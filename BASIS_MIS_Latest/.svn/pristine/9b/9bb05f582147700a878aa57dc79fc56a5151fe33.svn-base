0010 REM "BMR - Bill Material Availability Hard Copy
0020 REM "Program BMR.IB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0200 REM " --- IOLISTs
0220 BMM02A: IOLIST B0$,B1$,B2$,B[ALL]
0230 IVM02A: IOLIST C0$,C1$,C2$,C[ALL]
0240 IVM01A: IOLIST D0$,D1$(1)
0250 IVM10C: IOLIST X1$
0500 REM " --- Init Data
0505 LET L9=59,L=L9+1,H0=132,H=0,HEADINGS=3,WHEN$=F0$(7,3),CLOCK$=""
0510 DIM HEADINGS$[HEADINGS]
0515 DIM B[10],B0$(55),B1$(75),B2$(10)
0520 LET HEADINGS$[0]=F4$
0530 LET HEADINGS$[1]=F5$+" - Availability Of Components Inquiry"
0540 LET HEADINGS$[2]="As Of "+FNB$(PDATE$)
0560 CALL "SYC.RM",P8$,P8,5,15
0575 LET M2$=P8$
0580 LET P1=LEN(P1$),M2=LEN(M2$)
0600 REM " --- Init Data
0610 CALL "SYC.GA",7,1,"","",STATUS
0615 IF STATUS THEN GOTO 4000
0700 REM " --- Background
0720 GOSUB 5000
1000 REM " --- Key
1005 PRECISION NUM(P6$(5,1))
1010 DIM B[10]
1100 READ (BMM02_DEV,KEY=A0$(1,2+P[0]),DOM=1102)
1105 LET K$=KEY(BMM02_DEV,END=4000)
1110 IF POS(A0$(1,2+P[0])=K$)<>1 THEN GOTO 4000
1120 READ (BMM02_DEV)IOL=BMM02A
1130 IF B2$(4,1)<>"S" THEN GOTO 1105
1135 IF B2$(5,3)<>"   " AND B2$(5,3)>PDATE$ THEN GOTO 1105
1140 IF B2$(8,3)<>"   " AND B2$(8,3)<=PDATE$ THEN GOTO 1105
1150 REM " --- Find Item Record
1160 DIM D1$(60)
1170 FIND (IVM01_DEV,KEY=N0$+B1$,DOM=1171)IOL=IVM01A
1180 LET D1$(1)=FNITEM$(D1$,DESC[1],DESC[2],DESC[3])
1210 DIM C[20]
1220 FIND (IVM02_DEV,KEY=N0$+X0$+B1$,DOM=1250)IOL=IVM02A
1230 GOTO 1300
1250 LET C0$(3,2)="  "
1300 REM " --- Display
1320 GOSUB 5200
1330 GOTO 1105
4000 REM " --- Overlay
4005 CLOSE (7,ERR=4010)
4010 LET O1=3
4020 PRINT @(0,22),'CL',
4090 RUN "BMM.MA"
5000 REM " --- Display
5005 LET L=HEADINGS+1
5010 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,H,H0,WHEN$,CLOCK$,STATUS
5020 IF STATUS>0 THEN EXITTO 4000
5025 DIM D1$(60),X1$(160)
5030 FIND (IVM01_DEV,KEY=N0$+A0$(3,P[0]),DOM=5031)IOL=IVM01A
5035 LET D1$(1)=FNITEM$(D1$,DESC[1],DESC[2],DESC[3])
5040 FIND (IVM10_DEV,KEY=N0$+"C"+X0$,DOM=5041)IOL=IVM10C
5045 LET X1$=X1$(6,24)
5050 PRINT (7)@(0),"For Bill Number: ",A0$(3,P[0])," ",D1$
5055 PRINT (7)@(6),"Warehouse: ",X0$," ",X1$,@(50),"Finished Quantity: ",X0:M2$,'LF'
5060 PRINT (7)@(0),"Seq",@(5),"Wh",@(9),"Item",@(130-4*M2-4),"Qty",@(130-3*M2-8),"On Hand",@(130-2*M2-7),"Commit",@(130-M2-6),"Avail",@(130-7),"On Ord"
5070 PRINT (7)@(9),"Description",'LF'
5080 LET L=L+6
5090 RETURN 
5200 REM " --- Detail
5210 GOSUB 6300
5220 IF L+2>L9 THEN GOSUB 5000
5230 PRINT (7)@(0),K$(3+P[0],3),
5240 IF X0*B[0]>C[0]-C[2] THEN PRINT (7)@(3),"**",
5250 PRINT (7)@(5),C0$(3,2),@(8),R0$,@(9),B1$,@(130-4*M2-P1),X0*FNQTY(B[0],B[1],B[3],A[4],B[4]):P1$,@(130-4*M2),C[0]:M2$,@(130-3*M2),C[2]:M2$,@(130-2*M2),C[0]-C[2]:M2$,@(130-M2),C[1]:M2$
5260 PRINT (7)@(9),D1$(1,30)
5270 LET L=L+2
5290 RETURN 
6300 REM " --- Verify if Item is a Bill Number
6320 LET R0$=" "
6340 FIND (BMM01_DEV,KEY=N0$+B1$,DOM=6390)
6360 LET R0$="*"
6390 RETURN 
8000 REM " --- Functions
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8080 DEF FNQTY(Q1,Q2,Q3,Q4,Q5)=10000*Q1*Q2/(Q3*Q4*(100-Q5))
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
