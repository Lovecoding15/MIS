0010 REM "ADC - ADD+ON Print-To-File ASCII File Conversion Utility - Called"
0020 REM "Program: ADC.08"
0030 REM "+----------------------------------------------------------+"
0031 REM "|            ADminstrator System Version 1.0.2a            |
0032 REM "|     Copyright (C) 1994 MicroAccounting Systems, Inc.     |
0033 REM "|                 All Rights Reserved"                     |
0034 REM "+----------------------------------------------------------+
0050 SETERR 9000
0060 ENTER SELECTION$,PFPATH$
0070 IF FNP$(SELECTION$)="" THEN GOTO 9700
0100 REM "---- Open/Lock Files"
0120 LET SYS01_DEV=UNT; OPEN (SYS01_DEV,ERR=4000)"SYS-01"
0170 LET SYM02_DEV=UNT; OPEN (SYM02_DEV,ERR=9900)"SYM-02"
0220 IOLIST X$,F0$,F1$,F2$,F3$,F4$,F5$
0230 IOLIST P0$,P1$,P2$,P3$(1),P[0],P[1],P[2],P[3],P[4]
0240 SYS01SY: IOLIST *,*,*,P4$
0410 DIM P4$(50); READ (SYS01_DEV,KEY="00SY00")*,*,*,P4$(1)
0420 LET AFILE$="AFILE"+FID(0); ERASE AFILE$,ERR=0421
0430 LET SPATH$=FNP$(P4$(1,50)); IF SPATH$="" THEN LET SPATH$=DIR(0) FI; IF SPATH$(LEN(SPATH$),1)<>"/" THEN LET SPATH$=SPATH$+"/"
0435 STRING SPATH$+AFILE$
0440 LET ASCII_DEV=UNT; OPEN (ASCII_DEV,MODE="STRING")AFILE$
0450 LET PFPATH$=SPATH$
0455 DIM P[4]
0460 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=4000)IOL=0220
0463 DIM P3$(64)
0465 FIND (SYM02_DEV,KEY="A"+F0$(4,3),DOM=4000)IOL=0230
0470 CLOSE (SYS01_DEV)
0475 CLOSE (SYM02_DEV)
0480 IF FNS$(P3$(61,3))="" THEN LET PFNAME$="PF"+F0$(4,3)+SELECTION$ ELSE LET PFNAME$="PF"+FNS$(P3$(61,3))+SELECTION$
0485 LET REPORT_DEV=UNT; OPEN (REPORT_DEV,ERR=9600)PFNAME$
0500 REM "INIT DATA"
0510 LET LINE=1,LINES=64,PAGE=1,WIDTH=175,LF$=$1B4C46$,FF$=$1B4646$,AT10$=$1B40310A$
0520 DIM PAGE$[LINES+4](WIDTH)
1000 REM "---- Read Indexed File"
1020 READ RECORD(REPORT_DEV,END=4000)X$
1040 LET A0$=A0$+X$
1050 LET COUNT=1
1060 LET POS0=POS($0A$=A0$,1,COUNT),POS1=POS(LF$=A0$),POS2=POS(AT10$=A0$,1,COUNT)+3
1065 IF POS0>0 THEN IF POS0=POS2 THEN LET COUNT=COUNT+1; GOTO 1060
1070 IF POS0=0 AND POS1=0 THEN GOTO 1000; REM "--- Didn't find 'lf'
1080 IF POS1>0 AND POS0=0 THEN GOTO 1500; REM "--- Got 'lf'!
1090 IF POS1>0 AND POS1<POS0 THEN GOTO 1500; REM "--- Got 'lf'!
1100 REM "---- Convert $0A$ To LF Mneumonic
1120 IF A0$=$0A$ THEN LET A0$=LF$; GOTO 1500
1140 IF POS0=1 THEN LET A0$=LF$+A0$(2); GOTO 1500
1160 IF POS0=LEN(A0$) THEN LET A0$=A0$(1,LEN(A0$)-1)+LF$; GOTO 1500
1180 LET A0$=A0$(1,POS0-1)+LF$+A0$(POS0+1)
1500 REM "---- LF Found In Current String"
1520 LET LFPOS=POS(LF$=A0$),FFPOS=POS(FF$=A0$)
1540 IF FFPOS=0 THEN GOTO 2000
1560 IF FFPOS>LFPOS THEN GOTO 2000
1580 IF FFPOS=1 THEN LET A0$=A0$(4),LFPOS=POS(LF$=A0$); GOTO 1800
1600 LET A0$=A0$(1,FFPOS-1)+LF$+A0$(FFPOS); GOTO 1500
1800 REM "---- Print Page"
1820 GOSUB 5000
2000 REM "---- Extract Current Line From A0$"
2020 DIM LINE$(WIDTH)
2040 IF LFPOS=1 THEN IF LEN(A0$)>3 THEN LET A0$=A0$(4) ELSE LET A0$="" FI; GOTO 3000
2060 IF LFPOS=LEN(A0$)-2 THEN LET STRING$=A0$(1,LFPOS-1),A0$=""; GOTO 2200 FI
2120 LET STRING$=A0$(1,LFPOS-1),A0$=A0$(LFPOS+3)
2200 REM "---- Parse STRING$
2220 LET POS0=POS($1B$=STRING$),POS1=POS($1B$=STRING$,1,2)
2240 IF POS0=0 AND POS1=0 THEN LET LINE$(1)=STRING$; GOTO 3000
2260 IF POS0>0 AND POS1=0 THEN LET POS1=LEN(STRING$)+1
2420 IF POS0>1 AND POS0<=WIDTH THEN LET LINE$(1,POS0-1)=STRING$(1,POS0-1),STRING$=STRING$(POS0); GOTO 2200
2440 IF POS0>1 AND POS0>WIDTH THEN LET LINE$(1,WIDTH)=STRING$(1,WIDTH),STRING$=STRING$(POS0); GOTO 2200
2450 IF POS0=1 AND LEN(STRING$)=4 THEN GOTO 3000
2480 IF LEN(STRING$)<=4 THEN LET STRING$=""; GOTO 3000
2520 LET STRPOS=DEC(STRING$(POS0+3,1))+1,STRLEN=POS1-POS0-4
2540 IF STRPOS<0 THEN LET STRPOS=DEC($00$+STRING$(POS0+3,1))+1
2560 IF STRPOS<0 OR STRPOS+STRLEN-1>WIDTH THEN LET STRPOS=WIDTH-STRLEN
2620 LET LINE$(STRPOS,STRLEN)=STRING$(POS0+4,STRLEN)
2640 IF POS1>LEN(STRING$) THEN GOTO 3000
2660 LET STRING$=STRING$(POS1)
2990 GOTO 2200
3000 REM "---- End Of Line Logic"
3020 IF LINE+1>LINES THEN GOSUB 5000
3040 LET PAGE$[LINE](1)=LINE$
3060 LET LINE=LINE+1
3980 IF POS(LF$=A0$)>0 THEN GOTO 1500
3990 GOTO 1000
4000 REM "PROGRAM TERMINATION"
4020 REM "---- Print Last Page"
4190 GOSUB 5000
4290 GOTO 9900
5000 REM "WRITE TO FILE"
5010 GOSUB 5400
5120 LET PAGE$[1]=$0C$+PAGE$[1]; REM "IF PAGE>1 THEN LET PAGE$[1]=$0C$+PAGE$[1]
5140 GOSUB 5500
5160 IF LEN(CHECK$)<10 THEN GOTO 5360
5220 FOR J=1 TO LINES
5260 WRITE (ASCII_DEV)FNP$(PAGE$[J])+$0D$
5280 NEXT J
5320 DIM PAGE$[LINES+4](WIDTH)
5340 LET PAGE=PAGE+1
5360 LET LINE=1
5390 RETURN 
5400 REM "--- Reduce Report Width Per WIDTH Parameter
5460 FOR J=1 TO LINES
5470 IF LEN(PAGE$[J])>WIDTH THEN LET PAGE$[J]=PAGE$[J](1,WIDTH)
5480 NEXT J
5490 RETURN 
5500 REM "---- Save A Tree Function"
5510 LET CHECK$=""
5520 FOR J=1 TO LINES
5540 LET CHECK$=CHECK$+FNS$(FNQ$(PAGE$[J]))
5560 NEXT J
5590 RETURN 
8000 REM "---- Functions"
8020 DEF FNL$(Q$)=CVS(Q$,1); REM "---- Leading Blanks
8040 DEF FNP$(Q$)=CVS(Q$,2); REM "---- Trailing Blanks
8050 DEF FNQ$(Q$)=CVS(Q$,16); REM "---- Unprintable Characters
8060 DEF FNS$(Q$)=CVS(Q$,1+2); REM "---- Leading & Trailing Blanks
8080 DEF FNU$(Q$)=CVS(Q$,4); REM "---- Uppercase
9000 REM "----- Error Exit
9190 GOTO 9800
9600 REM "----- Error Opening PF-File"
9610 GOTO 9800
9620 LET PFPATH$="Error="+STR(ERR)+" Opening "+PFNAME$
9690 GOTO 9900
9700 REM "----- Set Error Message"
9710 GOTO 9800
9720 LET PFPATH$="No File Number Passed"
9790 GOTO 9900
9800 REM "----- Set Error Message"
9820 LET PFPATH$="ERROR"
9900 REM "---- Exit"
9910 CLOSE (SYS01_DEV,ERR=9911)
9920 CLOSE (SYM02_DEV,ERR=9921)
9930 CLOSE (ASCII_DEV,ERR=9931)
9940 CLOSE (REPORT_DEV,ERR=9941)
9990 EXIT 
