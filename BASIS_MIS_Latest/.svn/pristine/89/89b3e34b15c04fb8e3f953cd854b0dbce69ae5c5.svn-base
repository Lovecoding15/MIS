0010 REM "OPU - Sales Register Update (Sales Analysis And History)"
0020 REM "Program OPU.CA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.4 - 15Dec97 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "10Jul96 JAL: Must update IVT-01/02/03 for dropships (550)"
0032 REM "19Sep96 WGH: Save correct Total Cost Amount in ART-05 (290,1360-1370)"
0033 REM "28Oct96 WGH: When sales analysis isn't kept for an item, exclude it from all sale analysis (2505,2705,2755)"
0034 REM "27Jan97 JWK: Not posting Nonstock to sales analysis (2440,2855)
0035 REM "16Apr97 JWK: Wrong length for SIC segment sizes (2820)
0036 REM "21May97 JWK: If NO to update question, reset Sales Register lock flag  (830,4500-4600)
0037 REM "3Jun97 JWK: Not collecting Vendor Sales Analysis for Alpha Vendors (2955)
0038 REM "04Dec98 KJS: Voids should update ART-53 (1175,1350,1360)
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Close Printer And Open/Lock Files "
0105 CLOSE (7,ERR=0110)
0110 CLOSE (GLW11_DEV,ERR=0115)
0115 LET FILES=40
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="ARE-07",FILES$[2]="ARE-33",FILES$[3]="ARE-43",FILES$[4]="ARM-02"
0130 LET FILES$[5]="ARM-06",FILES$[6]="ART-01",FILES$[7]="ART-02",FILES$[8]="ART-03"
0135 LET FILES$[9]="ART-05",FILES$[10]="ART-07",FILES$[11]="ART-11",FILES$[12]="ART-13"
0140 LET FILES$[13]="ART-33",FILES$[14]="ART-43",FILES$[15]="ART-53"
0145 LET FILES$[16]="IVM-12",FILES$[17]="IVT-04"
0160 CALL "SYC.DA",1,1,17,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0165 IF STATUS>0 THEN GOTO 9900
0170 LET ARE07_DEV=CHANNELS[1],ARE33_DEV=CHANNELS[2],ARE43_DEV=CHANNELS[3],ARM02_DEV=CHANNELS[4]
0175 LET ARM06_DEV=CHANNELS[5],ART01_DEV=CHANNELS[6],ART02_DEV=CHANNELS[7],ART03_DEV=CHANNELS[8]
0180 LET ART05_DEV=CHANNELS[9],ART07_DEV=CHANNELS[10],ART11_DEV=CHANNELS[11],ART13_DEV=CHANNELS[12]
0185 LET ART33_DEV=CHANNELS[13],ART43_DEV=CHANNELS[14],ART53_DEV=CHANNELS[15]
0190 LET IVM12_DEV=CHANNELS[16],IVT04_DEV=CHANNELS[17]
0200 REM " --- IOLIST's"
0210 ARE03A: IOLIST A0$,A[ALL]
0220 ARE13A: IOLIST W0$,W1$(1),W[ALL]
0230 ARE20A: IOLIST D0$(1),D1$(1),D[ALL]
0240 ARE33A: IOLIST C0$,C1$
0250 ARM01A: IOLIST *,X4$(1)
0255 ARM02A: IOLIST *,X3$(1)
0260 ARM09A: IOLIST S0$,S1$,S[ALL]
0270 ARM10E: IOLIST Y0$
0280 ART03A: IOLIST AH$,A[ALL]
0300 ART07A: IOLIST DH$(1),D1$(1),D[ALL]
0310 ART13A: IOLIST WH$,W1$,W[ALL]
0320 ART33A: IOLIST H0$,C1$
0325 ART43A: IOLIST ART43_K$
0330 ART53A: IOLIST ART53_K$
0340 IVM01A: IOLIST *,*,X2$(1)
0350 IVM02A: IOLIST *,T1$(1)
0360 IVW05A: IOLIST *,W[0]
0370 SAM01A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0372 SAM02A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0374 SAM03A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0376 SAM04A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0378 SAM05A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0380 SAM06A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0382 SAM07A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0384 SAM08A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0386 SAM09A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0388 SAM10A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0390 SAM11A: IOLIST X0$,X[ALL],Y[ALL],Z[ALL]
0395 SAM21A: IOLIST X0$
0500 REM " --- Initializations"
0510 PRECISION I[2]
0520 DIM A[10],S[1],W1$(64),W[14]
0550 DIM IV_FILES[44],IV_INFO$[3],IV_INFO[0],IV_PARAMS$[4],IV_REFS$[20],IV_REFS[20]
0560 LET IV_FILES[0]=SYS01_DEV,IV_FILES[1]=IVM01_DEV,IV_FILES[2]=IVM02_DEV,IV_FILES[4]=IVM04_DEV,IV_FILES[40]=IVW04_DEV
0570 LET IV_INFO$[0]=N0$
0580 LET IV_INFO[0]=G[0]
0590 LET IV_PARAMS$[0]=F0$(7,3),IV_PARAMS$[1]=F0$(4,3),IV_PARAMS$[2]=I2$,IV_PARAMS$[3]=I3$,IV_PARAMS$[4]=I4$
0600 REM " --- Additional File Opens"
0605 IF BR$="Y" THEN LET FILES$[18]="APM-12"
0610 IF JN$="Y" THEN LET FILES$[19]="ARM-09"
0615 IF GL$="Y" THEN LET FILES$[20]="GLT-04",FILES$[21]="GLT-05"
0625 IF LS$="Y" THEN LET FILES$[22]="ART-23",FILES$[23]="IVM-07",FILES$[24]="IVM-08",FILES$[25]="IVM-17",FILES$[26]="IVT-01",FILES$[27]="IVT-02",FILES$[28]="IVT-03"
0630 IF SA$="Y" THEN LET FILES$[29]="SAM-01",FILES$[30]="SAM-02",FILES$[31]="SAM-03",FILES$[32]="SAM-04",FILES$[33]="SAM-05",FILES$[34]="SAM-06",FILES$[35]="SAM-07",FILES$[36]="SAM-08",FILES$[37]="SAM-09",FILES$[38]="SAM-10",FILES$[39]="SAM-11",FILES$[40]="SAM-21"
0650 CALL "SYC.DA",1,18,40,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0655 IF STATUS>0 THEN GOTO 9900
0660 LET APM12_DEV=CHANNELS[18],ARM09_DEV=CHANNELS[19],GLT04_DEV=CHANNELS[20],GLT05_DEV=CHANNELS[21]
0665 LET ART23_DEV=CHANNELS[22],IVM07_DEV=CHANNELS[23],IVM08_DEV=CHANNELS[24],IVM17_DEV=CHANNELS[25]
0670 LET IVT01_DEV=CHANNELS[26],IVT02_DEV=CHANNELS[27],IVT03_DEV=CHANNELS[28]
0675 LET SAM01_DEV=CHANNELS[29],SAM02_DEV=CHANNELS[30],SAM03_DEV=CHANNELS[31],SAM04_DEV=CHANNELS[32]
0680 LET SAM05_DEV=CHANNELS[33],SAM06_DEV=CHANNELS[34],SAM07_DEV=CHANNELS[35],SAM08_DEV=CHANNELS[36]
0685 LET SAM09_DEV=CHANNELS[37],SAM10_DEV=CHANNELS[38],SAM11_DEV=CHANNELS[39],SAM21_DEV=CHANNELS[40]
0690 LET IV_FILES[7]=IVM07_DEV,IV_FILES[8]=IVM08_DEV,IV_FILES[12]=IVM12_DEV,IV_FILES[17]=IVM17_DEV
0695 LET IV_FILES[41]=IVT01_DEV,IV_FILES[42]=IVT02_DEV,IV_FILES[43]=IVT03_DEV,IV_FILES[44]=IVT04_DEV
0700 REM " --- Background"
0710 PRINT @(0,7),'CE',
0800 REM " --- Continue?"
0810 LET V4$="Are You Ready To Update The Sales Register"
0820 CALL "SYC.YN",0,V4$,0,V$,V3
0830 IF V$<>"YES" THEN GOTO 4500
0840 CALL "SYC.NB","Updating",M0+8,COLUMN
0850 REM " --- Disallow 'M'enu Option In Error Routine"
0860 LET EXIT_CTRL=1
0890 PRINT @(40,5),"1 - Sales Analysis And History"
1000 REM " --- Position File"
1090 READ (ARE04_DEV,KEY=N0$+"I",DOM=1100)
1100 REM " --- Main read"
1120 LET K0$=KEY(ARE04_DEV,END=4000)
1130 READ (ARE04_DEV)
1140 IF POS(N0$+"I"=K0$)<>1 THEN GOTO 4000
1150 EXTRACT (ARE03_DEV,KEY=K0$(1,2)+K0$(4)+"000",DOM=1100)IOL=ARE03A
1155 IF A0$(68,2)<>"YS" THEN GOTO 1100
1160 IF A0$(22,1)<>"I" THEN GOTO 1100
1165 LET A0$(69,1)="1"
1170 WRITE (ARE03_DEV,KEY=A0$(1,20))IOL=ARE03A
1190 PRINT @(COLUMN,11),FNF$(A0$(5,P[0]),M0$)," ",A0$(11,7),
1200 REM " --- Addition Reads"
1210 DIM B[2],X3$(64),X4$(325)
1220 FIND (ARM01_DEV,KEY=N0$+A0$(5,6),DOM=1230)IOL=ARM01A
1230 FIND (ARM02_DEV,KEY=N0$+A0$(5,6)+"  ",DOM=1240)IOL=ARM02A
1300 REM " --- Write Invoice History Header And Sorts"
1310 LET AH$=A0$,AH$(11,7)=AH$(42,7),AH$(42,7)=A0$(11,7)
1320 WRITE (ART03_DEV,KEY=AH$(1,20))IOL=ART03A
1330 LET ART43_K$=AH$(1,4)+AH$(11,7)+AH$(5,6)
1335 WRITE (ART43_DEV,KEY=ART43_K$)IOL=ART43A
1340 LET ART53_K$=AH$(1,4)+AH$(24,3)+AH$(11,7)+AH$(5,6)
1345 WRITE (ART53_DEV,KEY=ART53_K$)IOL=ART53A
1350 REM " --- Check for voids and branch"
1360 IF A0$(21,1)="V" THEN GOTO 1100
1400 REM " --- Write Manual Ship-To History"
1410 IF IH$<>"Y" THEN GOTO 1500
1420 IF X3$(38,1)<>"Y" THEN GOTO 1500
1430 FIND (ARE33_DEV,KEY=A0$(1,2)+A0$(5,13),DOM=1500)IOL=ARE33A
1440 LET H0$=C0$,H0$(9,7)=A0$(42,7)
1450 WRITE (ART33_DEV,KEY=H0$)IOL=ART33A
1500 REM " --- Copy Invoice Cash Receipts to History"
1510 IF A0$(99,1)<>"Y" THEN GOTO 1600
1520 DIM DH$(56),D0$(56),D1$(30),D[1]
1530 FIND (ARE20_DEV,KEY=A0$(1,17),DOM=1600)IOL=ARE20A
1540 LET DH$(1)=D0$,DH$(11,7)=D0$(50,7),DH$(50,7)=D0$(11,7)
1550 WRITE (ART07_DEV,KEY=DH$(1,17))IOL=ART07A
1900 REM " --- Position Invoice Detail File"
1920 READ (ARE13_DEV,KEY=K0$(1,2)+K0$(4,15),DOM=2000)
2000 REM " --- Read next line item"
2010 LET K$=KEY(ARE13_DEV,END=3600)
2020 IF K$(1,17)<>K0$(1,2)+K0$(4,15) THEN GOTO 3600
2030 READ (ARE13_DEV)IOL=ARE13A
2040 IF LF$="Y" THEN FIND (IVW05_DEV,KEY=W0$(1,17)+W0$(33)+W0$(18,3),ERR=2050)IOL=IVW05A
2050 REM " --- Write Invoice History Detail"
2060 IF IH$<>"Y" THEN GOTO 2100
2070 IF X3$(38,1)<>"Y" THEN GOTO 2100
2080 LET WH$=W0$,WH$(11,7)=A0$(42,7)
2090 WRITE (ART13_DEV,KEY=WH$(1,20))IOL=ART13A
2100 REM " --- Get Line Type"
2110 IF W1$(44,1)="N" THEN GOTO 3500
2120 IF W0$(21,1)=K2$ THEN GOTO 2200
2130 LET K2$=W0$(21,1)
2140 DIM Y0$(32)
2150 FIND (ARM10_DEV,KEY=N0$+"E"+W0$(21,1),DOM=2200)IOL=ARM10E
2200 REM " --- Commission Detail"
2240 IF POS(Y0$(25,1)="SNP")<>0 THEN IF W[6]>0 THEN LET B[0]=B[0]+W[6]
2250 IF W[6]<0 THEN LET B[1]=B[1]+W[6]
2260 IF POS(Y0$(25,1)="OM")<>0 THEN LET B[2]=B[2]+W[6]
2400 REM " --- Update Sales Analysis"
2405 IF SA$<>"Y" THEN GOTO 3500
2410 IF POS(Y0$(25,1)="SNPO")=0 THEN GOTO 3500
2420 IF POS(Y0$(25,1)="NPO") AND Y0$(32,1)="N" THEN GOTO 3500
2430 DIM X2$(62),T1$(64)
2440 IF Y0$(25,1)="N" THEN LET X2$(18,1)="P"
2450 FIND (IVM01_DEV,KEY=N0$+W0$(33,20),DOM=2460)IOL=IVM01A
2460 FIND (IVM02_DEV,KEY=N0$+W0$(31,2)+W0$(33,20),DOM=2470)IOL=IVM02A
2470 IF X2$(24,1)="W" THEN LET VENDOR$=T1$(22,6) ELSE LET VENDOR$=X2$(12,6)
2480 CALL "SYC.PB",N0$,SYS01_DEV,A0$(24,3),PERIOD$,YEAR$
2490 LET PERIOD=NUM(PERIOD$)
2500 REM " --- Customer"
2505 IF SA1$(1,1)<>"Y" OR POS(X3$(11,1)="PI")=0 OR POS(X2$(18,1)="PI")=0 THEN GOTO 2600
2510 LET SEGS=3
2515 DIM SEG_END[SEGS],X0$(33)
2520 LET SEG_END[1]=11,SEG_END[2]=14,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2530 LET X0$(1)=N0$+YEAR$+A0$(5,6)+W0$(23,3)+W0$(33,20),SA_DEV=SAM01_DEV
2535 IF X3$(11,1)="P" OR SA2$(1,1)="P" THEN LET SEGS=2
2540 IF SA2$(1,1)="C" THEN LET SEGS=1
2545 GOSUB 6000
2550 REM " --- Product/Item/Customer Xref"
2560 LET X0$=N0$+YEAR$+W0$(23,3)+W0$(33,20)+A0$(5,6)
2570 IF X3$(11,1)="P" OR SA2$(1,1)="P" THEN LET X0$(8,20)=""
2580 IF SA2$(1,1)="C" THEN LET X0$(5,23)=""
2590 WRITE (SAM21_DEV,KEY=X0$)IOL=SAM21A
2600 REM " --- Territory"
2605 IF SA1$(2,1)<>"Y" OR POS(X2$(18,1)="PI")=0 THEN GOTO 2650
2610 LET SEGS=3
2615 DIM SEG_END[SEGS],X0$(30)
2620 LET SEG_END[1]=8,SEG_END[2]=11,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2630 LET X0$(1)=N0$+YEAR$+A0$(72,3)+W0$(23,3)+W0$(33,20),SA_DEV=SAM02_DEV
2635 IF X2$(18,1)="P" OR SA2$(2,1)="P" THEN LET SEGS=2
2640 IF SA2$(2,1)="T" THEN LET SEGS=1
2645 GOSUB 6000
2650 REM " --- Salesperson"
2655 IF SA1$(3,1)<>"Y" OR POS(X2$(18,1)="PI")=0 THEN GOTO 2700
2660 LET SEGS=3
2665 DIM SEG_END[SEGS],X0$(30)
2670 LET SEG_END[1]=8,SEG_END[2]=11,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2680 LET X0$(1)=N0$+YEAR$+A0$(59,3)+W0$(23,3)+W0$(33,20),SA_DEV=SAM03_DEV
2685 IF X2$(18,1)="P" OR SA2$(3,1)="P" THEN LET SEGS=2
2690 IF SA2$(3,1)="S" THEN LET SEGS=1
2695 GOSUB 6000
2700 REM " --- Customer Type"
2705 IF SA1$(4,1)<>"Y" OR POS(X3$(11,1)="PI")=0 OR POS(X2$(18,1)="PI")=0 THEN GOTO 2750
2710 LET SEGS=3
2715 DIM SEG_END[SEGS],X0$(30)
2720 LET SEG_END[1]=8,SEG_END[2]=11,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2730 LET X0$(1)=N0$+YEAR$+X3$(34,3)+W0$(23,3)+W0$(33,20),SA_DEV=SAM04_DEV
2735 IF X2$(18,1)="P" OR SA2$(4,1)="P" THEN LET SEGS=2
2740 IF SA2$(4,1)="C" THEN LET SEGS=1
2745 GOSUB 6000
2750 REM " --- Ship-To"
2755 IF SA1$(5,1)<>"Y" OR POS(X3$(11,1)="PI")=0 OR POS(X2$(18,1)="PI")=0 THEN GOTO 2800
2760 LET SEGS=3
2765 DIM SEG_END[SEGS],X0$(36)
2770 LET SEG_END[1]=11,SEG_END[2]=17,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2780 LET X0$(1)=N0$+YEAR$+A0$(5,6)+A0$(102,6)+W0$(33,20),SA_DEV=SAM05_DEV
2785 IF X3$(11,1)="P" OR SA2$(5,1)="P" THEN LET SEGS=2
2790 IF SA2$(5,1)="C" THEN LET SEGS=1
2795 GOSUB 6000
2800 REM " --- Standard Industry Code"
2805 IF SA1$(6,1)<>"Y" OR POS(X2$(18,1)="PI")=0 OR FNP$(X4$(257,8))="" THEN GOTO 2850
2810 LET SEGS=3
2815 DIM SEG_END[SEGS],X0$(35)
2820 LET SEG_END[1]=13,SEG_END[2]=16,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2830 LET X0$(1)=N0$+YEAR$+X4$(257,8)+W0$(23,3)+W0$(33,20),SA_DEV=SAM06_DEV
2835 IF X2$(18,1)="P" OR SA2$(6,1)="P" THEN LET SEGS=2
2840 IF SA2$(6,1)="C" THEN LET SEGS=1
2845 GOSUB 6000
2850 REM " --- Product Type"
2855 IF SA1$(7,1)<>"Y" OR POS(X2$(18,1)="PI")=0 THEN GOTO 2900
2860 LET SEGS=2
2865 DIM SEG_END[SEGS],X0$(27)
2870 LET SEG_END[1]=8,SEG_END[2]=LEN(X0$)+1; REM "End of segment + 1
2880 LET X0$(1)=N0$+YEAR$+W0$(23,3)+W0$(33,20),SA_DEV=SAM07_DEV
2885 IF X2$(18,1)="P" OR SA2$(7,1)="P" THEN LET SEGS=1
2895 GOSUB 6000
2900 REM " --- Warehouse"
2905 IF SA1$(8,1)<>"Y" OR POS(X2$(18,1)="PI")=0 THEN GOTO 2950
2910 LET SEGS=3
2915 DIM SEG_END[SEGS],X0$(29)
2920 LET SEG_END[1]=7,SEG_END[2]=10,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2930 LET X0$(1)=N0$+YEAR$+W0$(31,2)+W0$(23,3)+W0$(33,20),SA_DEV=SAM08_DEV
2935 IF X2$(18,1)="P" OR SA2$(8,1)="P" THEN LET SEGS=2
2940 IF SA2$(8,1)="W" THEN LET SEGS=1
2945 GOSUB 6000
2950 REM " --- Stocking Vendor"
2955 IF SA1$(9,1)<>"Y" OR POS(X2$(18,1)="PI")=0 OR FNP$(VENDOR$)="" THEN GOTO 3000
2960 LET SEGS=3
2965 DIM SEG_END[SEGS],X0$(33)
2970 LET SEG_END[1]=11,SEG_END[2]=14,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
2980 LET X0$(1)=N0$+YEAR$+VENDOR$+W0$(23,3)+W0$(33,20),SA_DEV=SAM09_DEV
2985 IF X2$(18,1)="P" OR SA2$(9,1)="P" THEN LET SEGS=2
2990 IF SA2$(9,1)="V" THEN LET SEGS=1
2995 GOSUB 6000
3000 REM " --- Distribution Code"
3005 IF SA1$(10,1)<>"Y" OR POS(X2$(18,1)="PI")=0 THEN GOTO 3050
3010 LET SEGS=3
3015 DIM SEG_END[SEGS],X0$(29)
3020 LET SEG_END[1]=7,SEG_END[2]=10,SEG_END[3]=LEN(X0$)+1; REM "End of segment + 1
3030 LET X0$(1)=N0$+YEAR$+A0$(66,2)+W0$(23,3)+W0$(33,20),SA_DEV=SAM10_DEV
3035 IF X2$(18,1)="P" OR SA2$(10,1)="P" THEN LET SEGS=2
3040 IF SA2$(10,1)="D" THEN LET SEGS=1
3045 GOSUB 6000
3050 REM " --- Non-Stock"
3055 IF SA1$(11,1)<>"Y" OR Y0$(25,1)<>"N" THEN GOTO 3100
3060 LET SEGS=2
3065 DIM SEG_END[SEGS],X0$(47)
3070 LET SEG_END[1]=8,SEG_END[2]=LEN(X0$)+1; REM "End of segment + 1
3080 LET X0$(1)=N0$+YEAR$+W0$(23,3)+W1$(1,40),SA_DEV=SAM11_DEV
3085 IF SA2$(11,1)="P" THEN LET SEGS=1
3095 GOSUB 6000
3500 REM " --- Loop back for next line item"
3590 GOTO 2000
3600 REM " --- Job Numbers"
3610 IF JN$<>"Y" THEN GOTO 3900
3620 IF FNP$(A0$(86,10))="" THEN GOTO 3900
3630 EXTRACT (ARM09_DEV,KEY=N0$+A0$(5,6)+A0$(86,10),DOM=3690)IOL=ARM09A
3650 LET S0$(37,3)=A0$(24,3),S[1]=S[1]+B[0]-B[1]-A[2]+A[1]+B[2]+A[0]
3660 IF S0$(34,3)="   " THEN LET S0$(34,3)=A0$(24,3)
3680 WRITE (ARM09_DEV,KEY=S0$(1,18))IOL=ARM09A
3900 REM " --- Loop back for next invoice"
3990 GOTO 1100
4000 REM " --- All done"
4090 RUN "OPU.CB"
4500 REM " --- NO to Update: Clear On-Sales-Register Flags
4510 READ (ARE04_DEV,KEY=N0$+"I",DOM=4511)
4520 LET K0$=KEY(ARE04_DEV,END=4600)
4530 READ (ARE04_DEV)
4540 IF POS(N0$+"I"=K0$)<>1 THEN GOTO 4600
4550 EXTRACT (ARE03_DEV,KEY=K0$(1,2)+K0$(4)+"000",DOM=4590)IOL=ARE03A
4560 IF A0$(69,1)<>"S" THEN GOTO 4590
4570 LET A0$(69,1)="N"
4580 WRITE (ARE03_DEV,KEY=A0$(1,20))IOL=ARE03A
4590 GOTO 4520
4600 GOTO 9900
6000 REM " --- Write Sales Analysis Records"
6005 LET X0$(SEG_END[SEGS])=""
6010 DIM X[12],Y[12],Z[12]
6020 FIND (SA_DEV,KEY=X0$,DOM=6030)IOL=SAM01A
6030 LET X[PERIOD-1]=X[PERIOD-1]+W[4]
6040 PRECISION 2
6050 LET Y[PERIOD-1]=Y[PERIOD-1]+W[0]*W[4]
6060 PRECISION I[2]
6070 LET Z[PERIOD-1]=Z[PERIOD-1]+W[6]
6080 WRITE (SA_DEV,KEY=X0$)IOL=SAM01A
6090 RETURN 
8000 REM " --- Functions"
8095 DEF FNP$(Q$)=CVS(Q$,2)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
