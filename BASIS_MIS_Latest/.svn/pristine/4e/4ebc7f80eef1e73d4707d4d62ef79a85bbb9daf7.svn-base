0010 REM "SYC - Standard Error Handler"
0020 REM "Program SYC.EA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0042 REM "XMODE      : 0=Return to menu or caller permitted (input)"
0044 REM "            1=Only RETRY or ESCAPE permitted (input)"
0046 REM "PROGNAME$ : Calling program name (PGM(-2)) (input)"
0048 REM "ERROR     : Error number (ERR) (input)"
0050 REM "LINE      : Line number of error (TCB(5)) (input)"
0052 REM "STATEMENT$: Statement that caused error (output)"
0054 REM "ACTION    : Action for caller to perform on exit (output)"
0056 REM "            1=RETRY / 2=ESCAPE / 3=Return to menu or caller"
0058 REM "ROW       : Last line in current window (output)"
0060 REM 
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER XMODE,PROGNAME$,ERROR,LINE,STATEMENT$,ACTION,ROW
0200 REM " --- IOLIST's"
0210 SYM04A: IOLIST *,*,PATH$
0230 SYM03A: IOLIST *,X1$,X2$,K,R,B
0500 REM " --- Initializations"
0510 DIM J1$(80,"_")
0550 LET SLASH$="/",STATEMENT$=FNP$(STATEMENT$),PROGNAME$=FNP$(PROGNAME$)
0560 LET PATH$="",EC$="<Enter>=Continue",ER$="<Enter>=Retry",F4$="/<F4>=End"
0570 LET CHANNEL=0,TEMPFILE=0,SYM03_DEV=0,SYM04_DEV=0,F3$="/<F3>=Display"
0580 LET EXPANSION=ERROR=1 OR ERROR=2 OR ERROR=12 OR ERROR=46,ACTION=1
0600 REM " --- Other file opens"
0610 IF EXPANSION=0 THEN GOTO 0700
0620 LET SYM03_DEV=UNT
0630 OPEN (SYM03_DEV)"SYM-03"
0640 LET SYM04_DEV=UNT
0650 OPEN (SYM04_DEV)"SYM-04"
0700 REM " --- Background"
0710 LET WIDTH=80,HEIGHT=3,WIN_X=0,WIN_Y=23-HEIGHT
0720 LET TITLE$="Error Recovery",NAME$=""
0730 CALL "SYC.WA",0,WIDTH,HEIGHT,WIN_X,WIN_Y,TITLE$,NAME$
0800 REM " --- Retrieve proper line of code for called programs"
0810 CALL "SYC.UB",0,PROGNAME$,STATEMENT$,STR(LINE),STATUS
0900 REM " --- Branch based on ERROR"
0910 IF ERROR=0 THEN GOTO 1000
0920 IF ERROR=1 THEN GOTO 2000
0930 IF ERROR=2 THEN GOTO 2000
0940 IF ERROR=12 THEN GOTO 2000
0950 IF ERROR=33 THEN GOTO 1200
0960 IF ERROR=46 THEN GOTO 2000
0990 GOTO 4000
1000 REM " --- Error 0 (File)"
1010 IF TCB(11)=7 THEN GOTO 1100
1020 LET MESSAGE$="File or Record is in use ("+ER$+F3$
1030 IF CONTINUE=0 THEN LET MESSAGE$=MESSAGE$+F4$
1040 LET MESSAGE$=MESSAGE$+")"
1050 GOSUB 7500
1060 IF V3=3 THEN GOTO 4100
1070 IF V3=4 THEN GOTO 4900
1090 GOTO 4700
1100 REM " --- Error 0 (Printer)"
1110 LET MESSAGE$="Please Turn The Printer On ("+ER$+F3$+F4$+")"
1120 GOSUB 7500
1130 IF V3=3 THEN GOTO 4100
1140 IF V3=4 THEN GOTO 4900
1190 GOTO 4700
1200 REM " --- Error 33"
1210 CALL "SYC.DP",ERR=1220,"D","",STATUS
1290 GOTO 4000
2000 REM " --- File definition or expansion required"
2100 REM " --- Error 12"
2110 IF ERROR<>12 THEN GOTO 3000
2120 LET X0=POS("OPEN"=STATEMENT$)
2130 IF X0=0 THEN GOTO 4000
2140 LET X1=POS("("=STATEMENT$(X0))
2150 IF X1=0 THEN GOTO 4000
2160 LET X2=POS($22$=STATEMENT$(X0+X1))
2170 IF X2=0 THEN GOTO 4000
2180 LET X3=POS($22$=STATEMENT$(X0+X1+X2))
2190 IF X3=0 THEN GOTO 4000
2200 REM " --- Extract filename from OPEN statement"
2210 LET FILENAME$=STATEMENT$(X0+X1+X2,X3-1),MODULE$="  "
2220 IF LEN(FILENAME$)>1 THEN LET MODULE$=FILENAME$(1,2)
2300 REM " --- Retrieve system record and define file"
2310 FIND (SYM04_DEV,KEY=MODULE$,DOM=4000)IOL=SYM04A
2320 FIND (SYM03_DEV,KEY=FILENAME$,DOM=4000)IOL=SYM03A
2330 IF POS(X1$(37,1)="DISM")=0 THEN GOTO 4000
2340 LET PATH$=FNP$(PATH$(1,50))
2350 IF PATH$(LEN(PATH$),1)<>SLASH$ THEN LET PATH$=PATH$+SLASH$
2360 LET PATHNAME$=PATH$+FILENAME$,FILETYPE$=X1$(37,1),NEWFILE$=PATHNAME$
2370 PRINT @(1,0),"Defining ",PATHNAME$,'RB','CL',
2380 GOSUB 6000
2385 IF STATUS>0 THEN GOTO 4000
2390 GOTO 4700
3000 REM " --- File Expansion - Retrieve FID and determine path"
3010 LET CHANNEL=TCB(11),FID$=FID(CHANNEL),FIN$=FIN(CHANNEL)
3020 IF LEN(FID$)=2 THEN GOTO 4000
3030 LET PATHNAME$=FID$(9),PATH$="",FILENAME$=PATHNAME$,CHANNELS$=CHN
3040 LET P=POS(SLASH$=PATHNAME$,-1),TEMPFILE$="TEMP"+FID(0),USED$=""
3050 IF P>0 THEN LET PATH$=PATHNAME$(1,P),FILENAME$=PATHNAME$(P+1)
3100 REM " --- File open on more than one channel?"
3110 FOR X=1 TO LEN(CHANNELS$) STEP 2
3120 LET P=DEC($00$+CHANNELS$(X,2),ERR=3190),X$=FID(P,ERR=3190)
3125 IF LEN(X$)>8 THEN LET X$=X$(9)
3130 IF POS(TEMPFILE$=PATHNAME$)>0 THEN GOTO 3160
3140 IF X$<>PATHNAME$ THEN GOTO 3190
3150 LET USED$=USED$+CHANNELS$(X,2)
3160 CLOSE (P)
3190 NEXT X
3200 REM " --- Determine new key size, record length or number of records"
3210 LET T=ASC(FID$(1,1)),K=DEC(FID$(2,1)),B=DEC(FID$(7,2)),R=DEC(FIN$(77,4))
3220 IF T<>0 AND T<>2 AND T<>6 THEN GOTO 4000
3230 IF T=2 THEN IF B<>0 THEN LET T=3
3240 IF ERROR=46 THEN LET K=K+INT(K*.1+1)
3250 IF ERROR=1 THEN LET B=B+INT(B*.1+1)
3260 IF ERROR<>2 THEN GOTO 3300
3270 IF R<500 THEN LET R=MAX(500,R+INT(R*.25+1)); GOTO 3300
3280 IF R<1000 THEN LET R=MAX(1000,R+INT(R*.25+1)); GOTO 3300
3290 LET R=R+INT(R*.25+1)
3300 REM " --- Define temporary file"
3310 ERASE TEMPFILE$,ERR=3330
3320 GOTO 3300
3330 LET FILETYPE$="M",NEWFILE$=PATH$+TEMPFILE$
3340 IF T=0 THEN LET FILETYPE$="I"
3350 IF T=2 THEN LET FILETYPE$="S"
3360 IF T=3 THEN LET FILETYPE$="D"
3370 GOSUB 6000
3400 REM " --- Position and lock source file"
3410 CLOSE (CHANNEL)
3420 OPEN (CHANNEL)PATHNAME$
3430 LOCK (CHANNEL,ERR=3900)
3440 LET TEMPFILE=UNT,NUMBER=0,P=20+LEN(PATHNAME$)
3450 OPEN (TEMPFILE,ERR=3950)NEWFILE$
3480 PRINT @(1,0),"Expanding ",PATHNAME$," - Record 1",
3490 IF FILETYPE$="I" THEN GOTO 3600
3500 REM " --- Copy records from keyed source file to temporary file"
3510 IF MOD(NUMBER,10)=0 THEN PRINT @(P,0),NUMBER," of",R,
3520 LET K$=KEY(CHANNEL,END=3700,ERR=3950),NUMBER=NUMBER+1
3530 IF FILETYPE$="S" THEN GOTO 3570
3540 READ RECORD(CHANNEL,END=3700,ERR=3950)X$
3550 WRITE RECORD(TEMPFILE,KEY=K$,ERR=3950)X$
3560 GOTO 3500
3570 READ (CHANNEL,ERR=3950)
3580 WRITE (TEMPFILE,KEY=K$,ERR=3950)
3590 GOTO 3500
3600 REM " --- Copy records from indexed source file to temporary file"
3610 IF MOD(NUMBER,10)=0 THEN PRINT @(P,0),NUMBER,
3620 READ RECORD(CHANNEL,END=3700,ERR=3950)X$
3630 WRITE RECORD(TEMPFILE,ERR=3950)X$
3640 LET NUMBER=NUMBER+1
3690 GOTO 3600
3700 REM " --- Erase original source and rename temp file"
3710 CLOSE (CHANNEL)
3720 CLOSE (TEMPFILE,ERR=3730)
3730 ERASE PATHNAME$,ERR=3750
3740 GOTO 3730
3750 RENAME NEWFILE$,FILENAME$,ERR=3770
3760 OPEN (CHANNEL)PATHNAME$
3765 GOTO 3800
3770 LET MESSAGE$="Unable to rename "+NEWFILE$+" ("+EC$+")"
3790 GOTO 3990
3800 REM " --- Reopen file on other channels (if they were before)"
3810 IF USED$="" THEN GOTO 4700
3820 FOR X=1 TO LEN(USED$) STEP 2
3830 LET P=DEC($00$+USED$(X,2))
3840 OPEN (P,ERR=3850)PATHNAME$
3850 NEXT X
3890 GOTO 4700
3900 REM " --- Can't lock file for expansion"
3910 LET MESSAGE$="Can't lock "+FILENAME$+" for expansion ("+ER$+F4$+")"
3920 GOSUB 7500
3930 IF V3<>4 THEN GOTO 3400
3950 REM " --- I/O error during expansion"
3960 LET MESSAGE$="Error "+STR(ERR)+" during expansion of "+FILENAME$+" ("+EC$+")"
3990 GOSUB 7500
4000 REM " --- Display error number, prompt for action"
4010 LET MESSAGE$="*** Exception Code "+STR(ERROR)+" *** ("+ER$+F3$+")"
4020 GOSUB 7500
4030 IF V3=3 THEN GOTO 4100
4040 IF V3<>0 THEN GOTO 4000
4050 IF V$<>"" THEN GOTO 4000
4090 GOTO 4700
4100 REM " --- Display the error"
4110 LET X$="/M=Menu",V1$="L"
4115 IF TCB(13)>1 THEN LET X$="/X=Exit"
4120 IF XMODE>0 THEN LET X$=""
4130 LET MESSAGE$="Error #"+STR(ERROR)+" in Line "+STR(LINE)+" of "+PROGNAME$+" ("+ER$+"/E=Escape"+X$+"/S=Show)"
4140 GOSUB 7500
4150 IF V3=4 THEN LET V$="E"
4155 IF V$="" THEN GOTO 4700
4160 IF V$="E" THEN GOTO 4800
4165 IF V$="S" THEN GOTO 4300
4170 IF V$="M" THEN GOTO 4900
4175 IF V$="X" THEN GOTO 4900
4190 ON POS(V$="ESMXR") GOTO 4100,4800,4300,4900,4900,9800
4300 REM " --- Retrieve version number of program"
4310 LET VERSION$="(Unknown)"
4320 CALL "SYC.UB",0,PROGNAME$,X$,"24",STATUS
4330 IF STATUS>0 THEN GOTO 4400
4340 LET P=POS("Version"=X$)
4350 IF P=0 OR P+12>LEN(X$) THEN GOTO 4400
4360 LET VERSION$=X$(P+8,5)
4400 REM " --- Display the offending line of code"
4410 LET OWIDTH=80,OHEIGHT=10,OWIN_X=0,OWIN_Y=23-HEIGHT-OHEIGHT,SNAME$=""
4420 LET X$="Last Host Error was "+STR(TCB(10))+" ("+EC$+")",X=OWIDTH-2
4430 LET VERSION$=PROGNAME$+" Version "+VERSION$,X$=VERSION$+" - "+X$
4440 LET TITLE$="Program Source Code",V1=FNC(X$,X),V2=OHEIGHT-3
4450 IF STATEMENT$="" THEN LET STATEMENT$="Program Source Code Is Not Available"
4460 IF LEN(STATEMENT$)>6*X THEN LET STATEMENT$=STATEMENT$(1,6*X)
4470 CALL "SYC.WA",0,OWIDTH,OHEIGHT,OWIN_X,OWIN_Y,TITLE$,SNAME$
4480 CALL "SYC.WC",1,0,X,1,0,V2-1,0
4490 PRINT 'WRAP'("ON"),@(0,0),STATEMENT$,@(0,V2),'CL',@(V1,V2),X$,'WRAP'("OFF"),
4500 REM " --- <Enter> to continue"
4510 LET V0=1,V1=V1+LEN(X$)+2
4520 GOSUB 7000
4530 CALL "SYC.WB",NAME$,0
4540 CALL "SYC.WD",SNAME$
4590 GOTO 4100
4700 REM " --- ACTION=1 Retry"
4710 LET ACTION=1
4790 GOTO 9900
4800 REM " --- ACTION=2 (ESCAPE)"
4810 LET ACTION=2
4890 GOTO 9900
4900 REM " --- ACTION=3 (Return to menu or calling program)"
4910 LET ACTION=3
4990 GOTO 9900
6000 REM " --- Define a new file"
6010 LET STATUS=12,R=MAX(100,R)
6020 IF FILETYPE$="D" THEN DIRECT NEWFILE$,K,R,B,ERR=6090
6030 IF FILETYPE$="I" THEN INDEXED NEWFILE$,R,B,ERR=6090
6040 IF FILETYPE$="S" THEN SORT NEWFILE$,K,R,ERR=6090
6050 IF FILETYPE$="M" THEN MKEYED NEWFILE$,K,0,B,ERR=6090
6060 LET STATUS=0
6090 RETURN 
7000 REM " --- Error Routine Input Processing - Local Input/No call to SYC.IA!"
7010 LET V$="",CL$='CL'
7020 PRINT 'CURSOR'("ON"),@(V1-1,V2),'SB',"[",J1$(1,V0),"]",'SF',
7030 INPUTE (0,ERR=7100)V1,V2,V0,"_",V$
7040 LET V3=CTL
7045 IF V3=8 THEN CALL "SYC.SP",ERR=7000; GOTO 7000
7050 IF LEN(V$)>V0 THEN GOTO 7020
7055 IF V1$="L" THEN LET CL$=""
7060 PRINT @(0,V2),CL$,'CURSOR'("OFF"),
7080 IF V$<>"" THEN LET V$=FNU$(V$)
7090 RETURN 
7100 REM " --- Error during input"
7110 PRINT @(0,0),'CL',"INPUT Error",ERR," TCB(5)=",TCB(5)," ",
7120 INPUT *,
7130 LET V3=3,V$="E"
7190 RETURN 
7500 REM " --- Display message and prompt for input"
7510 LET V0=1,V1=MAX(FNC(MESSAGE$,WIDTH)-2,1),V2=0
7520 PRINT @(0,V2),'CL',@(V1,V2),MESSAGE$,'RB',
7530 LET V1=V1+LEN(MESSAGE$)+2
7540 GOSUB 7000
7590 RETURN 
8000 REM " --- Functions"
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8090 DEF FNP$(Q$)=CVS(Q$,2)
8095 DEF FNU$(Q$)=CVS(Q$,4)
9000 REM " --- Local Error - Set mode for escape to BASIC prompt"
9010 LET ACTION=2
9020 SETERR 0
9090 GOTO 9900
9800 REM " --- Release"
9890 RELEASE 
9900 REM " --- Return to caller"
9910 CLOSE (TEMPFILE,ERR=9911)
9915 CLOSE (SYM03_DEV,ERR=9916)
9920 CLOSE (SYM04_DEV,ERR=9921)
9925 IF NAME$<>"" THEN CALL "SYC.WD",NAME$
9930 IF SNAME$<>"" THEN CALL "SYC.FD",SNAME$
9940 IF XMODE>0 THEN IF ACTION=3 THEN LET ACTION=1
9945 LET FIN$=FIN(0),ROW=MIN(DEC(FIN$(8,1)),23)-1
9950 EXIT 
9999 END
