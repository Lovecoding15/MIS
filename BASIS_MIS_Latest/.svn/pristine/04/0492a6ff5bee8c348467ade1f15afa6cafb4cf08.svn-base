0010 REM "POU - Purchase Order Receipt Register Update
0020 REM "Program POU.DA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.5 - 01Dec98 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "10Jul96 JAL: Take correct branch for O type lines (1790)"
0032 REM "11Jul96 JAL: Don't update qty on hand for dropships (2005,2020,2205,6240-6270)"
0033 REM "15Jul96 WGH: Prevent possible Error 40 in line 1810 if Conversion Factor is zero (1805)"
0034 REM "01Aug96 WGH: Not removing POE-34 and POE-54 records (3530-3540)"
0035 REM "27Aug96 WGH: Not writing PO Number to IVT-04 (6220)"
0036 REM "27Aug96 WGH: Not removing POE-24 records (3100-3150)"
0037 REM "04Sep96 WGH: For lotted/serialized PO Receipts, adjust IVM-02 Replacement, Last PO and Unit Costs for the item's detail line average cost (1830,1870,1940-1950,2010-2020)"
0038 REM "23Oct96 Caj: Not removing POE-44 records (3020)
0039 REM "18Nov96 JWK: Not calculating lead time correctly (1110)
0040 REM "03Jan97 JJD: Calculate Nonstock line item info correctly (590,1250,1805,2475)"
0041 REM "07Jan97 JJD: Update Work Order Special Order materials correctly (2550,6010,6040,6050,6060)"
0042 REM "07Jan97 JJD: Pass L/S item price to IVC.UA (6250)"
0043 REM "22Jan97 WGH: If more are received than were ordered, treat as received complete (3220)"
0044 REM "13May97 WGH: Adjust on-order qty for when PO is received complete (1830,1950,2030,3310-3370,6100,6110,6210)"
0045 REM "11Feb97 JAL: Only remove msg lines for completely received lines (3220)"
0046 REM "17Feb97 JJD: Don't write Special Order material receipts to WOT-01 (2500-2620)"
0047 REM "08Apr97 JAL: Correct Inventory & PPV posting(s) when using standard costing (1720-1725,2883)"
0048 REM "21Apr97 JWK: Received complete not removing POE-32 records (3720)
0049 REM "29Sep97 WGH: Prevent creating orphan POE-12 records when using partial QA receipts (1130,3260,3615,6300-6390)"
0050 REM "27Oct97 WGH: Retain message line and vendor part line history (1360-1370,1790,2905-2990,3220,3240)"
0051 REM "13Apr98 JWK: Writes wrong subcontract seq number to WO files (2470)
0052 REM "15Jun98 WGH: Prevent writing $FF$ as Transaction Sequence Number in WOM-07 and WOT-31 (6010-6020,6040)"
0053 REM "24Jul98 JWK: Consider conversion factor in G/L Posting (1725)
0054 REM "01May99 WGH: Don't change PO Status Flag in Shop Floor Control unless received some or PO received complete (2305-2315)"
0060 REM 
0080 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0103 CLOSE (7,ERR=0105)
0105 LET FILES=36
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0115 LET FILES$[1]="POE-02",FILES$[2]="POE-12",FILES$[3]="POE-32"
0120 LET FILES$[4]="POE-34",FILES$[5]="POE-42",FILES$[6]="POE-44"
0125 LET FILES$[7]="POE-52",FILES$[8]="POE-54",FILES$[9]="POT-04"
0130 LET FILES$[10]="POT-14",FILES$[11]="POT-24",FILES$[12]="POT-34"
0135 LET FILES$[13]="POT-44",FILES$[14]="APM-06",FILES$[15]="APM-10"
0140 LET FILES$[16]="IVM-03",FILES$[17]="IVM-05",FILES$[18]="IVM-12"
0145 LET FILES$[19]="IVT-04"
0150 CALL "SYC.DA",1,1,19,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0155 IF STATUS THEN GOTO 9900
0160 LET POE02_DEV=CHANNELS[1],POE12_DEV=CHANNELS[2],POE32_DEV=CHANNELS[3]
0165 LET POE34_DEV=CHANNELS[4],POE42_DEV=CHANNELS[5],POE44_DEV=CHANNELS[6]
0170 LET POE52_DEV=CHANNELS[7],POE54_DEV=CHANNELS[8],POT04_DEV=CHANNELS[9]
0175 LET POT14_DEV=CHANNELS[10],POT24_DEV=CHANNELS[11],POT34_DEV=CHANNELS[12]
0180 LET POT44_DEV=CHANNELS[13],APM06_DEV=CHANNELS[14],APM10_DEV=CHANNELS[15]
0185 LET IVM03_DEV=CHANNELS[16],IVM05_DEV=CHANNELS[17],IVM12_DEV=CHANNELS[18]
0190 LET IVT04_DEV=CHANNELS[19]
0200 REM " --- IOLIST's"
0210 POE04A: IOLIST A0$(1),A1$(1),A2$,A3$,A[ALL]
0220 APM01A: IOLIST B0$(1),B1$(1)
0230 IVM01A: IOLIST C0$(1),C1$(1),C2$(1),C3$,C4$,C5$,C6$(1),C[ALL]
0240 IVM02A: IOLIST D0$(1),D1$(1),D2$,D[ALL]
0250 POE02A: IOLIST S0$(1),S1$(1),S2$,S3$,S[ALL]
0260 APM06A: IOLIST U0$(1),U1$(1),U[ALL]
0270 POT04A: IOLIST FLIPPEDA0$(1),A1$(1),A2$,A3$,A[ALL]
0280 WOE01A: IOLIST T0$(1),T1$(1),T[ALL]
0290 WOM07A: IOLIST L0$(1)
0300 WOM10A: IOLIST U0$(1),U1$(1)
0310 POE14A: IOLIST W0$(1),W1$(1),W2$(1),W3$(1),W4$(1),W5$,W6$,W[ALL]
0315 POE24A: IOLIST U0$(1),U1$(1),U2$,U[ALL]
0320 POE12A: IOLIST R0$(1),R1$(1),R2$(1),R3$(1),R4$(1),R5$,R6$,R[ALL]
0330 POT14A: IOLIST FLIPPEDW0$(1),W1$(1),W2$(1),W3$(1),W4$(1),W5$,W6$,W[ALL]
0340 POM02A: IOLIST Y0$(1),Y1$(1),Y2$(1)
0350 ARM10D: IOLIST Z0$(1),Z1$(1)
0360 POT24A: IOLIST XT2$
0365 POT34A: IOLIST XT3$
0370 POT44A: IOLIST XT4$
0380 WOT21A: IOLIST L0$(1),L1$(1),L[ALL]
0390 WOT31A: IOLIST L0$(1),L1$(1),L[ALL]
0500 REM " --- Initializations"
0505 PRECISION I[1]
0510 DIM A0$(22),A1$(160),A[8],B0$(8),B1$(195),Y0$(4),Y1$(32),MESSAGE$[2]
0515 DIM FLIPPEDA0$(22),FLIPPEDW0$(25)
0520 DIM S0$(15),S1$(160),S[8],R0$(18),R1$(48),R2$(32),R3$(22),R4$(40),R[12]
0525 DIM W0$(25),W1$(48),W2$(32),W3$(22),W4$(40),W[12],Z0$(32),Z1$(11*G[4])
0530 DIM FILES[44],PARAMS[10],PARAMS$[10],ITEM$[3],REFS$[20],REFS[20]
0540 DIM GLFILES[20],GLPARAMS$[20],GLPARAMS[20],W$[10]
0575 LET ITEM$[0]=N0$,PARAMS[0]=G[0],PARAMS$[0]=F0$(7,3),PARAMS$[1]=F0$(4,3)
0580 LET PARAMS$[2]=I2$,PARAMS$[3]=I3$,PARAMS$[4]=I4$,ACTION$="RC"
0585 IF REPLENISHMENT$="Y" THEN CALL "SYC.PA",SYS01_DEV,I[7],G[0],X1$,YEAREND$,STATUS
0590 LET QTY=0,COST=0,PO_EXTENSION=0
0600 REM " --- Additional File Opens"
0605 IF LS$="N" THEN GOTO 0620
0610 LET FILES$[20]="IVM-07",FILES$[21]="IVM-08",FILES$[22]="IVM-17"
0615 LET FILES$[23]="IVT-01",FILES$[24]="IVT-03"
0620 IF GL$="N" THEN GOTO 0630
0625 LET FILES$[25]="GLT-04",FILES$[26]="GLT-05"
0630 IF SF$="N" THEN GOTO 0675
0635 IF ISSUES=0 THEN IF SUBCONTRACTS=0 THEN GOTO 0675
0640 LET FILES$[27]="WOM-07"
0645 IF SUBCONTRACTS=0 THEN GOTO 0655
0650 LET FILES$[28]="WOE-32",FILES$[29]="WOT-31"
0655 IF ISSUES=0 THEN GOTO 0675
0660 LET FILES$[30]="WOE-13",FILES$[31]="WOE-15",FILES$[32]="WOE-22"
0665 LET FILES$[33]="WOE-23",FILES$[34]="WOE-25",FILES$[35]="WOT-21"
0670 IF LS$="Y" THEN LET FILES$[36]="WOE-14"
0675 CALL "SYC.DA",1,20,FILES,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0677 IF STATUS THEN GOTO 9900
0680 LET IVM07_DEV=CHANNELS[20],IVM08_DEV=CHANNELS[21],IVM17_DEV=CHANNELS[22]
0683 LET IVT01_DEV=CHANNELS[23],IVT03_DEV=CHANNELS[24],GLT04_DEV=CHANNELS[25]
0685 LET GLT05_DEV=CHANNELS[26],WOM07_DEV=CHANNELS[27],WOE32_DEV=CHANNELS[28]
0687 LET WOT31_DEV=CHANNELS[29],WOE13_DEV=CHANNELS[30],WOE15_DEV=CHANNELS[31]
0690 LET WOE22_DEV=CHANNELS[32],WOE23_DEV=CHANNELS[33],WOE25_DEV=CHANNELS[34]
0693 LET WOT21_DEV=CHANNELS[35],WOE14_DEV=CHANNELS[36]
0700 REM " --- Background"
0710 PRINT @(40,5),'CL',@(0,7),'CE',
0800 REM " --- Lot/serial number differences?"
0810 IF LOTSER=0 THEN GOTO 0850
0820 LET MESSAGE$[0]="There Were "+STR(LOTSER)+" Purchase Order Lines With Lot/Serial"
0825 LET MESSAGE$[1]="Number Differences. These Differences Must Be Corrected"
0830 LET MESSAGE$[2]="Before The Update Can Be Run (<Enter>=Continue)"
0835 CALL "SYC.XA",2,MESSAGE$[ALL],2,-1,-1,V$,V3
0840 IF V$<>"SPECIAL" THEN GOTO 9900
0850 REM " --- Any unreleased work orders?"
0860 IF WO=0 THEN GOTO 0900
0865 LET MESSAGE$[0]="There Were "+STR(WO)+" Purchase Order Lines With Special Orders For"
0870 LET MESSAGE$[1]="Unreleased Work Orders. These Work Orders Must Be Released"
0875 LET MESSAGE$[2]="Before The Update Can Be Run (<Enter>=Continue)"
0880 CALL "SYC.XA",2,MESSAGE$[ALL],2,-1,-1,V$,V3
0890 IF V$<>"SPECIAL" THEN GOTO 9900
0900 REM " --- Run update?
0905 LET V4$="Are You Ready To Update The "+F5$
0910 CALL "SYC.YN",0,V4$,0,V$,V3
0915 IF V$<>"YES" THEN GOTO 9900
0920 LET FILES[0]=SYS01_DEV,FILES[1]=IVM01_DEV,FILES[2]=IVM02_DEV
0925 LET FILES[3]=IVM03_DEV,FILES[4]=IVM04_DEV,FILES[5]=IVM05_DEV
0930 LET FILES[7]=IVM07_DEV,FILES[8]=IVM08_DEV,FILES[12]=IVM12_DEV
0935 LET FILES[17]=IVM17_DEV,FILES[41]=IVT01_DEV,FILES[42]=IVT02_DEV
0940 LET FILES[43]=IVT03_DEV,FILES[44]=IVT04_DEV
0950 REM " --- Position file"
0960 CALL "SYC.NB","Updating",M0+16,COLUMN
0970 LET EXIT_CTL=1
0990 READ (POE04_DEV,KEY=N0$,DOM=1000)
1000 REM " --- Read next receipt header"
1010 LET K$=KEY(POE04_DEV,END=4000)
1020 IF POS(N0$=K$)<>1 THEN GOTO 4000
1030 READ (POE04_DEV)IOL=POE04A
1040 PRINT @(COLUMN,11),FNF$(A0$(3,VENDLEN),M0$)," ",A0$(9,7)," ",A0$(16,7),
1050 IF A0$(1,8)=B0$(1,8) THEN GOTO 1100
1060 LET B0$(1)=A0$,B1$(1)=NF$
1070 FIND (APM01_DEV,KEY=B0$,DOM=1100)IOL=APM01A
1100 REM " --- Initializations for current receipt"
1110 LET X1$=A1$(5,6),X2$=A1$(29,6),RECEIVED$=FND$(FNN$(X2$)),WHEN$=X2$,LEADTIME=0
1120 CALL "SYC.CA",X1$,X2$,LEADTIME
1130 LET LEADTIME=MAX(0,LEADTIME),DELETED=1
1190 READ (POE14_DEV,KEY=A0$,DOM=1200)
1200 REM " --- Read next receipt detail"
1210 LET K$=KEY(POE14_DEV,END=3500)
1220 IF POS(A0$=K$)<>1 THEN GOTO 3500
1230 READ (POE14_DEV)IOL=POE14A
1240 LET ONORDER=W[3]-(W[4]+W[7])
1250 IF W[0]=0 THEN LET W[0]=1
1300 REM " --- Determine line type"
1310 IF N0$+W1$(1,2)=Y0$(1,4) THEN GOTO 1350
1320 LET Y0$(1,4)=N0$+W1$(1,2)
1330 FIND (POM02_DEV,KEY=Y0$,DOM=3000)IOL=POM02A
1350 REM " --- Branch based on line type"
1360 IF POS(Y1$(21,1)="MOV") THEN GOTO 2900
1380 IF Y1$(21,1)="N" THEN GOTO 1700
1400 REM " --- Retrieve inventory item"
1410 DIM C0$(22),C1$(60),C2$(64),C6$(6*G[4]),C[12],D0$(24),D1$(64),D[20]
1420 LET C0$(1)=N0$+W3$(3),D0$(1)=N0$+W3$,CODE$=""
1430 FIND (IVM01_DEV,KEY=C0$,DOM=3000)IOL=IVM01A
1440 FIND (IVM02_DEV,KEY=D0$,DOM=3000)IOL=IVM02A
1450 LET BUYER$=C2$(9,3),STOCKING$=C2$(12,6),CODE$=D1$(13,2)
1460 IF C2$(24,1)="W" THEN LET BUYER$=D1$(19,3),STOCKING$=D1$(22,6)
1700 REM " --- Calculate extension and branch based on line type"
1710 PRECISION 2
1720 LET PO_EXTENSION=W[1]*W[7],IV_EXTENSION=0
1725 IF Y1$(21,1)="S" THEN LET IV_EXTENSION=D[11]*W[7]*W[0]
1730 PRECISION I[1]
1790 ON POS(Y1$(21,1)="SN") GOTO 3000,1800,2300
1800 REM " --- Update Inventory"
1810 LET LINEQTY=W[7]*W[0],LINECOST=W[1]/W[0],QTY=LINEQTY,COST=LINECOST
1820 IF LS$="Y" THEN IF C2$(19,2)="YY" THEN GOTO 1850
1830 IF QTY<>0 THEN GOSUB 6100
1840 GOTO 2200
1850 REM " --- Position lot/serial file"
1860 DIM U0$(28),U1$(20),U[1]
1890 READ (POE24_DEV,KEY=W0$,DOM=1900)
1900 REM " --- Update Lotted/Serialized Inventory"
1910 LET K$=KEY(POE24_DEV,END=2000)
1920 IF POS(W0$=K$)<>1 THEN GOTO 2000
1930 READ (POE24_DEV)IOL=POE24A
1940 LET ITEM$[3]=U1$,QTY=U[0],COST=U[1]
1950 IF QTY<>0 THEN GOSUB 6100
1990 GOTO 1900
2000 REM " --- Done with lot/serial number entries"
2005 LET ITEM$[3]=""
2020 LET QTY=0,COST=LINECOST
2030 GOSUB 6100
2050 LET QTY=LINEQTY,COST=LINECOST
2200 REM " --- Update Replenishment"
2205 IF Y1$(22,1)="Y" THEN GOTO 2800
2210 IF REPLENISHMENT$<>"Y" THEN GOTO 2300
2220 IF A0$(3,6)<>STOCKING$ THEN GOTO 2300
2230 DIM U0$(11),U1$(32),U[11]
2240 LET U0$(1)=A0$,U0$(9,3)=BUYER$,X=5
2250 FIND (APM06_DEV,KEY=U0$,DOM=2260)IOL=APM06A
2260 IF RECEIVED$>YEAREND$ THEN LET X=7
2270 LET U[X]=U[X]+PO_EXTENSION,U[X+1]=U[X+1]+(QTY*C[1]),U[X+2]=U[X+2]+QTY
2280 IF RECEIVED$>FNP$(U1$(10,3)) THEN LET U1$(10,3)=RECEIVED$
2290 WRITE (APM06_DEV,KEY=U0$)IOL=APM06A
2300 REM " --- Update Work Orders"
2305 IF SF$<>"Y" THEN GOTO 2800
2310 IF FNP$(W2$(1,7))="" THEN GOTO 2800
2315 IF A1$(134,1)<>"Y" AND W[7]=0 THEN GOTO 2800
2320 IF Y1$(21,1)="S" THEN IF D1$(60,1)<>"Y" THEN GOTO 2800
2325 DIM T0$(75),T1$(141),T[11]
2330 LET T0$(1)=N0$+"  "+W2$(1,7)
2335 FIND (WOE01_DEV,KEY=T0$(1,11),DOM=2800)IOL=WOE01A
2340 IF FNP$(T0$(28,3))="" THEN LET T0$(28,3)=RECEIVED$
2350 IF RECEIVED$>T0$(28,3) THEN LET T0$(28,3)=RECEIVED$
2360 WRITE (WOE01_DEV,KEY=T0$(1,11))IOL=WOE01A
2400 REM " --- Update link to WO subcontract line/Generate transaction detail"
2410 LET OLDWO$=W2$(1,10),NEWWO$=OLDWO$
2415 CALL "POC.WA",WOE22_DEV,WOE32_DEV,N0$,W0$(16),"C",Y1$,OLDWO$,NEWWO$,I[1],STATUS
2420 IF Y1$(21,1)="S" THEN GOTO 2500
2430 DIM L0$(18),L1$(39),L[11]
2440 LET L0$(1)=T0$(1,11)+RECEIVED$+"S",CHANNEL=WOT31_DEV
2450 GOSUB 6000
2460 IF STATUS THEN GOTO 2800
2470 LET L1$(1)=W2$(8,3)+W0$(3,6)+W0$(16)+W4$
2475 LET L[0]=W[7]*W[0],L[1]=W[1]/W[0],L[2]=PO_EXTENSION
2480 WRITE (WOT31_DEV,KEY=L0$)IOL=WOT31A
2485 WRITE (WOM07_DEV,KEY=L0$)IOL=WOM07A
2490 GOTO 2800
2800 REM " --- Generate GL Recap Postings"
2810 IF GL$="N" THEN GOTO 2900
2820 LET GLFILES[1]=ARM10_DEV,GLFILES[2]=WOE01_DEV,GLFILES[3]=WOM10_DEV
2830 LET GLFILES[4]=GLM01_DEV,GLFILES[5]=GLT04_DEV,GLFILES[6]=GLT05_DEV
2840 LET W$[0]=W0$,W$[1]=W1$,W$[2]=W2$,W$[3]=W3$,W$[4]=W4$,GLPARAMS$[0]=GL$
2850 LET GLPARAMS$[1]=A1$(29,6),GLPARAMS$[2]=B0$(3,VENDLEN),GLPARAMS$[3]=M0$
2860 LET GLPARAMS$[4]=G4$,GLPARAMS$[5]=FNITEM$(C1$,I[3],I[4],I[5])
2870 LET GLPARAMS$[6]=Y1$,GLPARAMS$[7]=C6$,GLPARAMS$[8]=DISTCODE$
2875 LET GLPARAMS$[9]=CODE$,GLPARAMS$[10]=N0$,GLPARAMS$[11]=SF$
2880 LET GLPARAMS[0]=PO_EXTENSION,GLPARAMS[1]=G[4],GLPARAMS[2]=I[0]
2883 LET GLPARAMS$[12]=I3$(8,1),GLPARAMS[3]=IV_EXTENSION
2885 CALL "POC.GA",GLFILES[ALL],W$[ALL],W[ALL],GLPARAMS$[ALL],GLPARAMS[ALL],STATUS
2890 IF STATUS THEN GOTO 9900
2900 REM " --- Update Receipt History & X-refs
2905 IF Y1$(21,1)="M" AND P3$(72,1)<>"Y" THEN GOTO 3000; REM "Don't retain message lines in history
2910 IF Y1$(21,1)="V" AND P3$(73,1)<>"Y" THEN GOTO 3000; REM "Don't retain vendor part lines in history
2915 LET FLIPPEDW0$=W0$(1,8)+W0$(16,7)+W0$(9,7)+W0$(23,3)
2920 WRITE (POT14_DEV,KEY=FLIPPEDW0$)IOL=POT14A
2930 LET XT4$=FLIPPEDW0$(1,8)+A1$(29,6)+FLIPPEDW0$(9,17)
2940 WRITE (POT44_DEV,KEY=XT4$)IOL=POT44A
2950 REM " --- Only write S-type lines to POT-24 and POT-34
2955 IF Y1$(21,1)<>"S" THEN GOTO 3000
2960 LET XT2$=FLIPPEDW0$(1,2)+W3$(3,20)+W3$(1,2)+FLIPPEDW0$(3,6)+A1$(29,6)+FLIPPEDW0$(9,17)
2970 WRITE (POT24_DEV,KEY=XT2$)IOL=POT24A
2980 LET XT3$=FLIPPEDW0$(1,2)+W3$(3,20)+W3$(1,2)+A1$(29,6)+FLIPPEDW0$(3,23)
2990 WRITE (POT34_DEV,KEY=XT3$)IOL=POT34A
3000 REM " --- Remove receipt detail"
3010 REMOVE (POE14_DEV,KEY=W0$,DOM=3020)
3020 LET X4$=N0$+W3$(3)+W0$(16)+W0$(3,13)
3030 REMOVE (POE44_DEV,KEY=X4$,DOM=3040)
3100 REM " --- Remove Receipt Lot/Serial Detail"
3110 READ (POE24_DEV,KEY=W0$,DOM=3120)
3120 LET K$=KEY(POE24_DEV,END=3200)
3130 IF POS(W0$=K$)<>1 THEN GOTO 3200
3140 REMOVE (POE24_DEV,KEY=K$)
3150 GOTO 3120
3200 REM " --- Update PO detail"
3210 LET R0$(1)=W0$(1,8)+W0$(16)
3220 IF POS(Y1$(21,1)="SNO") THEN IF ONORDER<=0 THEN GOTO 3300
3230 IF A1$(134,1)="Y" THEN GOTO 3300
3240 IF POS(Y1$(21,1)="MV") THEN IF DELETED THEN GOTO 3300
3250 FIND (POE12_DEV,KEY=R0$,DOM=3400)IOL=POE12A
3260 LET R[7]=R[7]+W[7],DELETED=0
3270 WRITE (POE12_DEV,KEY=R0$)IOL=POE12A
3290 GOTO 3400
3300 REM " --- Remove PO detail"
3310 IF Y1$(21,1)<>"S" THEN GOTO 3350
3320 FIND (POE12_DEV,KEY=R0$,DOM=3360)IOL=POE12A
3330 LET QTY=-(R[3]*R[0]-(W[4]+W[7])*W[0]),ACTION$="OO"
3340 IF QTY<>0 THEN GOSUB 6200
3350 REMOVE (POE12_DEV,KEY=R0$,DOM=3360)
3360 LET X4$=N0$+W3$(3)+W0$(16)+W0$(3,6),DELETED=1
3370 REMOVE (POE42_DEV,KEY=X4$,DOM=3400)
3400 REM " --- Loop back for next detail"
3490 GOTO 1200
3500 REM " --- Done with detail lines - Remove receipt header"
3505 LET FLIPPEDA0$=A0$(1,8)+A0$(16,7)+A0$(9,7)
3510 WRITE (POT04_DEV,KEY=FLIPPEDA0$)IOL=POT04A
3520 REMOVE (POE04_DEV,KEY=A0$,DOM=3530)
3530 LET X3$=N0$+A0$(16,7)+A0$(3,6)+A0$(9,7)
3540 LET X5$=N0$+A0$(9,7)+A0$(3,6)+A0$(16,7)
3550 REMOVE (POE34_DEV,KEY=X3$,DOM=3560)
3560 REMOVE (POE54_DEV,KEY=X5$,DOM=3570)
3600 REM " --- Done with details - Update PO Header"
3610 LET S0$(1)=A0$(1,8)+A0$(16)
3615 GOSUB 6300
3620 IF LINES THEN LET A1$(134,1)="N"
3630 IF A1$(134,1)="Y" OR LINES=0 THEN GOTO 3700
3640 FIND (POE02_DEV,KEY=S0$,DOM=3900)IOL=POE02A
3650 LET S1$(29,6)=A1$(29,6)
3660 WRITE (POE02_DEV,KEY=S0$)IOL=POE02A
3690 GOTO 3900
3700 REM " --- Received complete - Delete PO"
3710 REMOVE (POE02_DEV,KEY=S0$,DOM=3720)
3720 LET X3$=N0$+A0$(16,7)+A0$(3,6),X5$=N0$+A1$(112,7)+A0$(3,6)+A0$(16,7)
3730 REMOVE (POE32_DEV,KEY=X3$,DOM=3740)
3740 REMOVE (POE52_DEV,KEY=X5$,DOM=3750)
3900 REM " --- Loop back for next header"
3990 GOTO 1000
4000 REM " --- All done"
4090 GOTO 9900
6000 REM " --- Find next available sequence number for WOT files"
6010 LET X=LEN(L0$)-2,L0$(X)="001",STATUS=0
6020 READ (CHANNEL,KEY=L0$(1,X-1)+$FF$,DOM=6030)
6030 LET K$=KEYP(CHANNEL,END=6090)
6040 IF POS(L0$(1,X-1)=K$)<>1 THEN GOTO 6090
6050 IF K$(16,3)="999" THEN GOTO 6080
6060 LET L0$(X)=STR(NUM(K$(16,3))+1:"000")
6070 GOTO 6090
6080 LET STATUS=2
6090 RETURN 
6100 REM " --- Update inventory with receipt quantity"
6110 LET ACTION$="RC"
6200 REM " --- Call standard inventory update program"
6210 LET ITEM$[0]=N0$,ITEM$[1]=W3$(1,2),ITEM$[2]=W3$(3)
6220 LET REF3$=W0$(23,3),REFS$[0]=A1$(29,6),REFS$[1]=W0$(3,6),REFS$[2]=W0$(16,7)
6230 LET REFS$[3]=W0$(9,7),REFS$[4]="",REFS$[5]=REF3$,REFS$[6]=W1$(1,2)
6240 LET REFS$[8]=IVACCT$,REFS$[9]="",REFS$[10]="",REFS$[11]=""
6250 LET REFS$[12]=Y1$(22,1),REFS[0]=QTY,REFS[1]=COST,REFS[2]=D[9]
6260 LET REFS[3]=LEADTIME,REFS[4]=COST,REFS[5]=0
6270 CALL "IVC.UA",ACTION$,FILES[ALL],PARAMS[ALL],PARAMS$[ALL],ITEM$[ALL],REFS$[ALL],REFS[ALL],STATUS
6290 RETURN 
6300 REM " --- Verify PO Has No Detail In POE-12"
6310 LET LINES=0
6320 READ (POE12_DEV,KEY=S0$,DOM=6330)
6330 LET POE12K$=KEY(POE12_DEV,END=6390)
6340 IF POS(S0$=POE12K$)<>1 THEN GOTO 6390
6350 LET LINES=1
6390 RETURN 
6900 REM " --- Standard G/L Posting Routine"
6910 GLPOST: 
6920 IF GL$<>"Y" THEN GOTO 6990
6950 CALL "GLC.AA",GLM01_DEV,GLT04_DEV,GLT05_DEV,ACCOUNT$,WHEN$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN 
8000 REM " --- Functions"
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8060 DEF FNN$(Q$)=Q$(3,4)+Q$(1,2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to menu"
9910 RUN "SYS.AA"
9999 END
