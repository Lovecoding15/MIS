0010 REM "GEX - Export Record Layouts to General"
0020 REM "Program GEX.EB
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.1.0 - 01Apr99 |"
0026 REM "|         Copyright (c) 1999 ADD+ON Software, Inc.          |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0080 SETERR 9000
0090 SETESC 9000
0200 REM " --- IOLists
0210 DDM01A: IOLIST X0$(1),X1$(1),X[ALL]
0220 SYM03A: IOLIST A0$(1),A1$(1),A2$(1),A[ALL]
0230 DDM03A: IOLIST B0$(1),B1$(1),B[ALL]
0240 DDM04A: IOLIST C0$(1),C1$(1),C[ALL]
0250 SYM02A: IOLIST D0$(1)
0400 REM " --- Parameters
0410 DIM D0$(29)
0420 LET D0$(5,24)="(Not On File)"
0430 FIND (SYM02_DEV,KEY=F0$(4,3),DOM=0440)IOL=SYM02A
0440 LET T1$="DESC:C(40),X:N(2),Y:N(2)"
0450 LET T2$="DESC:C(40),FILENAME:C(120),ACCESS:C(1),AUTOSEL:C(120),AUTOBEG:C(120),AUTOEND:C(120),SKIPKEY:C(60),TEXT:C(1),BLOCK:C(4)"
0460 LET T3$="NAME:C(20),DESC:C(40),TYPE:C(60),HEAD:C(60),EXPR:C(1024)"
0470 LET T4$="ALPHA:C(26),NUMERIC:C(10),SPECIAL:C(2)"
0500 REM " --- Initializations
0510 DIM X0$(12),X1$(105),X[2],MESSAGE$[1],C0$(10),C1$(122),C[2],PGM$(6),J1$(6)
0520 DIM A0$(6),A1$(77),A2$(30),A[2],B0$(7),B1$(64),B[2],FILENAME$(20)
0530 DIM MILESTONE$:T1$,FILEDESC$:T2$,FLD$:T3$,VALID$:T4$
0550 LET CONST$="@PF",MILESTONE.X=25,MILESTONE.Y=18
0560 LET VALID.ALPHA$="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
0570 LET VALID.NUMERIC$="0123456789",VALID.SPECIAL$="_."
0700 REM " --- Background
0710 PRINT @(0,3),'CE',
0720 FOR X=5 TO 17 STEP 2
0730 CALL "SYC.WC",1,0,80,0,0,X,0
0740 NEXT X
0750 PRINT 'SB',@(3,3),"System ",'SF',SYSTEM.NAME$+" "+SYSTEM.DESC$,'SB',@(40,3),"From ",'SF',BEGFILE.NAME$+" "+BEGFILE.DESC$,'SB',@(37,4),"Through ",'SF',ENDFILE.NAME$+" "+ENDFILE.DESC$,
0760 PRINT 'SB',@(7,6),"GENERAL File Name",@(2,8),"Access(Security) Level",@(13,10),"Auto Select",@(7,12),"Auto Begin Phrase",@(9,14),"Auto End Phrase",@(15,16),"Skip Keys",'SF',
0900 REM " --- Position file
0960 LET K$=SYSTEM.NAME$
0970 IF SYSTEM.NAME$="" THEN LET K$=BEGFILE.NAME$
0980 READ (SYM03_DEV,KEY=K$,DOM=NEXTSYM03)IOL=SYM03A
0990 GOTO 1030
1000 NEXTSYM03: REM " --- Read next SYM-03 File Definition Record
1010 LET K$=KEY(SYM03_DEV,END=4900)
1020 READ (SYM03_DEV)IOL=SYM03A
1025 IF BEGFILE.NAME$<>"" THEN IF A0$(1,6)<BEGFILE.NAME$ THEN GOTO LOOPSYM03
1030 IF ENDFILE.NAME$<>"" THEN IF A0$(1,6)>ENDFILE.NAME$ THEN GOTO 4900
1040 IF SYSTEM.NAME$<>"" THEN IF A0$(1,LEN(SYSTEM.NAME$))<>SYSTEM.NAME$ THEN GOTO 4900
1050 REM " --- Only keyed files are exported
1060 IF POS(A1$(37,1)="MDS")=0 THEN GOTO LOOPSYM03
1070 IF POS(A1$(37,1)="S") THEN LET CONST$="@KEY" ELSE LET CONST$="@PF"
1080 GOSUB DISPLAYREC
1100 REM " --- Position DDM-03
1110 READ (DDM03_DEV,KEY=A0$,DOM=NEXTDDM03)
1200 NEXTDDM03: REM " --- Read next DDM-03 Record ID"
1210 LET K$=KEY(DDM03_DEV,END=LOOPSYM03)
1220 IF POS(A0$=K$)<>1 THEN GOTO LOOPSYM03
1230 READ (DDM03_DEV)IOL=DDM03A
1250 GENINITFILE: REM " --- Initialize GENERAL file format
1260 DIM FILEDESC$:FATTR(FILEDESC$)
1270 LET FILENAME$(1)=FNUPPER$(B0$(1,7)),NEWFILE=1
1280 LET FILEDESC.DESC$=A1$(1,30),FILEDESC.FILENAME$=A0$(1,6),FILEDESC.ACCESS$="0"
1290 LET FILEDESC.AUTOBEG$="[[@FIRM@VDT]]",FILEDESC.AUTOEND$="[[@FIRM@VDT]]"
1295 GOSUB DISPLAYREC
1300 REM " --- GEN File Name
1310 LET V0$="S",V1$="^CE",V2$=FILENAME$(1),V3$="",V4$="Enter a valid GEN file name for the ("+A1$(1,20)+") file.",V0=20,V1=25,V2=6
1320 GOSUB 7000
1330 ON V3 GOTO 1350,1350,1350,NEXTDDM03,1350
1350 LET FILENAME$(1)=V$
1360 GOSUB GENEXIST
1365 IF STATUS THEN GOTO GENINITFILE
1370 PRINT @(25,6),FILENAME$(1)+"   "+B1$(1,30),
1390 GOTO 3900
1400 REM " --- Access Level 
1410 LET V0$="S",V1$="CE",V2$=FILEDESC.ACCESS$,V3$="0123456789",V4$="Enter access level for "+FNTRIM$(FILENAME$),V0=1,V1=25,V2=8
1420 GOSUB 7000
1430 ON V3 GOTO 1450,1450
1470 LET FILEDESC.ACCESS$=V$
1490 GOTO 3900
1500 REM " --- Auto Select Phrase
1510 LET V0$="S",V1$="CE",V2$=FILEDESC.AUTOSEL$(1,40),V3$="",V4$="Enter an auto select phrase for "+FNTRIM$(FILENAME$),V0=40,V1=25,V2=10
1520 GOSUB 7000
1530 ON V3 GOTO 1550,1550
1570 LET FILEDESC.AUTOSEL$=V$
1590 GOTO 3900
1600 REM " --- Auto Begin Phrase
1610 LET V0$="S",V1$="CE",V2$=FILEDESC.AUTOBEG$(1,40),V3$="",V4$="Enter an auto begin phrase for "+FNTRIM$(FILENAME$),V0=40,V1=25,V2=12
1620 GOSUB 7000
1630 ON V3 GOTO 1650,1650
1670 LET FILEDESC.AUTOBEG$=V$
1680 IF NEWFILE THEN LET FILEDESC.AUTOEND$=FILEDESC.AUTOBEG$
1690 GOTO 3900
1700 REM " --- Auto End Phrase
1710 LET V0$="S",V1$="CE",V2$=FILEDESC.AUTOEND$(1,40),V3$="",V4$="Enter an auto end phrase for "+FNTRIM$(FILENAME$),V0=40,V1=25,V2=14
1720 GOSUB 7000
1730 ON V3 GOTO 1750,1750
1770 LET FILEDESC.AUTOEND$=V$
1790 GOTO 3900
1800 REM " --- Skip Key Phrase
1810 LET V0$="S",V1$="CE",V2$=FILEDESC.SKIPKEY$(1,40),V3$="",V4$="Enter a series of skip keys for "+FNTRIM$(FILENAME$),V0=40,V1=25,V2=16
1820 GOSUB 7000
1830 ON V3 GOTO 1850,1850
1870 LET FILEDESC.SKIPKEY$=V$
1890 GOTO 3900
1900 REM " --- Position DDM-04 Field Detail file
1910 DIM DATANAME$[999],DESCRIPTION$[999],LENGTH[999],OFFSET[999],EXPR$[999],TYPECD$[999],HEAD$[999]
1920 DIM TYPE$(999,"C"),FS$(999,"N"),FIELD[999],KEYSEG$(48,"N")
1930 LET NUMBER=0,RECORDS=0,OFFSET=1,KEYFLD=0,KEYLEN=0,FIELD[1]=1
1990 READ (DDM04_DEV,KEY=B0$,DOM=NEXTDDM04)
2000 NEXTDDM04: REM " --- Read next DDM-04 detail record
2010 LET K$=KEY(DDM04_DEV,END=2500)
2020 IF POS(B0$=K$)<>1 THEN GOTO 2500
2030 READ (DDM04_DEV)IOL=DDM04A
2040 LET RECORDS=RECORDS+1,MILESTONE.DESC$="Preparing: "+C0$(1,6)+" "+C0$(7,1)+" "+C0$(8,3)
2050 GOSUB MILESTONE
2100 REM " --- Retrieve DDM-01 record (if necessary)
2110 IF FNTRIM$(C1$(1,12))="" THEN GOTO 2200
2120 IF RECORDS>0 THEN IF X0$(1,12)=C1$(1,12) THEN GOTO 2150
2130 LET X0$(1)=C1$(1,12)
2140 FIND (DDM01_DEV,KEY=X0$,DOM=2200)IOL=DDM01A
2150 LET C1$(17,30)=X1$(1,30),C1$(53,1)=X1$(37,1),C[0]=X[0]
2200 REM " --- Calculate field length and number of occurences
2210 LET L=C[0],TIMES=1
2230 IF C[1]>0 THEN LET L=L*C[1]
2240 IF C[2]>1 THEN LET TIMES=C[2]
2250 IF C1$(53,1)="L" THEN LET C1$(1,12)="LITERAL"
2300 REM " --- Generate a field entry for each occurence
2310 FOR OCCURS=1 TO TIMES
2320 LET S$="N"
2330 IF POS(C1$(54,1)="XY") THEN LET S$="Y"
2340 IF C1$(54,1)="E" THEN IF OCCURS=TIMES THEN LET S$="Y"
2350 REM " --- Store field information
2360 LET NUMBER=NUMBER+1,DATANAME$[NUMBER]=FNTRIM$(C1$(1,12))
2370 LET DESCRIPTION$[NUMBER]=FNTRIM$(C1$(17,30))
2380 LET TYPE$(NUMBER,1)=C1$(53,1),FS$(NUMBER,1)=S$
2390 LET LENGTH[NUMBER]=L,OFFSET[NUMBER]=OFFSET
2400 REM " --- Recalculate field offset
2410 IF S$="N" THEN LET OFFSET=OFFSET+L,FIELD[NUMBER+1]=FIELD[NUMBER]
2420 IF S$="Y" THEN LET OFFSET=1,FIELD[NUMBER+1]=FIELD[NUMBER]+1
2430 IF POS(C1$(54,1)="KX")=0 THEN GOTO 2450
2440 LET KEYSEG$(NUMBER,1)="Y",KEYFLD=NUMBER,KEYLEN=KEYLEN+LENGTH[NUMBER]
2450 NEXT OCCURS
2490 GOTO NEXTDDM04
2500 REM " --- Check for duplicate field names
2510 IF NUMBER=0 THEN GOTO NEXTDDM03
2520 FOR N=1 TO NUMBER
2530 LET TIMES=1
2540 FOR X=1 TO NUMBER
2550 IF X=N THEN GOTO 2580
2560 IF DATANAME$[X]<>DATANAME$[N] THEN GOTO 2580
2570 LET TIMES=TIMES+1,DATANAME$[X]=DATANAME$[X]+"_"+STR(TIMES)
2580 NEXT X
2585 IF TIMES>1 THEN LET DATANAME$[N]=DATANAME$[N]+"_1"
2590 NEXT N
2600 REM " --- Check field names for invalid characters
2610 FOR N=1 TO NUMBER
2620 LET DATANAME$[N]=FNVALIDNAME$(DATANAME$[N])
2650 NEXT N
3000 REM " --- Prepare data for export
3010 LET X$=STBL("!APPLICATION",A0$(1,2),ERR=3020)
3020 CALL "GEC.EA",DATANAME$[ALL],LENGTH[ALL],OFFSET[ALL],FIELD[ALL],TYPE$,CONST$,EXPR$[ALL],TYPECD$[ALL],HEAD$[ALL],NUMBER,STATUS
3400 REM " --- Export complete file template
3420 LET MILESTONE.DESC$="Exporting file: "+FNTRIM$(FILENAME$)
3430 GOSUB MILESTONE
3440 GOSUB FILETEMP
3450 GOSUB EXPORTGEN
3500 REM " --- Export Field Information to General
3510 REM " --- Set GENERAL field template fields
3520 FOR X_FIELD=1 TO NUMBER
3530 LET FLD.NAME$=DATANAME$[X_FIELD]
3540 LET FLD.DESC$=DESCRIPTION$[X_FIELD]
3550 LET FLD.TYPE$=TYPECD$[X_FIELD]
3560 LET FLD.HEAD$=HEAD$[X_FIELD]
3570 LET FLD.EXPR$=EXPR$[X_FIELD]
3600 REM " --- Export complete field template
3610 RESERVED: IF POS("RESERVED"=FLD.NAME$)=1 AND RSRVD$="N" THEN GOTO NEXTX_FIELD
3620 DEALER: IF POS("DEALER"=FLD.NAME$)=1 AND DEALER$="N" THEN GOTO NEXTX_FIELD
3630 LET MILESTONE.DESC$="Exporting field: "+FNTRIM$(FLD.NAME$)
3640 GOSUB MILESTONE
3650 GOSUB FIELDTEMP
3660 GOSUB EXPORTGEN
3690 NEXTX_FIELD: NEXT X_FIELD
3700 LOOPDDM03: REM " --- Loop back for next DDM-03 record ID record
3710 GOSUB CLOSETEMP
3720 GOSUB EXPORTGEN
3790 GOTO NEXTDDM03
3800 LOOPSYM03: REM " --- Loop back for next SYM-03 header record
3890 GOTO NEXTSYM03
3900 REM " --- Next Field
3910 IF V3=4 THEN GOTO 4000
3920 IF V3<>2 THEN GOTO 3950
3930 IF I0>0 THEN LET I0=I0-1
3940 GOTO 3960
3950 LET I0=I0+1
3960 ON I0 GOTO 1300,1400,1500,1600,1700,1800,3990
3990 LET I0=0
4000 REM " --- Correct?
4005 GOSUB DISPLAYREC
4010 LET V4$="Is the above information correct (Y/N)?"
4020 LET V0$="S",V1$="CR",V2$="Y",V3$="",V0=1,V2=22,V1=FNV(V4$)
4030 GOSUB 7000
4040 ON V3 GOTO 4050,4000,4000,4000,9900
4090 ON POS(V$="YN") GOTO 4000,1900,1300
4900 REM " --- All done
4990 GOTO 9900
5000 DISPLAYREC: REM " --- Display Record
5010 PRINT @(25,6),FILENAME$(1)+"   "+B1$(1,30),@(25,8),FILEDESC.ACCESS$,@(25,10),FILEDESC.AUTOSEL$(1,40),
5020 PRINT @(25,12),FILEDESC.AUTOBEG$(1,40),@(25,14),FILEDESC.AUTOEND$(1,40),
5030 PRINT @(25,16),FILEDESC.SKIPKEY$(1,40),
5040 PRINT @(0,18),'CE',
5090 RETURN 
6000 FILETEMP: REM " --- Initialize GENERAL file template fields
6010 LET GEN0$="OPEN"
6020 LET GEN1$=FNTRIM$(FILENAME$)
6030 LET GEN2$=FNTRIM$(FILEDESC$)
6040 LET GEN3$=""
6050 LET GEN4$=""
6060 LET GEN5$=""
6070 LET GEN6$=""
6090 RETURN 
6100 FIELDTEMP: REM " --- Initialize GENERAL field template fields
6110 LET GEN0$="FIELD"
6120 LET GEN1$=FNTRIM$(FLD.NAME$)
6130 LET GEN2$=FNTRIM$(FLD.DESC$)
6140 LET GEN3$=FNTRIM$(FLD.TYPE$)
6150 LET GEN4$=FNTRIM$(FLD.HEAD$)
6160 LET GEN5$=FNTRIM$(FLD.EXPR$)
6190 RETURN 
6200 CLOSETEMP: REM " --- Initialize GENERAL close template fields
6210 LET GEN0$="CLOSE"
6220 LET GEN1$=""
6230 LET GEN2$=""
6240 LET GEN3$=""
6250 LET GEN4$=""
6260 LET GEN5$=""
6290 RETURN 
6300 EXPORTGEN: REM " --- Export GENERAL File Information
6310 CALL "GEN4-UPD.UTL",GEN0$,GEN1$,GEN2$,GEN3$,GEN4$,GEN5$,GEN6$,ERRMSG$
6320 IF ERRMSG$="" THEN GOTO 6390
6330 LET MESSAGE$[0]=GEN1$+" will not be updated. "
6340 LET MESSAGE$[1]=ERRMSG$,MESSAGES=1
6350 GOSUB MESSAGES
6390 RETURN 
6400 GENEXIST: REM " --- Existing File in GEN4MST?
6405 LET STATUS=0
6410 FIND (GEN4MST_DEV,KEY="X"+FILENAME$(1)+"A  ",DOM=6490)*,FILEDESC$(1)
6420 LET PROMPT$=FNTRIM$(FILENAME$)+" Already Exists - Update Existing File"
6425 LET TYPE=0,PROMPT=3,V$="",V3=0,STATUS=1
6430 CALL "SYC.YN",TYPE,PROMPT$,PROMPT,V$,V3
6440 IF V$<>"Y" OR V3<>0 THEN RETURN 
6450 GOSUB DISPLAYREC
6460 LET NEWFILE=0,STATUS=0
6490 RETURN 
6800 MILESTONE: REM " --- Display Milestones
6810 PRINT @(MILESTONE.X,MILESTONE.Y),MILESTONE.DESC$,
6890 RETURN 
6900 MESSAGES: REM " --- Call standard message routine
6910 CALL "SYC.XA",2,MESSAGE$[ALL],MESSAGES,20,-1,V$,V3
6920 ON V3 GOTO 6990,6990,6990,6990,9900
6990 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions
8085 DEF FNUPPER$(Q$)=CVS(Q$,4)
8090 DEF FNTRIM$(Q$)=CVS(Q$,3)
8095 DEF FNV(Q$)=40+INT(LEN(Q$)/2)+2
8500 DEF FNVALIDNAME$(NAME$)
8505 FOR X=1 TO LEN(NAME$)
8510 IF POS(NAME$(X,1)=VALID$)=0 THEN LET NAME$(X,1)="."
8515 NEXT X
8520 FOR X=0 TO 1
8530 IF X THEN LET CHECK$="__" ELSE LET CHECK$=".."
8535 LET INVALID=POS(CHECK$=NAME$)
8540 WHILE INVALID
8545 LET NAME$=NAME$(1,INVALID)+NAME$(INVALID+2)
8550 LET INVALID=POS(CHECK$=NAME$)
8555 WEND
8560 NEXT X
8580 RETURN NAME$
8590 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9205 SETESC 9000
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to menu"
9950 RUN "SYS.AA"
9999 END
