0010 REM "ARU - Period End Update 2"
0020 REM "Program ARU.BB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "13Jan98 WGH: Prevent Error 47 on Line 6100 when customer without detail (6020)"
0032 REM "02Oct98 WGH: At year end initialize Sales Analysis for the new year (300-320,3505-3510,3530,3600-3790,6500-6595)
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0095 PRECISION 4
0200 REM " --- IOLists
0220 ARM01A: IOLIST X0$,X1$
0230 ARM02A: IOLIST Y0$,Y1$
0240 ARM06A: IOLIST W0$,W1$,W[ALL]
0250 ARM09A: IOLIST D0$,D1$,D[ALL]
0300 SAM00A: IOLIST SAM00_K$,Q[ALL],C[ALL],S[ALL]
0310 SAM00A2: IOLIST SAM00_K2$,Q2[ALL],C2[ALL],S2[ALL]
0320 SAM20A: IOLIST SAM20_K$
0360 ARS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0370 ARS10C: IOLIST X0$,X[ALL]
0380 ARS10S: IOLIST X0$,X[ALL]
0500 REM " --- Init Data
0520 DIM D[2],W[21]
0940 REM " --- Disallow 'M'enu option in Error Routine
0950 LET EXIT_CTRL=1
3000 REM " --- Sales Totals
3010 IF P9<P[1] THEN GOTO 3100
3020 DIM X[15]
3025 LET X0$=N0$+"S"
3030 READ (ARS10_DEV,KEY=X0$,DOM=3040)IOL=ARS10S
3040 FOR X=0 TO 7
3050 LET X[X]=X[X+8],X[X+8]=0
3060 NEXT X
3070 WRITE (ARS10_DEV,KEY=X0$)IOL=ARS10S
3100 REM " --- Cash Totals
3110 IF P9<P[1] THEN GOTO 3200
3115 DIM X0$(3)
3120 LET X0$(1)=N0$+"C"
3130 DIM X[6]
3140 EXTRACT (ARS10_DEV,KEY=X0$(1,3),DOM=3150)IOL=ARS10C
3150 FOR X=0 TO 2
3160 LET X[X]=X[X+3],X[X+3]=0
3170 NEXT X
3180 WRITE (ARS10_DEV,KEY=X0$(1,3))IOL=ARS10C
3200 REM " --- Clear Temporary Customers
3210 PRINT @(2,5),'CL','SB',@(10,5),"Checking Customers:",'SF',
3220 READ (ARM01_DEV,KEY=N0$,DOM=3300)
3300 REM " --- Main Read
3320 READ (ARM01_DEV,END=3500)IOL=ARM01A
3340 IF POS(N0$=X0$)<>1 THEN GOTO 3500
3345 PRINT @(40,5),FNF$(X0$(3,P[0]),M0$),
3350 GOSUB 6400
3360 IF X1$(227,1)<>"N" THEN GOTO 3300
3370 READ (ART01_DEV,KEY=N0$+"  "+X0$(3),DOM=3380)
3380 LET K$=KEY(ART01_DEV,END=3400)
3390 IF POS(N0$+"  "+X0$(3)=K$)=1 THEN GOTO 3300
3400 IF SA$<>"Y" THEN GOTO 3440
3405 LET YEAR$=FILL(2),SAM01_K$=N0$
3410 READ (SAM01_DEV,KEY=SAM01_K$(1,2)+YEAR$+X0$(3),DOM=3415)
3415 LET SAM01_K$=KEY(SAM01_DEV,END=3440)
3420 IF POS(N0$=SAM01_K$)<>1 THEN GOTO 3440
3425 IF POS(X0$(3)=SAM01_K$(5))=1 THEN GOTO 3300
3430 LET YEAR$=FNYEAR_YY21$(FNYY_YEAR(SAM01_K$(3,2))+1)
3435 GOTO 3410
3440 READ (ARE03_DEV,KEY=N0$+"  "+X0$(3),DOM=3450)
3450 LET K$=KEY(ARE03_DEV,END=3465)
3460 IF POS(N0$+"  "+X0$(3)=K$)=1 THEN GOTO 3300
3465 READ (ART03_DEV,KEY=N0$+"  "+X0$(3),DOM=3470)
3470 LET K$=KEY(ART03_DEV,END=3490)
3480 IF POS(N0$+"  "+X0$(3)=K$)=1 THEN GOTO 3300
3490 GOSUB 6000
3495 GOTO 3300
3500 REM " --- Process Job Numbers
3505 IF P3$(12,1)="N" THEN GOTO 3600
3507 GOSUB 6200
3508 PRINT @(0,5),'CL','SB',@(9,5),"Updating Customer Job Numbers:",'SF',
3510 LET K$=KEY(ARM09_DEV,END=3600)
3520 READ (ARM09_DEV,KEY=K$)IOL=ARM09A
3530 IF D0$(1,2)<>N0$ THEN GOTO 3600
3540 IF D0$(37,3)<D$ AND D0$(40,1)="N" THEN REMOVE (ARM09_DEV,KEY=K$)
3580 PRINT @(40,5),D0$(3,6)," ",D0$(9,10),
3590 GOTO 3510
3600 REM " --- Initialize Sales Analysis For New Year
3605 IF SA$<>"Y" THEN GOTO 4000
3610 IF P9<>P[1] OR P[1]+1<=G[0] THEN GOTO 4000; REM "Not doing fiscal year end
3620 PRINT @(0,5),'CL','SB',@(11,5),"Initializing Sales Analysis:",'SF',
3630 DIM Q[12],Q2[12],C[12],C2[12],S[12],S2[12]
3640 LET THISYEAR$=FNYEAR_YY21$(P[2]),NEXTYEAR$=FNYEAR_YY21$(P[2]+1)
3650 FOR SA=1 TO INT(SAFILES/2)
3660 IF SACHANNELS[SA]=0 THEN GOTO 3790
3670 PRINT @(40,5),SAFILES$[SA],": ",'CL',
3690 READ (SACHANNELS[SA],KEY=N0$+THISYEAR$,DOM=3700)
3700 READ (SACHANNELS[SA],END=3790)IOL=SAM00A
3710 IF POS(N0$+THISYEAR$=SAM00_K$)<>1 THEN GOTO 3790
3715 PRINT @(48),SAM00_K$(5),
3720 FOR P=0 TO 12
3725 IF Q[P]<>0 OR C[P]<>0 OR S[P]<>0 THEN EXITTO 3740; REM "Any activity this year?
3730 NEXT P
3735 GOTO 3790; REM "No activity this year, so skip initializing next year
3740 LET SAM00_K2$=SAM00_K$,SAM00_K2$(3,2)=NEXTYEAR$
3750 WRITE (SACHANNELS[SA],KEY=SAM00_K2$,DOM=3770)IOL=SAM00A2
3760 IF SACHANNELS[SA+20] THEN GOSUB BUILD_XREFS
3770 READ (SACHANNELS[SA],KEY=SAM00_K$); REM "reset file pointer for next read
3780 GOTO 3700
3790 NEXT SA
4000 REM " --- Increment Period
4010 IF P9<P[1] THEN GOTO 4100
4020 LET P[1]=P[1]+1
4030 IF P[1]>G[0] THEN LET P[1]=1,P[2]=P[2]+1
4050 EXTRACT (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=ARS01A
4060 LET P4$(1,2)=STR(P[1]:"00"),P4$(3,2)=FNYEAR_YY21$(P[2])
4070 WRITE (SYS01_DEV,KEY=N0$+N2$+"00")IOL=ARS01A
4900 GOTO 9900
6000 REM " --- Remove Temp Customer
6010 PRINT @(40,5),X0$," ",X1$(1,30),
6020 DIM Y1$(64)
6030 READ (ARM02_DEV,KEY=X0$+"  ",DOM=6040)IOL=ARM02A
6040 REMOVE (ARM04_DEV,KEY=N0$+"A"+X1$(146,10)+X0$(3),DOM=6050)
6050 REMOVE (ARM04_DEV,KEY=N0$+"B"+Y1$(1,3)+X0$(3),DOM=6060)
6060 REMOVE (ARM04_DEV,KEY=N0$+"C"+Y1$(21,3)+X0$(3),DOM=6065)
6065 REMOVE (ARM04_DEV,KEY=N0$+"D"+X1$(228,10)+X0$(3),DOM=6070)
6070 REMOVE (ARM04_DEV,KEY=N0$+"E"+X1$(103,9)+X0$(3),DOM=6075)
6075 REMOVE (ARM04_DEV,KEY=N0$+"F"+Y1$(4,2)+X0$(3),DOM=6080)
6080 REMOVE (ARM04_DEV,KEY=N0$+"G"+Y1$(6,2)+X0$(3),DOM=6085)
6085 REMOVE (ARM04_DEV,KEY=N0$+"H"+Y1$(8,2)+X0$(3),DOM=6090)
6095 REMOVE (ARM04_DEV,KEY=N0$+"J"+Y1$(24,4)+X0$(3),DOM=6100)
6100 REMOVE (ARM04_DEV,KEY=N0$+"K"+Y1$(32,2)+X0$(3),DOM=6105)
6105 REMOVE (ARM04_DEV,KEY=N0$+"L"+X1$(112,10)+X0$(3),DOM=6110)
6120 REMOVE (ARM02_DEV,KEY=X0$+"  ",DOM=6130)
6130 REMOVE (ARM01_DEV,KEY=X0$,DOM=6140)
6190 RETURN 
6200 REM " --- Calculate Date For Retaining Job Numbers"
6210 LET Y=FNYY_YEAR(F0$(18,2)),M=NUM(F0$(20,2))-NUM(P3$(43,2)),D=NUM(F0$(22,2))
6220 IF M<1 THEN LET M=M+12,Y=Y-1; GOTO 6220
6230 LET D$=FND$(DATE(JUL(1900+Y,M,D,ERR=6250):"%Yz%Mz%Dz"))
6240 GOTO 6290
6250 LET D=D-1
6260 IF D>0 THEN GOTO 6230
6270 LET M=M-1
6280 GOTO 6220
6290 RETURN 
6400 REM " --- Clear Customer Sales Summary
6420 LET W0$=N0$+X0$(3,6)
6430 FIND (ARM06_DEV,KEY=W0$,DOM=6490)IOL=ARM06A
6435 IF P9=G[0] THEN LET W[2]=W[1],W[1]=0,W[5]=W[4],W[4]=0,W[14]=W[12],W[15]=W[13],W[12]=0,W[13]=0,W[20]=W[19],W[19]=0
6440 LET W[0]=W[8],W[1]=W[1]+W[8],W[3]=W[9],W[4]=W[4]+W[9],W[8]=0,W[9]=0
6442 LET P0=W[13]+W[17]; IF P0<>0 THEN LET W[12]=INT((W[12]*W[13]+W[16]*W[17])/P0) ELSE LET W[12]=W[16]; REM "YTD avg days to pay
6445 LET W[13]=W[13]+W[17]; REM "YTD # paymt days
6450 LET W[10]=W[16],W[11]=W[17],W[16]=0,W[17]=0
6455 IF W[21]>W[19] THEN LET W[19]=W[21]
6457 LET W[18]=W[21],W[21]=0
6480 WRITE (ARM06_DEV,KEY=W0$(1,8))IOL=ARM06A
6490 RETURN 
6500 REM " --- Build Sales Analysis Cross Reference Files
6505 BUILD_XREFS: 
6510 ON SA GOTO 6595,6520,6530
6520 REM " --- Build SAM-21 X-Ref To SAM-01
6525 LET SAM20_K$=SAM00_K2$(1,4)+SAM00_K2$(11,3)+SAM00_K2$(14,20)+SAM00_K2$(5,6); GOTO 6590
6530 GOTO 6595
6590 WRITE (SACHANNELS[SA+20],KEY=SAM20_K$,DOM=6595)IOL=SAM20A
6595 RETURN 
8000 REM " --- Functions
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
