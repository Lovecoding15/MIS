0001 SETESC ESCTRAP
0010 REM "mailcall - program to submit email via bbx/pvx
0020 REM "Copyright 2000 by Allen Miglore.  All rights reserved.
0030 LET CRLF$=$0D0A$
0040 PRECISION 6
0050 LET X=RND(MOD(INT(TIM*10000),32000)*-1)
0100 REM ^100
0110 ENTER MODE,T$,ERRMSG$
0120 LET ERRMSG$=""
0130 LET VERSION$="1.1.02"
0140 SETERR ERRTRAP
0150 LET DR$=PGM(-2),X=POS("/"=DR$,-1); IF X=0 THEN LET X=POS("\"=DR$,-1) FI; LET DR$=DR$(1,X)
0160 LET SFX$=PGM(-2),X=POS("."=SFX$,-1),SFX$=SFX$(X)
0170 IF MODE>=0 THEN ON MODE GOTO SENDMAIL,TEMPLATE,INFO,BADMODE
0200 BADMODE: REM ^100
0210 LET ERRMSG$="Invalid mode"; GOTO DONE
1000 SENDMAIL: REM ^1000
1010 LET FROM$=T.FROM$
1020 LET TO$=T.TO$
1030 LET CC$=T.CC$
1040 LET SUBJECT$=T.SUBJECT$
1050 LET OTHERHEAD$=T.OTHERHEAD$
1060 LET MSGTXT$=T.MSGTXT$
1070 LET ATTACH$=T.ATTACH$
1080 LET WORKDIR$=DSK("")+DIR("")
1090 IF LEN(SSN)=16 THEN GOSUB PVXINIT; GOTO 1110
1100 LET X$=OPTS,SAVEOPTS$=X$; IF DSK("")>"" THEN LET X$(2,1)=IOR(X$(2,1),$01$); SETOPTS X$; REM "force file flush on windows
1110 FOR I=ASC("A") TO ASC("Z"); LET BASE64$=BASE64$+CHR(I); NEXT I
1120 FOR I=ASC("a") TO ASC("z"); LET BASE64$=BASE64$+CHR(I); NEXT I
1130 LET BASE64$=BASE64$+"0123456789+/"
1200 REM ^100 - startup info
1210 LET X=UNT; OPEN (X,ERR=TRYSDS)DR$+"mailcall.ini"; IF LEN(SSN)=16 THEN CLOSE (X); OPEN (X,ISZ=-1)DR$+"mailcall.ini" FI; LET INI=X
1220 GOTO 1260
1230 TRYSDS: RENAME DR$+"mailcall.sds",DR$+"mailcall.ini",ERR=NORENAME
1240 GOTO 1200
1250 NORENAME: LET ERRMSG$="Can't rename "+DR$+"mailcall.sds to mailcall.ini."; GOTO DONE
1260 LET X$=FIN(INI); READ RECORD(INI,SIZ=DEC(X$(1,4)))INI$
1270 CLOSE (INI); LET INI=0
1280 WHILE INI$>""
1290 LET X=POS($0A$=INI$); IF X=0 THEN LET LINE$=CVS(CVS(INI$,16),3),INI$="" ELSE LET LINE$=CVS(CVS(INI$(1,X-1),16),3),INI$=INI$(X+1)
1300 IF POS("server="=CVS(LINE$,8))=1 THEN LET SERVER$=LINE$(8)
1310 IF POS("port="=CVS(LINE$,8))=1 THEN LET PORT$=LINE$(6)
1320 IF POS("from="=CVS(LINE$,8))=1 THEN LET DFROM$=LINE$(6)
1330 IF POS("mailer="=CVS(LINE$,8))=1 THEN LET MAILER$=LINE$(8)
1340 IF POS("timezone="=CVS(LINE$,8))=1 THEN LET TIMEZONE$=LINE$(10)
1350 IF POS("charset="=CVS(LINE$,8))=1 THEN LET CHARSET$=LINE$(9)
1360 IF POS("key="=CVS(LINE$,8))=1 THEN LET AK$=LINE$(5)
1370 WEND
1380 IF CHARSET$="" THEN LET CHARSET$="us-ascii"
1390 rem 'IF DSK("")="" THEN LET TIMEZONE$="MDT"; REM **jsd** LET X=UNT; OPEN (X)"<date +%Z"; READ (X)TIMEZONE$; CLOSE (X)
1391 IF DSK("")="" THEN LET X=UNT; OPEN (X)"<date +%Z"; READ (X)TIMEZONE$; CLOSE (X)
1410 IF SUBROUTINE THEN RETURN 
1420 IF DEMOMODE=2 THEN GOTO DONE
1500 REM ^100 - mime types
1510 IF ATTACH$="" THEN GOTO 1600
1520 LET BOUNDARY$="===_SDSI_MailCall_"+DATE(0,TIM:"%Hz%mz%sz")+"/"; LET X=RND(MOD(INT(TIM*10000),32000)*-1); FOR I=1 TO 8; LET BOUNDARY$=BOUNDARY$+CHR(97+RND(25)); NEXT I
1530 LET MT$="text/plain txt ini"+$0A$+"text/html htm html"+$0A$+"application/pdf pdf"+$0A$+"image/jpeg jpg jpeg"+$0A$+"image/gif gif"+$0A$+"image/tif tif tiff"+$0A$+"image/jpg jpg jpeg"; REM "some common types as defaults
1540 LET X=UNT; OPEN (X,ERR=1600)DR$+"mime.types"; IF LEN(SSN)=16 THEN CLOSE (X); OPEN (X,ISZ=-1)DR$+"mime.types" FI; LET MT=X
1550 LET X$=FIN(MT); READ RECORD(MT,SIZ=DEC(X$(1,4)))MT$
1560 CLOSE (MT); LET MT=0
1600 REM ^100 - workfile
1610 rem IF DSK("")>"" THEN LET WORKFL$=WORKDIR$+"mc"+STR(DEC($00$+INFO(3,0)))+".tmp" ELSE LET WORKFL$="/tmp/mc"+STR(DEC($00$+INFO(3,0)))+".tmp"
1615 workfl$="/tmp/mc"+date(0:"%mz%sz")+str(rnd(100))+".tmp";rem Need unique filename- info(3,0)isn't unique in browser 
1620 ERASE WORKFL$,ERR=1630
1630 STRING WORKFL$
1640 LET WORKFL=UNT; IF LEN(SSN)=16 THEN OPEN (WORKFL,ISZ=-1)WORKFL$ ELSE OPEN (WORKFL)WORKFL$
1650 LOCK (WORKFL,ERR=1660)
1660 REM 
2000 HEADER: REM ^1000
2010 IF FROM$="" THEN LET FROM$=DFROM$
2020 IF MASK(TO$,".*@.*\..*")=0 THEN LET ERRMSG$="Invalid To: address"; GOTO DONE
2030 IF MASK(FROM$)=0 THEN LET ERRMSG$="Invalid From: address"; GOTO DONE
2040 LET HDR$="From: "+FROM$+CRLF$
2050 LET HDR$=HDR$+"To: "+TO$+CRLF$
2060 IF DEMOMODE THEN LET SUBJECT$=FNDEMO$(SUBJECT$)
2070 LET HDR$=HDR$+"Subject: "+SUBJECT$+CRLF$
2080 LET HDR$=HDR$+"Date: "+DATE(0:"%Ds, %D %Ms %Yl %Hz:%mz:%sz")+" "+TIMEZONE$+CRLF$
2090 IF CC$>"" THEN LET HDR$=HDR$+"Cc: "+CC$+CRLF$
2100 IF ATTACH$>"" THEN LET HDR$=HDR$+"MIME-Version: 1.0"+CRLF$+"Content-Type: multipart/mixed; boundary="+$22$+BOUNDARY$+$22$+CRLF$
2110 LET HDR$=HDR$+"X-mc: MailCall 1.0"+CRLF$
2120 IF NFIELD(T$,"status",ERR=2130)>0 THEN LET HDR$=HDR$+"X-mcv: status"+CRLF$
2130 LET OH$=FNSUB$(OTHERHEAD$,"\n",CRLF$)
2140 LET OH$=FNSUB$(OH$,$0A$,CRLF$); LET OH$=FNSUB$(OH$,$0D0D$,$0D$)
2150 IF LEN(OH$)>1 THEN IF OH$(LEN(OH$)-1,2)=CRLF$ THEN LET OH$=OH$(1,LEN(OH$)-2); GOTO 2150
2160 IF OH$>"" THEN LET HDR$=HDR$+OH$+CRLF$
2170 LET X$=HDR$+CRLF$; WRITE RECORD(WORKFL)X$
3000 MESSAGE: REM ^1000
3010 LET MSG$=FNSUB$(MSGTXT$,"\n",CRLF$)
3020 LET MSG$=FNSUB$(MSG$,"\r",$0D$)
3030 LET MSG$=FNSUB$(MSG$,$0D0D$,$0D$)
3040 LET MSG$=FNSUB$(MSG$,"\t",$09$)
3050 LET MSG$=MSG$+CRLF$
3060 IF DEMOMODE THEN LET MSG$=FNDEMO$(MSG$)
3070 IF ATTACH$>"" THEN LET MSG$="--"+BOUNDARY$+CRLF$+"Content-type: text/plain; charset="+$22$+CHARSET$+$22$+CRLF$+CRLF$+MSG$
3080 LET X$=MSG$+CRLF$; WRITE RECORD(WORKFL)X$
4000 ATTACHMENTS: REM ^1000
4010 IF ATTACH$="" THEN GOTO SEND
4020 LET X$="--"+BOUNDARY$+CRLF$; WRITE RECORD(WORKFL)X$
4030 LET WORK$=ATTACH$
4040 WHILE WORK$>""
4050 LET X=POS(","=WORK$); IF X THEN LET FL$=CVS(WORK$(1,X-1),3),WORK$=WORK$(X+1) ELSE LET FL$=CVS(WORK$,3),WORK$=""
4060 LET X=UNT; OPEN (X,ERR=BADFILE)FL$; LET X$=FID(X); IF X$(1,1)=$04$ OR LEN(SSN)=16 THEN CLOSE (X); OPEN (X,ERR=BADFILE,ISZ=-1)FL$ FI; LET WORK=X
4070 LET BASEFL$=FL$,X=POS("/"=BASEFL$,-1); IF X=0 THEN LET X=POS("\"=BASEFL$,-1) FI; IF X=0 THEN LET X=POS(":"=BASEFL$) FI; IF X THEN LET BASEFL$=BASEFL$(X+1)
4080 LET EXT$=""; LET X=POS("."=FL$,-1); IF X THEN LET EXT$=CVS(FL$(X+1),8)
4100 REM ^100 - find mime type
4110 LET WORK1$=MT$,FLTYPE$="application/octet-stream"
4120 WHILE WORK1$>""
4130 LET X=POS($0A$=WORK1$); IF X THEN LET X$=WORK1$(1,X-1),WORK1$=WORK1$(X+1) ELSE LET X$=WORK1$,WORK1$=""
4140 LET X$=CVS(CVS(X$,16),3+8)
4150 LET X=POS(" "=X$),EXTS$="",MIMETYPE$=""; IF X THEN LET EXTS$=X$(X),MIMETYPE$=X$(1,X-1)
4160 IF POS(" "+EXT$+" "=EXTS$+" ")>0 THEN LET FLTYPE$=MIMETYPE$; EXITTO 4200
4170 WEND
4200 REM ^100 - generate attachment
4210 LET ENCODING$="base64",CS$=""; IF POS("text/"=CVS(FLTYPE$,8))=1 THEN LET ENCODING$="quoted-printable",CS$="; charset="+$22$+CHARSET$+$22$
4211 IF NFIELD(T$,"forcebase64",ERR=4212) THEN LET ENCODING$="base64",CS$=""
4220 LET X$="Content-Type: "+FLTYPE$+CS$+"; name="+$22$+BASEFL$+$22$+CRLF$; WRITE RECORD(WORKFL)X$
4230 LET X$="Content-Disposition: attachment; filename="+$22$+BASEFL$+$22$+CRLF$; WRITE RECORD(WORKFL)X$
4240 LET COUNT=0,LAST$=""; IF ENCODING$<>"base64" THEN GOTO QUOTEDPRINTABLE
4300 BASE64: REM ^100
4310 REM "complete attachment header
4320 LET X$="Content-Transfer-Encoding: "+ENCODING$+CRLF$+CRLF$; WRITE RECORD(WORKFL)X$
4400 REM ^100 - mimeencode file contents
4410 NEXTBLOCK: READ RECORD(WORK,SIZ=1024,ERR=4500)BLOCK$
4420 LET BLOCK$=LAST$+BLOCK$,LAST$=""
4430 NEXTTRIPLET: IF LEN(BLOCK$)<3 THEN LET LAST$=BLOCK$; GOTO NEXTBLOCK
4440 LET TP$=BLOCK$(1,3),BLOCK$=BLOCK$(4)
4450 LET TPB$=FNB8$(TP$(1,1))+FNB8$(TP$(2,1))+FNB8$(TP$(3,1)); REM "24 bits
4460 LET TPO$=BASE64$(1+FNA6(TPB$(1,6)),1)+BASE64$(1+FNA6(TPB$(7,6)),1)+BASE64$(1+FNA6(TPB$(13,6)),1)+BASE64$(1+FNA6(TPB$(19,6)),1)
4470 WRITE RECORD(WORKFL)TPO$
4480 LET COUNT=COUNT+1; IF COUNT=18 THEN WRITE RECORD(WORKFL)CRLF$; LET COUNT=0
4490 GOTO NEXTTRIPLET
4500 REM ^100 - end of work
4510 IF BLOCK$="" THEN LET TPO$="",PAD$=""
4520 IF LEN(BLOCK$)=1 THEN LET TPB$=FNB8$(BLOCK$)+"0000",TPO$=BASE64$(1+FNA6(TPB$(1,6)),1)+BASE64$(1+FNA6(TPB$(7,6)),1),PAD$="=="
4530 IF LEN(BLOCK$)=2 THEN LET TPB$=FNB8$(BLOCK$(1,1))+FNB8$(BLOCK$(2,1))+"00",TPO$=BASE64$(1+FNA6(TPB$(1,6)),1)+BASE64$(1+FNA6(TPB$(7,6)),1)+BASE64$(1+FNA6(TPB$(13,6)),1),PAD$="="
4540 LET X$=TPO$+PAD$+CRLF$; WRITE RECORD(WORKFL)X$
4550 GOTO NEXTATTACHMENT
4600 QUOTEDPRINTABLE: REM ^100
4610 REM "verify it is a text file by looking for LF in first block
4620 READ RECORD(WORK,SIZ=1024,END=4900)BLOCK$
4630 IF POS($0A$=BLOCK$)=0 THEN IF LEN(BLOCK$)=1024 OR POS($20$>BLOCK$)>0 THEN LET ENCODING$="base64"; GOTO BASE64
4640 LET X$="Content-Transfer-Encoding: "+ENCODING$+CRLF$+CRLF$; WRITE RECORD(WORKFL)X$
4650 GOTO NEXTQTLINE
4660 NEXTQTBLOCK: READ RECORD(WORK,SIZ=1024,END=EOQTFL)BLOCK$; LET BLOCK$=LAST$+BLOCK$,LAST$=""
4670 NEXTQTLINE: LET X=POS($0A$=BLOCK$); IF X=0 THEN LET LAST$=BLOCK$; GOTO NEXTQTBLOCK ELSE LET LINE$=BLOCK$(1,X-1),BLOCK$=BLOCK$(X+1)
4680 GOSUB WRITEQTLINE
4690 GOTO NEXTQTLINE
4700 EOQTFL: REM ^100
4710 IF LAST$>"" THEN LET LINE$=LAST$; GOSUB WRITEQTLINE
4720 GOTO NEXTATTACHMENT
4730 WRITEQTLINE: REM quote printable line
4740 IF LINE$>"" THEN IF LINE$(LEN(LINE$),1)=$0D$ THEN LET LINE$=LINE$(1,LEN(LINE$)-1)
4750 IF LINE$="" THEN WRITE RECORD(WORKFL)CRLF$; RETURN 
4760 IF DEMOMODE THEN LET LINE$=FNDEMO$(LINE$)
4770 LET LINE$=FNSUB$(LINE$,"=","="+HTA("="))
4780 LET X=POS($20$>LINE$); IF X THEN LET LINE$=LINE$(1,X-1)+"="+HTA(LINE$(X,1))+LINE$(X+1); GOTO 4780
4790 LET X=POS($7E$<LINE$); IF X THEN LET LINE$=LINE$(1,X-1)+"="+HTA(LINE$(X,1))+LINE$(X+1); GOTO 4790
4800 WHILE LINE$>""
4810 IF LEN(LINE$)>72 THEN LET FRAG$=LINE$(1,72),LINE$=LINE$(73) ELSE LET FRAG$=LINE$,LINE$=""
4820 IF LINE$>"" THEN LET FRAG$=FRAG$+"="
4830 LET X$=FRAG$+CRLF$; WRITE RECORD(WORKFL)X$
4840 WEND
4850 RETURN 
4900 NEXTATTACHMENT: REM ^100
4910 CLOSE (WORK); LET WORK=0
4920 LET X$="--"+BOUNDARY$+CRLF$; WRITE RECORD(WORKFL)X$
4930 WEND
4940 GOTO SEND
5000 BADFILE: REM ^100
5010 LET ERRMSG$="Error opening file "+FL$+" ("+STR(ERR)+"/"+STR(TCB(10))+")"; GOTO DONE
6000 SEND: REM ^1000
6010 CLOSE (WORKFL)
6020 LET CM$=FNSUB$(MAILER$,"%",WORKFL$)
6030 LET X=SCALL(CM$)
6040 IF X<>0 THEN LET ERRMSG$="O/S error code "+STR(X)+" executing "+CM$
6050 ERASE WORKFL$
6060 GOTO DONE
7000 TEMPLATE: REM ^1000 - return template in t$
7010 DIM T$:"from:c(1*=0),to:c(1*=0),cc:c(1*=0),subject:c(1*=0),otherhead:c(1*=0),msgtxt:c(1*=0),attach:c(1*=0),status:n(1*=0),forcebase64:n(1*=0)"
7020 GOTO DONE
8000 INFO: REM ^1000
8010 LET SUBROUTINE=1; GOSUB 1200; LET SUBROUTINE=0
8020 LET T$="MailCall(tm)"+$0A$+"Copyright 2000 by Allen Miglore.  All rights reserved."+$0A$+"Distributed under license by Synergetic Data Systems Inc."+$0A$
8030 LET T$=T$+"Version: "+VERSION$
8050 GOTO DONE
9000 DONE: REM ^1000
9010 IF LEN(SSN)=16 THEN GOTO 9030
9020 IF SAVEOPTS$>"" THEN SETOPTS SAVEOPTS$
9030 IF WORKFL THEN CLOSE (WORKFL); ERASE WORKFL$,ERR=9060
9040 IF INI THEN CLOSE (INI)
9050 IF MT THEN CLOSE (MT)
9060 EXIT 
10000 ERRTRAP: REM ^1000
10010 LET ERRMSG$="Error "+STR(ERR)+"/"+STR(TCB(10))+" at line "+STR(TCB(5))+" in "+PGM(-2)
10020 GOTO DONE
10100 ESCTRAP: REM ^100
10105 IF VERSION$>"" THEN LET ERRMSG$="Interrupted (at line "+STR(TCB(5))+")"; GOTO DONE
10110 RETURN 
20000 REM ^10000 - bin/asc functions for mime work
20010 DEF FNB$(CHAR$)
20020 LET XBIN$=""; FOR I=7 TO 0 STEP -1; IF AND(CHR(2^I),CHAR$)=CHR(2^I) THEN LET XBIN$=XBIN$+"1" ELSE LET XBIN$=XBIN$+"0" FI; NEXT I
20030 RETURN XBIN$
20040 FNEND
20050 DEF FNA(XBIN$)
20060 LET AVAL=0; IF XBIN$>"" THEN FOR XPO=LEN(XBIN$) TO 1 STEP -1; LET AVAL=AVAL+NUM(XBIN$(XPO,1))*2^(LEN(XBIN$)-XPO); NEXT XPO
20070 RETURN AVAL
20080 FNEND
20090 DEF FNSUB$(WSUB$,WSUBFROM$,WSUBTO$)
20100 LET WSUBWORK$=""
20110 LET WSUB=POS(WSUBFROM$=WSUB$)
20120 WHILE WSUB>0
20130 LET WSUBWORK$=WSUBWORK$+WSUB$(1,WSUB-1)+WSUBTO$,WSUB$=WSUB$(WSUB+LEN(WSUBFROM$))
20140 LET WSUB=POS(WSUBFROM$=WSUB$)
20150 WEND
20160 RETURN WSUBWORK$+WSUB$
20170 FNEND
20180 DEF FNLEFT$(WLX$,WL)
20190 IF LEN(WLX$)<WL THEN LET WLX$=WLX$+FILL(WL-LEN(WLX$))
20200 RETURN WLX$(1,WL)
20210 RETURN 
20220 DEF FNRIGHT$(WR$,WR)
20230 IF LEN(WR$)<WR THEN LET WR$=FILL(WR-LEN(WR$))+WR$
20240 RETURN WR$(LEN(WR$)-WR+1)
20250 FNEND
20260 DEF FNMID$(WMX$,WPOS,WM)
20270 IF LEN(WMX$)<WPOS+WM-1 THEN LET WMX$=WMX$+FILL(WPOS+WM-1-LEN(WMX$))
20280 RETURN WMX$(WPOS,WM)
20290 FNEND
20300 DEF FNB8$(XC$)=STR((AND(CHR(128),XC$)=CHR(128)))+STR((AND(CHR(64),XC$)=CHR(64)))+STR((AND(CHR(32),XC$)=CHR(32)))+STR((AND(CHR(16),XC$)=CHR(16)))+STR((AND(CHR(8),XC$)=CHR(8)))+STR((AND(CHR(4),XC$)=CHR(4)))+STR((AND(CHR(2),XC$)=CHR(2)))+STR((AND(CHR(1),XC$)=CHR(1)))
20310 DEF FNA6(XB$)=NUM(XB$(6,1))+2*NUM(XB$(5,1))+4*NUM(XB$(4,1))+8*NUM(XB$(3,1))+16*NUM(XB$(2,1))+32*NUM(XB$(1,1))
20320 DEF FNDEMO$(WLN$)
20330 LET WLN1$="",WC=0,WDS=RND(4)
20340 WHILE CVS(WLN$,2)>""
20350 LET WX=POS(" "<>WLN$); IF WX>1 THEN LET WLN1$=WLN1$+WLN$(1,WX-1),WLN$=WLN$(WX)
20360 LET WX=POS(" "=WLN$); IF WX>0 THEN LET WITM$=WLN$(1,WX-1),WLN$=WLN$(WX) ELSE LET WITM$=WLN$,WLN$=""
20370 LET WC=WC+1
20380 IF MOD(WC,4)=WDS THEN LET WITM$=FILL(LEN(WITM$),"*Demo")
20390 LET WLN1$=WLN1$+WITM$
20400 WEND
20410 RETURN WLN$
20420 FNEND
22000 PVXINIT: REM ^1000
22005 rem ' providex code - never used in bbj
22010 rem 'set_param 'lu','ff'=4,'wd'=0
22020 LET OTHERHEAD$=FNSUB$(OTHERHEAD$,SEP,CRLF$)
22030 LET MSGTXT$=FNSUB$(MSGTXT$,SEP,CRLF$)
22040 rem 'workdir$=lwd+"\"
22050 RETURN 
