0010 REM "MPR - Planned Purchase Report (Report Overlay)"
0020 REM "Program MPR.AB"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.4 - 15Dec97 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "09Sep96 JJD: Use correct Stocking Level information (item/warehouse).(1240,1250-1290,1640,5220,5410)"
0032 REM "14Oct96 JJD: Print correct "Projected Available", "Extended Cost",info. (2175,2180,5220)"
0033 REM "14Oct96 JJD: Use correct period date headings. (4160)"
0034 REM "20Oct97 KJS: Use F0$(18,6) instead of DAY function (590,1320)"
0035 REM "30Dec98 WGH: Use Inventory ABC Analysis Factors, and current Period and Year (570)
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 CALL "MPC.FA",MPE03_DEV,"MPE-03",N0$,FORECAST$,FILENAME$,STATUS
0115 IF STATUS THEN GOTO 9900
0170 CALL "SYC.GA",7,1,"","",STATUS
0175 IF STATUS THEN GOTO 9900
0200 REM " --- IOLIST's"
0210 MPE03A: IOLIST A0$(1),A1$(1),A[ALL]
0220 IVM03H: IOLIST VEND_XREF$
0230 MPW01A: IOLIST B0$(1),B[ALL]
0240 APM01A: IOLIST C0$(1),C1$(1)
0250 IVM01A: IOLIST D0$(1),D1$(1),D2$(1),D3$,D4$,D5$,D6$,D[ALL]
0260 IVM12A: IOLIST E0$,E1$,E2$,E[ALL]
0280 IVM02A: IOLIST W0$(1),W1$(1),W2$(1),W[ALL]
0290 IVM05A: IOLIST U0$(1),U1$(1),U2$,U[ALL]
0500 REM " --- Initializations"
0510 PRECISION IVS01_PRECISION
0520 DIM A0$(28),A1$(MP*6),A[MP*6]
0530 LET HEADINGS$[1]=HEADINGS$[1]+" For "+H5$
0540 LET PREFIX$=FNP$(N0$+FORECAST$+WHSE$),EOF$="",LINES=6
0550 LET NUMBER=ENDPER-BEGPER+3,HT$="Cost Summary By Date Required"
0560 IF ALLBUYERS>0 THEN LET BUYER$=""
0570 DIM IVFILES[12],ITEM$[2]
0575 LET IVFILES[1]=IVM01_DEV,IVFILES[2]=IVM02_DEV,IVFILES[3]=IVM02_DEV
0580 LET IVFILES[12]=IVM12_DEV
0590 LET DAY_OF_MONTH=NUM(F0$(22,2))
0600 REM " --- Print positions"
0610 DIM O[9],TITLES$[LINES]
0615 LET O[9]=WIDTH,O[8]=O[9]-M2,O[7]=O[8]-M2,O[6]=O[7]-M2
0620 LET O[5]=O[6]-M2,O[4]=O[5]-M3,O[3]=O[4]-20,O[2]=O[3]-M5-1
0625 LET O[1]=P[0],O[9]=O[3]-(31+M0),DW=O[2]-O[1]+1,X=WIDTH-O[1]-19
0630 LET NUMCOL=INT(X/M1)
0635 IF NUMCOL>NUMBER THEN LET NUMCOL=NUMBER
0640 LET TITLES$[0]="  Gross Requirement",TITLES$[1]="  Scheduled Receipt"
0645 LET TITLES$[2]="Projected Available",TITLES$[3]="    Net Requirement"
0647 LET TITLES$[4]=" Plan Order Release",TITLES$[5]=" Plan Order Receipt"
0650 LET TITLES$[6]="      Extended Cost"
0680 LET BEGPER=BEGPER-1,ENDPER=ENDPER-1,POSITION=WIDTH-M1*NUMCOL
0690 LET HR=WIDTH-MAX(LEN(H7$),LEN(H8$))
0700 REM " --- Background"
0710 CALL "SYC.NB","Printing",P[0],COLUMN
0900 REM " --- Position file"
0990 READ (MPE03_DEV,KEY=PREFIX$+BEGITEM$,DOM=1000)
1000 REM " --- Read next MPE-03 record"
1010 READ (MPE03_DEV,END=4000)IOL=MPE03A
1020 IF POS(PREFIX$=A0$)<>1 THEN GOTO 4000
1030 IF FNP$(ENDITEM$)<>"" THEN IF A0$(8,P[0])>ENDITEM$ THEN GOTO 4000
1040 IF POS(A0$(28,1)="A")=0 THEN GOTO 3900
1200 REM " --- Additional reads"
1210 DIM D0$(22),D1$(P[2]+P[3]+P[4]),D2$(62),D[12],DESC$(DW)
1220 DIM W0$(24),W1$(64),W2$(1),W[20]
1230 LET D0$(1,22)=N0$+A0$(8,20),W0$(1,24)=N0$+WHSE$+A0$(8,20),D5$=""
1240 FIND (IVM01_DEV,KEY=D0$,DOM=1000)IOL=IVM01A
1245 LET DESC$(1)=FNZ$(D1$,P[2],P[3],P[4])
1250 FIND (IVM02_DEV,KEY=W0$,DOM=1000)IOL=IVM02A
1255 IF D2$(24,1)="I" THEN LET ITEMBUYER$=D2$(9,3),SL_VEND$=D2$(12,6),SS=D[5],EOQ=D[6],LT=D[7] ELSE LET ITEMBUYER$=W1$(19,3),SL_VEND$=W1$(22,6),SS=W[5],EOQ=W[6],LT=W[7]
1260 IF BUYER$<>"" THEN IF ITEMBUYER$<>BUYER$ THEN GOTO 3900
1270 IF FNP$(BEGVEND$)<>"" THEN IF SL_VEND$<BEGVEND$ THEN GOTO 3900
1280 IF FNP$(ENDVEND$)<>"" THEN IF SL_VEND$>ENDVEND$ THEN GOTO 3900
1290 PRINT @(COLUMN,11),A0$(8,P[0]),
1300 REM " --- Calculate Average Annual Item Usage "
1305 LET USAGE=0,BASE_PRYR$=CURR_PERIOD$+CURR_YEAR$
1310 LET ACTION$="W",PERIODS=NUM(MAX_PERIOD$)
1315 LET CURR_PRYR$=CURR_PERIOD$+CURR_YEAR$
1316 LET ITEM$[0]=N0$,ITEM$[1]=W0$(3,2),ITEM$[2]=W0$(5,20)
1320 CALL "IVC.AU",ACTION$,IVFILES[ALL],ITEM$[ALL],FACTORS[ALL],DAY_OF_MONTH,BASE_PRYR$,CURR_PRYR$,PERIODS,IVS01_PRECISION,ACTUAL,ESTIMATED,FLAG$,STATUS
1325 IF FLAG$="" THEN GOTO 1370
1330 LET ACTUAL=ESTIMATED
1370 LET USAGE=ACTUAL/PERIODS
1400 REM " --- Detremine Vendor Count and Build String " 
1405 LET VEND_STRING$="",VEND_COUNT=0
1410 IF INCLUDE$<>"Y" THEN GOTO 1455
1415 READ (IVM03_DEV,KEY=N0$+"H"+W0$(5,20),DOM=1420)
1420 LET VEND_KEY$=KEY(IVM03_DEV,END=1455)
1425 IF POS(N0$+"H"=VEND_KEY$)=0 THEN GOTO 1455
1430 IF VEND_KEY$(4,20)<>W0$(5,20) THEN GOTO 1455
1435 READ (IVM03_DEV,KEY=VEND_KEY$,DOM=1440)IOL=IVM03H
1440 LET VEND_STRING$=VEND_STRING$+VEND_XREF$(24,6)
1445 LET VEND_COUNT=VEND_COUNT+1
1450 GOTO 1420
1455 LET NEEDED=8+VEND_COUNT
1500 REM " --- Print item heading"
1510 IF L+NEEDED>L9 THEN GOSUB 5000
1520 GOSUB 5200
1540 GOSUB 5400
1600 REM " --- Include other vendors?"
1610 IF LEN(VEND_STRING$)<6 THEN GOTO 2000
1620 IF INCLUDE$<>"Y" THEN GOTO 2000
1630 FOR I=1 TO LEN(VEND_STRING$) STEP 6
1640 IF VEND_STRING$(I,6)=SL_VEND$ THEN GOTO 1690
1650 LET VENDOR$=VEND_STRING$(I,6)
1660 GOSUB 6000
1670 PRINT (7)@(O[9]-LEN(T$)),T$,V$," ",C1$,@(O[3]),P$,@(O[4]),C$
1680 LET L=L+1
1690 NEXT I
2000 REM " --- Build detail"
2010 DIM REQUIRED$[NUMBER],AMOUNTS[NUMBER,LINES],ORDERBY$[NUMBER]
2020 LET REQUIRED$[1]="   Begin",AMOUNTS[1,2]=A[0],N=1
2100 REM 
2110 FOR X=BEGPER TO ENDPER
2120 LET P=X*6,N=N+1
2150 LET ORDERBY$[N]=FNB6$(A1$(X*6+1,6))
2160 LET REQUIRED$[N]=FNB6$(S2$(X*6+1,6))
2170 LET AMOUNTS[N,0]=A[P+2],AMOUNTS[N,1]=A[P+1]
2175 LET AMOUNTS[N,2]=A[P+6]
2180 LET AMOUNTS[N,3]=A[P+3],AMOUNTS[N,4]=A[P+4],AMOUNTS[N,5]=A[P+5],AMOUNTS[N,6]=AMOUNTS[N,5]*W[11]
2190 NEXT X
2200 REM " --- Detail printing initializations"
2210 LET LAST=0,REQUIRED$[NUMBER]=" Totals "
2220 FOR X=1 TO NUMBER-1
2230 FOR N=0 TO LINES
2240 LET AMOUNTS[NUMBER,N]=AMOUNTS[NUMBER,N]+AMOUNTS[X,N]
2250 NEXT N
2260 NEXT X
2280 LET AMOUNTS[NUMBER,2]=A[P+6]; REM "Running total
2300 REM " --- Print detail"
2310 LET FIRST=LAST+1,LAST=FIRST+NUMCOL-1,NEEDED=4+LINES
2320 IF FIRST>NUMBER THEN GOTO 3900
2330 IF LAST>NUMBER THEN LET LAST=NUMBER
2340 IF L+NEEDED<L9 THEN GOTO 2400
2350 GOSUB 5000
2360 GOSUB 5200
2400 REM " --- Required By"
2410 DIM BUFFER$(WIDTH)
2420 LET BUFFER$(POSITION-12)="Required By",N=POSITION
2430 FOR X=FIRST TO LAST
2440 LET BUFFER$(N+M1-9)=REQUIRED$[X],N=N+M1
2450 NEXT X
2480 PRINT (7)""
2490 PRINT (7)BUFFER$
2500 REM " --- Amounts"
2510 FOR Y=0 TO LINES
2520 DIM BUFFER$(WIDTH)
2530 LET BUFFER$(POSITION-20)=TITLES$[Y],N=POSITION,MASK$=M4$
2540 IF Y=LINES THEN LET MASK$=M1$
2550 FOR X=FIRST TO LAST
2560 LET BUFFER$(N)=STR(AMOUNTS[X,Y]:MASK$),N=N+M1
2570 NEXT X
2580 PRINT (7)BUFFER$
2590 NEXT Y
2600 REM " --- Order By"
2610 DIM BUFFER$(WIDTH)
2620 LET BUFFER$(POSITION-9)="Order By",N=POSITION
2630 FOR X=FIRST TO LAST
2640 LET BUFFER$(N+M1-9)=ORDERBY$[X],N=N+M1
2650 NEXT X
2660 PRINT (7)BUFFER$
2670 LET L=L+NEEDED
2900 REM " --- Accumulate totals"
2910 FOR X=FIRST TO LAST
2915 IF X=NUMBER THEN GOTO 2980
2920 DIM B0$(8),B[2]
2925 IF X=1 THEN LET B0$(1)=N0$; GOTO 2940
2930 LET B0$(1)=N0$+FND6$(FNS$(REQUIRED$[X]))
2940 FIND (MPW01_DEV,KEY=B0$,DOM=2950)IOL=MPW01A
2950 LET B[0]=B[0]+AMOUNTS[X,LINES]
2960 WRITE (MPW01_DEV,KEY=B0$)IOL=MPW01A
2980 NEXT X
2990 GOTO 2300
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4005 LET NUMCOL=INT((WIDTH-12)/M1)
4010 DIM REQUIRED$[NUMCOL],AMOUNTS[NUMCOL]
4020 LET L=L9+1,TOTAL=0,N=0,EOF$="Y"
4090 READ (MPW01_DEV,KEY=N0$,DOM=4100)
4100 REM " --- Print cost summary"
4110 READ (MPW01_DEV,END=4900)IOL=MPW01A
4120 IF N>=NUMCOL THEN GOSUB 5600
4150 LET N=N+1,REQUIRED$[N]=FNB6$(B0$(3)),AMOUNTS[N]=B[0],TOTAL=TOTAL+B[0]
4160 IF FNP$(B0$(3))="" THEN LET REQUIRED$[N]="   Begin"
4190 GOTO 4100
4900 REM 
4910 IF N>0 THEN GOSUB 5600
4920 IF L>L9 THEN GOSUB 5000
4930 PRINT (7)""
4940 PRINT (7)"Total Cost For Report ",TOTAL:M1$
4990 GOTO 9900
5000 REM " --- Heading"
5010 LET L=HEADINGS+5
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5040 PRINT (7)H3$,@(FNC(H6$,WIDTH)-2),"  ",H6$,@(HR),H7$
5050 PRINT (7)H4$,@(FNC(H9$,WIDTH)-2),"  ",H9$,@(HR),H8$
5060 PRINT (7)""
5065 IF EOF$<>"" THEN GOTO 5100
5070 PRINT (7)@(O[2]),"Lead",@(O[4]+M3-5),"Unit",@(O[6]+M2-8),"Avg Mth",@(O[7]+M2-7),"Safety",@(O[8]+M2-9),"Quantity"
5080 PRINT (7)"Item",@(O[1]),"Description",@(O[2]),"Time",@(O[3]),"Vendor Item Number",@(O[4]+M3-5),"Cost",@(O[5]+M2-4),"EOQ",@(O[6]+M2-6),"Usage",@(O[7]+M2-6),"Stock",@(O[8]+M2-8),"On Hand"
5090 RETURN 
5100 REM " --- Totals Heading"
5110 PRINT (7)@(FNC(HT$,WIDTH)),HT$
5120 PRINT (7)""
5190 RETURN 
5200 REM " --- Item Heading"
5210 PRINT (7)""
5220 PRINT (7)D0$(3),@(O[1]),DESC$,@(O[2]),LT:M5$,@(O[4]),W[11]:M2$,@(O[5]),EOQ:M2$,@(O[6]),USAGE:M2$+FLAG$,@(O[7]),SS:M2$,@(O[8]),W[0]:M2$
5230 LET L=L+2
5290 RETURN 
5400 REM " --- Stocking Vendor"
5410 LET VENDOR$=SL_VEND$
5420 GOSUB 6000
5430 PRINT (7)""
5440 PRINT (7)@(O[9]-16),"Stocking Vendor ",V$," ",C1$,@(O[3]),P$,@(O[4]),"Last Purchase Price:",U[6]:M3$
5450 LET L=L+2
5490 RETURN 
5600 REM " --- Totals"
5610 DIM BUFFER$(WIDTH)
5620 LET BUFFER$(1)="Required By",P=12
5630 FOR X=1 TO N
5640 LET BUFFER$(P+M1-9)=REQUIRED$[X],P=P+M1
5650 NEXT X
5660 IF L+3>L9 THEN GOSUB 5000
5670 PRINT (7)""
5680 PRINT (7)BUFFER$
5700 REM 
5710 DIM BUFFER$(WIDTH)
5720 LET BUFFER$(1)=" Total Cost",P=12
5730 FOR X=1 TO N
5740 LET BUFFER$(P)=STR(AMOUNTS[X]:M1$),P=P+M1
5750 NEXT X
5760 PRINT (7)BUFFER$
5770 LET L=L+3,N=0
5790 RETURN 
6000 REM " --- Retrieve vendor information"
6010 DIM C0$(8),C1$(30),V$(M0),U0$(28),U1$(32),U2$(20),U[12]
6020 LET V$(1)="None",P$="",C$="",T$="Other Vendor "
6030 IF FNP$(VENDOR$)="" THEN GOTO 6090
6040 LET V$(1)=FNF$(VENDOR$(1,R[0]),M0$),U0$(1)=N0$+VENDOR$+A0$(8)
6050 LET C0$(1)=N0$+VENDOR$,C1$(1)="Unknown Vendor"
6060 FIND (APM01_DEV,KEY=C0$,DOM=6070)IOL=APM01A
6070 FIND (IVM05_DEV,KEY=U0$,DOM=6090)IOL=IVM05A
6075 LET P$=U2$,C$=STR(U[6]:M3$)
6080 IF U1$(1,1)="P" THEN LET T$="Primary Vendor "
6085 IF U1$(1,1)="S" THEN LET T$="Secondary Vendor "
6090 RETURN 
8000 REM " --- Functions"
8025 DEF FNB6$(Q1$)=Q1$(3,2)+"/"+Q1$(5,2)+"/"+FNYY21_YY$(Q1$(1,2))
8045 DEF FND6$(Q$)=FNYY_YY21$(Q$(7,2))+Q$(1,2)+Q$(4,2)
8060 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8070 DEF FNP$(Q$)=CVS(Q$,2)
8080 DEF FNS$(Q$)=FNP$(Q$(POS(" "<>Q$)))
8090 DEF FNZ$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
