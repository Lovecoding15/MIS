rem ' send followup perpetual license email

seterr errmsg

enter workfile$, followupfile$

workfile = unt
open(workfile)workfile$
rem ' open(workfile)"/tmp/perpetlicWorkfile20171115003002.dat"
workfiletemp$ = "EXPIRE_DATE:C(8),SERIAL_NBR:C(20),PRODUCT:C(3),LICENSE_TYPE:C(3),FIRM_ID:C(2),CUSTOMER_NBR:C(6),PERPET_OR_ANN:C(1),REG_DATE:C(8),REG_TIME:C(6),HOSTID:C(60*),USERS:N(4*),DAYS_TO_EXPIRE:N(3*)"
dim workrec$:workfiletemp$

followupfile = unt
open(followupfile)followupfile$
rem ' open(followupfile)"/tmp/perpetlicFollowup20171115003002.dat"
followupfiletemp$ = "FIRM_ID:C(2),CUSTOMER_NBR:C(6)"
dim followuprec$:followupfiletemp$

call "ec_open::snmel"
call "ec_open::snmeu"
call "ec_open::arm01"
call "ec_open::tmm05"
call "ec_open::tmm03"
call "ec_open::arm02"
call "ec_open::arm10f"

while 1
	read record(followupfile, end = *break)followuprec$

	if followuprec.firm_id$ = "01" then
	
		read record(arm01, key = followuprec$)arm01$
		subject$ = "Perpetual Notice Followup " + arm01.firm_id$ + arm01.customer_nbr$ + " " + cvs(arm01.cust_name$,3)
		read record(arm02, key = followuprec.firm_id$ + followuprec.customer_nbr$ + "  ")arm02$
		slspsn_code$ = arm02.slspsn_code$
	
		rem ' get those within 17 days of expiration
		read record(workfile, key = "", dom = *next)workfilerec$
		table1$ = "<table border=" + chr(34) + "1" + chr(34) + "><tr><td align=" + chr(34) + "left" + chr(34) + ">" + "Serial #" + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + "Expires" + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + "Users" + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + "Days to Expire" + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + "End User" + "</td></tr>"
		while 1
			read record(workfile, end = *break)workrec$
			
			if workrec.firm_id$ + workrec.customer_nbr$ = followuprec.firm_id$ + followuprec.customer_nbr$ then
				if workrec.days_to_expire < 18 and workrec.days_to_expire > 0 then
					rem ' check for an EU record
					enduser$ = ""
					found = 0
					read record(snmel, key = workrec.serial_nbr$, dom = *next)snmel$; found = 1
					if found then 
						found = 0 
						read record(snmeu, key = snmel.end_user_nbr$, dom = *next)snmeu$; found = 1
						if found then enduser$ = cvs(snmeu.company_name$,3)
					fi
					rem ' print cvs(workrec.serial_nbr$,3)," ",workrec.expire_date$(1,4)+"-"+workrec.expire_date$(5,2)+"-"+workrec.expire_date$(7,2)," ",str(workrec.users:"##0")," ",str(workrec.days_to_expire:"###0-")," ",enduser$
					table1$ = table1$ + "<tr><td align=" + chr(34) + "left" + chr(34) + ">" + cvs(workrec.serial_nbr$,3) + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + workrec.expire_date$(1,4)+"-"+workrec.expire_date$(5,2)+"-"+workrec.expire_date$(7,2) + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + str(workrec.users:"##0") + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + str(workrec.days_to_expire:"###0-") + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + enduser$ + "</td></tr>"
				fi
			fi

		wend

		table1$ = table1$ + "</table>"
		
		rem ' get those that have expxired
		let k$ = keyl(workfile)
		table2$ = ""
		while 1
			read record(workfile,key = k$, dir = -1)workrec$
			
			if workrec.firm_id$ + workrec.customer_nbr$ = followuprec.firm_id$ + followuprec.customer_nbr$ then
				if workrec.days_to_expire < 1 then
					rem ' check for an EU record
					enduser$ = ""
					found = 0
					read record(snmel, key = workrec.serial_nbr$, dom = *next)snmel$; found = 1
					if found then 
						found = 0 
						read record(snmeu, key = snmel.end_user_nbr$, dom = *next)snmeu$; found = 1
						if found then enduser$ = cvs(snmeu.company_name$,3)
					fi
					rem ' print cvs(workrec.serial_nbr$,3)," ",workrec.expire_date$(1,4)+"-"+workrec.expire_date$(5,2)+"-"+workrec.expire_date$(7,2)," ",str(workrec.users:"##0")," ",str(workrec.days_to_expire:"###0-")," ",enduser$
					table2$ = table2$ + "<tr><td align=" + chr(34) + "left" + chr(34) + ">" + cvs(workrec.serial_nbr$,3) + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + workrec.expire_date$(1,4)+"-"+workrec.expire_date$(5,2)+"-"+workrec.expire_date$(7,2) + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + str(workrec.users:"##0") + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + str(abs(workrec.days_to_expire):"###0-") + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + enduser$ + "</td></tr>"
					count3 = count3 + 1		
				fi
			fi
			let k$ = key(workfile, end = *break)
		wend

		if table2$ <> "" then table2$ = "<table border=" + chr(34) + "1" + chr(34) + "><tr><td align=" + chr(34) + "left" + chr(34) + ">" + "Serial #" + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + "Expired" + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + "Users" + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + "Days Expired" + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + "End User" + "</td></tr>" + table2$ + "</table>"

	else
		rem ' firm 02
		
		rem ' get BSG record
		read record(arm01, key = "01007688")arm01$
		subject$ = "Perpetual Notice Followup " + arm01.firm_id$ + arm01.customer_nbr$ + " " + cvs(arm01.cust_name$,3) 
		read record(arm02, key = "01007688" + "  ")arm02$
		slspsn_code$ = arm02.slspsn_code$

		rem ' get those within 17 days of expiration
		read record(workfile, key = "", dom = *next)workfilerec$
		table1$ = "<table border=" + chr(34) + "1" + chr(34) + "><tr><td align=" + chr(34) + "left" + chr(34) + ">" + "Serial #" + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + "Expires" + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + "Users" + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + "Days to Expire" + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + "Reseller" + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + "End User" + "</td></tr>"
		while 1
			read record(workfile, end = *break)workrec$
			count = count + 1
			if workrec.firm_id$ = followuprec.firm_id$ then
				if workrec.days_to_expire < 18 and workrec.days_to_expire > 0 then

					rem ' get the reseller record
					reseller$ = ""
					arm01key$ = workrec.firm_id$ + workrec.customer_nbr$
					read record(arm01, key=arm01key$)arm01$
					reseller$ = cvs(arm01.cust_name$,3)

					rem ' check for an EU record
					enduser$ = ""
					found = 0
					read record(snmel, key = workrec.serial_nbr$, dom = *next)snmel$; found = 1
					if found then 
						found = 0 
						read record(snmeu, key = snmel.end_user_nbr$, dom = *next)snmeu$; found = 1
						if found then enduser$ = cvs(snmeu.company_name$,3)
					fi
					
					rem ' print cvs(workrec.serial_nbr$,3)," ",workrec.expire_date$(1,4)+"-"+workrec.expire_date$(5,2)+"-"+workrec.expire_date$(7,2)," ",str(workrec.users:"##0")," ",str(workrec.days_to_expire:"###0-")," ",reseller$
					table1$ = table1$ + "<tr><td align=" + chr(34) + "left" + chr(34) + ">" + cvs(workrec.serial_nbr$,3) + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + workrec.expire_date$(1,4)+"-"+workrec.expire_date$(5,2)+"-"+workrec.expire_date$(7,2) + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + str(workrec.users:"##0") + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + str(workrec.days_to_expire:"###0-") + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + reseller$ + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + enduser$ + "</td></tr>"
				fi
			fi

		wend

		table1$ = table1$ + "</table>"

		rem ' get those that have expxired
		let k$ = keyl(workfile)
		table2$ = ""
		while 1
			read record(workfile,key = k$, dir = -1)workrec$
			count2 = count2 + 1
			if workrec.firm_id$ = followuprec.firm_id$ then
				if workrec.days_to_expire < 1 then

					rem ' get the reseller record
					reseller$ = ""
					arm01key$ = workrec.firm_id$ + workrec.customer_nbr$
					read record(arm01, key=arm01key$)arm01$
					reseller$ = cvs(arm01.cust_name$,3)

					rem ' check for an EU record
					enduser$ = ""
					found = 0
					read record(snmel, key = workrec.serial_nbr$, dom = *next)snmel$; found = 1
					if found then 
						found = 0 
						read record(snmeu, key = snmel.end_user_nbr$, dom = *next)snmeu$; found = 1
						if found then enduser$ = cvs(snmeu.company_name$,3)
					fi

					rem ' print cvs(workrec.serial_nbr$,3)," ",workrec.expire_date$(1,4)+"-"+workrec.expire_date$(5,2)+"-"+workrec.expire_date$(7,2)," ",str(workrec.users:"##0")," ",str(workrec.days_to_expire:"###0-")," ",reseller$
					table2$ = table2$ + "<tr><td align=" + chr(34) + "left" + chr(34) + ">" + cvs(workrec.serial_nbr$,3) + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + workrec.expire_date$(1,4)+"-"+workrec.expire_date$(5,2)+"-"+workrec.expire_date$(7,2) + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + str(workrec.users:"##0") + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + str(abs(workrec.days_to_expire):"###0-") + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + reseller$ + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + enduser$ + "</td></tr>"
				fi
			fi
			let k$ = key(workfile, end = *break)
		wend
		
		if table2$ <> "" then table2$ = "<table border=" + chr(34) + "1" + chr(34) + "><tr><td align=" + chr(34) + "left" + chr(34) + ">" + "Serial #" + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + "Expired" + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + "Users" + "</td><td align=" + chr(34) + "center" + chr(34) + ">" + "Days Expired" + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + "Reseller" + "</td><td align=" + chr(34) + "left" + chr(34) + ">" + "End User" + "</td></tr>" + table2$ + "</table>"

	fi
	
	gosub send_email
	
	if followuprec.firm_id$ = "02" then break

wend

rem ' end
close(workfile)
close(followupfile)
close(snmel)
close(snmeu)
close(arm01)
close(tmm03)
close(tmm05)

exit

send_email:

first$ = "<html><body><font size=" + chr(34) + "3" + chr(34) + ">" + "Perpetual licenses employ an expiration date to trigger monthly failsafe testing. Today you received at least one email informing you that you have a serial number that has repeatedly failed the automatic license re-registration procedure that ensures automatic failsafe operation of your licensing regardless of changes to your hardware and operating system. Immediate action is now required by you to return your system to failsafe operation.<br>"
first$ = first$ + "<br>" + "The serial number(s) listed here are within 17 days of the expiration of the BLM (BASIS License Manager) or BLS (BASIS License Service) attempts to " + chr(34) + "self-heal" + chr(34) + ".<br>"
first$ = first$ + "<br>" + table1$ +"<br>"

if table2$ <> "" then
	first$ = first$ + "<br>" + "The following serial number(s) have passed the expiration date of their perpetual license self-healing attempts and no longer have a valid license file.<br>"
	first$ = first$ + "<br>" + table2$ + "<br>"
fi

first$ = first$ + "<br>" + "Any of the licenses listed above may obtain a renewed perpetual license by using the admin utility to " + chr(34)+ "Register and install a license automatically" + chr(34) + " from the machine that is running the BLM or BLS. If you manually initiate the admin utility's " + chr(34) + "Register and install a license automatically" + chr(34) + " from the machine that is running the BLM or BLS, you can be sure that the failsafe license re-registration operation will work in the future.  If you have any questions, do not hesitate to contact your BASIS representative or support@basis.cloud for assistance.<br>"
first$ = first$ + "<br>" + "Regards,<br>"
first$ = first$ + "<br>" + "BASIS Customer Service Department"
first$ = first$ + "<br>" + "customer-service@basis.cloud"
first$ = first$ + "<br>" + "1.505.938.6121<br></font></body></html>"

msgtxt$ = first$

gosub lookup_email_addresses

rem ' print from$
rem ' print to$
rem ' print cc$
rem ' print bcc$

rem ' from$ = "customer-service@basis.cloud"
rem ' to$ = "debug address"
rem ' cc$ = ""
rem ' bcc$ = ""

rem ' print to$
rem ' print cc$
rem ' print bcc$

rem ' input *
rem ' if followuprec.firm_id$ <> "02" then return

call "sendEmailHtml.src", from$, to$, cc$, bcc$, subject$, msgtxt$, ""
wait 4

return

lookup_email_addresses:

	ap_contact$ = ""
	sam_contact$ = ""
	main_contact$ = ""
	perpet_contact$ = ""
	backup_address$ = stbl("+SALES")
	cc$ = ""
	bcc$ = ""

	key$ = followuprec.firm_id$ + followuprec.customer_nbr$
	if followuprec.firm_id$ = "02" then key$ = "01007688"
	
	rem ' find the main contact (not sure this is the best way)
	read(tmm05, key = key$, dom=*next)
	while 1
		readrecord(tmm05, end =*break)tmm05$
		if pos(key$ = tmm05$) <> 1 then break
		main_contact$ = cvs(tmm05.email$,3)
		break
	wend

	rem ' lookup addresses in the TMM Contact table
	read(tmm03, key = key$,dom = *next)
	while 1
		read record(tmm03, end = *break)tmm03$
		if pos(key$ = tmm03$) <> 1 then break
		if tmm03.sam_contact$ = "Y" then sam_contact$ = cvs(tmm03.e_mail$,3)
		if tmm03.primary_contact$ = "Y" and cvs(main_contact$,3) = "" then main_contact$ = cvs(tmm03.e_mail$,3)
		if tmm03.ap_contact$ = "Y" then ap_contact$ = cvs(tmm03.e_mail$,3)
		if tmm03.perpet_notice$ = "Y" then perpet_contact$ = cvs(tmm03.e_mail$,3)
	wend
	
	rem ' set the from email address
	from$="customer-service@basis.cloud"
	
	rem ' set the to email address
	rem ' convert any ; to ,
	addr$ = main_contact$ + "," + sam_contact$ + ","
	if perpet_contact$ <> "" then addr$ = addr$ + perpet_contact$ + ","
	while 1
		p = pos(";" = addr$)
		if p = 0 then break
		addr$(p,1) = ","
	wend
	addr$=cvs(addr$,43)
	
	rem ' clean up the to email address
	eaddr$=""
	while 1
		p = pos("," = addr$)
		if p=0 then break
		if p > 1 then t1$ = cvs(addr$(1,p - 1), 3) else t1$ = ""
		addr$ = addr$(p + 1)
		if pos(t1$ = addr$) = 0 and pos("@" = t1$) then eaddr$ =eaddr$ + "," + t1$
	wend
	l=len(eaddr$)
	rem ' trim a trailing comma
	if l and eaddr$(l,1)="," then eaddr$(l,1)=" "
	rem ' trim a leading comma
	if l and eaddr$(1,1)="," then eaddr$(1,1)=" "
	eaddr$ = cvs(eaddr$, 3)
	if eaddr$="" then eaddr$ = backup_address$
	to$ = eaddr$
	
	rem ' set the cc address
	rem ' cc$ = "customer-service@basis.cloud, support@basis.cloud"
	cc$ = "support@basis.cloud"
	if followuprec.firm_id$ = "02" then cc$ = "eu.support@basis.cloud, " + cc$
	dim arm10f$:fattr(arm10f$)
	read record(arm10f, key = "01F" + slspsn_code$, dom = *next)arm10f$
	slsemail$ = cvs(arm10f.e_mail$,3)
	if slsemail$ <> "" then cc$ = cc$ + ", " + slsemail$
	bcc$ = ""

return


errmsg:
	from$ = "customer-service@basis.cloud"
	to$ = "misdev@basis.cloud"
	cc$ = ""
	bcc$ = ""
	subject$ = "Perpetual Notice Follow error"	
	msgtxt$ = "Error " + str(err) + " in " + str(tcb(5)) + " in " + pgm(-1) + $0a$ + errmes(err)
	msgtxt$ = msgtxt$ + $0a$ + $0a$ + "Timestamp: " + date(0:"%Y%Mz%Dz %Hz%mz%sz") + $0A$
	call "sendEmail.src", from$, to$, cc$, bcc$, subject$, msgtxt$, ""
	exit
end