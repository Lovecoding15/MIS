0001 REM <BLK.01>
0010 REM IF INFO(3,2)="thines" THEN ESCAPE
0020 REM Generate license authorization or activation key
0030 SETERR EXIT
0040 REM ARE13KEY$ - ARE-13 key (order line detail)
0050 ENTER ARE13KEY$
0060 LET AUTHNUM$="",KEY$="",MSG$=""
0070 call "templates.pgm::ARE13"
0080 call "templates.pgm::ARE73"
0090 call "templates.pgm::ARE83"
0100 call "templates.pgm::CSM04"
0110 call "templates.pgm::SNM01"
0120 call "templates.pgm::SNT01"
0130 LET ARE13CHAN=UNT; OPEN (ARE13CHAN)"ARE-13"
0140 LET ARE73CHAN=UNT; OPEN (ARE73CHAN)"ARE-73"
0150 LET ARE83CHAN=UNT; OPEN (ARE83CHAN)"ARE-83"
0160 LET CSM04CHAN=UNT; OPEN (CSM04CHAN)"CSM-04"
0170 LET SNM01CHAN=UNT; OPEN (SNM01CHAN)"SNM-01"
0180 LET SNT01CHAN=UNT; OPEN (SNT01CHAN)"SNT-01"
0190 READ record(ARE13CHAN,KEY=ARE13KEY$)are13$
0200 LET ITEM$=are13.item_number$
0210 readrecord(ARE73CHAN,KEY=ARE13KEY$)are73$
0220 LET STYPE$=are73.type_of_sale$,FLOAT$=are73.fixed_float$,nusers=are73.users
0230 IF FLOAT$="F" THEN LET FLOAT$="Y" ELSE LET FLOAT$="N"
0240 READ (ARE83CHAN,KEY=ARE13KEY$,DOM=ARE83)
0250 ARE83: LET K$=KEY(ARE83CHAN,END=ARE83END)
0260 READ RECORD (ARE83CHAN,KEY=K$)ARE83$
0270 IF ARE83$(1,20)<>ARE13KEY$ THEN GOTO ARE83END
0280 LET AUTHNUM$="",KEY$="",MSG$="Revision level not found"
0290 IF ARE83.ACTION$="D" THEN GOTO ARE83
0300 IF STYPE$<>"ADD" THEN GOTO ITEM_DONE
0310 LET PK$=ARE13KEY$,ITEM$=""
0320 TRY_PREV: REM 'Look for SN in previous lines to get item#
0330 READ (ARE13CHAN,KEY=PK$(1,17),DOM=NEXT_ARE13)
0340 NEXT_ARE13: 
0350 LET PK$=KEY(ARE13CHAN,END=FIND_SNM01)
0360 IF PK$(1,17)<>ARE13KEY$(1,17) OR PK$>=ARE13KEY$ THEN GOTO FIND_SNM01
0370 READRECORD (ARE13CHAN,KEY=PK$)are13$
0380 dim are83tmp$:fattr(are83$)
0390 READ (ARE83CHAN,KEY=PK$,DOM=CHKSN)
0400 CHKSN: 
0410 READ RECORD (ARE83CHAN,END=NEXT_ARE13)are83tmp$
0420 IF POS(PK$=are83tmp$)<>1 THEN GOTO NEXT_ARE13
0430 IF are83tmp.serial_nbr$<>ARE83.SERIAL_NBR$ OR are83tmp.action$="D" OR CVS(are83tmp.auth_code$,3)="" THEN GOTO CHKSN
0440 READ RECORD(ARE73CHAN,KEY=PK$)are73$
0450 IF ARE73.type_of_sale$<>"ADD" THEN LET ITEM$=are13.item_number$
0460 GOTO NEXT_ARE13
0470 FIND_SNM01: 
0480 IF ITEM$="" THEN 
0490   READ RECORD(SNM01CHAN,KEY=ARE83.SERIAL_NBR$,DOM=ERRMSG)snm01$
0500   ITEM$=snm01.product$+snm01.platform$+snm01.os_level$+snm01.product_rev$+snm01.license_type$
0510 fi
0520 ITEM_DONE: 
0530 READ RECORD (CSM04CHAN,KEY=ARE83.FIRM_ID$+ITEM$(10,3),DOM=ERRMSG)CSM04$
0540 LET P=POS("."=CSM04.DESCRIPTION$); IF P=0 THEN LET P=2
0550 LET REVLVL$=CSM04.DESCRIPTION$(1,P)
0560 IF CVS(CSM04.KEY_OR_LICEN$,4)="K" THEN GOTO KEYGEN
0570 IF CVS(CSM04.KEY_OR_LICEN$,4)<>"L" THEN LET AUTHNUM$="NOT REQUIRED"; GOTO ARE83_WRITE
0580 LET MSG$="License authorization failed"
0590 CALL STBL("FLEXHOME")+"bin/genlicauth.bbx",ARE83.SERIAL_NBR$,FLOAT$,ARE83.ORDER_NUMBER$,AUTHNUM$
0600 IF LEN(AUTHNUM$)<>10 THEN GOTO ERRMSG
0610 REM Get last license count from non-SAM record
0620 LET LCOUNT=0,K1$=CVS(ARE83.SERIAL_NBR$,2),lastauth$=""
0630 READ (SNT01CHAN,KEY=K1$,DOM=*next)
0640 while 1
0650 READ RECORD (SNT01CHAN,END=*break)snt01$
0660 IF POS(K1$=SNT01$)<>1 then break
0665 temp$=cvs(snt01.auth_code$,3)
0670 if temp$<>"" then LCOUNT=SNT01.LICENSE_CNT,lastauth$=temp$
0680 wend
0685 if len(lastauth$)=10 and pos(authnum$(6,5)=lastauth$)=6 then authnum$=lastauth$
0690 ARE83.LICENSE_CNT=LCOUNT; GOTO ARE83_WRITE
0700 KEYGEN: 
0710 LET MSG$="Activation Key not generated",TYPE$=ITEM$(13,3),SERIAL$=CVS(ARE83.SERIAL_NBR$,2),REV1$="REV "+REVLVL$
0720 LET CSM03CHAN=UNT; OPEN (CSM03CHAN)"CSM-03"
0730 READ (CSM03CHAN,KEY=ARE83.FIRM_ID$+ITEM$(7,3),DOM=ERRMSG)*,*,P$
0740 LET PORT$=P$(1,5)
0750 IF POS(ITEM$(1,3)="P4E DS4") THEN LET PORT$=PORT$(1,4)
0760 IF PORT$(1,4)="1467" THEN LET PORT$="14675"; IF TYPE$="STD" THEN LET TYPE$="ODBC"
0770 REM SYGENKEY doesn't use KEYPATH$ as of 2/15/01 - th
0780 LET KEYPATH$=""
0790 CALL "SYGENKEY",TYPE$,SERIAL$,NUSERS,PORT$,REV1$,KEYPATH$,KEY$
0800 IF LEN(CVS(KEY$,2))<>13 THEN GOTO ERRMSG
0810 LET AUTHNUM$=KEY$
0820 ARE83_WRITE: LET REDO=0,MSG$=""
0830 IF CVS(ARE83.AUTH_CODE$,2)<>AUTHNUM$ THEN LET ARE83.AUTH_CODE$=AUTHNUM$+FILL(15-LEN(CVS(AUTHNUM$,2))),REDO=1
0840 IF REDO THEN are83$=field(are83$);WRITE RECORD (ARE83CHAN,KEY=K$)ARE83$
0850 REM read again to reposition the file pointer if there was no write
0860 READ RECORD (ARE83CHAN,KEY=K$)ARE83$
0870 GOTO ARE83
0880 ERRMSG: 
0890 PRINT 'WINDOW'(10,10,50,7,"")
0900 PRINT 'CS',@(2,1),ARE83.SERIAL_NBR$
0910 PRINT @(2,2),MSG$
0920 INPUT @(2,3),"Delete this line and call MIS ",X$
0930 PRINT 'POP'
0940 REM GOTO ARE83
0950 ARE83END: 
0960 EXIT: 
0970 IF ARE13CHAN THEN CLOSE (ARE13CHAN)
0980 IF ARE73CHAN THEN CLOSE (ARE73CHAN)
0990 IF ARE83CHAN THEN CLOSE (ARE83CHAN)
1000 IF CSM04CHAN THEN CLOSE (CSM04CHAN)
1010 IF SNM01CHAN THEN CLOSE (SNM01CHAN)
1020 IF SNT01CHAN THEN CLOSE (SNT01CHAN)
1030 IF CSM03CHAN THEN CLOSE (CSM03CHAN)
1040 EXIT
