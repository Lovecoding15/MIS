0010 REM "APU - Manual Check Update"
0020 REM "Program APU.CA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.5 - 01Dec98 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "21Jul98 JWK: Manual Checks posting blank Vendor Names in GL (5435,5450,5460)
0032 REM "05Oct98 WGH: Treat last period ending in December as Calendar Year-End, and use prior year when needed (570-595,6735-6740,6751-6752)
0033 REM "16Sep98 WGH: Delete obsolete extraneous code (6320,6830-6840)
0034 REM "09Sep99 WGH: Not correctly reversing manual checks for manual invoices (230,510,1510,1535,2210,2230,2320,2955,5110,6040)
0040 REM 
0050 BEGIN
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- OPEN/LOCK FILES"
0110 LET FILES=17
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="APE-02",FILES$[2]="APE-12",FILES$[3]="APE-22"
0130 LET FILES$[4]="APE-05",FILES$[5]="APT-01",FILES$[6]="APT-11"
0135 LET FILES$[7]="APT-02",FILES$[8]="APM-01",FILES$[9]="APM-02"
0140 LET FILES$[10]="APM-03",FILES$[11]="APM-10",FILES$[12]="APT-03",FILES$[13]="SYS-01"
0145 LET FILES$[14]="GLM-01",FILES$[15]="GLT-04",FILES$[16]="GLT-05"
0150 LET FILES$[17]="APM-11"
0155 LET OPTIONS$[1]="L",OPTIONS$[2]="L",OPTIONS$[3]="L"
0160 CALL "SYC.DA",1,1,13,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0175 LET APE02_DEV=CHANNELS[1],APE12_DEV=CHANNELS[2],APE22_DEV=CHANNELS[3]
0180 LET APE05_DEV=CHANNELS[4],APT01_DEV=CHANNELS[5],APT11_DEV=CHANNELS[6]
0185 LET APT02_DEV=CHANNELS[7],APM01_DEV=CHANNELS[8],APM02_DEV=CHANNELS[9]
0190 LET APM03_DEV=CHANNELS[10],APM10_DEV=CHANNELS[11],APT03_DEV=CHANNELS[12]
0195 LET SYS01_DEV=CHANNELS[13]
0200 REM " --- IOList's"
0210 APE02A: IOLIST A0$,A1$,A[ALL]
0220 APE05A1: IOLIST B0$,B1$,B[ALL]
0225 APE05A2: IOLIST X$
0230 APT01A: IOLIST C0$(1),C[ALL]
0240 APT02A: IOLIST D0$,D[ALL]
0250 APT03X: IOLIST APT03_K$
0260 APM10B: IOLIST *,Z0$(1)
0270 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0275 APS01A: IOLIST P0$,P1$,P2$,P3$,P4$,M0$,M1$,M2$,M3$
0280 GLS01A: IOLIST X$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0285 APM01A: IOLIST *,H1$(1)
0290 APM02A: IOLIST X0$,X1$,X2$,X[ALL]
0300 APM03A: IOLIST *,H1$(1)
0310 APE22A: IOLIST Y0$(1),Y[ALL]
0320 APE12A: IOLIST W0$,W1$(1),W2$,W[ALL]
0330 APT11A: IOLIST CC0$,CC1$,CC[ALL]
0380 APM11A: IOLIST X0$,X1$,X[ALL]
0400 REM " --- Parameters"
0405 DIM P[6],G[4],INFO$[20]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0415 LET N0$=F0$(16,2),N1$=F4$,N2$="AP",N3$=F5$
0420 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=APS01A
0425 LET BR$=P3$(17,1)
0430 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=9800)IOL=GLS01A
0435 FOR X=0 TO 4
0440 LET G[X]=NUM(G2$(X*2+1,2),ERR=445)
0445 NEXT X
0450 LET G[2]=FNYY_YEAR(G2$(5,2))
0460 LET P[0]=NUM(P2$(1,2)),P[5]=NUM(P4$(1,2)),P[6]=FNYY_YEAR(P4$(3,2))
0465 CALL "SYC.VA",N2$,INFO$[ALL]
0470 LET GL$=INFO$[9]
0500 REM " --- Init Data"
0510 DIM A[2],B[2],C0$(70),C[2],CC[2],D[1],X[13],V[1],T[2],W[2],J1$(40)
0540 LET G9$=G3$(G[0]*2-1,2),W=P[6]
0550 IF G9$<G3$(1,2) THEN LET W=W+1
0570 LET G9$=FNI$(W)+G9$,PRIOR_G9$=FNI$(W-1)+G9$(2,2)
0575 LET P=POS(FNI$(12)=G3$(1,G[0]*2),-2)
0585 IF P THEN LET P=(P+1)/2 ELSE LET P=13
0590 IF P[5]<=P THEN LET G8$=FND$("1231"+FNYEAR_YY21$(P[6])),PRIOR_G8$=FND$("1231"+FNYEAR_YY21$(P[6]-1))
0595 IF P[5]>P THEN LET G8$=FND$("1231"+FNYEAR_YY21$(P[6]+1)),PRIOR_G8$=FND$("1231"+FNYEAR_YY21$(P[6]))
0600 REM " --- Additional File Opens"
0610 IF GL$<>"Y" THEN GOTO 0650
0620 CALL "SYC.DA",1,14,16,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0630 IF STATUS>0 THEN GOTO 9900
0645 LET GLM01_DEV=CHANNELS[14],GLT04_DEV=CHANNELS[15],GLT05_DEV=CHANNELS[16]
0680 IF BR$<>"Y" THEN GOTO 0700
0685 CALL "SYC.DA",1,17,17,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0690 IF STATUS>0 THEN GOTO 9900
0695 LET APM11_DEV=CHANNELS[17]
0700 REM " --- Background"
0710 PRINT @(0,3),'CE',
0800 REM " --- Run Update?"
0810 LET V4$="Are You Ready To Update The "+N3$
0820 CALL "SYC.YN",0,V4$,0,V$,V3
0830 IF V$<>"YES" THEN GOTO 9900
0900 REM " --- File initializations"
0910 CALL "SYC.NB","Updating",10,COLUMN
0940 REM " --- Disallow 'M'enu option in Error Routine
0950 LET EXIT_CTRL=1
1000 REM " --- Init Read"
1020 READ (APE02_DEV,KEY=N0$,DOM=1030)
1100 REM " --- Main Read"
1110 LET K0$=KEY(APE02_DEV,END=4000)
1120 READ (APE02_DEV)IOL=APE02A
1130 IF LEN(K0$)<>11 THEN GOTO 3900
1140 IF POS(N0$=A0$)<>1 THEN GOTO 4000
1150 PRINT @(COLUMN,11),A0$(3,2)," ",A0$(5,7),
1160 IF A0$(31,1)="V" THEN GOTO 3800
1170 GOSUB 5400
1180 LET WHEN$=A0$(28,3),REF3$=A0$(5,7)+" "+A0$(3,2)
1200 REM " --- Type"
1210 DIM Y0$(44),Y[2]
1220 ON POS(A0$(31,1)="MRV") GOTO 1100,1400,2000,3800
1400 REM " --- Manual Check"
1410 READ (APE22_DEV,KEY=K0$(1,11),DOM=1420)
1420 LET K1$=KEY(APE22_DEV,END=3900)
1440 IF K1$(1,11)<>K0$(1,11) THEN GOTO 3900
1460 READ (APE22_DEV)IOL=APE22A
1470 LET REF2$=Y0$(18,10)
1500 REM " --- Open Invoice"
1510 LET C0$(1)=Y0$(1,4)+Y0$(12,16)+"00",O9=0,F0$="",H9$="",U1=0
1520 EXTRACT (APT01_DEV,KEY=C0$(1,22),DOM=1524)IOL=APT01A
1521 LET H9$=C0$
1522 GOTO 1530
1524 LET F0$="OI"; REM " Outside Invoice Flag
1530 LET V0$="M"
1535 IF C0$(68,1)="M" AND C0$(69,1)<>"A" AND C0$(70,1)<>"R" THEN LET F0$="OI"
1540 GOSUB 6000
1550 IF F0$="OI" THEN GOTO 1700
1600 REM " --- Open Inv Detail"
1620 IF P3$(4,1)="Y" THEN GOSUB 6600
1640 LET O9=1
1660 GOSUB 6700
1690 GOTO 1900
1700 REM " --- Manual G/L Detail"
1705 READ (APE12_DEV,KEY=Y0$(1,27),DOM=1710)
1710 LET K$=KEY(APE12_DEV,END=1850)
1720 IF LEN(K$)<27 THEN GOTO 1850
1730 IF K$(1,27)<>K1$(1,27) THEN GOTO 1850
1735 DIM W1$(11)
1740 READ (APE12_DEV)IOL=APE12A
1750 LET ACCOUNT$=W1$(1,G[4]),AMOUNT=W[0],UNITS=W[1]
1755 IF W1$(G[4]+1,1)="N" THEN LET U1=U1+W[0]
1760 GOSUB GLPOST
1770 LET D0$=Y0$(1,4)+Y0$(12,6)+"C"+Y0$(5,7)+"   "+W1$(1,G[4])+A0$(28,3)
1780 DIM D[1]
1790 EXTRACT (APT02_DEV,KEY=D0$,DOM=1800)IOL=APT02A
1800 LET D[0]=D[0]+W[0],D[1]=D[1]+W[1]
1810 WRITE (APT02_DEV,KEY=D0$)IOL=APT02A
1820 REMOVE (APE12_DEV,KEY=K$)
1830 GOTO 1710
1850 GOSUB 6700
1900 REM " --- Open CK
1910 GOSUB 5000
1920 LET B0$=Y0$(1,27)+A0$(28,3)+A0$(31,1)+Y0$(33,2),B1$=A1$,B[0]=Y[0],B[1]=Y[1],B[2]=Y[2],B$=B0$(1,27)
1930 IF P3$(1,1)<>"Y" THEN LET B$(3,2)=""
1940 GOSUB 5700
1950 WRITE (APE05_DEV,KEY=B$)IOL=APE05A1
1960 LET V0$="O"
1970 IF BR$="Y" THEN GOSUB 5800
1980 REMOVE (APE22_DEV,KEY=K1$)
1990 GOTO 1420
2000 REM " --- Reversal"
2010 READ (APE05_DEV,KEY=K0$,DOM=2020)
2100 LET K1$=KEY(APE05_DEV,END=2900)
2120 IF K1$(1,11)<>K0$ THEN GOTO 2900
2130 READ (APE05_DEV)IOL=APE05A1
2135 IF K1$(1,17)<>A0$(1,17) THEN GOTO 2100
2140 LET Y0$(1)=B0$(1,27)+"00"+B0$(28,3)+B0$(32,2),REF2$=B0$(18,10)
2150 LET Y[0]=-B[0],Y[1]=-B[1],Y[2]=-B[2]
2200 REM " --- Open Invoice"
2210 LET C0$(1)=Y0$(1,4)+Y0$(12,16)+"00",O9=0,H9$=""
2220 FIND (APT01_DEV,KEY=C0$(1,22),DOM=2400)IOL=APT01A
2230 LET O9=1,H9$=C0$
2232 IF C0$(68,1)="M" AND C0$(70,1)="R" THEN GOTO 2240
2235 IF C0$(68,1)="M" THEN LET C0$(70,1)="R"; WRITE (APT01_DEV,KEY=C0$(1,22))IOL=APT01A
2240 LET V0$="R"
2245 EXTRACT (APT01_DEV,KEY=C0$(1,22))IOL=APT01A
2250 GOSUB 6000
2300 REM " --- Detail
2320 IF P3$(4,1)="Y" OR C0$(68,1)="M" THEN GOSUB 6600
2400 REM " --- Vendor
2420 GOSUB 6700
2500 REM " --- GL Dist"
2520 GOSUB 5000
2800 REM " --- REM CK Detail
2820 LET B0$=Y0$(1,27)+Y0$(30,3)+A0$(31,1)+K2$,B1$=A1$,B[0]=Y[0],B[1]=Y[1],B[2]=Y[2]
2840 WRITE (APE05_DEV,KEY=B0$(1,27))IOL=APE05A1
2860 REMOVE (APE05_DEV,KEY=K1$)
2870 LET V0$="R"
2880 IF BR$="Y" THEN GOSUB 5800
2890 GOTO 2100
2900 REM " --- Reverse Dist"
2910 LET D$=Y0$(1,4)+Y0$(12,6)+"C"+Y0$(5,7)
2920 READ (APT02_DEV,KEY=D$,DOM=2930)
2930 LET K$=KEY(APT02_DEV,END=3000)
2940 IF K$(1,18)<>D$ THEN GOTO 3000
2950 READ (APT02_DEV)IOL=APT02A
2955 IF P3$(4,1)<>"Y" AND C0$(68,1)<>"M" THEN GOTO 2980
2960 LET ACCOUNT$=D0$(22,G[4]),AMOUNT=-D[0],UNITS=-D[1]
2970 GOSUB GLPOST
2980 LET D0$(11,11)="I"+Y0$(18,10)
2982 WRITE (APT02_DEV,KEY=D0$)IOL=APT02A
2984 REMOVE (APT02_DEV,KEY=K$,DOM=2951)
2990 GOTO 2930
3000 REM " --- Write Open Check"
3020 LET B0$=A0$(1,31)+K2$,B1$=A1$,B[0]=0,B[1]=0,B[2]=0,B$=B0$(1,27)
3030 IF P3$(1,1)<>"Y" THEN LET B$(3,2)=""
3040 WRITE (APE05_DEV,KEY=B$)IOL=APE05A1
3090 GOTO 3900
3800 REM " --- Void Check"
3820 LET B0$=A0$(1,31)+"  ",B1$=A1$,B[0]=0,B[1]=0,B[2]=0,B$=B0$(1,27)
3830 IF P3$(1,1)<>"Y" THEN LET B0$(3,2)=""
3840 WRITE (APE05_DEV,KEY=B$)IOL=APE05A1
3850 LET V0$="V"
3860 IF BR$="Y" THEN GOSUB 5800
3900 REM " --- Remove Check"
3920 REMOVE (APE02_DEV,KEY=K0$)
3990 GOTO 1100
4000 REM " --- End"
4010 IF GL$="Y" THEN CALL "GLC.CA",STATUS
4020 CALL "SYC.BB",STATUS
4090 GOTO 9900
5000 REM " --- Dist Code"
5010 IF Y0$(33,2)=K2$ THEN GOTO 5100
5020 LET K2$=Y0$(33,2)
5030 DIM Z0$(4*G[4],"0")
5040 FIND (APM10_DEV,KEY=N0$+"B"+Y0$(33,2),DOM=5050)IOL=APM10B
5050 LET Z1$=Z0$(G[4]+1,G[4]),Z2$=Z0$(2*G[4]+1,G[4]),Z3$=Z0$(3*G[4]+1,G[4]),Z0$=Z0$(1,G[4])
5100 REM " --- Dist G/L"
5110 IF P3$(4,1)="Y" OR (A0$(31,1)="R" AND C0$(68,1)="M") THEN GOTO 5200
5120 IF O9=0 THEN GOTO 5200
5130 LET ACCOUNT$=Z0$,AMOUNT=Y[0]-Y[2],UNITS=0
5140 GOSUB GLPOST
5200 LET ACCOUNT$=Z1$,AMOUNT=(-Y[0])+Y[2]+Y[1],UNITS=0
5210 GOSUB GLPOST
5250 IF Y[1]=0 THEN GOTO 5290
5260 LET ACCOUNT$=Z2$,AMOUNT=-Y[1],UNITS=0
5270 GOSUB GLPOST
5290 RETURN
5400 REM " --- Vendor Name"
5410 DIM H1$(30)
5415 LET H1$(1)="Unknown Vendor"
5420 IF A0$(12,4)="TEMP" THEN GOTO 5450
5425 LET REF1$=FNF$(A0$(12,P[0]),M0$)
5430 FIND (APM01_DEV,KEY=N0$+A0$(12,6),DOM=5490)IOL=APM01A
5435 LET MEMO$=H1$
5440 GOTO 5490
5450 LET REF1$=A0$(12,4),MEMO$=A1$
5460 FIND (APM03_DEV,KEY=N0$+A0$(3,2)+A0$(11,10),DOM=5490)IOL=APM03A
5480 LET MEMO$=H1$
5490 RETURN
5700 REM " --- Remove Reversal"
5710 READ (APE05_DEV,KEY=B$(1,11),DOM=5720)
5720 LET K$=KEY(APE05_DEV,END=6990)
5730 IF K$(1,11)<>B$(1,11) THEN GOTO 5790
5740 READ (APE05_DEV)IOL=APE05A2
5750 IF X$(31,1)="R" THEN REMOVE (APE05_DEV,KEY=K$)
5780 GOTO 5720
5790 RETURN
5800 REM " --- Bank Rec"
5810 IF GL$<>"Y" THEN GOTO 5990
5820 DIM X1$(50),X[1],X$(G[4],"0"),Z0$(4*G[4],"0")
5830 FIND (APM10_DEV,KEY=B0$(1,2)+"B"+B0$(32,2),DOM=5850)IOL=APM10B
5840 LET X$=Z0$(G[4]+1,G[4])
5850 LET X0$=B0$(1,2)+X$+B0$(5,7),X1$(1,2)="A"+V0$
5860 LET X1$(3,6)=FNYY_YY21$(FNM$(FNC$(B0$(28,3)))),X1$(9,30)=A1$
5880 IF B0$(12,4)<>"TEMP" THEN LET X1$(9,30)=H1$
5920 FIND (APM11_DEV,KEY=X0$,DOM=5930)IOL=APM11A
5930 LET X[0]=X[0]+B[0]-B[1]-B[2],X1$(2,1)=V0$
5940 WRITE (APM11_DEV,KEY=X0$)IOL=APM11A
5990 RETURN
6000 REM " --- Open Inv.
6020 IF V0$="R" THEN GOTO 6090
6030 IF LEN(H9$)>67 THEN IF H9$(68,1)="M" THEN GOTO 6090
6040 IF F0$="OI" THEN LET C0$(1)=C0$(1,22)+Y0$(33,2)+J1$(1,4)+Y0$(30,3)+A0$(28,3)+Y0$(30,3)+Y0$(30,3)+J1$(1,10)+J1$(1,16)+"N"+"M"+J1$(1,3)
6045 IF F0$="OI" THEN LET C[0]=Y[0],C[1]=Y[1],C[2]=Y[2]
6050 WRITE (APT01_DEV,KEY=C0$(1,22))IOL=APT01A
6060 LET APT03_K$=C0$(1,2)+"A"+C0$(3,2)+C0$(5,6)+C0$(29,3)+C0$(11,10)
6065 WRITE (APT03_DEV,KEY=APT03_K$)IOL=APT03X
6070 LET APT03_K$=C0$(1,2)+"B"+C0$(3,2)+C0$(5,6)+C0$(41,10)+C0$(11,10)
6075 WRITE (APT03_DEV,KEY=APT03_K$)IOL=APT03X
6080 LET APT03_K$=C0$(1,2)+"C"+C0$(11,10)+C0$(3,2)+C0$(5,6)
6085 WRITE (APT03_DEV,KEY=APT03_K$)IOL=APT03X
6090 READ (APT11_DEV,KEY=C0$(1,20),DOM=6100)
6100 REM " --- Invoice Detail"
6120 LET K$=KEY(APT11_DEV,END=6300)
6140 IF K$(1,20)<>C0$(1,20) THEN GOTO 6300
6160 READ (APT11_DEV)IOL=APT11A
6180 LET C1=NUM(CC0$(21,2))
6200 REM " --- Find Open Slot"
6230 IF CC1$(1,1)=" " THEN GOTO 6400
6240 LET T[0]=T[0]+CC[0],T[1]=T[1]+CC[1],T[2]=T[2]+CC[2]
6250 IF POS(CC1$(1,1)="AI")<>0 THEN LET T0=T0+CC[0]
6290 GOTO 6100
6300 REM " --- New Record"
6320 LET CC0$=C0$(1,20)+STR(C1+1:"00")
6340 DIM CC1$(11),C[2],CC[2]
6400 REM " --- Write Detail"
6410 IF CC0$(21,2)="00" THEN GOTO 6300
6420 LET CC1$(1)=V0$+A0$(28,3)+A0$(5,7),CC[0]=(-Y[0])+Y[2],CC[1]=-Y[1]
6430 IF LEN(H9$)>69 THEN IF H9$(68,1)="M" AND H9$(69,1)<>"A" THEN GOSUB 6800; GOTO 6450
6440 WRITE (APT11_DEV,KEY=CC0$(1,22))IOL=APT11A
6450 LET T[0]=T[0]+CC[0],T[1]=T[1]+CC[1],T[2]=T[2]+CC[2]
6490 RETURN
6600 REM " --- Cash Basis Inside Invoice Distribution"
6605 DIM D[1]; LET INVOICE$=C0$(1,10)+"I"+C0$(11,10),ACCOUNT$="",TOT_DIST=0,AMOUNT=0,T9=0
6610 READ (APT02_DEV,KEY=INVOICE$,DOM=6615)
6615 LET K4$=KEY(APT02_DEV,END=6640)
6620 IF POS(INVOICE$=K4$)<>1 THEN GOTO 6640
6625 READ (APT02_DEV)IOL=APT02A
6630 LET TOT_DIST=TOT_DIST+D[0]
6635 GOTO 6615
6640 IF TOT_DIST=0 THEN GOTO 6699
6645 READ (APT02_DEV,KEY=INVOICE$,DOM=6650)
6650 LET K4$=KEY(APT02_DEV,END=6690)
6655 IF POS(INVOICE$=K4$)<>1 THEN GOTO 6690
6660 READ (APT02_DEV)IOL=APT02A
6665 IF D0$(22,G[4])=ACCOUNT$ THEN GOTO 6680
6670 IF ACCOUNT$<>"" THEN GOSUB GLPOST
6675 LET ACCOUNT$=D0$(22,G[4]),T9=T9+AMOUNT,AMOUNT=0
6680 LET AMOUNT=AMOUNT+D[0]*(Y[0]-Y[2])/TOT_DIST
6685 GOTO 6650
6690 LET AMOUNT=Y[0]-Y[2]-T9; REM "Prevent rounding error
6695 IF ACCOUNT$<>"" THEN GOSUB GLPOST
6699 RETURN
6700 REM " --- Vendor"
6705 DIM X[20]
6710 IF Y0$(12,4)="TEMP" THEN GOTO 6790
6720 EXTRACT (APM02_DEV,KEY=N0$+Y0$(12,6)+Y0$(3,2),DOM=6790)IOL=APM02A
6730 LET X1$(10,3)=A0$(28,3)
6735 IF A0$(28,3)<=PRIOR_G9$ THEN LET X[9]=X[9]+Y[0]-Y[2]-Y[1],X[6]=X[6]+Y[1]
6740 IF A0$(28,3)>PRIOR_G9$ AND A0$(28,3)<=G9$ THEN LET X[8]=X[8]+Y[0]-Y[2]-Y[1],X[5]=X[5]+Y[1]
6750 IF A0$(28,3)>G9$ THEN LET X[10]=X[10]+Y[0]-Y[2]-Y[1],X[7]=X[7]+Y[1]
6751 IF A0$(28,3)<=PRIOR_G8$ THEN LET X[12]=X[12]+Y[0]-Y[2]-Y[1]
6752 IF A0$(28,3)>PRIOR_G8$ AND A0$(28,3)<=G8$ THEN LET X[11]=X[11]+Y[0]-Y[2]-Y[1]
6754 IF A0$(28,3)>G8$ THEN LET X[13]=X[13]+Y[0]-Y[2]-Y[1]
6760 IF O9=1 THEN LET X[0]=X[0]-Y[0]+Y[2]
6765 IF O9=0 AND A0$(28,3)<=PRIOR_G9$ THEN LET X[3]=X[3]+Y[0]-Y[2]
6770 IF O9=0 AND A0$(28,3)>PRIOR_G9$ AND A0$(28,3)<=G9$ THEN LET X[2]=X[2]+Y[0]-Y[2]
6775 IF O9=0 THEN IF A0$(28,3)>G9$ THEN LET X[4]=X[4]+Y[0]-Y[2]
6780 WRITE (APM02_DEV,KEY=N0$+Y0$(12,6)+Y0$(3,2))IOL=APM02A
6790 RETURN
6800 REM " --- Same (Invoice#, Vendor#) Different Check#
6810 REM " --- Create a Record for Each Transaction"
6815 DIM CC1$(11),C[2],CC[2]
6817 LET CC0$=C0$(1,20)+STR(C1+1:"00")
6820 LET CC[0]=Y[0]-Y[2],CC[1]=Y[1]
6830 LET CC1$(1)="S"+A0$(28,3)+"Invoice"
6860 WRITE (APT11_DEV,KEY=CC0$(1,22),DOM=6840)IOL=APT11A
6870 LET CC0$(21,2)=STR(NUM(CC0$(21,2))+1:"00")
6875 LET CC1$(1)=V0$+A0$(28,3)+A0$(5,7)
6880 LET CC[0]=-CC[0],CC[1]=-CC[1]
6885 WRITE (APT11_DEV,KEY=CC0$(1,22))IOL=APT11A
6887 LET CC[0]=-CC[0],CC[1]=-CC[1]; REM "Change sign back cuz 6450 expects the positive value "
6890 RETURN
6900 REM " --- Standard G/L Posting Routine"
6910 GLPOST: 
6920 IF GL$<>"Y" THEN GOTO 6990
6950 CALL "GLC.AA",GLM01_DEV,GLT04_DEV,GLT05_DEV,ACCOUNT$,WHEN$,REF1$,REF2$,REF3$,MEMO$,AMOUNT,UNITS,STATUS
6990 RETURN
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8030 DEF FNC$(Q1$)=FNA$(Q1$(2),Q1$)+FNA$(Q1$(3),Q1$)+FNA$(Q1$(1),Q1$)
8040 DEF FND$(Q$)=CHR(FNYY_YEAR(Q$(5,2))+32)+CHR(NUM(Q$(1,2))+32)+CHR(NUM(Q$(3,2))+32)
8060 DEF FNM$(Q$)=Q$(5,2)+Q$(1,4)
8065 DEF FNI$(Q)=CHR(Q+32)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 SETERR 9000
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
