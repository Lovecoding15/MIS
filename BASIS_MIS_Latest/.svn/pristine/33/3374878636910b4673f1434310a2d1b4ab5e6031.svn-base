0010 REM BLK.10 - AUTHORIZATION/ACTIVATION FORM 
0020 LET SYS01T=UNT; OPEN (SYS01T)"SYS-01"
0030 LET TERMINAL$="T"+FID(0)
0040 READ (SYS01T,KEY=TERMINAL$)*,F0$; CLOSE (SYS01T)
0050 DIM ARE13$:"FIRM_ID:C(2),AR_TYPE:C(2),CUSTOMER_NBR:C(6),ORDER_NUMBER:C(7),LINE_NUMBER:C(3),LINE_CODE:C(1),MAN_PRICE:C(1),PRODUCT_TYPE:C(3),PULL_ASSMBLE:C(1),RESERVED_STR_1:C(4),WAREHOUSE_ID:C(2),ITEM_NUMBER:C(20*),ORDER_MEMO:C(40),EST_SHP_DATE:C(3),COMMIT_FLAG:C(1),PICK_FLAG:C(1),RESERVED_STR_2:C(19*),UNIT_COST:N(7*),UNIT_PRICE:N(7*),QTY_ORDERED:N(7*),QTY_BACKORD:N(7*),QTY_SHIPPED:N(7*),STD_LIST_PRC:N(7*),EXT_PRICE:N(7*),TAXABLE_AMT:N(7*),DISC_PERCENT:N(7*),COMM_PERCENT:N(7*),COMM_AMT:N(7*),SPL_COMM_PCT:N(7*),RESERVED_NUM_1:N(1*),RESERVED_NUM_2:N(1*),DISC_CUST:N(7*)"
0060 DIM ARE73$:"FIRM_ID:C(2),AR_TYPE:C(2),CUSTOMER_NBR:C(6),ORDER_NUMBER:C(7),LINE_NUMBER:C(3*),MEDIA_TYPE:C(3),TYPE_OF_SALE:C(3),MANUALS:C(1),MANUAL_UPD:C(1),FIXED_FLOAT:C(1),DATA_SERVER:C(20),USE_SEQUENCE:C(1),DEALER_STR:C(10*),MEDIA_QTY:N(7*),MEDIA_SETS:N(3*),USERS:N(5*),DEALER_NUM_1:N(1*),DEALER_NUM_2:N(1*)"
0070 DIM ARE83$:"FIRM_ID:C(2),TYPE:C(2),CUSTOMER_NBR:C(6),ORDER_NUMBER:C(7),LINE_NUMBER:C(3),LICENSE_SEQ:C(3),SEQUENCE_NBR:C(3*),ACTION:C(1),FIXED_FLOAT:C(1),AUTH_CODE:C(15),ACT_KEY:C(15),DEALER_STR:C(8*),SERIAL_NBR:C(20*),LICENSE_CNT:N(7*),DEALER_NUM_1:N(1*),DEALER_NUM_2:N(1*)"
0080 DIM CSM03$:"FIRM_ID:C(2),OS_LEVEL:C(3*),DESC:C(30*),PORT_ID:C(5),DLR1:C(15*),NUM1:N(1*),NUM2:N(1*)"
0090 DIM CSM04$:"FIRM_ID:C(2),PRODUCT_REV:C(3*),DESC:C(20*),KLN:C(1),DLR1:C(19*),NUM1:N(1*),NUM2:N(1*)"
0100 DIM SNM01$:"SERIAL_NBR:C(20*),SERIAL_DESC:C(60*),PRODUCT:C(3),PLATFORM:C(3),OS_LEVEL:C(3),PRODUCT_REV:C(3),LICENSE_TYPE:C(3),MEDIA_TYPE:C(3*),ACTIVE_FLAG:C(1),ORIG_SALE:C(3),CUSTOMER_NBR:C(6),PORT_ID:C(5),FIRM_ID:C(2),DEALER_STR:C(18*),COMMENT:C(60*),USERS:N(5*),DEALER_NUM_1:N(1*),DEALER_NUM_2:N(1*)"
0110 LET TMPDIR$=STBL("AON")+"tmp/"
0120 LET ARE83CHAN=UNT; OPEN (ARE83CHAN)"ARE-83"
0130 LET ARE73CHAN=UNT; OPEN (ARE73CHAN)"ARE-73"
0140 LET ARE13CHAN=UNT; OPEN (ARE13CHAN)"ARE-13"
0150 LET ARE03CHAN=UNT; OPEN (ARE03CHAN)"ARE-03"
0160 LET SNM01CHAN=UNT; OPEN (SNM01CHAN)"SNM-01"
0170 LET CSM01CHAN=UNT; OPEN (CSM01CHAN)"CSM-01"
0180 LET CSM02CHAN=UNT; OPEN (CSM02CHAN)"CSM-02"
0190 LET CSM03CHAN=UNT; OPEN (CSM03CHAN)"CSM-03"
0200 LET CSM04CHAN=UNT; OPEN (CSM04CHAN)"CSM-04"
0210 GOSUB BUILD_PRINT_SORT
0220 IF RECORD_COUNT=0 THEN GOTO END_SORT
0230 GOSUB CREATE_OUTFILE
0240 LET TODAY$=DATE(0:"%Mz/%Dz/%Y")
0250 READ (E1,KEY="",DOM=READ_SORT)
0260 READ_SORT: 
0270 LET K$=KEY(E1,END=END_SORT); LET KL=LEN(K$)
0280 READ RECORD (E1,KEY=K$)SORT_REC$; LET ARE83KEY$=SORT_REC$(KL+1,26)
0290 READ RECORD (ARE83CHAN,KEY=ARE83KEY$)ARE83$
0300 LET PK$=ARE83$(1,20)
0310 READ (ARE03CHAN,KEY=PK$(1,17)+"000")ARE03$
0320 READ RECORD (ARE13CHAN,KEY=PK$)ARE13$; LET ITEM$=ARE13.ITEM_NUMBER$
0330 READ RECORD (ARE73CHAN,KEY=PK$)ARE73$
0340 LET USERS=ARE73.USERS,FLOAT$=ARE73.FIXED_FLOAT$
0350 LET SLTYPE$=ARE73.TYPE_OF_SALE$; IF SLTYPE$<>"ADD" THEN GOTO ITM_OK
0360 REM ARE13 for addusers doesnt have item or users we need-get info from previous line or SNM-01
0370 TRY_PREVLN: REM if adduser was for item created/updated on prev line, it either isn't in SNM-01 yet, or doesn't have the new rev
0380 LET K13$=PK$,ITEM$=""
0390 READ (ARE13CHAN,KEY=K13$(1,17),DOM=NEXT_ARE13)
0400 NEXT_ARE13: LET K13$=KEY(ARE13CHAN,END=FIND_SNM01); IF K13$(1,17)<>PK$(1,17) OR K13$>=PK$ THEN GOTO FIND_SNM01
0410 READ RECORD (ARE13CHAN,KEY=PK$)ARE13$
0420 READ (ARE83CHAN,KEY=K13$,DOM=CHKSN)
0430 CHKSN: READ (ARE83CHAN,END=NEXT_ARE13)K83$,ACTION$,SN83$
0440 IF POS(K13$=K83$)<>1 THEN GOTO NEXT_ARE13
0450 IF SN83$<>ARE83.SERIAL_NBR$ OR ACTION$(1,1)="D" THEN GOTO CHKSN
0460 READ RECORD (ARE73CHAN,KEY=K13$)ARE73$
0470 LET USERS=USERS+ARE73.USERS
0480 IF ARE73.TYPE_OF_SALE$<>"ADD" THEN LET ITEM$=ARE13.ITEM_NUMBER$
0490 GOTO NEXT_ARE13
0500 FIND_SNM01: IF ITEM$<>"" THEN GOTO ITM_OK
0510 READ RECORD (SNM01CHAN,KEY=ARE83.SERIAL_NBR$)SNM01$
0520 rem LET ITEM$=SNM01.PRODUCT$+SNM01.PLATFORM$+SNM01.OS_LEVEL$+SNM01.PRODUCT_REV$+SNM01.LICENSE_TYPE$,USERS=USERS+SNM01.USERS
0522 LET ITEM$=SNM01.PRODUCT$+SNM01.PLATFORM$+SNM01.OS_LEVEL$+SNM01.PRODUCT_REV$+SNM01.LICENSE_TYPE$,USERS=SNM01.USERS
0530 ITM_OK: 
0540 READ RECORD (CSM04CHAN,KEY=F0$(16,2)+ITEM$(10,3))CSM04$
0550 LET RV$=CVS(CSM04.DESC$,3),P=POS(" "=RV$); IF P=0 THEN LET P=LEN(RV$)
0560 LET PROD_TYPE$=ITEM$(13,3),REV_LEVEL$=CVS(RV$(1,P),2)
0570 READ RECORD (CSM03CHAN,KEY=F0$(16,2)+ITEM$(7,3))CSM03$; LET PORT$=CSM03.PORT_ID$
0580 IF POS(ITEM$(1,3)="P4E DS4") THEN LET PORT$(5,1)="4"
0590 LET PORT_REV$=PORT$+"."+RV$,P=POS("."=RV$); IF P THEN LET PORT_REV$=PORT_REV$(1,6)+RV$(1,P-1)+RV$(P+1)
0600 READ (CSM01CHAN,KEY=F0$(16,2)+ITEM$(1,3))*,PRDDESC$
0610 READ (CSM02CHAN,KEY=F0$(16,2)+ITEM$(4,3))*,PLTDESC$
0620 LET PRINT_DESC$=CVS(PRDDESC$,2)+" "+CVS(PLTDESC$,2)
0630 IF CSM04.KLN$="L" THEN LET OSLINE$="Port ID "+PORT_REV$+"   "+CVS(CSM03.DESC$,2) ELSE LET OSLINE$=CVS(CSM03.DESC$,2),ITEM$=CVS(ITEM$,2)+"  "+PORT$
0640 IF SLTYPE$="ADD" THEN LET PRINT_DESC$="Add users - S/N "+CVS(ARE83.SERIAL_NBR$,2)
0650 IF LEN(PRINT_DESC$)>30 THEN LET PRINT_DESC$=PRINT_DESC$(1,30)
0660 IF LEN(OSLINE$)>48 THEN LET OSLINE$=OSLINE$(1,48)
0670 PRINT 'SB',@(20,20),"SALES ORDER:           SERIAL NO: ",'SF',
0680 LET LICTEXT$=""; PRINT @(33,20),ARE83.ORDER_NUMBER$,@(54,20),ARE83.SERIAL_NBR$,
0690 IF CSM04.KLN$<>"L" THEN GOTO NOT_FLEX
0700 LET TMPUSR=USERS,TMPREV$=RV$,TMPSN$=CVS(ARE83.SERIAL_NBR$,2),FHOME$=STBL("FLEXHOME")
0710 IF TMPUSR=1 AND FLOAT$="X" THEN LET TMPUSR=0
0720 LET EXPIRE$="31-dec-2008",X$="D60"; IF PORT$(1,2)="12" THEN LET X$="DSD60"
0730 IF PORT$(1,2)="14" THEN LET X$="ODBCD60"
0740 CALL FHOME$+"bin/genflexlic.bbx",X$,TMPREV$,TMPSN$,TMPUSR,"DEMO",LICENSE$,EXPIRE$,"",0,"-l nocheck"
0750 LET FLD$="FEATURE "; GOSUB FIND_FLD; LET FR$=RETVAL$
0760 REM find fields by space delimeters- first field found not used here
0770 LET FLD$=" "; GOSUB FIND_FLD; GOSUB FIND_FLD; LET RV$=RETVAL$; GOSUB FIND_FLD; LET DT$=RETVAL$; GOSUB FIND_FLD; LET UR$=RETVAL$; GOSUB FIND_FLD; LET KY$=RETVAL$
0780 LET HD$=""; REM <leave hostid blank>
0790 LET FLD$="ck="; GOSUB FIND_FLD; LET CK$=RETVAL$
0800 LET LICTEXT$=","+CVS(FR$,2)+","+CVS(KY$,2)+","+CVS(RV$,2)+","+HD$+","+CVS(DT$,2)+","+CVS(CK$,2)+","+CVS(UR$,2)+","+TMPSN$+","+FILL(1)
0810 NOT_FLEX: 
0820 GOSUB WRITE_OUTREC
0830 GOTO READ_SORT
0840 END_SORT: 
0850 LET ENDCHAN=UNT
0860 IF E1 THEN CLOSE (E1); ERASE E1$,ERR=THE_END
0870 THE_END: 
0880 FOR ANYCHAN=1 TO ENDCHAN; CLOSE (ANYCHAN,ERR=NXTCHAN)
0890 NXTCHAN: NEXT ANYCHAN
0900 IF RECORD_COUNT=0 THEN GOTO NO_RECORDS
0910 IF CHOICE$="P" THEN RUN "BLK.12"
0920 IF CHOICE$="E" THEN RUN "BLK.16"
0930 IF CHOICE$="F" THEN RUN "BLK.16"
0940 REM if choice$="F" then 
0950 NO_RECORDS: 
0960 PRINT 'WINDOW'(5,5,70,8,"Key/License Form Printing"),'CS',"No serial numbers selected."; WAIT 4; PRINT 'POP'
0970 RUN "SYS.AA"
0980 FIND_FLD: 
0990 LET RETVAL$="",FLDPOS=POS(FLD$=LICENSE$); IF FLDPOS=0 THEN GOTO 1020
1000 LET FLDLEN=LEN(FLD$),RETVAL$=LICENSE$(FLDLEN+FLDPOS); LET B=POS(" "=RETVAL$); IF B THEN LET RETVAL$=RETVAL$(1,B-1)
1010 LET FLDLEN=FLDLEN+LEN(RETVAL$),LICENSE$=LICENSE$(FLDPOS+FLDLEN)
1020 RETURN
1030 BUILD_PRINT_SORT: 
1040 REM The main reason for building this sort file is to avoid printing more than 1 form when more than 1 records for the same SN 
1050 LET RECORD_COUNT=0
1060 LET E1$=TMPDIR$+"BLK"+FID(0)+".TMP"; ERASE E1$,ERR=MAKE_SORT
1070 MAKE_SORT: MKEYED E1$,[1:33],0,60
1080 LET E1=UNT; OPEN (E1)E1$
1090 LET PREVKEY$="",PREVSN$=""
1100 PRINT @(20,20),"SORTING SERIAL NUMBERS TO PRINT:",
1110 LET ARE83KEY$=""; READ (ARE83CHAN,KEY=F0$(16,2),DOM=READ_ARE83)
1120 READ_ARE83: 
1130 READ RECORD (ARE83CHAN,END=END_ARE83)ARE83$; IF ARE83.FIRM_ID$<>F0$(16,2) THEN GOTO END_ARE83
1140 IF ARE83.ACTION$="D" THEN GOTO READ_ARE83
1150 IF START_ONUM$<>"" AND ARE83.ORDER_NUMBER$<START_ONUM$ THEN GOTO READ_ARE83
1160 IF END_ONUM$<>"" AND ARE83.ORDER_NUMBER$>END_ONUM$ THEN GOTO READ_ARE83
1170 IF START_SNUM$<>"" AND CVS(ARE83.SERIAL_NBR$,2)<START_SNUM$ THEN GOTO READ_ARE83
1180 IF END_SNUM$<>"" AND CVS(ARE83.SERIAL_NBR$,2)>END_SNUM$ THEN GOTO READ_ARE83
1190 READ RECORD (ARE73CHAN,KEY=ARE83$(1,20))ARE73$
1200 IF ARE73.TYPE_OF_SALE$="SM1" THEN GOTO READ_ARE83
1210 IF PREVSN$=ARE83.SERIAL_NBR$ THEN REMOVE (E1,KEY=PREVKEY$)
1220 LET PREVKEY$=ARE83.ORDER_NUMBER$+ARE83$(1,26),PREVSN$=ARE83.SERIAL_NBR$
1230 LET SORT_REC$=ARE83.ORDER_NUMBER$+ARE83$(1,26)+ARE83$(1,26)
1240 WRITE RECORD (E1)SORT_REC$; LET RECORD_COUNT=RECORD_COUNT+1
1250 PRINT @(54,20),ARE83.SERIAL_NBR$,
1260 GOTO READ_ARE83
1270 END_ARE83: RETURN
1280 CREATE_OUTFILE: 
1290 LET OUTCHAN=UNT,OUTFILE$=TMPDIR$+FID(0)+"BLK10.txt"
1300 ERASE OUTFILE$,ERR=MAKE_OUTFILE
1310 MAKE_OUTFILE: STRING OUTFILE$
1320 OPEN (OUTCHAN)OUTFILE$
1330 LET DSBCHAN=UNT,DSBFILE$=TMPDIR$+FID(0)+"BLK10dsb.txt"
1340 ERASE DSBFILE$,ERR=MAKE_DSBFILE
1350 MAKE_DSBFILE: STRING DSBFILE$
1360 OPEN (DSBCHAN)DSBFILE$
1370 RETURN
1380 WRITE_OUTREC: 
1390 REM Add purchase order # and cust #
1400 LET PO$=CVS(ARE03$(49,10),3),ARE83.AUTH_CODE$=FILL(10,"X")
1410 LET COMMA_POS=POS(","=PO$); IF COMMA_POS THEN LET PO$(COMMA_POS,1)=" "; GOTO 1410
1420 LET L$=LICTEXT$+","+CVS(PO$,32)+",0"+ARE83.CUSTOMER_NBR$
1430 LET LICTEXT$=LICTEXT$+","+CVS(PO$,32)+","+ARE83.CUSTOMER_NBR$
1440 LET COMMA_POS=POS(","=PRINT_DESC$); IF COMMA_POS THEN LET PRINT_DESC$(COMMA_POS,1)=" "; GOTO 1440
1450 LET COMMA_POS=POS(","=OSLINE$); IF COMMA_POS THEN LET OSLINE$(COMMA_POS,1)=" "; GOTO 1450
1460 LET OUTREC$=CVS(ARE83.SERIAL_NBR$,2)+","+CVS(ARE83.AUTH_CODE$,2)+","+STR(USERS)+","+ARE83.ORDER_NUMBER$+","+TODAY$+","+CVS(ITEM$,2)+","+CVS(PRINT_DESC$,35)+","+CVS(REV_LEVEL$,2)+","+CVS(OSLINE$,35)+LICTEXT$
1470 PRINT (OUTCHAN)OUTREC$
1480 REM Set dsbfile record to match old format for now
1490 LET I$=PORT$+"100",O$=CSM03.DESC$
1500 LET COMMA_POS=POS(","=O$); IF COMMA_POS THEN LET O$(COMMA_POS,1)=" "; GOTO 1500
1510 IF LEN(O$)>10 THEN LET O$=O$(1,10)
1520 LET OUTREC$=CVS(ARE83.SERIAL_NBR$,2)+","+CVS(ARE83.AUTH_CODE$,2)+","+STR(USERS)+","+ARE83.ORDER_NUMBER$+","+TODAY$+","+CVS(I$,2)+","+CVS(PRINT_DESC$,35)+","+CVS(REV_LEVEL$,2)+","+CVS(O$,35)+L$
1530 PRINT (DSBCHAN)OUTREC$
1540 RETURN
