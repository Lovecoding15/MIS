0010 REM "IVX - Convert 5.x IV Files to 6.0 Format"
0020 REM "Program IVX60A"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0060 BEGIN 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=35
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0115 LET FILES$[1]="SYS-01",FILES$[2]="IVM-11",FILES$[3]="IVM-12"
0120 LET FILES$[4]="IVM-13",FILES$[5]="IVM-14",FILES$[6]="IVM-17"
0125 LET FILES$[7]="IVM-21",FILES$[8]="IVM-24",FILES$[9]="IVM-31"
0130 LET FILES$[10]="IVS-10",FILES$[11]="IVT-05"
0133 LET FILES$[12]="IVM-03",FILES$[13]="",FILES$[14]=""
0135 LET FILES$[15]=""
0137 LET FILES$[16]="IVM-01",FILES$[17]="IVM-02",FILES$[18]="IVM-04"
0140 LET FILES$[19]="IVM-05",FILES$[20]="IVM-06",FILES$[21]="IVM-07"
0143 LET FILES$[22]="IVM-09",FILES$[23]="IVM-10",FILES$[24]="IVT-01"
0145 LET FILES$[25]="IVT-04"
0147 LET FILES$[26]="IVM01.TMP",FILES$[27]="IVM02.TMP",FILES$[28]="IVM04.TMP"
0150 LET FILES$[29]="IVM05.TMP",FILES$[30]="IVM06.TMP",FILES$[31]="IVM07.TMP"
0153 LET FILES$[32]="IVM09.TMP",FILES$[33]="",FILES$[34]="IVT01.TMP"
0155 LET FILES$[35]="IVT04.TMP"
0160 CALL "SYC.DA",1,1,11,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0165 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM11_DEV=CHANNELS[2],IVM12_DEV=CHANNELS[3]
0172 LET IVM13_DEV=CHANNELS[4],IVM14_DEV=CHANNELS[5],IVM17_DEV=CHANNELS[6]
0174 LET IVM21_DEV=CHANNELS[7],IVM24_DEV=CHANNELS[8],IVM31_DEV=CHANNELS[9]
0176 LET IVS10_DEV=CHANNELS[10],IVT05_DEV=CHANNELS[11]
0200 REM " --- IOLIST's
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$(1),DEALER$,A6$(1),A[ALL]
0220 IVM02A1: IOLIST B0$(1),B1$(1),X[ALL]
0225 IVM02A2: IOLIST B0$(1),B1$(1),DEALER$,B[ALL]
0230 IVM03: IOLIST X0$(1)
0240 IVM04A1: IOLIST A0$(1),A[ALL]
0245 IVM04A2: IOLIST B0$(1),B1$(1),DEALER$,B[ALL]
0250 IVM05A: IOLIST A0$(1),A1$(1),A2$(1),A[ALL]
0255 IVM06A: IOLIST A0$(1),A1$(1),A[ALL]
0260 SYS01N: IOLIST X$,X[ALL]
0265 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0275 IVS10N: IOLIST A0$,A[ALL]
0285 GLS01A: IOLIST G0$,G1$,G2$,G3$,G4$,G5$,G6$,G7$
0290 IVM07A1: IOLIST B0$(1),B1$(1),X[ALL]
0295 IVM07A2: IOLIST B0$(1),B1$(1),B[ALL]
0305 IVM09A: IOLIST A0$(1),A1$(1)
0310 IVM11A: IOLIST A0$(1),A1$(1)
0315 IVM12A: IOLIST C0$(1),ADDON$,DEALER$,C[ALL]
0320 IVM13A: IOLIST X0$(1),X1$(1)
0325 IVM14A: IOLIST S0$(1)
0330 IVM17A: IOLIST C0$(1),ADDON$,DEALER$,C[ALL]
0335 IVM24A: IOLIST S0$(1)
0340 IVT01A1: IOLIST A0$(1),A1$(1),A[ALL]
0345 IVT01A2: IOLIST B0$(1),B1$(1),B2$(1),DEALER$,B[ALL]
0360 IVT04A1: IOLIST A0$(1),A1$(1),A2$(1),A[ALL]
0365 IVT04A2: IOLIST B0$(1),B1$(1),B2$(1),DEALER$,B[ALL]
0370 IVM10E: IOLIST A0$(1),A[ALL]
0375 IVS01B52: IOLIST A0$(1),A[ALL],AFACT[ALL]
0380 IVS01B60: IOLIST B0$(1),B1$,B[ALL]
0390 IVS01C60: IOLIST C0$(1),C[ALL]
0400 REM " --- Parameters"
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N1$=F4$,N2$="IV",N4$=F5$
0500 REM " --- Initializations"
0505 PRECISION 14
0550 LET ADDON$="",DEALER$="",LSTYPES$="POOPITTOTIPHWOWI"
0800 REM " --- Display Warning"
0810 CALL "SYC60A",N2$,SYS01_DEV,STATUS
0820 IF STATUS THEN GOTO 9900
0890 GOSUB 6800
0900 REM " --- Position file"
0905 CALL "SYC.NB"," Making Temporary Files",0,COLUMN
0910 LET NUMBER=9
0915 DIM FROM$[NUMBER],TMPFILE$[NUMBER],FLAG$[NUMBER]
0920 LET FROM$[1]="IVM-01",FROM$[2]="IVM-02",FROM$[3]="IVM-04"
0923 LET FROM$[4]="IVM-05",FROM$[5]="IVM-06",FROM$[6]="IVM-07"
0925 LET FROM$[7]="IVM-09",FROM$[8]="IVT-01",FROM$[9]="IVT-04"
0930 LET TMPFILE$[1]="IVM01.TMP",TMPFILE$[2]="IVM02.TMP",TMPFILE$[3]="IVM04.TMP"
0933 LET TMPFILE$[4]="IVM05.TMP",TMPFILE$[5]="IVM06.TMP",TMPFILE$[6]="IVM07.TMP"
0935 LET TMPFILE$[7]="IVM09.TMP",TMPFILE$[8]="IVT01.TMP",TMPFILE$[9]="IVT04.TMP"
0940 CALL "SYC.RN",FROM$[ALL],TMPFILE$[ALL],FLAG$[ALL],NUMBER,STATUS
0943 IF STATUS<>0 THEN GOTO 9900
0945 CALL "SYC.DA",1,12,35,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0947 IF STATUS<>0 THEN GOTO 9900
0950 LET IVM03_DEV=CHANNELS[12],NOTUSED_DEV=CHANNELS[13],NOTUSED_DEV=CHANNELS[14]
0953 LET NOTUSED_DEV=CHANNELS[15]
0955 LET IVM01_DEV=CHANNELS[16],IVM02_DEV=CHANNELS[17],IVM04_DEV=CHANNELS[18]
0957 LET IVM05_DEV=CHANNELS[19],IVM06_DEV=CHANNELS[20],IVM07_DEV=CHANNELS[21]
0960 LET IVM09_DEV=CHANNELS[22],IVM10_DEV=CHANNELS[23],IVT01_DEV=CHANNELS[24]
0963 LET IVT04_DEV=CHANNELS[25]
0965 LET IVM01TMP_DEV=CHANNELS[26],IVM02TMP_DEV=CHANNELS[27],IVM04TMP_DEV=CHANNELS[28]
0967 LET IVM05TMP_DEV=CHANNELS[29],IVM06TMP_DEV=CHANNELS[30],IVM07TMP_DEV=CHANNELS[31]
0970 LET IVM09TMP_DEV=CHANNELS[32],NOTUSED_DEV=CHANNELS[33],IVT01TMP_DEV=CHANNELS[34]
0973 LET IVT04TMP_DEV=CHANNELS[35]
0975 LET X$="Warehouse Cross-References",X=26
0977 GOSUB 6900
0980 GOSUB 6000
0985 LET X$="Inventory Master And Warehouse Data",X=23
0990 GOSUB 6900
1000 REM " --- IVM-01"
1005 LET K$=KEY(IVM01TMP_DEV,END=1950)
1010 IF POS(N0$=K$)<>1 THEN GOSUB 6500
1015 IF IV_PARAMS$="N" THEN GOTO 1900
1020 IF LEN(K$)<>2+P[0] THEN GOTO 1900
1025 PRINT @(COLUMN,11),K$(1,2)," ",K$(3),
1030 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A6$(90),A[12]
1035 DIM X$(64),S0$(42),X0$(5),X1$(32)
1040 READ (IVM01TMP_DEV)IOL=IVM01A
1050 LET X$(1,8)=A2$(1,8),X$(18,3)=A2$(18,3),X$(21,3)=A2$(27,2),DEALER$=""
1055 LET X$(24,1)="W",X$(25,1)=A2$(30,1),X$(26,1)=A2$(29,1),X$(27,1)=A2$(29,1)
1060 LET X$(28,1)=A2$(29,1),X$(29,3)=A2$(9,3),X$(38,3)=A2$(12,3)
1065 LET X$(41,3)=A2$(15,3),A3$(1)="",A3$(21)=A0$(3),A5$="",EOQ=A[1]
1085 LET LISTCODE$=A2$(31,4),COST=A[3],CURPRICE=A[4],PRIPRICE=A[5],A[1]=A[2]
1090 LET S0$(1)=N0$,S0$(3)=A2$(35,12),S0$(23)=A0$(3),A[2]=A[8],A[5]=A[7]
1095 LET A[7]=A[6],A[6]=EOQ,A[8]=0,A[9]=0,A[10]=0,A[11]=0,A[12]=0,A2$(1)=X$
1100 REM " --- Update IVM-01/IVM-14/IVM-24"
1110 WRITE (IVM01_DEV,KEY=A0$)IOL=IVM01A
1120 WRITE (IVM14_DEV,KEY=S0$)IOL=IVM14A
1130 LET S0$(1)=S0$(1,2)+S0$(23,20)+S0$(3,20)
1140 WRITE (IVM24_DEV,KEY=S0$)IOL=IVM24A
1400 REM " --- Create IVM-13"
1405 DIM X0$(5),X1$(32)
1410 LET X0$(1)=A0$(1,2)+A2$(21,3)
1420 FIND (IVM13_DEV,KEY=X0$,DOM=1450)
1430 GOTO 1480
1450 LET X1$(1)="Item Class "+X0$(3)
1460 IF FNP$(X0$(3))="" THEN LET X1$(1)="Default Item Class"
1470 WRITE (IVM13_DEV,KEY=X0$)IOL=IVM13A
1480 LET ITEM$=A0$(1,2)+"G"+A0$(3,P[0])
1490 READ (IVM03_DEV,KEY=ITEM$,DOM=1500)
1500 REM " --- IVM-02"
1510 LET K$=KEY(IVM03_DEV,END=1940)
1515 IF POS(" "<>K$)=0 OR LEN(K$)<1 THEN GOTO 1860; REM "Rec not valid if blank
1520 LET TEST=NUM(K$(1,2),ERR=1860); REM "Rec not valid if firm not numeric
1525 IF POS(ITEM$=K$)<>1 THEN GOTO 1940
1530 LET WK$=K$(1,2)+K$(24,2)+K$(4,P[0])
1540 DIM B0$(24),B1$(64),X[16],B[20],X$(64),C0$(28),C[12]
1550 FIND (IVM02TMP_DEV,KEY=WK$)IOL=IVM02A1
1560 LET X$(1,27)=B1$(1,27),X$(52,4)=LISTCODE$,X$(56,4)=A2$(25,4)
1565 LET B1$(1)=X$,B[0]=X[2],B[1]=X[3],B[2]=X[4],B[3]=X[0]
1570 LET B[4]=X[1],B[5]=A[5],B[6]=A[6],B[7]=A[7],B[8]=X[5],B[9]=CURPRICE
1575 LET B[10]=PRIPRICE,B[11]=COST,B[12]=COST,B[13]=COST,B[14]=COST
1580 LET B[15]=COST,B[16]=COST
1600 REM " --- Update IVM-02"
1620 WRITE (IVM02_DEV,KEY=B0$)IOL=IVM02A2
1700 REM " --- IVM-12 for current/next period"
1710 DIM C0$(28),C[12]
1715 LET C0$(1)=B0$,C0$(25,2)=FNYEAR_YY21$(Y[1]),C0$(27,2)=STR(M[1]:"00")
1720 LET C[0]=X[2]+X[10]-X[9]-X[11]-X[13],C[1]=X[9],C[4]=X[10],C[5]=X[11],C[8]=X[13]
1730 WRITE (IVM12_DEV,KEY=C0$)IOL=IVM12A
1735 LET C0$(25,2)=FNYEAR_YY21$(Y[2]),C0$(27,2)=STR(M[2]:"00")
1740 LET C[0]=X[2]+X[7]-X[6]-X[8]-X[12],C[1]=X[6],C[4]=X[7],C[5]=X[8],C[8]=X[12]
1745 WRITE (IVM12_DEV,KEY=C0$)IOL=IVM12A
1860 READ (IVM03_DEV)
1890 GOTO 1500
1900 REM " --- Loop back for next item"
1910 READ (IVM01TMP_DEV)
1940 GOTO 1000
1950 REM " --- Erase .TMP
1955 CLOSE (IVM01TMP_DEV,ERR=1960)
1960 ERASE "IVM01.TMP",ERR=1970
1965 GOTO 1960
1970 CLOSE (IVM02TMP_DEV,ERR=1975)
1975 ERASE "IVM02.TMP",ERR=1990
1980 GOTO 1975
2000 REM " --- Lot/Serial Initializations"
2020 LET X$="Lot/Serial Number Information",X=25,LAST$=""
2030 GOSUB 6900
2090 READ (IVM07TMP_DEV,KEY="",DOM=2100)
2100 REM " --- IVM-07"
2105 LET K$=KEY(IVM07TMP_DEV,END=2400)
2110 IF POS(N0$=K$)<>1 THEN GOSUB 6500
2115 IF IV_PARAMS$="N" THEN GOTO 2380
2120 IF LEN(K$)<>4+P[0]+P[2] THEN GOTO 2380
2125 IF K$(1,4+P[0])<>LAST$ THEN LET LAST$=K$(1,4+P[0]); PRINT @(COLUMN,11),K$(1,2)," ",K$(3,2)," ",K$(5,P[0]),
2130 DIM B0$(44),B1$(96),X$(96),X[11],B[12]
2140 READ (IVM07TMP_DEV)IOL=IVM07A1
2150 LET B0$(1)=K$(1,2)+K$(3,2)+K$(5,P[0]),B0$(25)=K$(5+P[0])
2160 LET X$(1)=B1$(1,7),X$(14,40)=B1$(14,40),X$(54,1)=B1$(54,1)
2170 LET X$(55,6)=B1$(55,6),X$(64,3)=B1$(11,3),X$(73,3)=B1$(8,3),B1$(1)=X$
2180 LET B[0]=X[0],B[1]=X[1],B[2]=X[2],B[3]=X[9],B[4]=X[9],B[5]=X[9]
2190 LET B[6]=X[9],B[7]=X[9],B[8]=X[9]
2200 REM " --- Update IVM-07
2210 DIM X0$(44)
2230 WRITE (IVM07_DEV,KEY=B0$)IOL=IVM07A2
2300 REM " --- IVM-17"
2310 DIM C0$(48),C[12]
2320 LET C0$(1)=B0$,C0$(45,2)=FNYEAR_YY21$(Y[1]),C0$(47,2)=STR(M[1]:"00")
2330 LET C[0]=B[0]-X[3]+X[4]-X[5],C[1]=X[3],C[4]=X[4],C[5]=X[5]
2340 WRITE (IVM17_DEV,KEY=C0$)IOL=IVM17A
2350 LET C0$(45,2)=FNYEAR_YY21$(Y[2]),C0$(47,2)=STR(M[2]:"00")
2360 LET C[0]=B[0]-X[6]+X[7]-X[8],C[1]=X[6],C[4]=X[7],C[5]=X[8]
2370 WRITE (IVM17_DEV,KEY=C0$)IOL=IVM17A
2375 GOTO 2390
2380 READ (IVM07TMP_DEV)
2390 GOTO 2100
2400 REM " --- Erase .TMP
2410 CLOSE (IVM07TMP_DEV,ERR=2415)
2415 ERASE "IVM07.TMP",ERR=2450
2420 GOTO 2415
2450 REM " --- IVT-04 Initializations"
2460 DIM A0$(32),A1$(64),A2$(16),A[4]
2470 LET X$="Inventory Transaction History",X=25,LAST$=""
2480 GOSUB 6900
2490 READ (IVT04TMP_DEV,KEY="",DOM=2500)
2500 REM " --- IVT-04"
2505 LET K$=KEY(IVT04TMP_DEV,END=2900)
2510 IF POS(N0$=K$)<>1 THEN GOSUB 6500
2515 IF IV_PARAMS$="N" THEN GOTO 2880
2520 IF LEN(K$)<>12+P[0] THEN GOTO 2880
2530 IF K$(1,4+P[0])<>LAST$ THEN LET LAST$=K$(1,4+P[0]); PRINT @(COLUMN,11),K$(1,2)," ",K$(3,2)," ",K$(5,P[0]),
2540 DIM B0$(32),B1$(96),B2$(16),B[4]
2550 READ (IVT04TMP_DEV)IOL=IVT04A1
2560 LET B0$(1)=K$(1,4+P[0]),B0$(25)=K$(5+P[0]),B1$(1,2)=A1$(1,2)
2570 IF POS(A1$(1,2)="OPPOWIWO",2)>0 THEN LET B1$(3,6)=A1$(3,6)
2580 IF POS(A1$(1,2)="OPPOIT",2)>0 THEN LET B1$(9,7)=A1$(19,7)
2590 IF POS(A1$(1,2)="BMWIWO",2)>0 THEN LET B1$(9,7)=A1$(29,7)
2600 IF POS(A1$(1,2)="TITO",2)>0 THEN LET B1$(9,7)=A1$(3,6)
2610 IF POS(A1$(1,2)="WIWO",2)>0 THEN LET B1$(16,7)=A1$(19,7)
2615 IF A1$(1,2)="OP" THEN LET B1$(16,7)=A1$(29,7)
2620 IF POS(A1$(1,2)="ITPH",2)>0 THEN LET B1$(23,2)=A1$(3,2)
2630 IF POS(A1$(1,2)="TITO",2)>0 THEN LET B1$(23,2)=A1$(19,2)
2640 IF POS(A1$(1,2)="WIWO",2)>0 THEN LET B1$(23,2)=A1$(36,2)
2650 IF POS(A1$(1,2)="OPITWI",2)>0 THEN LET B1$(25,3)=A1$(26,3)
2660 IF A1$(1,2)="PO" THEN LET B1$(25,3)="0"+A1$(26,2)
2670 IF A1$(1,2)="OP" THEN LET B1$(28,1)=A1$(36,1)
2680 IF A1$(1,2)="IT" THEN LET B1$(31,20)=A1$(29,20)
2690 IF A1$(1,2)="BM" THEN LET B1$(51,20)=A1$(36,P[0])
2790 IF A1$(1,2)="WI" THEN LET B1$(51,20)=A1$(38,P[0])
2800 IF POS(A1$(1,2)="OPITTITOBMWIWO")>0 THEN LET B1$(71,10)=A1$(9,10)
2810 IF A1$(1,2)="PH" THEN LET B1$(81,10)=A1$(19,10)
2820 LET B2$(1)=A2$(1),B[0]=A[0],B[1]=A[1],B[2]=A[2]
2850 REM " --- Update IVT-04"
2870 WRITE (IVT04_DEV,KEY=B0$)IOL=IVT04A2
2875 GOTO 2890
2880 READ (IVT04TMP_DEV)
2890 GOTO 2500
2900 REM " --- Erase .TMP
2910 CLOSE (IVT04TMP_DEV,ERR=2915)
2915 ERASE "IVT04.TMP",ERR=2950
2920 GOTO 2915
2950 REM " --- IVT-01 Initializations"
2960 DIM A0$(48),A1$(48),A[2]
2970 LET X$="Lot/Serial Number Transaction History",X=25,LAST$=""
2980 GOSUB 6900
2990 READ (IVT01TMP_DEV,KEY="",DOM=3000)
3000 REM " --- IVT-01"
3005 LET K$=KEY(IVT01TMP_DEV,END=3400)
3010 IF POS(N0$=K$)<>1 THEN GOSUB 6500
3015 IF IV_PARAMS$="N" THEN GOTO 3385
3020 IF LEN(K$)<>8+P[0]+P[2] THEN GOTO 3385
3030 IF K$(1,3+P[0])<>LAST$ THEN LET LAST$=K$(1,3+P[0]); PRINT @(COLUMN,11),K$(1,2)," ",K$(3,P[0]),
3040 DIM A0$(48),A1$(64),A[3],B0$(52),B1$(96),B2$(16),B[4]
3050 READ (IVT01TMP_DEV)IOL=IVT01A1
3055 LET B0$(1)=A0$(1,2)+A1$(4,2)+A0$(3,P[0]),B0$(25)=A0$(3+P[0],P[2])
3060 LET B0$(45)=A0$(3+P[0]+P[2],3)+"00"+STR(NUM(A0$(6+P[0]+P[2]))+1:"000")
3065 LET B[0]=A[0],B[1]=A[1],B1$(29,2)=A1$(6,2),X=POS(A1$(1,1)="ABCDEFGH")
3070 IF X>0 THEN LET B1$(1,2)=LSTYPES$((X-1)*2+1,2)
3075 IF A1$(1,1)="B" THEN LET B[1]=0,B[2]=A[1]
3080 IF A1$(1,1)="A" THEN LET B1$(3,6)=A1$(19,6),B1$(9,7)=A1$(10,7),B1$(25,3)="0"+A1$(17,2)
3085 IF A1$(1,1)="B" THEN LET B1$(3,6)=A1$(27,6),B1$(9,7)=A1$(17,7),B1$(16,7)=A1$(10,7),B1$(25,3)=A1$(24,3),B1$(28,1)=A1$(2,1)
3090 IF A1$(1,1)="C" THEN LET B1$(9,7)=A1$(10,7),B1$(23,2)=A1$(2,2),B1$(25,3)=A1$(17,3),B1$(31,20)=A1$(33),B1$(71,10)=A1$(23,10)
3095 IF POS(A1$(1,1)="DE")>0 THEN LET B1$(9,7)=A1$(10,6),B1$(23,2)=A1$(17,2)
3100 IF A1$(1,1)="F" THEN LET B1$(23,2)=A1$(17,2),B1$(81,10)=A1$(19,10)
3105 IF POS(A1$(1,1)="GH")>0 THEN LET B1$(9,7)=A1$(10,7),B1$(23,2)=A1$(17,2)
3110 LET B2$(1)=F0$(4,3)+F0$(7,3)+FID0$,B2$(11,4)=FNE$(Q$)
3120 IF POS(A1$(1,1)="BDH")>0 THEN LET B[0]=-B[0]
3150 REM " --- Update IVT-01"
3180 WRITE (IVT01_DEV,KEY=B0$)IOL=IVT01A2
3190 GOTO 3390
3385 READ (IVT01TMP_DEV)
3390 GOTO 3000
3400 REM " --- Erase .TMP
3410 CLOSE (IVT01TMP_DEV,ERR=3415)
3415 ERASE "IVT01.TMP",ERR=3450
3420 GOTO 3415
3450 REM " --- IVM-04 Initializations"
3470 LET X$="LIFO/FIFO Tiers",X=30
3480 GOSUB 6900
3490 READ (IVM04TMP_DEV,KEY="",DOM=3500)
3500 REM " --- IVM-04"
3505 LET K$=KEY(IVM04TMP_DEV,END=3700)
3510 IF POS(N0$=K$)<>1 THEN GOSUB 6500
3515 IF IV_PARAMS$="N" THEN GOTO 3680
3520 IF LEN(K$)<>4+P[0] THEN GOTO 3680
3530 IF K$<>LAST$ THEN LET LAST$=K$; PRINT @(COLUMN,11),K$(1,2)," ",K$(3,2)," ",K$(5,P[0]),
3540 DIM A0$(25),A[9],B0$(30),B1$(16),B[5]
3550 READ (IVM04TMP_DEV)IOL=IVM04A1
3560 LET B0$(1)=A0$,B0$(25,3)=F0$(7,3),B1$(1)="BBConvert",S=1,X1=0,X2=4,X3=1
3570 IF I3$(3,1)="L" THEN LET X1=4,X2=4,X3=-1
3600 REM " --- Update IVM-04"
3620 FOR X=X1 TO X2 STEP X3
3630 IF A[X+5]=0 THEN GOTO 3660
3640 LET B0$(28,3)=STR(S:"000"),S=S+1,B[0]=A[X+5],B[1]=A[X]
3650 WRITE (IVM04_DEV,KEY=B0$)IOL=IVM04A2
3660 NEXT X
3670 GOTO 3690
3680 READ (IVM04TMP_DEV)
3690 GOTO 3500
3700 REM " --- Erase .TMP
3710 CLOSE (IVM04TMP_DEV,ERR=3715)
3715 ERASE "IVM04.TMP",ERR=3750
3720 GOTO 3715
3750 REM " --- IVM-10 E Record Initializations"
3760 LET X$="Pricing Tables",X=11
3770 GOSUB 6900
3780 DIM A0$(31),A[19]
3790 READ (IVM10_DEV,KEY="",DOM=3800)
3800 REM " --- IVM-10 E Record"
3805 LET K$=KEY(IVM10_DEV,END=3900)
3810 IF POS(" "<>K$)=0 THEN GOTO 3885; REM "Rec not valid if blank
3815 LET TEST=NUM(K$(1,2),ERR=3885); REM "Rec not valid if firm not numeric
3820 IF POS("E"=K$)=3 THEN GOTO 3850
3830 READ (IVM10_DEV)
3840 GOTO 3800
3850 REM " --- Update IVM-10 E Record"
3855 IF LEN(K$)<>9 THEN READ (IVM10_DEV); GOTO 3890
3860 PRINT @(COLUMN,11),K$(1,2)," ",K$(4,2)," ",K$(6,4),
3870 READ (IVM10_DEV)IOL=IVM10E
3875 LET A0$(1)=A0$(1,5)+" "+A0$(6,24)+A0$(31,1)
3880 WRITE (IVM10_DEV,KEY=A0$(1,10))IOL=IVM10E
3885 REMOVE (IVM10_DEV,KEY=K$)
3890 GOTO 3800
3900 REM " --- Next Automatic Item Number"
3905 LET X$="ARS-10 Next Item Number",X=2; GOSUB 6900
3910 FOR I=1 TO 99
3920 DIM A[1],X[2]
3930 LET N0$=STR(I:"00"),A0$=N0$+"N"
3940 FIND (SYS01_DEV,KEY=N0$+"SY99",DOM=3990)IOL=SYS01N
3945 PRINT @(COLUMN,11),N0$,
3950 FIND (IVS10_DEV,KEY=A0$,DOM=3960)IOL=IVS10N
3960 LET A[0]=X[2],X[2]=0
3970 WRITE (SYS01_DEV,KEY=N0$+"SY99")IOL=SYS01N
3980 WRITE (IVS10_DEV,KEY=A0$)IOL=IVS10N
3990 NEXT I
4000 REM " --- IVM-05 Initializations"
4010 DIM A0$(28),A1$(32),A2$(20),A[12],X0$(29)
4020 LET X$="Vendor Information",X=30
4030 GOSUB 6900
4040 GOSUB 5500
4050 REM " --- IVM-06 Initializations"
4060 DIM A0$(28),A1$(48),A[19]
4070 LET X$="Contract Pricing",X=30
4080 GOSUB 6900
4090 GOSUB 5600
4100 REM " --- IVM-09 Initializations"
4110 DIM A0$(24),A1$(48)
4120 LET X$="Item Comments",X=23
4130 GOSUB 6900
4140 GOSUB 5900
4150 REM " --- IVM-11 Initializations"
4160 DIM A0$(22),A1$(30)
4170 LET X$="Masterfile Descriptions",X=23
4180 GOSUB 6900
4190 GOSUB 5100
4300 REM " --- Convert IVS-01 ABC factors/data
4310 DIM A0$(6),A[4],AFACT[3],B0$(6),B[1],C0$(6),CPCNT[25],CFACT[25]
4315 READ (SYS01_DEV,KEY="01IV",DOM=READ_SYS01)
4320 READ_SYS01: 
4330 LET K$=KEY(SYS01_DEV,END=DONE_IVS01)
4335 IF LEN(K$)<6 THEN GOTO DONE_IVS01
4340 IF K$(3,4)<>"IV01" THEN READ (SYS01_DEV); GOTO NEXT_IVS01
4350 READ (SYS01_DEV)IOL=IVS01B52
4360 LET B0$(1)=A0$,C0$(1)=A0$(1,4)+"02"
4370 LET B[0]=A[3],B[1]=A[4]
4380 FOR X=0 TO 2
4430 LET CPCNT[X]=A[X],CFACT[X]=AFACT[X]
4450 NEXT X
4480 WRITE (SYS01_DEV,KEY=B0$)IOL=IVS01B60
4490 WRITE (SYS01_DEV,KEY=C0$)IOL=IVS01C60
4500 NEXT_IVS01: 
4520 GOTO READ_SYS01
4550 DONE_IVS01: 
4900 REM " --- All done"
4910 CLOSE (IVM05TMP_DEV,ERR=4915)
4915 ERASE "IVM05.TMP",ERR=4925
4920 GOTO 4915
4925 CLOSE (IVM06TMP_DEV,ERR=4930)
4930 ERASE "IVM06.TMP",ERR=4940
4935 GOTO 4930
4940 CLOSE (IVM09TMP_DEV,ERR=4945)
4945 ERASE "IVM09.TMP",ERR=4955
4950 GOTO 4945
5090 GOTO 9900
5100 REM " --- IVM-11"
5190 RETURN 
5500 REM " --- IVM-05"
5505 LET K$=KEY(IVM05TMP_DEV,END=5595)
5510 IF POS(N0$=K$)<>1 THEN GOSUB 6500
5515 IF IV_PARAMS$="N" THEN GOTO 5585
5520 IF LEN(K$)<>8+P[0] THEN GOTO 5585
5530 PRINT @(COLUMN,11),K$(1,2)," ",K$(3,6)," ",K$(9),
5540 READ (IVM05TMP_DEV)IOL=IVM05A
5560 WRITE (IVM05_DEV,KEY=A0$)IOL=IVM05A
5583 GOTO 5590
5585 READ (IVM05TMP_DEV)
5590 GOTO 5500
5595 RETURN 
5600 REM " --- IVM-06"
5605 LET K$=KEY(IVM06TMP_DEV,END=5690)
5610 IF POS(N0$=K$)<>1 THEN GOSUB 6500
5615 IF IV_PARAMS$="N" THEN GOTO 5675
5620 IF LEN(K$)<>8+P[0] THEN GOTO 5675
5630 PRINT @(COLUMN,11),K$(1,2)," ",K$(3,6)," ",K$(9),
5640 READ (IVM06TMP_DEV)IOL=IVM06A
5660 WRITE (IVM06_DEV,KEY=A0$)IOL=IVM06A
5670 GOTO 5680
5675 READ (IVM06TMP_DEV)
5680 GOTO 5600
5690 RETURN 
5900 REM " --- IVM-09"
5905 LET K$=KEY(IVM09TMP_DEV,END=5990)
5910 IF POS(N0$=K$)<>1 THEN GOSUB 6500
5915 IF IV_PARAMS$="N" THEN GOTO 5980
5920 IF LEN(K$)<>4+P[0] THEN GOTO 5980
5930 PRINT @(COLUMN,11),K$(1,2)," ",K$(3,P[0]),
5940 READ (IVM09TMP_DEV)IOL=IVM09A
5960 LET A0$(1)=K$(1,2)+K$(3,P[0]),A0$(23,2)=K$(3+P[0])
5970 WRITE (IVM09_DEV,KEY=A0$)IOL=IVM09A
5975 GOTO 5985
5980 READ (IVM09TMP_DEV)
5985 GOTO 5900
5990 RETURN 
6000 REM " --- Build IVM-03 G records"
6005 LET K$=KEY(IVM02TMP_DEV,END=6090)
6010 IF POS(" "<>K$)=0 THEN GOTO 6075; REM "Rec not valid if blank
6015 LET TEST=NUM(K$(1,2),ERR=6075); REM "Rec not valid if firm not numeric
6020 PRINT @(COLUMN,11),K$(1,2)," ",K$(3,2)," ",K$(5)
6030 READ (IVM02TMP_DEV)
6040 DIM X0$(25)
6050 LET X0$(1)=K$(1,2)+"G"+K$(5),X0$(24)=K$(3,2)
6060 WRITE (IVM03_DEV,KEY=X0$)IOL=IVM03
6070 GOTO 6080
6075 READ (IVM02TMP_DEV)
6080 GOTO 6000
6090 RETURN 
6500 REM " --- Get parameters for current firm"
6505 DIM P[8],M[5],Y[5],G[4],S$[5]
6510 LET N0$=K$(1,2),GL_PARAMS$="N",IV_PARAMS$="N"
6515 FIND (SYS01_DEV,KEY=N0$+"GL00",DOM=6690)IOL=GLS01A
6520 LET G[0]=NUM(G2$(1,2)),G[3]=NUM(G2$(7,2)),G[4]=NUM(G2$(9,2)),GL_PARAMS$="Y"
6525 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=6690)IOL=IVS01A
6530 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1)),P[2]=NUM(I2$(7,2))
6540 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
6550 LET P[6]=NUM(I4$(1,2)),P[7]=FNYY_YEAR(I4$(3,2)),P[8]=NUM(I2$(3,2)),M[1]=P[6]+1
6555 LET M[2]=P[6],Y[1]=P[7],Y[2]=P[7],Y[3]=P[7],Y[4]=P[7],Y[5]=P[7],IV_PARAMS$="Y"
6560 IF M[1]>G[0] THEN LET M[1]=1,Y[1]=Y[1]+1
6565 FOR X=1 TO 3
6570 LET M[X+2]=P[6]-X
6575 IF M[X+2]<1 THEN LET M[X+2]=G[0]+M[X+2],Y[X]=Y[X]-1
6580 NEXT X
6600 REM " --- Determine period start dates"
6610 FOR X=1 TO 5
6620 LET M=M[X],Y=Y[X]
6630 CALL "SYC.PA",SYS01_DEV,M,Y,V$,X$,STATUS
6640 LET S$[X]=V$
6650 NEXT X
6690 RETURN 
6800 REM " --- Erase old xref files"
6810 ERASE "IVM-03",ERR=6820
6815 GOTO 6800
6890 RETURN 
6900 REM " --- Update screen"
6910 PRINT @(40,3),X$,'CL',@(0,5),'CE',
6920 CALL "SYC.NB","Processing",X,COLUMN
6990 RETURN 
8000 REM " --- Functions"
8050 DEF FNE$(Q$)=DATE(0:"%Hz%mZ")
8080 DEF FNP$(Q$)=CVS(Q$,2)
8110 REM " --- FNYEAR_YY21$ Convert Numeric Year to 21st Century 2-Char Year"
8115 DEF FNYEAR_YY21$(Q)=FNYY_YY21$(STR(MOD(Q,100):"00"))
8120 REM " --- FNYY_YY21$ Convert 2-Char Year to 21st Century 2-Char Year"
8125 DEF FNYY_YY21$(Q1$)
8130 LET Q3$=" ABCDE56789ABCDEFGHIJ",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8135 RETURN Q1$
8140 FNEND
8145 REM " --- FNYY21_YY$ Un-Convert 21st Century 2-Char Year to 2-Char Year"
8150 DEF FNYY21_YY$(Q1$)
8155 LET Q3$=" 01234567890123456789",Q1$(1,1)=Q3$(POS(Q1$(1,1)=" 0123456789ABCDEFGHIJ"))
8160 RETURN Q1$
8165 FNEND
8170 REM " --- FNYY_YEAR Convert 2-Char Year to 21st Century Numeric Year"
8175 DEF FNYY_YEAR(Q1$)
8180 LET Q=NUM(FNYY21_YY$(Q1$)); IF Q<50 THEN LET Q=Q+100
8185 RETURN Q
8190 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9880 LET LINE_ERR$=LST(PGM(TCB(5)))
9890 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
