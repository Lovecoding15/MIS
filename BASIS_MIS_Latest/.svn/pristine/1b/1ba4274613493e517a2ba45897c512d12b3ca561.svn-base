0010 REM "PRM - Emoloyee Maintenance - Employee Number Change
0020 REM "Program PRM.MK"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "20Jan99 KJS: Avoid endless loop when changing last employee in file
0040 REM 
0085 SETESC 9000
0090 SETERR 9000
0100 REM " --- Open/Lock Files"
0110 LET FILES=12
0120 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0125 LET FILES$[1]="PRE-01",FILES$[2]="PRM-02",FILES$[3]="PRM-12"
0130 LET FILES$[4]="PRT-01",FILES$[5]="PRT-02",FILES$[6]="PRT-03"
0135 LET FILES$[7]="PRT-04",FILES$[8]="PRT-05",FILES$[9]="PRT-05"
0140 LET FILES$[10]="PRT-11",FILES$[11]="PRT-21",FILES$[12]="PRT-31"
0155 LET OPTIONS$[1]="L"
0160 CALL "SYC.DA",1,1,12,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0170 IF STATUS>0 THEN GOTO 9900
0172 REM "Some PR files are opened in .MA overlay; therefore, "
0173 REM "the second opening of them here has device names of DEV2"
0175 LET PRE01_DEV=CHANNELS[1],PRM02_DEV2=CHANNELS[2],PRM12_DEV2=CHANNELS[3]
0177 LET PRT01_DEV2=CHANNELS[4],PRT02_DEV2=CHANNELS[5],PRT03_DEV=CHANNELS[6]
0180 LET PRT04_DEV2=CHANNELS[7],PRT05_DEV1=CHANNELS[8],PRT05_DEV2=CHANNELS[9]
0185 LET PRT11_DEV2=CHANNELS[10],PRT21_DEV2=CHANNELS[11],PRT31_DEV2=CHANNELS[12]
0200 REM " --- IOLists
0210 PRM01A1: IOLIST A0$(1),A1$(1)
0250 PRM01A: IOLIST *,X1$
0260 PRM03A: IOLIST TMP$
0270 PRM03B: IOLIST TMP$
0280 PRM10E: IOLIST X$
0360 PRT05A: IOLIST X0$,X[ALL]
0500 REM " --- Init Data
0520 LET O9=1
0700 REM " --- Background
0710 PRINT @(0,L0),'CE',
0730 FOR X=7 TO 9 STEP 2
0740 CALL "SYC.WC",1,0,80,0,0,X,0
0750 NEXT X
0760 PRINT 'SB',@(15,5),"Employee Number Change",
0770 PRINT @(3,6),"New Number:",@(30,6),"New Dept:",
0790 PRINT 'SF',
0900 REM " --- Check for Payroll Entry
0910 READ (PRE01_DEV,KEY=A0$,DOM=0920)
0920 LET K$=KEY(PRE01_DEV,END=0930)
0930 IF POS(A0$=K$)<>1 THEN GOTO 1000
0940 LET V0$="S",V1$="C",V2$="",V3$="",V4$="*** This Number Cannot Be Changed While Payroll Entries Exist <Enter>: ",V0=1,V1=FNV(V4$),V2=22
0942 PRINT @(V1,V2),'RB',
0945 GOSUB 7000
0950 GOTO 4000
1000 REM " --- New Number
1010 PRINT 'CF',
1030 LET V0$="M",V1$="E",V2$="",V3$=P1$,V0=9,V1=15,V2=6
1040 GOSUB 7000
1050 IF V3=4 THEN GOTO 4000
1055 IF NUM(V$,ERR=1060)=0 THEN LET V$=""
1060 IF V$="" THEN GOTO 1000
1070 LET W0$=V$
1080 FIND (PRM01_DEV,KEY=N0$+V$,DOM=1200)IOL=PRM01A
1100 REM " --- Already in Use
1120 LET V4$="This Number Already Assigned To "+X1$(1,30)+" <Enter>: "
1140 LET V0$="S",V1$="C",V2$="",V3$="",V0=1,V1=FNV(V4$),V2=22
1145 GOSUB 7000
1150 GOTO 1000
1200 REM " --- Department
1220 LET V0$="S",V1$="C",V2$=A1$(221,2),V4$="Enter Valid Department Code Or <F3>=Lookup",V0=2,V1=40,V2=6
1230 GOSUB 7000
1232 IF V3=2 THEN GOTO 1000 ELSE IF V3<>3 THEN GOTO 1240
1234 LET V4=1,V6=4,V7=2,V8=6,V9=20,V5$="E"
1236 CALL "SYC.LZ",V1,V2,V4,PRM10_DEV,V6,V7,V8,V9,V$,V5$,N0$
1238 IF V$="" THEN GOTO 1200
1240 LET A1$(221,2)=V$
1250 FIND (PRM10_DEV,KEY=N0$+"E"+A1$(221,2),DOM=1200)IOL=PRM10E
1260 PRINT @(V1+3,V2),X$(6,20),
1500 REM " --- Change?
1520 LET V0$="S",V1$="KC",V2$="",V3$="",V4$="Is The Above Information Correct (Yes/No)? ",V0=3,V1=FNV(V4$),V2=22
1525 GOSUB 7000
1530 IF V$="NO" THEN GOTO 1000
1540 IF V$<>"YES" THEN GOTO 1500
1560 PRINT 'SB',@(5,8),"Changing:",'SF',
2000 REM " --- Cross References
2020 PRINT @(15,8),"Cross References",
2040 REMOVE (PRM03_DEV,KEY=N0$+"A"+A1$(1,16)+A0$(3,9),DOM=2060)
2060 REMOVE (PRM03_DEV,KEY=N0$+"B"+A1$(145,10)+A0$(3,9),DOM=2080)
2080 LET TMP$=N0$+"A"+A1$(1,16)+W0$
2090 WRITE (PRM03_DEV,KEY=TMP$)IOL=PRM03A
2095 LET TMP$=N0$+"B"+A1$(145,10)+W0$
2100 WRITE (PRM03_DEV,KEY=TMP$)IOL=PRM03B
2200 REM " --- Titles
2205 PRINT @(15,8),"Pay Rate",'CL',
2210 READ (PRM02_DEV,KEY=A0$,DOM=2215)
2215 LET KM02$=KEY(PRM02_DEV,END=2310)
2220 IF KM02$(1,11)<>A0$ THEN GOTO 2300
2240 READ RECORD(PRM02_DEV)X$
2260 REMOVE (PRM02_DEV,KEY=KM02$)
2280 LET X$(3,9)=W0$,KM02$(3,9)=W0$
2290 WRITE RECORD(PRM02_DEV2,KEY=KM02$)X$
2295 GOTO 2215
2300 REM 
2310 READ (PRM12_DEV,KEY=A0$,DOM=2315)
2315 LET KM12$=KEY(PRM12_DEV,END=2400)
2320 IF KM12$(1,11)<>A0$ THEN GOTO 2400
2340 READ RECORD(PRM12_DEV)X$
2360 REMOVE (PRM12_DEV,KEY=KM12$)
2380 LET X$(3,9)=W0$,KM12$(3,9)=W0$
2390 WRITE RECORD(PRM12_DEV2,KEY=KM12$)X$
2395 GOTO 2315
2400 REM " --- Payroll Transactions
2420 PRINT @(15,8),"Payroll Transactions",'CL',
2450 READ (PRT01_DEV,KEY=A0$,DOM=2460)
2460 LET K$=KEY(PRT01_DEV,END=2600)
2470 IF K$(1,11)<>A0$ THEN GOTO 2600
2480 READ RECORD(PRT01_DEV)X$
2490 REMOVE (PRT01_DEV,KEY=K$)
2500 LET K$(3,9)=W0$,X$(3,9)=W0$
2510 WRITE RECORD(PRT01_DEV2,KEY=K$)X$
2520 GOTO 2460
2600 REM 
2650 READ (PRT11_DEV,KEY=A0$,DOM=2660)
2660 LET K$=KEY(PRT11_DEV,END=2800)
2670 IF K$(1,11)<>A0$ THEN GOTO 2800
2680 READ RECORD(PRT11_DEV)X$
2690 REMOVE (PRT11_DEV,KEY=K$)
2700 LET K$(3,9)=W0$,X$(3,9)=W0$
2710 WRITE RECORD(PRT11_DEV2,KEY=K$)X$
2720 GOTO 2660
2800 REM 
2850 READ (PRT21_DEV,KEY=A0$,DOM=2860)
2860 LET K$=KEY(PRT21_DEV,END=3000)
2870 IF K$(1,11)<>A0$ THEN GOTO 3000
2880 READ RECORD(PRT21_DEV)X$
2890 REMOVE (PRT21_DEV,KEY=K$)
2900 LET K$(3,9)=W0$,X$(3,9)=W0$
2910 WRITE RECORD(PRT21_DEV2,KEY=K$)X$
2920 GOTO 2860
3000 REM 
3050 READ (PRT31_DEV,KEY=A0$,DOM=3060)
3060 LET K$=KEY(PRT31_DEV,END=3500)
3070 IF K$(1,11)<>A0$ THEN GOTO 3500
3080 READ RECORD(PRT31_DEV)X$
3090 REMOVE (PRT31_DEV,KEY=K$)
3100 LET K$(3,9)=W0$,X$(3,9)=W0$
3110 WRITE RECORD(PRT31_DEV2,KEY=K$)X$
3120 GOTO 3060
3500 REM " --- Checks
3510 PRINT @(15,8),"Payroll Checks",'CL',
3520 READ (PRT02_DEV,KEY=A0$,DOM=3530)
3530 LET K$=KEY(PRT02_DEV,END=3700)
3540 IF K$(1,11)<>A0$ THEN GOTO 3700
3550 READ RECORD(PRT02_DEV)X$
3560 REMOVE (PRT02_DEV,KEY=K$)
3570 LET K$(3,9)=W0$,X$(3,9)=W0$
3580 WRITE RECORD(PRT02_DEV2,KEY=K$)X$
3590 READ RECORD(PRT03_DEV,KEY=K$(1,2)+K$(12,7),DOM=3630)X$
3600 IF K$(1,2)+X$(14,9)<>A0$ THEN GOTO 3530
3605 REMOVE (PRT03_DEV,KEY=K$(1,2)+K$(12,7))
3610 LET X$(14,9)=W0$
3620 WRITE RECORD(PRT03_DEV,KEY=K$(1,2)+K$(12,7))X$
3630 GOTO 3530
3700 REM " --- Union History
3710 PRINT @(15,8),"Union History",'CL',
3720 READ (PRT04_DEV,KEY=N0$+A1$(238,3)+A1$(1,30)+A0$(3,9),DOM=3730)
3730 LET K$=KEY(PRT04_DEV,END=3900)
3740 IF K$(1,44)<>N0$+A1$(238,3)+A1$(1,30)+A0$(3,9) THEN GOTO 3900
3750 READ RECORD(PRT04_DEV)X$
3760 REMOVE (PRT04_DEV,KEY=K$)
3770 LET K$(36,9)=W0$,X$(36,9)=W0$
3780 WRITE RECORD(PRT04_DEV2,KEY=K$)X$
3790 GOTO 3730
3900 REM " --- Master Record
3910 GOSUB 6000
3920 PRINT @(15,8),"Master Record",'CL',
3930 REMOVE (PRM01_DEV,KEY=A0$,DOM=3940)
3940 LET A0$(3,9)=W0$
3950 WRITE (PRM01_DEV,KEY=A0$)IOL=PRM01A1
3960 PRINT 'SB',@(15,3),FNF$(W0$(1,P[0]),M0$),'SF',
4000 REM " --- Overlay
4005 CLOSE (PRE01_DEV,ERR=4010)
4010 CLOSE (PRM02_DEV2,ERR=4015)
4020 CLOSE (PRM12_DEV2,ERR=4025)
4025 CLOSE (PRT01_DEV2,ERR=4030)
4030 CLOSE (PRT02_DEV2,ERR=4035)
4035 CLOSE (PRT03_DEV,ERR=4040)
4045 CLOSE (PRT04_DEV2,ERR=4050)
4050 CLOSE (PRT05_DEV1,ERR=4055)
4055 CLOSE (PRT05_DEV2,ERR=4060)
4065 CLOSE (PRT11_DEV2,ERR=4070)
4075 CLOSE (PRT21_DEV2,ERR=4080)
4085 CLOSE (PRT31_DEV2,ERR=4100)
4100 RUN "PRM.MA"
6000 REM " --- Labor Dist
6060 DIM X[11]
6080 PRINT @(15,8),"Labor Distribution",'CL',
6090 READ (PRT05_DEV1,KEY=N0$,DOM=6100)
6100 REM " --- Read
6120 LET K$=KEY(PRT05_DEV1,END=6290)
6130 IF K$(1,2)<>N0$ THEN GOTO 6290
6140 IF K$(7,9)=A0$(3,9) THEN GOTO 6200
6150 READ (PRT05_DEV1)
6190 GOTO 6100
6200 READ (PRT05_DEV1)IOL=PRT05A
6220 REMOVE (PRT05_DEV1,KEY=K$)
6230 LET K$(7,9)=W0$,X0$(7,9)=W0$
6240 WRITE (PRT05_DEV2,KEY=K$)IOL=PRT05A
6250 GOTO 6100
6290 RETURN 
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN 
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions
8095 DEF FNV(Q$)=42+INT(LEN(Q$)/2)
8200 REM " --- FNF$ AlphaNumeric Masking Function"
8210 DEF FNF$(Q1$,Q2$)
8220 IF Q2$="" THEN LET Q2$=FILL(LEN(Q1$),"0")
8230 RETURN STR(-NUM(Q1$,ERR=ALPHA_FNF):Q2$,ERR=ALPHA_FNF)
8240 ALPHA_FNF: 
8245 LET Q=1,Q0=0
8250 WHILE LEN(Q2$(Q))
8255 IF POS(Q2$(Q,1)="-()") THEN LET Q0=Q0+1 ELSE LET Q2$(Q,1)="X"
8260 LET Q=Q+1
8265 WEND
8270 IF LEN(Q1$)>LEN(Q2$)-Q0 THEN LET Q1$=Q1$(1,LEN(Q2$)-Q0)
8280 RETURN STR(Q1$:Q2$)
8290 FNEND
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9205 SETESC 9000
9210 SETERR 9000
9220 RUN "PRM.MA"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 RUN "SYS.AA"
9999 END
