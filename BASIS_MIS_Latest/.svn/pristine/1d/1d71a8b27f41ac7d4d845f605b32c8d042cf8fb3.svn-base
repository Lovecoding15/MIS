0010 REM "IVR - LIFO/FIFO Tier Report"
0020 REM "Program IVR.XA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.5 - 01Dec98 |"
0026 REM "|         Copyright (c) 1997 ADD+ON Software Inc.           |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "20Jan98 WGH: Beginning Date was overwritten by Ending Date (875-880)"
0032 REM "03May00 KJS: Prevent endless loop when the starting item is greater than an existing item by only the last digit (1310)
0040 REM 
0070 BEGIN
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=7
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="SYS-01",FILES$[2]="IVM-01",FILES$[3]="IVM-03"
0130 LET FILES$[4]="IVM-04",FILES$[5]="IVM-10",FILES$[6]="IVM-14"
0140 LET FILES$[7]="IVM-15"
0150 CALL "SYC.DA",1,1,FILES,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET SYS01_DEV=CHANNELS[1],IVM01_DEV=CHANNELS[2],IVM03_DEV=CHANNELS[3]
0180 LET IVM04_DEV=CHANNELS[4],IVM10_DEV=CHANNELS[5],IVM14_DEV=CHANNELS[6]
0190 LET IVM15_DEV=CHANNELS[7]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1),A4$,A5$,A6$,A[ALL]
0220 IVM04A: IOLIST B0$(1),B1$(1),B2$,B[ALL]
0230 IVM10A: IOLIST X0$(1)
0240 IVM10C: IOLIST X0$(1)
0260 SYS01T: IOLIST X$,F0$,X$,X$,X$,F4$,F5$
0270 IVS01A: IOLIST I0$,I1$,I2$,I3$,I4$,M0$,M1$,M2$,M3$,M4$,M5$
0400 REM " --- Parameters"
0405 DIM P[5]
0410 FIND (SYS01_DEV,KEY="T"+FID(0),DOM=9800)IOL=SYS01T
0420 LET N0$=F0$(16,2),N2$="IV"
0430 FIND (SYS01_DEV,KEY=N0$+N2$+"00",DOM=9800)IOL=IVS01A
0440 IF POS(I3$(3,1)="LF")=0 THEN GOTO 4900
0450 LET P[0]=NUM(I2$(1,2)),P[1]=NUM(I2$(5,1))
0460 LET P[3]=NUM(I2$(9,2)),P[4]=NUM(I2$(11,2)),P[5]=NUM(I2$(13,2))
0500 REM " --- Initializations"
0505 PRECISION P[1]
0510 DIM FILES[15],PARAMS$[3],OPTIONS$[7],HEADINGS$[7],O[10]
0520 DIM A0$(22),A1$(60),A2$(64),A3$(40),A4$(21),A[12],PRODUCT[1],REPORT[1]
0530 DIM B0$(30),B1$(16),B[5],ITEM[1],TOTAL[1],WAREHOUSE[1],TYPES$[10]
0550 LET FILES[1]=IVM01_DEV,FILES[10]=IVM10_DEV,FILES[14]=IVM14_DEV
0555 LET PARAMS$[0]=N0$,PARAMS$[1]=I1$,PARAMS$[2]=I2$,PARAMS$[3]=I3$,PAGE=0
0560 LET HEADINGS$[0]=F4$,HEADINGS$[1]=F5$,WHEN$=F0$(7,3),CLOCK$="",H9$=""
0565 LET WIDTH=132,L9=59,L=L9+1,HEADINGS=7,SOURCE$="BBBOTAOPRCTIWOIAIIIRPH"
0570 LET TYPES$[0]="Conv",TYPES$[1]="BOM",TYPES$[2]="Tier",TYPES$[3]="Sale"
0575 LET TYPES$[4]="P.O.",TYPES$[5]="Xfer",TYPES$[6]="W.O.",TYPES$[7]="Adj"
0580 LET TYPES$[8]="Iss",TYPES$[9]="Rec",TYPES$[10]="Phys"
0590 LET BEGDATE$="",ENDDATE$="",DONE=0,FILES[15]=IVM15_DEV
0600 REM " --- Resize masks"
0610 CALL "SYC.RM",M1$,M1,12,15
0620 CALL "SYC.RM",M2$,M2,10,15
0630 CALL "SYC.RM",M3$,M3,9,15
0650 REM " --- Print positions"
0660 LET O[1]=P[0]+1,O[10]=WIDTH-M1,O[9]=O[10]-M3,O[8]=O[9]-M2
0670 LET O[7]=O[8]-3,O[6]=O[7]-11,O[5]=O[6]-6,O[4]=O[5]-9
0675 LET O[3]=O[4]-4,O[2]=O[3]-4,O[1]=O[0]+P[0],SPLIT=0
0685 IF P[0]+P[3]+P[4]+P[5]>O[2] THEN LET SPLIT=1
0690 GOSUB 5800
0700 REM " --- Background"
0710 PRINT 'SB',@(24,3),"Beginning Date:",'SF',
0720 CALL "SYC.WC",1,0,80,0,0,4,0
0730 PRINT 'SB',@(27,5),"Ending Date: ",'SF',
0740 CALL "SYC.WC",1,0,80,0,0,6,0
0750 CALL "IVC.IB","BL","D",7,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0760 PRINT @(40,3),"First",@(40,5),"Last",
0770 CALL "IVC.IB","DL","D",7,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0800 REM " --- Beginning Date"
0805 LET V4$="Enter The Beginning Date To Include On This Report (<F1>=First)"
0810 LET V0$="D",V1$="C",V2$=BEGDATE$,V3$="",V0=3,V1=40,V2=3
0815 GOSUB 7000
0820 ON V3 GOTO 825,825,800,800,915
0825 LET BEGDATE$=V$,X$="First"
0830 IF BEGDATE$<>"" THEN LET X$=FNB$(BEGDATE$)
0835 PRINT @(V1,V2),X$,'CL',
0850 REM " --- Ending Date"
0855 LET V4$="Enter The Ending Date To Include On This Report (<F1>=Last)"
0860 LET V0$="D",V1$="C",V2$=ENDDATE$,V3$="",V0=3,V1=40,V2=5
0865 GOSUB 7000
0870 ON V3 GOTO 875,875,800,850,915
0875 LET ENDDATE$=V$,X$="Last"
0880 IF ENDDATE$<>"" THEN LET X$=FNB$(ENDDATE$)
0885 PRINT @(V1,V2),X$,'CL',
0900 REM " --- Process input"
0905 CALL "IVC.IB","IL","D",7,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
0910 ON V3 GOTO 915,900,850,900,915
0915 GOSUB 5500
0920 CALL "SYC.YN",1,"Is The Above Information Correct",2,V$,V3
0925 ON V3 GOTO 930,920,920,920,9900
0930 ON POS(V$="YN") GOTO 915,935,800
0935 LET BEGWHSE$=OPTIONS$[1],ENDWHSE$=OPTIONS$[2],BEGPROD$=OPTIONS$[3]
0940 LET ENDPROD$=OPTIONS$[4],BEGITEM$=OPTIONS$[5],ENDITEM$=OPTIONS$[6]
0945 LET TYPE$=OPTIONS$[7]
0950 REM " --- Position files"
0955 CALL "SYC.GA",7,1,"","",STATUS
0960 IF STATUS THEN GOTO 9900
0965 CALL "SYC.NB","Printing",7+P[0],COLUMN
0970 LET FIRST$=N0$+"C",K$=FIRST$+BEGWHSE$
0975 IF BEGWHSE$<>"" THEN LET K$=K$+BEGPROD$
0980 IF K$<>FIRST$ THEN LET K$=K$+BEGITEM$
0990 READ (IVM03_DEV,KEY=K$,DOM=1000)
1000 REM " --- Get next sort record"
1010 LET K$=KEY(IVM03_DEV,END=4000)
1020 IF POS(FIRST$=K$)<>1 THEN GOTO 4000
1030 READ (IVM03_DEV)
1040 LET WHSE$=K$(4,2),PRODUCT$=K$(6,3),ITEM$=K$(9)
1100 REM " --- Valid Warehouse/Product/Item?"
1110 IF ENDWHSE$<>"" THEN IF WHSE$>ENDWHSE$ THEN GOTO 4000
1120 IF BEGPROD$<>"" THEN IF PRODUCT$<BEGPROD$ THEN GOTO 1200
1130 IF ENDPROD$<>"" THEN IF PRODUCT$>ENDPROD$ THEN GOTO 1250
1140 IF BEGITEM$<>"" THEN IF ITEM$<BEGITEM$ THEN GOTO 1300
1150 IF ENDITEM$<>"" THEN IF ITEM$>ENDITEM$ THEN GOTO 1350
1160 LET WHSE$=K$(4,2),PRODUCT$=K$(6,3),ITEM$=K$(9)
1190 GOTO 1400
1200 REM " --- Skip to beginning product for this warehouse'
1210 READ (IVM03_DEV,KEY=K$(1,5)+BEGPROD$,DOM=3900)
1240 GOTO 3900
1250 REM " --- Skip to next warehouse"
1260 READ (IVM03_DEV,KEY=K$(1,5)+$FF$,DOM=3900)
1290 GOTO 3900
1300 REM " --- Skip to beginning item"
1310 READ (IVM03_DEV,KEY=K$(1,8)+BEGITEM$,DIR=0,DOM=3900)
1340 GOTO 3900
1350 REM " --- Skip to next product"
1360 READ (IVM03_DEV,KEY=K$(1,8)+$FF$,DOM=3900)
1390 GOTO 3900
1400 REM " --- Level breaks?"
1410 PRINT @(COLUMN,11),WHSE$," ",PRODUCT$," ",ITEM$(1,P[0]),
1420 IF WHSE$<>T0$ THEN GOSUB 6000
1430 IF PRODUCT$<>T1$ THEN GOSUB 6200
1500 REM " --- Retrieve item"
1510 LET A0$(1)=N0$+ITEM$,NEEDED=SPLIT
1520 FIND (IVM01_DEV,KEY=A0$,DOM=3900)IOL=IVM01A
1530 IF TYPE$<>"" THEN IF A2$(53,3)<>TYPE$ THEN GOTO 3900
1540 LET DESCRIPTION$=FNITEM$(A1$,P[3],P[4],P[5]),UM$=A2$(4,2)
1550 IF SPLIT=0 THEN GOTO 1600
1560 IF LEN(DESCRIPTION$)>O[2] THEN LET DESCRIPTION$=DESCRIPTION$(1,O[2]-1)
1900 REM " --- Position file for reading LIFO/FIFO records"
1910 DIM ITEM[1]
1980 LET X$=N0$+WHSE$+ITEM$,B0$(1)=X$+BEGDATE$,TIER=0
1990 READ (IVM04_DEV,KEY=B0$,DOM=2000)
2000 REM " --- Read next LIFO/FIFO record"
2010 LET K$=KEY(IVM04_DEV,END=3000)
2020 IF POS(X$=K$)<>1 THEN GOTO 3000
2030 READ (IVM04_DEV)IOL=IVM04A
2040 IF ENDDATE$<>"" THEN IF B0$(25,3)>ENDDATE$ THEN GOTO 3000
2050 IF B[0]=0 THEN GOTO 3000
2200 REM " --- Format print fields"
2210 LET L=L+1+NEEDED,TIER=TIER+1,D$="",VALUE=B[0]*B[1]
2220 IF SPLIT=0 THEN IF TIER=1 THEN LET D$=DESCRIPTION$,X=O[1]
2230 IF SPLIT>0 THEN IF TIER>1 THEN LET D$=DESCRIPTION$,X=O[0]+3
2240 IF TIER=1 THEN LET L=L+1
2250 LET X=POS(B1$(1,2)=SOURCE$,2),TRANS$=B1$(1,2)
2260 IF X>0 THEN LET TRANS$=TYPES$[(X-1)/2]
2400 REM " --- Print detail line"
2410 IF H9$<>"" THEN GOSUB 5200
2420 IF L>L9 THEN GOSUB 5000
2430 IF TIER=1 THEN PRINT (7)""
2440 PRINT (7)@(O[0]),ITEM$,@(O[1]),D$,@(O[2]),UM$,@(O[3]),TIER:"##0",@(O[4]),FNB$(B0$(25,3)),@(O[5]),TRANS$,@(O[6]),B1$(3,7),@(O[7]),B0$(28,3),@(O[8]),B[0]:M2$,@(O[9]),B[1]:M3$,@(O[10]),VALUE:M1$
2490 LET ITEM$="",UM$="",NEEDED=0
2500 REM " --- Accumulate totals"
2510 LET ITEM[0]=ITEM[0]+B[0],ITEM[1]=ITEM[1]+VALUE,REPORT[1]=REPORT[1]+VALUE
2520 LET PRODUCT[0]=PRODUCT[0]+1,PRODUCT[1]=PRODUCT[1]+VALUE
2530 LET WAREHOUSE[0]=WAREHOUSE[0]+1,WAREHOUSE[1]=WAREHOUSE[1]+VALUE
2900 REM " --- Loop back for next tier record"
2990 GOTO 2000
3000 REM " --- Print item totals"
3010 IF TIER=0 THEN GOTO 3900
3020 IF SPLIT>0 THEN IF TIER<2 THEN PRINT (7)@(O[0]+3),DESCRIPTION$
3030 IF TIER=1 THEN GOTO 3900
3040 LET TOTAL$="Total For Item "+A0$(3,P[0])
3050 LET TOTAL[0]=ITEM[0],TOTAL[1]=ITEM[1],L1=1
3060 GOSUB 6900
3900 REM " --- Loop back for next record"
3990 GOTO 1000
4000 REM " --- All done"
4010 LET DONE=1
4020 GOSUB 6000
4030 LET TOTAL$="Total For Report",TOTAL[1]=REPORT[1],L1=2
4040 GOSUB 6900
4090 GOTO 9900
4900 REM " --- LIFO/FIFO not set in parameter record"
4910 CALL "IVC.SB","F",STATUS
4990 GOTO 9900
5000 REM " --- Report Heading"
5010 LET L=HEADINGS+3
5020 CALL "SYC.HA",7,HEADINGS$[ALL],HEADINGS,PAGE,WIDTH,WHEN$,CLOCK$,STATUS
5030 IF STATUS>0 THEN EXITTO 9900
5090 RETURN
5200 REM " --- Product subheading"
5210 IF L+1>L9 THEN GOSUB 5000
5220 PRINT (7)H9$
5240 LET L=L+1,H9$=""
5290 RETURN
5500 REM " --- Display beginning/ending dates"
5510 LET X1$="First",X2$="Last"
5520 IF BEGDATE$<>"" THEN LET X1$=FNB$(BEGDATE$)
5530 IF ENDDATE$<>"" THEN LET X2$=FNB$(ENDDATE$)
5540 PRINT @(40,3),X1$,@(40,5),X2$,
5550 CALL "IVC.IB","DL","D",7,FILES[ALL],PARAMS$[ALL],OPTIONS$[ALL],V3
5590 RETURN
5800 REM " --- Initialize HEADINGS$"
5810 DIM H1$(WIDTH),H2$(WIDTH),H6$(WIDTH)
5825 LET X1$="First",X2$="First",X2=5
5830 IF BEGITEM$<>"" THEN LET X1$=BEGITEM$
5840 IF BEGPROD$<>"" THEN LET X2$=BEGPROD$,X2=3
5850 IF ENDPROD$="" THEN IF X2=3 THEN LET X2=4
5860 LET H1$(1)="From Item: "+X1$,H1$(WIDTH-X2-13)="From Product: "+X2$
5870 LET X1$="Last",X2$="Last",X3$="All Item Types"
5880 IF ENDITEM$<>"" THEN LET X1$=ENDITEM$
5890 IF ENDPROD$<>"" THEN LET X2$=ENDPROD$
5900 IF TYPE$<>"" THEN LET X3$="Item Type "+TYPE$
5910 LET H2$(1)="  To Item: "+X1$,H2$(FNC(X3$,WIDTH))=X3$
5920 LET H2$(WIDTH-X2-13)="  To Product: "+X2$
5930 LET H6$(O[0]+1)="Item",H6$(O[1]+1)="Description",H6$(O[2]+1)="UM"
5950 LET H6$(O[3])="Tier",H6$(O[4]+3)="Date",H6$(O[5]+1)="Type"
5960 LET H6$(O[6]+1)="Reference",H6$(O[7]+1)="Seq",H6$(O[8]+M2-8)="Quantity"
5970 LET H6$(O[9]+M3-9)="Unit Cost",H6$(O[10]+M1-9)="Extension"
5980 LET HEADINGS$[3]=H1$,HEADINGS$[4]=H2$,HEADINGS$[6]=H6$
5990 RETURN
6000 REM " --- Warehouse Break"
6010 IF T0$="" THEN GOTO 6100
6020 GOSUB 6200
6030 LET TOTAL$="Total For Warehouse "+T0$,TOTAL[1]=WAREHOUSE[1],L1=2
6040 IF WAREHOUSE[0]>0 THEN GOSUB 6900
6100 IF DONE THEN GOTO 6190
6110 DIM X0$(32),WAREHOUSE[1]
6120 LET T0$=WHSE$,X0$(6,24)="(Not on File)",L=L9+1
6140 FIND (IVM10_DEV,KEY=N0$+"C"+T0$,DOM=6150)IOL=IVM10C
6150 LET X$="Warehouse "+T0$+" "+FNP$(X0$(6,24))
6160 LET HEADINGS$[3]=H1$,HEADINGS$[3](FNC(X$,WIDTH),LEN(X$))=X$
6190 RETURN
6200 REM " --- Product break"
6210 IF T1$="" THEN GOTO 6300
6220 LET TOTAL$="Total For Product "+T1$,TOTAL[1]=PRODUCT[1],L1=2
6230 IF PRODUCT[0]>0 THEN GOSUB 6900
6300 IF DONE THEN GOTO 6390
6310 DIM X0$(32),PRODUCT[1]
6320 LET T1$=PRODUCT$,X0$(7,20)="(Not on File)"
6330 FIND (IVM10_DEV,KEY=N0$+"A"+T1$,DOM=6340)IOL=IVM10A
6340 LET H9$="Product Type "+T1$+" "+X0$(7,20)
6390 RETURN
6900 REM " --- Print total line"
6910 IF L+L1>L9 THEN GOSUB 5000
6920 LET X1$="",X2$=STR(TOTAL[1]:M1$),TOTAL$=FNP$(TOTAL$)
6930 IF TOTAL[0]<>0 THEN LET X1$=STR(TOTAL[0]:M2$)
6940 IF L1>1 THEN PRINT (7)""
6950 PRINT (7)@(O[7]-2-LEN(TOTAL$)),TOTAL$,@(O[8]),X1$,@(O[10]),X2$
6960 LET L=L+L1,TOTAL[0]=0,TOTAL[1]=0
6990 RETURN
7000 REM " --- Standard Input Routine (15May95)"
7010 CALL "SYC.IA",V0$,V1$,V2$,V3$,V4$,PGM(-2),V0,V1,V2,V$,V,V3,DISPLAY_LEN
7020 IF V3=999 THEN GOTO 7200
7030 IF V3=127 THEN GOTO 7100
7090 RETURN
7100 REM " --- Escape During Input"
7110 CALL "SYC.ES",ERR=7200,PGM(-2),TCB(8),E$,E2,V3
7120 IF V3<>127 THEN GOTO 7000
7130 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
7200 REM " --- Error During Input"
7210 ESCAPE
7290 GOTO 7000
8000 REM " --- Functions"
8010 DEF FNA$(Q$,Q2$)=STR(MOD((ASC(Q$)-32)*POS(" "<>Q2$(2,1)),100):"00")
8020 DEF FNB$(Q1$)=FNA$(Q1$(2),Q1$)+"/"+FNA$(Q1$(3),Q1$)+"/"+FNA$(Q1$(1),Q1$)
8025 DEF FNC(Q$,Q)=INT((Q-LEN(Q$))/2)
8080 DEF FNP$(Q$)=CVS(Q$,2)
8090 DEF FNITEM$(Q$,Q1,Q2,Q3)=CVS(Q$(1,Q1)+" "+Q$(Q1+1,Q2)+" "+Q$(Q1+Q2+1,Q3),32)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END