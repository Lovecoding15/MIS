0010 REM "IVC - LIFO/FIFO Reporting And Inquiry                        "
0020 REM "Program IVC.LF"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.1 - 22Jul96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0031 REM "10Jul96 JJD: Infinite loop when LIFO and A[0]=0 (2100,2110,2120)"
0032 REM "18Feb97 JAL: Prevent Error 47/Line 1400 at EOF (1350,1390)"
0040 REM "This program calculates GL cost information and LF tier quantities.
0041 REM "TYPE$="I" Returns cost information only.
0042 REM "   For Issues, tier cost or average cost if qty spans tiers.
0043 REM "   For Receipts, tier cost for an existing tier with matching date,
0044 REM "   if no matching date last tier cost for LIFO, first for FIFO.
0045 REM "TYPE$="R" Processes quantity and cost information in IVW-04.
0046 REM "   For Issues, tier cost or average cost if qty spans tiers. Qty is
0047 REM "   deducted from tier(s).
0048 REM "   For receipts, add to tier with matching cost or create new tier.
0060 REM     
0061 REM "ACTION$    : Action type (Input)"
0062 REM "             F = FIFO       I = Issue"
0063 REM "             L = LIFO       R = Receipt"
0064 REM "TYPE$      : Type of call (Input)"
0065 REM "             I = Inquiry    R = Report"
0066 REM "LF_DATE$   : Transaction Date (Input)"
0067 REM "CHANNELS[n]: [0] = IVM-04   [1] = IVW-04   [2] = IVM-02"
0068 REM "ITEM$[n]   : Item Information (input)"    
0069 REM "             [0]=Firm ID    [1]=Warehouse ID     [2]=Item"
0070 REM "PLACES     : Inventory PRECISION (Input)"
0071 REM "QUANTITY   : Transaction quantity (Input)"
0072 REM "COST       : Transaction cost (Input)
0073 REM "RETURN_COST: Tier Cost (Returned,Average cost for multi-tier issues)
0074 REM "STATUS     : 0=No Error (Returned)"
0080 SETERR 9000
0085 SETESC 9000
0090 ENTER ACTION$,TYPE$,LF_DATE$,CHANNELS[ALL],ITEM$[ALL],PLACES,QUANTITY,COST,RETURN_COST,STATUS
0200 REM " --- IOLIST's"
0210 IVM04A: IOLIST A0$(1),A1$(1),A2$,A[ALL]
0220 IVW04A: IOLIST A0$(1),A1$(1),A2$,A[ALL]
0230 IVM02A: IOLIST B0$(1),B1$(1),B2$(1),B[ALL]
0500 REM " --- Initializations"
0510 PRECISION PLACES
0520 DIM A0$(30),A1$(16),A[5]
0530 DIM B0$(24),B1$(64),B2$(2),B[16]
0540 LET A2$="",RETURN_COST=COST,STATUS=0,WORK_QTY=0,TOTAL_COST=0,QTY=0
0550 LET LF_ITEM$=ITEM$[0]+ITEM$[1]+ITEM$[2]
0560 IF ACTION$(1,1)="L" THEN LET LIFO=1,FIFO=0 ELSE LET LIFO=0,FIFO=1
0570 IF ACTION$(2,1)="I" THEN LET ISSUE=1,RECEIPT=0 ELSE LET ISSUE=0,RECEIPT=1
0580 IF TYPE$="R" THEN LET REPORT=1,INQUIRY=0 ELSE LET REPORT=0,INQUIRY=1
0600 REM " --- Channel Assignments "
0610 LET IVM04_DEV=CHANNELS[0],IVW04_DEV=CHANNELS[1],IVM02_DEV=CHANNELS[2]
0620 LET LFCHAN_DEV=IVM04_DEV
0800 REM " --- Initialize "
0810 READ (IVW04_DEV,KEY=LF_ITEM$,DOM=0820)
0820 LET LF_KEY$=KEY(IVW04_DEV,END=0900)
0830 IF POS(LF_KEY$(1,24)=LF_ITEM$)=1 THEN GOTO 0970
0900 REM " --- Build Work File "
0910 READ (IVM04_DEV,KEY=LF_ITEM$,DOM=0920)
0920 LET LF_KEY$=KEY(IVM04_DEV,END=0970)
0930 IF POS(LF_KEY$(1,24)=LF_ITEM$)=0 THEN GOTO 0970
0940 READ (IVM04_DEV,KEY=LF_KEY$)IOL=IVM04A
0950 WRITE (IVW04_DEV,KEY=LF_KEY$)IOL=IVW04A
0960 GOTO 0920
0970 LET LFCHAN_DEV=IVW04_DEV
1000 REM " --- Process "     
1010 IF ISSUE THEN GOTO PROCESS_ISSUE
1020 PROCESS_RECEIPT: 
1030 READ (LFCHAN_DEV,KEY=LF_ITEM$+LF_DATE$,DOM=1040)
1040 LET LF_KEY$=KEY(LFCHAN_DEV,END=NO_MATCH)
1050 IF LF_KEY$(1,27)<>LF_ITEM$+LF_DATE$ THEN GOTO NO_MATCH
1060 REM " --- Tier Found With Matching Date "
1070 READ (LFCHAN_DEV,KEY=LF_KEY$)IOL=IVW04A
1080 IF INQUIRY THEN GOTO RETURN_LF_COST
1090 IF A[1]<>COST THEN GOTO NO_MATCH
1100 LET A[0]=A[0]+QUANTITY
1110 WRITE (LFCHAN_DEV,KEY=LF_KEY$)IOL=IVW04A
1120 GOTO RETURN_LF_COST
1300 REM " --- No Matching Cost Tier Found "
1310 NO_MATCH: 
1320 IF FIFO THEN GOTO PROCESS_FIFO
1330 PROCESS_LIFO: 
1340 READ (LFCHAN_DEV,KEY=LF_ITEM$+$FF$,DOM=1350)
1350 LET LF_KEY$=KEYP(LFCHAN_DEV,END=NO_TIER_COST)
1360 GOTO 1400
1370 PROCESS_FIFO: 
1380 READ (LFCHAN_DEV,KEY=LF_ITEM$,DOM=1390)
1390 LET LF_KEY$=KEY(LFCHAN_DEV,END=NO_TIER_COST)
1400 IF LF_KEY$(1,24)<>LF_ITEM$ THEN GOTO NO_TIER_COST
1410 READ (LFCHAN_DEV,KEY=LF_KEY$)IOL=IVW04A
1420 IF INQUIRY THEN GOTO RETURN_LF_COST
1430 LET SEQ$="001"
1440 LET A1$="",A2$="",A[0]=QUANTITY,A[1]=COST
1450 LET A0$(1,30)=LF_ITEM$+LF_DATE$+SEQ$
1460 READ (LFCHAN_DEV,KEY=A0$,DOM=1490)
1470 LET SEQ$=STR(NUM(SEQ$)+1)
1480 GOTO 1450
1490 WRITE (LFCHAN_DEV,KEY=A0$)IOL=IVW04A
1500 GOTO RETURN_LF_COST
1800 REM " --- No Tier Cost Found "
1810 NO_TIER_COST: 
1820 READ (IVM02_DEV,KEY=LF_ITEM$,DOM=9900)IOL=IVM02A
1830 LET A[1]=B[11]
1840 GOTO 1420
1900 REM " --- Return Cost "
1910 RETURN_LF_COST: 
1920 LET RETURN_COST=A[1]
1930 GOTO 9900
2000 REM " --- Process Tiers For Quantity Issued "
2010 PROCESS_ISSUE: 
2020 IF LIFO THEN READ (LFCHAN_DEV,KEY=LF_ITEM$+$FF$,DOM=2040)
2030 IF FIFO THEN READ (LFCHAN_DEV,KEY=LF_ITEM$,DOM=2040)
2040 LET WORK_QTY=QUANTITY
2050 READ_NEXT_RECORD: 
2060 IF LIFO THEN LET KEY$=KEYP(LFCHAN_DEV,END=NO_MORE_TIERS)
2070 IF FIFO THEN LET KEY$=KEY(LFCHAN_DEV,END=NO_MORE_TIERS)
2080 IF POS(KEY$(1,24)=LF_ITEM$)=0 THEN GOTO NO_MORE_TIERS
2090 READ (LFCHAN_DEV,KEY=KEY$)IOL=IVW04A
2100 IF A[0]>0 THEN GOTO 2300
2110 IF LIFO THEN EXTRACT (LFCHAN_DEV,KEY=KEY$)
2120 GOTO READ_NEXT_RECORD
2300 REM " --- Calculate Quantity & Cost "
2310 LET QTY=A[0]-WORK_QTY
2320 IF QTY>=0 THEN GOTO 2370
2330 LET TOTAL_COST=TOTAL_COST+(A[0]*A[1])
2340 LET A[0]=0
2350 LET WORK_QTY=-QTY
2360 GOTO 2400
2370 LET TOTAL_COST=TOTAL_COST+(WORK_QTY*A[1])
2380 LET A[0]=A[0]-WORK_QTY
2390 LET WORK_QTY=0
2400 IF REPORT THEN WRITE (IVW04_DEV,KEY=KEY$)IOL=IVW04A
2410 IF LIFO THEN EXTRACT (LFCHAN_DEV,KEY=KEY$)
2420 IF WORK_QTY<>0 THEN GOTO READ_NEXT_RECORD
3200 REM " --- No More Lifo/Fifo Tier Records "
3210 NO_MORE_TIERS: 
3220 IF WORK_QTY=0 THEN GOTO ALL_DONE
3230 READ (IVM02_DEV,KEY=LF_ITEM$,DOM=3240)IOL=IVM02A
3240 IF B[11]<>0 THEN LET TOTAL_COST=TOTAL_COST+(WORK_QTY*B[11])
3250 LET WORK_QTY=0
4000 REM " --- All Done"
4010 ALL_DONE: 
4020 IF TOTAL_COST<>0 THEN LET RETURN_COST=TOTAL_COST/QUANTITY
4030 GOTO 9900
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9210 LET STATUS=999
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9900 REM " --- Return to caller"
9950 EXIT 
9999 END
