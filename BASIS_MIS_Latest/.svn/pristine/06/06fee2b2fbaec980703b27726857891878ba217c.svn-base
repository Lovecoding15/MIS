0010 REM "IVX - Rebuild Inventory Xrefs"
0020 REM "Program IVX.AA"
0022 REM "+-----------------------------------------------------------+"
0024 REM "| ADD+ON Software, Inc. Advantage/V Version 6.0.0 - 15May96 |"
0026 REM "|      Copyright (c) 1996 Open Systems Holdings Corp.       |"
0028 REM "|                  All Rights Reserved                      |"
0030 REM "+-----------------------------------------------------------+"
0040 REM 
0070 BEGIN 
0080 SETERR 9000
0090 SETESC 9000
0100 REM " --- Open/Lock Files"
0105 LET FILES=4
0110 DIM FILES$[FILES],OPTIONS$[FILES],CHANNELS[FILES]
0120 LET FILES$[1]="IVM-01",FILES$[2]="IVM-02",FILES$[3]="IVM-05"
0150 CALL "SYC.DA",1,1,3,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0160 IF STATUS>0 THEN GOTO 9900
0170 LET IVM01_DEV=CHANNELS[1],IVM02_DEV=CHANNELS[2],IVM05_DEV=CHANNELS[3]
0200 REM " --- IOLIST's"
0210 IVM01A: IOLIST A0$(1),A1$(1),A2$(1),A3$(1)
0220 IVM02A: IOLIST B0$(1),B1$(1)
0250 IVM05A: IOLIST D0$(1)
0310 IVM03A: IOLIST XA$(1)
0320 IVM03B: IOLIST XB$(1)
0330 IVM03C: IOLIST XC$(1)
0340 IVM03D: IOLIST XD$(1)
0345 IVM03E: IOLIST XE$(1)
0350 IVM03F: IOLIST XF$(1)
0360 IVM03G: IOLIST XG$(1)
0370 IVM03H: IOLIST XH$(1)
0375 IVM03I: IOLIST XI$(1)
0380 IVM03J: IOLIST XJ$(1)
0385 IVM03T: IOLIST XT$(1)
0390 IVM03U: IOLIST XU$(1)
0500 REM " --- Initializations"
0505 PRECISION 4
0510 DIM A0$(22),A1$(60),A2$(64),A3$(40),B0$(24),B1$(64),D0$(28),XA$(26)
0520 DIM XB$(37),XC$(28),XD$(29),XE$(43),XF$(37),XG$(25),XH$(29),XI$(43)
0530 DIM XU$(43),XJ$(26),XT$(26),J1$(30)
0700 REM " --- Background"
0710 CALL "SYC.WC",1,0,80,0,0,4,0
0720 PRINT 'SB',@(29,3),"Processing",'SF',
0800 REM " --- Options
0810 LET V4$="Do You Wish To Rebuild Inventory Cross-References"
0820 CALL "SYC.YN",0,V4$,0,V$,V3
0830 IF V$<>"YES" THEN GOTO 9900
0900 REM " --- Clear And Lock Files"
0910 LET FILES$[4]="IVM-03",OPTIONS$[4]="CL"
0920 CALL "SYC.DA",1,3,4,FILES$[ALL],OPTIONS$[ALL],CHANNELS[ALL],BATCH,STATUS
0930 IF STATUS>0 THEN GOTO 9900
0940 LET IVM03_DEV=CHANNELS[4]
0950 REM " --- Position File"
0960 CALL "SYC.NB","Updating",30,COLUMN
0970 PRINT @(40,3),"Inventory Items"
0990 READ (IVM01_DEV,KEY="",DOM=1000)
1000 REM " --- Next Item"
1010 READ (IVM01_DEV,END=1900)IOL=IVM01A
1020 PRINT @(COLUMN,11),A0$(1,2)," ",A0$(3),
1100 REM " --- Write IVM-03 A/E/I/U records"
1110 LET XA$(1)=A0$(1,2)+"A"+A2$(1,3)+A0$(3)
1120 WRITE (IVM03_DEV,KEY=XA$)IOL=IVM03A
1130 LET XE$(1)=A0$(1,2)+"E"+A1$,XE$(24)=A0$(3)
1140 WRITE (IVM03_DEV,KEY=XE$)IOL=IVM03E
1150 LET XI$(1)=A0$(1,2)+"I"+A3$(1,20)+A0$(3)
1160 IF FNP$(A3$(1,20))<>"" THEN WRITE (IVM03_DEV,KEY=XI$)IOL=IVM03I
1170 LET XU$(1)=A0$(1,2)+"U"+A3$(21,20)+A0$(3)
1180 IF FNP$(A3$(21,20))<>"" THEN WRITE (IVM03_DEV,KEY=XU$)IOL=IVM03U
1190 LET XF$(1)=A0$(1,2)+"F"+A2$(9,3)+A2$(12,6)+A2$(1,3)+A0$(3)
1200 IF A2$(24,1)="I" THEN WRITE (IVM03_DEV,KEY=XF$)IOL=IVM03F
1210 LET XJ$(1)=A0$(1,2)+"J"+A2$(21,3)+A0$(3)
1220 WRITE (IVM03_DEV,KEY=XJ$)IOL=IVM03J
1230 LET XT$(1)=A0$(1,2)+"T"+A2$(53,3)+A0$(3)
1240 WRITE (IVM03_DEV,KEY=XT$)IOL=IVM03T
1800 REM " --- Loop back for next item"
1890 GOTO 1000
1900 REM " --- Warehouse initializations"
1910 PRINT @(40,3),"Warehouse Information",'CL',@(COLUMN,11),J1$,
1920 LET A0$(1)=""
1990 READ (IVM02_DEV,KEY="",DOM=2000)
2000 REM " --- Next Warehouse"
2010 READ (IVM02_DEV,END=2900)IOL=IVM02A
2020 PRINT @(COLUMN,11),B0$(1,2)," ",B0$(3,2)," ",B0$(5),
2030 IF B0$(5)=A0$(3) THEN GOTO 2100
2040 LET A0$(1)=B0$(1,2)+B0$(5)
2050 FIND (IVM01_DEV,KEY=A0$,DOM=2800)IOL=IVM01A
2100 REM " --- Write IVM-03 B/C/F/G records"
2110 LET XB$(1)=B0$(1,2)+"B"+B0$(3,2)+B1$(11,2)+B1$(1,10)+B0$(5)
2120 WRITE (IVM03_DEV,KEY=XB$)IOL=IVM03B
2130 LET XC$(1)=B0$(1,2)+"C"+B0$(3,2)+A2$(1,3)+B0$(5)
2140 WRITE (IVM03_DEV,KEY=XC$)IOL=IVM03C
2150 LET XG$(1)=B0$(1,2)+"G"+B0$(5)+B0$(3,2)
2160 WRITE (IVM03_DEV,KEY=XG$)IOL=IVM03G
2170 LET XF$(1)=B0$(1,2)+"F"+B1$(19,3)+B1$(22,6)+A2$(1,3)+A0$(3)+B0$(3,2)
2200 IF A2$(24,1)="W" THEN WRITE (IVM03_DEV,KEY=XF$)IOL=IVM03F
2800 REM " --- Loop back for next warehouse"
2890 GOTO 2000
2900 REM " --- Vendor initializations"
2910 PRINT @(40,3),"Vendor Information",'CL',@(COLUMN,11),J1$,
2990 READ (IVM05_DEV,KEY="",DOM=3000)
3000 REM " --- Next Vendor"
3010 READ (IVM05_DEV,END=4000)IOL=IVM05A
3020 PRINT @(COLUMN,11),D0$(1,2)," ",D0$(3,6)," ",D0$(9),
3100 REM " --- Write IVM-03 D/H records"
3110 LET XD$(1)=D0$(1,2)+"D"+D0$(3,6)+D0$(9)
3120 WRITE (IVM03_DEV,KEY=XD$)IOL=IVM03D
3130 LET XH$(1)=D0$(1,2)+"H"+D0$(9)+D0$(3,6)
3140 WRITE (IVM03_DEV,KEY=XH$)IOL=IVM03H
3800 REM " --- Loop back for next vendor"
3890 GOTO 3000
4000 REM " --- All done"
4090 GOTO 9900
8000 REM " --- Functions
8080 DEF FNP$(Q$)=CVS(Q$,2)
9000 REM " --- Standard Error Routine (15May95)"
9010 IF ERR=127 THEN GOTO 9300
9020 CALL "SYC.EA",ERR=9090,EXIT_CTRL,PGM(-2),ERR,TCB(5),E$,E1,E2
9030 IF E1=1 THEN GOTO 9100
9040 IF E1=3 THEN GOTO 9200
9080 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9090 ESCAPE
9100 REM " --- Retry"
9190 RETRY
9200 REM " --- Return"
9290 GOTO 9900
9300 REM " --- Standard Escape Routine"
9310 CALL "SYC.ES",ERR=9350,PGM(-2),TCB(8),E$,E2,V3
9320 IF V3<>127 THEN GOTO 9390
9330 PRINT @(0,E2),'CL','CURSOR'("ON"),E$,'LF'
9350 ESCAPE
9390 RETURN 
9800 REM " --- Display Parameter record error"
9810 LET LINE_ERR$=LST(PGM(TCB(5)))
9820 CALL "SYC.YA",LINE_ERR$,N2$,ERR
9900 RUN "SYS.AA"
9999 END
